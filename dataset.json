[
    [
        "\n  create integer n\n  read n\n  create integers cur, cnt with cur = 1, cnt = 0\n  create integer vector ans\n  for i = 0 to n exclusive\n    create integer x\n    read x\n    if x is cur\n      increment cnt\n      increment cur\n    else\n      add element cnt to end of ans\n      set cnt to 1\n      set cur to 2\n    \n    if i is n - 1, add element cnt to end of ans\n  \n  print integer casted size of ans print newline\n  for i = 0 to integer casted size of ans exclusive\n    if i is greater than 0, print \" \"\n    print ans[i]\n  \n  print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int cur = 1, cnt = 0;\n  vector<int> ans;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    if (x == cur) {\n      cnt++;\n      cur++;\n    } else {\n      ans.push_back(cnt);\n      cnt = 1;\n      cur = 2;\n    }\n    if (i == n - 1) { ans.push_back(cnt); }\n  }\n  cout << (int)ans.size() << endl;\n  for (int i = 0; i < (int)ans.size(); i++) {\n    if (i > 0) cout << \" \";\n    cout << ans[i];\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be an integer\n  while reading n\n    let a be an integer array of length n\n    let b be an integer array of length n\n    let max be an int\n    let count = 0 be an int\n    read a n times\n    set max = a at 0\n    for q = 1 to n exclusive\n      if a at q is 1 then increment count, set b[count] to a[q-1]\n    \n    print count + 1\n    for j = 1 to count inclusive print b\n    print a[n-1]\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int a[n];\n    int b[n];\n    int max;\n    int count = 0;\n    for (int i = 0; i < n; i++) { cin >> a[i]; }\n    max = a[0];\n    for (int q = 1; q < n; q++) {\n      if (a[q] == 1) { b[++count] = a[q - 1]; }\n    }\n    cout << count + 1 << endl;\n    for (int j = 1; j <= count; j++) cout << b[j] << \" \";\n    cout << a[n - 1] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  declare int array arr with n elements and int variable ct = 0\n  change i from 0 to n exclusive in a loop\n    read input to arr[i]\n    if arr[i] is equal to 1, increment ct\n  \n  print ct\n  for i from 1 to n exclusive\n    if arr[i] is equal to 1, print arr[i - 1] and \" \"\n  \n  print arr[n - 1]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int arr[n], ct = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    if (arr[i] == 1) ct++;\n  }\n  cout << ct << endl;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] == 1) cout << arr[i - 1] << \" \";\n  }\n  cout << arr[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  i, j, k= int with k = 0 and a = int array of size n + 1\n  for i = 0 to n\n    read a[i]\n    if a[i] is 1 then increment k\n  \n  print k\n  for i = 1 to n\n    if a[i] is 1 print a[i - 1] and \" \"\n  \n  print a[n - 1]\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[n + 1], i, j, k = 0;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] == 1) k++;\n  }\n  cout << k << endl;\n  for (i = 1; i < n; i++) {\n    if (a[i] == 1) cout << a[i - 1] << \" \";\n  }\n  cout << a[n - 1] << endl;\n}\n"
    ],
    [
        "\n  declare int variable n\n  read n\n  declare an array of integers a with size 1005\n  declare an array of integers ans with size 1005\n  for i from 1 to n inclusive, read a[i]\n  create integer j = 0\n  loop i from 1 to n exclusive\n    if a[i + 1] <= a[i], set ans[j] to a[i] and increment j\n  \n  set ans[j] to a[n] and increment j\n  print j\n  for i = 0 to j - 1 exclusive, print ans[i] and \" \"\n  print ans[j - 1]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[1005];\n  int ans[1005];\n  for (int i = 1; i <= n; i++) { cin >> a[i]; }\n  int j = 0;\n  for (int i = 1; i < n; i++) {\n    if (a[i + 1] <= a[i]) { ans[j++] = a[i]; }\n  }\n  ans[j++] = a[n];\n  cout << j << endl;\n  for (int i = 0; i < j - 1; i++) cout << ans[i] << \" \";\n  cout << ans[j - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "maxn = const integer with maxn = 1e3 + 5\narr = integer array of size maxn\nstc = integer array of size maxn\n\n  n, top = integers\n  while read n\n    top = 0\n    for i = 0 to n exclusive, readarr[i]\n    i = integer\n    for i = 0 to n - 1 exclusive\n      if arr[i + 1] is 1, stc[increment top] = arr[i]\n    \n    stc[increment top] = arr[i]\n    print top,stc[0]\n    for i = 1 to top exclusive, print stc[i]\n    print next line\n  \n  \n\n",
        "const int maxn = 1e3 + 5;\nint arr[maxn];\nint stc[maxn];\nint main() {\n  int n, top;\n  while (cin >> n) {\n    top = 0;\n    for (int i = 0; i < n; ++i) { cin >> arr[i]; }\n    int i;\n    for (i = 0; i < n - 1; ++i) {\n      if (arr[i + 1] == 1) { stc[top++] = arr[i]; }\n    }\n    stc[top++] = arr[i];\n    cout << top << endl << stc[0];\n    for (int i = 1; i < top; ++i) { cout << \" \" << stc[i]; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  nxt = integer = 1\n  ans = integer vector\n  for i = 0 to n exclusive\n    x = integer\n    read x\n    if x is not nxt, then push back the values of ans and insert a new element of nxt - 1 at the end of ans\n    nxt = x + 1\n  \n  push back the values of ans and insert a new element of nxt - 1 at the end of ans\n  print size of ans in integer form\n  for i = 0 to size of ans in integer form\n    if i > 0, then print a space\n    print ans[i]\n  \n  print endline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int nxt = 1;\n  vector<int> ans;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    if (x != nxt) { ans.push_back(nxt - 1); }\n    nxt = x + 1;\n  }\n  ans.push_back(nxt - 1);\n  cout << (int)ans.size() << endl;\n  for (int i = 0; i < (int)ans.size(); i++) {\n    if (i > 0) cout << \" \";\n    cout << ans[i];\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a = int array of length 1001, n = int, s = int= 0\n  read n\n  read n values into array a\n  for i = 1 to n inclusive\n    if a at i is 1 increment sum\n  print sum\n  for i = 1 to n exclusive\n    if a at i + 1 is 1 print a at i\n  print a at n\n  \n\n",
        "int main() {\n  int a[1001], n, sum = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = 1; i <= n; i++)\n    if (a[i] == 1) sum++;\n  cout << sum << endl;\n  for (int i = 1; i < n; i++)\n    if (a[i + 1] == 1) cout << a[i] << \" \";\n  cout << a[n] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, c with c = 0, create integer array arr with size 1001\n  read n\n  for i = 0 to n exclusive\n    read arr[i]\n    if arr[i] is 1 increment c\n  \n  print c print newline\n  for i = 1 to n exclusive\n    if arr[i] is 1, print arr[i-1] print \" \"\n  \n  print arr[n-1] print newline\n  \n\n",
        "int main() {\n  int n, arr[1001], c = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    if (arr[i] == 1) c++;\n  }\n  cout << c << endl;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] == 1) { cout << arr[i - 1] << \" \"; }\n  }\n  cout << arr[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  val = integer\n  Read n\n  for i = 0 to n exclusive\n    if i is greater than 0, print \" \"\n    Read val\n    print val - (val + 1) % 2 and a new line\n  \n  print a new line\n  \n\n",
        "int main() {\n  int n;\n  int val;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    if (i > 0) { cout << \" \"; }\n    cin >> val;\n    cout << (val - ((val + 1) % 2));\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "n = integer\n\n  Read n\n  a = array of n+10 integers\n  for i = 0 to n exclusive\n    Read n values into array a\n    if a[i] modulo 2 is 0, then set a[i] to a[i] - 1\n  \n  print a[j] and a new line\n  print a[n - 1] and a new line\n  \n\n",
        "int n;\nint main() {\n  cin >> n;\n  int a[n + 10];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] % 2 == 0) { a[i] -= 1; }\n  }\n  for (int j = 0; j < n - 1; j++) { cout << a[j] << \" \"; }\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  while read n is true\n    create integer flag with flag = 1\n    for i = 0 to n exclusive\n      create integer num\n      read num\n      if num is 0\n        if flag is true\n          print num, set flag to 0\n        else\n          print \" \" print num\n      else if num % 2 is 0\n        if flag is true\n          print num - 1, set flag to 0\n        else\n          print \" \" print num - 1\n      else\n        if flag is true\n          print num, flag with flag = 0\n        else\n          print \" \" print num\n      \n    \n    print newline\n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int flag = 1;\n    for (int i = 0; i < n; i++) {\n      int num;\n      cin >> num;\n      if (num == 0) {\n        if (flag)\n          cout << num, flag = 0;\n        else\n          cout << \" \" << num;\n      } else if (num % 2 == 0) {\n        if (flag)\n          cout << num - 1, flag = 0;\n        else\n          cout << \" \" << num - 1;\n      } else {\n        if (flag)\n          cout << num, flag = 0;\n        else\n          cout << \" \" << num;\n      }\n    }\n    cout << endl;\n  }\n}\n"
    ],
    [
        "array of 1000 = a\n\n  integers = n\n  read n\n  read in a until i = n inclusive\n  for i = 0 to n inclusive\n    if a[i] modulo 2 is 0 then do the following a[i] -= 1\n    if i = n then do the following\n      output a[i]\n    else\n      output a[i],\n  \n  \n\n",
        "int a[10000];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) { cin >> a[i]; }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] % 2 == 0) a[i] -= 1;\n    if (i == n)\n      cout << a[i] << endl;\n    else\n      cout << a[i] << \" \";\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer n\n\n  read n\n  create integer array a with size n + 10\n  for i = 0 to n exclusive\n    read a[i]\n    if a[i] % 2 is 0, decrement a[i] by 1\n  \n  for j = 0 to n - 1 exclusive, print a[j] print \" \"\n  print a[n-1] print newline\n  \n\n",
        "int n;\nint main() {\n  cin >> n;\n  int a[n + 10];\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    if (a[i] % 2 == 0) { a[i] -= 1; }\n  }\n  for (int j = 0; j < n - 1; ++j) { cout << a[j] << \" \"; }\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "declare const int N = 1e5 + 50\ndeclare ints T, n, m, L and R\ndeclare long long array a with size 2 * N\n\n  read input to n\n  for i from 0 to n * 2 exclusive, read a[i]\n  if n <= 1\n    print \"0\"\n    \n  \n  sort a from the start to the position 2 * n\n  declare long long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n  declare long long C = a[2 * n - 1] - a[0]\n  for i = 1 to n inclusive\n    declare long long variable temp = C * (a[i + n - 1] - a[i])\n    set ans to min of ans and temp\n  \n  print ans\n  \n\n",
        "const int N = 1e5 + 50;\nint T, n, m, L, R;\nlong long a[2 * N];\nint main() {\n  cin >> n;\n  for (int i = 0; i < n * 2; i++) { cin >> a[i]; }\n  if (n <= 1) {\n    cout << \"0\" << endl;\n    return 0;\n  }\n  sort(a, a + 2 * n);\n  long long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n  long long C = a[2 * n - 1] - a[0];\n  for (int i = 1; i <= n; i++) {\n    long long temp = C * (a[i + n - 1] - a[i]);\n    ans = min(ans, temp);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = long long\n  while the loop reads n\n    a = long long array of size 2 * n +10\n    for i = 0 to 2 * n exclusive, read a[i]\n    sort a in ascending order\n    ans = long long = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n    for i = 1 to n exclusive, ans = the minimum value between ans and (a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i])\n    print ans\n  \n  \n\n",
        "int main() {\n  long long n;\n  while (cin >> n) {\n    long long a[2 * n + 10];\n    for (int i = 0; i < 2 * n; i++) cin >> a[i];\n    sort(a, a + 2 * n);\n    long long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n    for (int i = 1; i < n; i++) ans = min(ans, (a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i]));\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create constant integer sz with sz = 200010\ncreate long long integer array a with size sz\n\n  create integer n\n  read n\n  for i = 0 to 2 * n exclusive, read [i]\n  sort elements from a to a + 2 * n\n  create long long integer ans with ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n  for i = n to 2 * 2 exclusive, set ans to minimum of ( ans and (a[2 * n - 1] - a[0]) * (a[i] - a[i - n + 1]) )\n  print ans print newline\n  \n\n",
        "const int sz = 200010;\nlong long int a[sz];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < 2 * n; i++) { cin >> a[i]; }\n  sort(a, a + 2 * n);\n  long long int ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n  for (int i = n; i < 2 * n; i++) { ans = min(ans, (a[2 * n - 1] - a[0]) * (a[i] - a[i - n + 1])); }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "set N to 2e6 + 5\ncreate long long a[N]\n\n  create int n\n  read n\n  for i=0 to 2*n, read a[i]\n  sort elements between a and a + 2*n\n  set ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n  for i=1 to n exclusive, set and to min(ans, (a[i + n - 1] - a[i]) * (a[2 * n - 1] - a[0]))\n  print ans\n  \n\n",
        "const int N = 2e6 + 5;\nlong long a[N];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < 2 * n; i++) cin >> a[i];\n  sort(a, a + 2 * n);\n  long long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n  for (int i = 1; i < n; i++) ans = min(ans, (a[i + n - 1] - a[i]) * (a[2 * n - 1] - a[0]));\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "N = const integer with N = 2e5 + 50\nM = const integer with M = 1e6\noo = const long long with oo = 1e18\nmod = const integer mod = 1e9 + 7\n\n  n = integer\n  read n\n  a(2 * n) = vector of long long\n  for i = 0 to n * 2 exclusive, read a[i]\n  sort a.begin() and a.end()\n  ans = long long with ans = (a[n - 1] - a[0]) * (a.back() - a[n])\n  for i = 1 to n exclusive, ans = min(ans, (a[i + n - 1] - a[i]) * (a.back() - a[0]))\n  print ans\n\n",
        "const int N = 2e5 + 50;\nconst int M = 1e6;\nconst long long oo = 1e18;\nconst int mod = 1e9 + 7;\nint main() {\n  int n;\n  cin >> n;\n  vector<long long> a(2 * n);\n  for (int i = 0; i < n * 2; i++) cin >> a[i];\n  sort(a.begin(), a.end());\n  long long ans = (a[n - 1] - a[0]) * (a.back() - a[n]);\n  for (int i = 1; i < n; i++) { ans = min(ans, (a[i + n - 1] - a[i]) * (a.back() - a[0])); }\n  cout << ans << endl;\n}\n"
    ],
    [
        "declare const int INF = 0x3f3f3f3f\ncreate const int maxa = 1e5 + 10\ndeclare int array a with size maxa << 1\n\n  declare integer variable n\n  read n and loop further\n    declare int variable i\n    for i = 0 to 2 * n exclusive, read a[i]\n    sort a\n    declare long long x = a[n - 1] - a[0]\n    create long long y = a[2 * n - 1] - a[n]\n    declare long long minsq = x * y\n    set x to a[2 * n - 1] - a[0]\n    for i from 1 to n exclusive\n      set y to a[i + n - 1] - a[i]\n      change minsq to min of minsq and x * y\n    \n    print minsq\n  \n  \n\n",
        "const int INF = 0x3f3f3f3f;\nconst int maxa = 1e5 + 10;\nint a[maxa << 1];\nint main() {\n  int n;\n  while (cin >> n) {\n    int i;\n    for (i = 0; i < 2 * n; i++) cin >> a[i];\n    sort(a, a + 2 * n);\n    long long x = a[n - 1] - a[0];\n    long long y = a[2 * n - 1] - a[n];\n    long long minsq = x * y;\n    x = a[2 * n - 1] - a[0];\n    for (i = 1; i < n; i++) {\n      y = a[i + n - 1] - a[i];\n      minsq = min(minsq, x * y);\n    }\n    cout << minsq << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer N\ncreate long long array A with size 200005\n\n  read N\n  for i = 0 to 2 * N - 1 inclusive, read A[i]\n  sort elements from A to A + 2 * N\n  create long long Ans with Ans = (A[N - 1] - A[0]) * (A[2 * N - 1] - A[N])\n  for i = 1 to N - 1 inclusive, set Ans to minimum of Ans and (A[2 * N - 1] - A[0]) * (A[i + N - 1] - A[i])\n  print Ans print '\\n'\n  \n\n",
        "int N;\nlong long A[200005];\nint main() {\n  cin >> N;\n  for (int i = 0; i <= 2 * N - 1; i++) cin >> A[i];\n  sort(A, A + 2 * N);\n  long long Ans = (A[N - 1] - A[0]) * (A[2 * N - 1] - A[N]);\n  for (int i = 1; i <= N - 1; i++) { Ans = min(Ans, (A[2 * N - 1] - A[0]) * (A[i + N - 1] - A[i])); }\n  cout << Ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "niz = array of integers of length 200005\n\n  let n be a integer\n  read n\n  for i = 1 to 2 * n inclusive , read niz[i]\n  sort the values niz + 1 and niz + 2 * n + 1\n  let dx be a integer with dx = niz[n] - niz[1]\n  let dy be a integer with dy = niz[2 * n] - niz[n + 1]\n  let p be a long integer with p = 0\n  the value (long long int)dx * dy is initialized to p\n  set the long integer tren to 0\n  for i = n + 1 to 2 * n - 1 inclusive\n    the long integer value of (niz[i] - niz[i - n + 1]) * (niz[2 * n] - niz[1]) is assigned to tren\n    if tren is less than p , the value of p is equal to tren\n  \n  print p and newline\n  \n\n",
        "int niz[200005];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= 2 * n; i++) { cin >> niz[i]; }\n  sort(niz + 1, niz + 2 * n + 1);\n  int dx = niz[n] - niz[1];\n  int dy = niz[2 * n] - niz[n + 1];\n  long long int p = 0;\n  p = (long long int)dx * dy;\n  long long int tren = 0;\n  for (int i = n + 1; i <= 2 * n - 1; i++) {\n    tren = (long long int)(niz[i] - niz[i - n + 1]) * (niz[2 * n] - niz[1]);\n    if (tren < p) p = tren;\n  }\n  cout << p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long long n and long long array a with size 1000001\n\n  read n\n  multiply n by 2\n  loop i from 1 to n inclusive, read a[i]\n  sort a from element 1 to n + 1\n  create long long ans = (a[n / 2] - a[1]) * (a[n] - a[n / 2 + 1])\n  loop i from 2 to n / 2 + 1 inclusive, assign min of ans and (a[i + n / 2 - 1] - a[i]) * (a[n] - a[1]) to ans\n  print ans\n  \n\n",
        "long long n, a[1000001];\nint main() {\n  cin >> n;\n  n *= 2;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  sort(a + 1, a + n + 1);\n  long long ans = (a[n / 2] - a[1]) * (a[n] - a[n / 2 + 1]);\n  for (int i = 2; i <= n / 2 + 1; i++) ans = min(ans, (a[i + n / 2 - 1] - a[i]) * (a[n] - a[1]));\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long long array a with size 202000\n\n  declare integer n\n  read input to n\n  for i = 1 to n << 1 inclusive, read a[i]\n  sort a fron index 1 to 1 + n + n\n  long long s = 1ll << 62\n  set s to min of s and (a[n] - a[1]) * (a[n << 1] - a[n + 1])\n  for i from 2 to n inclusive, change s to min of s and (a[n << 1] - a[1]) * (a[n + i - 1] - a[i])\n  print s\n  \n\n",
        "long long a[202000];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= (n << 1); ++i) { cin >> a[i]; }\n  sort(a + 1, a + 1 + n + n);\n  long long s = 1ll << 62;\n  s = min(s, (a[n] - a[1]) * (a[n << 1] - a[n + 1]));\n  for (int i = 2; i <= n; i++) { s = min(s, (a[n << 1] - a[1]) * (a[n + i - 1] - a[i])); }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "flag = int\nn, m, len = int\na = long long array of size 200005\nans, temp = long long\n\n  loop while reading n\n    read 2 * n values into a\n    sort a\n    set ans to (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0])\n    set temp to a[2 * n - 1] - a[0]\n    for i = 1 to n set ans to min of ans and temp * (a[i + n - 1] - a[i])\n    print ans\n  \n  \n\n",
        "int flag;\nint n, m, len;\nlong long a[200005];\nlong long ans, temp;\nint main() {\n  while (cin >> n) {\n    for (int i = 0; i < 2 * n; ++i) cin >> a[i];\n    sort(a, a + n + n);\n    ans = (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0]);\n    temp = a[2 * n - 1] - a[0];\n    for (int i = 1; i < n; ++i) { ans = min(ans, temp * (a[i + n - 1] - a[i])); }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer flag\ncreate integers n, m, len\ncreate long long array a with size 200005\ncreate long longs ans, temp\n\n  while read n is true\n    for i = 0 to 2 * n exclusive, read a[i]\n    sort elements from a to a + n + n\n    set ans to (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0])\n    set temp to a[2 * n - 1] - a[0]\n    for i = 1 to n exclusive, set ans to minimum of ans and temp * (a[i + n - 1] - a[i])\n    print ans print newline\n  \n  \n\n",
        "int flag;\nint n, m, len;\nlong long a[200005];\nlong long ans, temp;\nint main() {\n  while (cin >> n) {\n    for (int i = 0; i < 2 * n; ++i) cin >> a[i];\n    sort(a, a + n + n);\n    ans = (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0]);\n    temp = a[2 * n - 1] - a[0];\n    for (int i = 1; i < n; ++i) { ans = min(ans, temp * (a[i + n - 1] - a[i])); }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "maxn = const integer with maxn = 2e5 + 10\na = array of size maxn long long\n\n  n = integer\n  read n\n  ans = long long with ans = 0\n  for i = 0 to 2 * n exclusive, read a[i]\n  sort a and a + 2 * n\n  ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n  for i = 1 to n exclusive, ans = min((a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i]), ans)\n  print ans\n  \n\n",
        "const int maxn = 2e5 + 10;\nlong long a[maxn];\nint main() {\n  int n;\n  cin >> n;\n  long long ans = 0;\n  for (int i = 0; i < 2 * n; i++) { cin >> a[i]; }\n  sort(a, a + 2 * n);\n  ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n  for (int i = 1; i < n; i++) { ans = min((a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i]), ans); }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "n = integer\na = long long array of size 200001, ans = long long\n\n  read n\n  for i = 1 to (left shift n 1 place), read a[i]\n  sort a + 1 and a + (n << 1) + 1\n  ans = (a[n] - a[1]) * (a[shift n 1 place] - a[n + 1])\n  for i = 1 to n exclusive, ans = min((a[left shift n 1 place] - a[1]) * (a[n + i] - a[i + 1]), ans)\n  print ans\n  \n\n",
        "int n;\nlong long a[200001], ans;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= (n << 1); i++) cin >> a[i];\n  sort(a + 1, a + (n << 1) + 1);\n  ans = (a[n] - a[1]) * (a[n << 1] - a[n + 1]);\n  for (int i = 1; i < n; i++) ans = min((a[n << 1] - a[1]) * (a[n + i] - a[i + 1]), ans);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "let in be long long array with size 200010\ncreate ints n and n2\ndeclare long long ans\n\n  read n\n  change n2 to n * 2\n  for integer i = 0 to n2 exclusive, read in[i]\n  sort n2 elements of in\n  assign (in[n - 1] - in[0]) * (in[n2 - 1] - in[n]) to ans\n  for i from 1 to n exclusive, set ans to min of ans and in[n - 1 + i] - in[i]) * (in[n2 - 1] - in[0]\n  print ans and '\\n'\n  \n\n",
        "long long in[200010];\nint n, n2;\nlong long ans;\nint main() {\n  cin >> n;\n  n2 = n * 2;\n  for (int i = 0; i < n2; i++) cin >> in[i];\n  sort(in, in + n2);\n  ans = (in[n - 1] - in[0]) * (in[n2 - 1] - in[n]);\n  for (int i = 1; i < n; i++) ans = min(ans, (in[n - 1 + i] - in[i]) * (in[n2 - 1] - in[0]));\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create long long array of length 200020\n\n  create int n\n  read n\n  for i=1 to 2*n inclusive, read a[i]\n  sort elements between a+1 and a + 2 * n + 1\n  set min1 to (a[n] - a[1]) * (a[2 * n] - a[n + 1])\n  for i=2 to n+1 inclusive, assign min of min1 and (a[2 * n] - a[1]) * (a[i + n - 1] - a[i]) to min1\n  print min1\n  \n\n",
        "long long a[200020];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= 2 * n; i++) cin >> a[i];\n  sort(a + 1, a + 2 * n + 1);\n  long long min1 = (a[n] - a[1]) * (a[2 * n] - a[n + 1]);\n  for (int i = 2; i <= n + 1; i++) { min1 = min(min1, (a[2 * n] - a[1]) * (a[i + n - 1] - a[i])); }\n  cout << min1 << endl;\n  return 0;\n}\n"
    ],
    [
        "create long long array a with size 202000\n\n  create integer n\n  read n\n  for i = 1 to i is less than or equal to ( n bitshift left 1 ), incrementing i, read a[i]\n  sort elements from a + 1 to a + 1 + n + n\n  create long long s with s = (s, (a[n] - a[1]) * (a[n bitshift left 1] - a[n + 1]))\n  for i = 2 to n inclusive, set s to minimum of ( s and (a[n bitshift left 1] - a[1]) * (a[n + i - 1] - a[i])\n  print s print newline\n  \n\n",
        "long long a[202000];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= (n << 1); ++i) { cin >> a[i]; }\n  sort(a + 1, a + 1 + n + n);\n  long long s = (s, (a[n] - a[1]) * (a[n << 1] - a[n + 1]));\n  for (int i = 2; i <= n; i++) { s = min(s, (a[n << 1] - a[1]) * (a[n + i - 1] - a[i])); }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  create long longs vector a with n * 2 elements\n  for i = 0 to n*2 exclusive, read a[i]\n  sort a\n  create long long ans = LLONG_MAX\n  loop i from 0 to n exclusive\n    if i = 0\n      assign min of ans and (a[n - 1] - a[0]) * (a[n * 2 - 1] - a[n]) to ans\n    else\n      assign min of ans and (a[i + n - 1] - a[i]) * (a[n * 2 - 1] - a[0]) to ans\n    \n  \n  print ans\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<long long> a(n * 2);\n  for (int i = 0; i < n * 2; i++) { cin >> a[i]; }\n  sort(a.begin(), a.end());\n  long long ans = LLONG_MAX;\n  for (int i = 0; i < n; i++) {\n    if (i == 0) {\n      ans = min(ans, (a[n - 1] - a[0]) * (a[n * 2 - 1] - a[n]));\n    } else {\n      ans = min(ans, (a[i + n - 1] - a[i]) * (a[n * 2 - 1] - a[0]));\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create const int maxn = 1e5 + 2\nlet a be long long array with size maxn * 2\n\n  declare integer variable n\n  read n\n  create long long m = n * 2\n  for i from 1 to m inclusive, read input to a[i]\n  sort a from index 1 to m + 1\n  create long long ans = 1e18\n  for i from 1 to n inclusive\n    if i = 1\n      change ans to min of ans and (a[n] - a[1]) * (a[m] - a[n + 1])\n    else\n      change ans to min of ans and (a[m] - a[1]) * (a[n + i - 1] - a[i])\n    \n  \n  print ans\n  \n\n",
        "const int maxn = 1e5 + 2;\nlong long a[maxn * 2];\nint main() {\n  int n;\n  cin >> n;\n  long long m = n * 2;\n  for (int i = 1; i <= m; i++) { cin >> a[i]; }\n  sort(a + 1, a + m + 1);\n  long long ans = 1e18;\n  for (int i = 1; i <= n; i++) {\n    if (i == 1) {\n      ans = min(ans, (a[n] - a[1]) * (a[m] - a[n + 1]));\n    } else {\n      ans = min(ans, (a[m] - a[1]) * (a[n + i - 1] - a[i]));\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAXN with MAXN = integer casted ( 2 * 1e5 + 5 )\ncreate integer n\ncreate long long array a with size MAXN\n\n  read n\n  for i = 0 to n + n exclusive, read a[i]\n  sort elements from a to a + n + n\n  if n is less than or equal to 1\n    print \"0\" print newline\n  else\n    create long long ans with ans = a[n-1]-a[0]\n    set ans to ans * ( a[n + n - 1] - a[n] )\n    create long long l with l = a[n + n - 1] - a[0]\n    for i = 1 to n inclusive, set ans to minimum of ( ans and ( l * (a[i + n - 1] - a[i]) ) )\n    print ans print newline\n  \n\n",
        "const int MAXN = (int)(2 * 1e5 + 5);\nint n;\nlong long a[MAXN];\nint main() {\n  cin >> n;\n  for (int i = 0; i < n + n; i++) { cin >> a[i]; }\n  sort(a, a + n + n);\n  if (n <= 1) {\n    cout << \"0\" << endl;\n  } else {\n    long long ans = a[n - 1] - a[0];\n    ans *= a[n + n - 1] - a[n];\n    long long l = a[n + n - 1] - a[0];\n    for (int i = 1; i <= n; i++) { ans = min(ans, l * (a[i + n - 1] - a[i])); }\n    cout << ans << endl;\n  }\n}\n"
    ],
    [
        "\n  n, x = integers\n  read n\n  set cnt1, cnt2 = 0\n  for i = 0 to n exclusive\n    read x\n    set cnt1 = cnt1 + x\n  \n  for i = 0 to n exclusive\n    read x\n    set cnt2 = cnt2 + x\n  \n  if cnt1 >= cnt2\n    print \"YES\"\n  else\n    print \"NO\"\n\n",
        "int main() {\n  int n, x;\n  cin >> n;\n  int cnt1 = 0, cnt2 = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    cnt1 += x;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    cnt2 += x;\n  }\n  if (cnt1 >= cnt2)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "\n  declare long long integer variables n, i and j\n  read n\n  declare long long integers s1 and s2 = 0 and long long integer arrays a and b with size n\n  for i = 0 to n exclusive\n    read a[i]\n    increase s1 by a[i]\n  \n  for i = 0 to n exclusive\n    read b[i]\n    increase s2 by b[i]\n  \n  if s1 >= s2\n    print \"YES\" and '\\n'\n  else\n    print \"NO\" and '\\n'\n  \n  \n\n",
        "int main() {\n  long long int n, i, j;\n  cin >> n;\n  long long int a[n], b[n], s1 = 0, s2 = 0;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    s1 += a[i];\n  }\n  for (i = 0; i < n; i++) {\n    cin >> b[i];\n    s2 += b[i];\n  }\n  if (s1 >= s2) {\n    cout << \"YES\" << '\\n';\n  } else {\n    cout << \"NO\" << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  Read n\n  sumx = integer, set to 0\n  sumy = integer, set to 0\n  for i = 0 to n exclusive\n    x =integer\n    Read x\n    set sumx to sumx + x\n  \n  for i = 0 to n exclusive\n    y =integer\n    Read y\n    set sumy to sumy + y\n  \n  if sumy is less than or equal to sumx\n    print YES and a new line\n  else do the following\n    print NO and a new line\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int sumx = 0;\n  int sumy = 0;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    sumx = sumx + x;\n  }\n  for (int i = 0; i < n; i++) {\n    int y;\n    cin >> y;\n    sumy = sumy + y;\n  }\n  if (sumy <= sumx) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  x, y, n = integers with x, y = 0\n  a = integer\n  read n\n  for i = 1 to n inclusive\n    read a\n    set x to x + a\n  \n  for i = 1 to n inclusive\n    read a\n    set y to y + a\n  \n  if x >= y\n    print YES\n  else\n    print NO\n  \n  \n\n",
        "int main() {\n  int x = 0, y = 0, n;\n  int a;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a;\n    x += a;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> a;\n    y += a;\n  }\n  if (x >= y) {\n    cout << \"YES\\n\";\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer arrays x, y, with x size 51, y size 51\n\n  create integers n, sum_x, sum_y, with sum_x = 0, sum_y = 0\n  read n\n  for i = 0 to n exclusive, read x[i], increment sum_x by x[i]\n  for i = 0 to n exclusive, read y[i], increment sum_y by y[i]\n  if sum_x is greater than or equal than sum_y\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n\n",
        "int x[51], y[51];\nint main() {\n  int n, sum_x = 0, sum_y = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> x[i], sum_x += x[i];\n  for (int i = 0; i < n; i++) cin >> y[i], sum_y += y[i];\n  if (sum_x >= sum_y)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "\n  create n, sum, s as int set sum and s to 0\n  read in to n\n  create int array arr and ar both size n\n  for i = 0 to n exclusive\n    read in to arr[i]\n    increase sum by arr[i]\n  \n  for i = 0 to n exclusive\n    read in to ar[i]\n    increase s by ar[i]\n  \n  if s <= sum\n    print YES\n  else\n    print NO\n  \n\n",
        "int main() {\n  int n, sum = 0, s = 0;\n  cin >> n;\n  int arr[n], ar[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    sum += arr[i];\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> ar[i];\n    s += ar[i];\n  }\n  if (s <= sum) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n}\n"
    ],
    [
        "let is be integer array with size 105\n\n  create integers n, m, a and b\n  read n and m\n  for integer i = 0 to n exclusive\n    read a and b\n    for j = a to b inclusive set is[j] to 1\n  \n  declare integer vector ans\n  for i = 1 to m inclusive\n    if is[i] is 0, push i into ans\n  print length of ans and \"\\n\"\n  for i = 0 to length of ans exclusive\n    if i != length of ans - 1\n      print ans[i] and \" \"\n    else\n      print ans[i] and \"\\n\"\n  \n\n",
        "int is[105];\nint main() {\n  int n, m, a, b;\n  cin >> n >> m;\n  for (int i = 0; i < n; i++) {\n    cin >> a >> b;\n    for (int j = a; j <= b; j++) is[j] = 1;\n  }\n  vector<int> ans;\n  for (int i = 1; i <= m; i++)\n    if (!is[i]) ans.push_back(i);\n  cout << ans.size() << \"\\n\";\n  for (int i = 0; i < ans.size(); i++)\n    if (i != ans.size() - 1)\n      cout << ans[i] << \" \";\n    else\n      cout << ans[i] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  a, tam, comeco, fim = int witha = 0 and tam = 0 and comeco = 0 and fim = 0\n  read a then tam\n  isThere = bool array of size tam + 1\n  set all values of isThere to false\n  for b = 0 to a\n    read comeco then fim\n    for c = comeco to fim inclusive set siThere[c] to true\n  \n  resp = int with resp = 0\n  presentes = int array of size tam + 1\n  ordem = string with ordem = \"\"\n  for b = 1 to tam inclusive\n    is isThere[b] is false\n      set presentes[resp] to b\n      increment resp\n    \n  \n  print resp\n  for b = 0 to resp\n    print presentes[b]\n    if b is resp - 1\n      print newline\n    else\n      print \" \"\n    \n  \n  \n\n",
        "int main() {\n  int a = 0, tam = 0, comeco = 0, fim = 0;\n  cin >> a >> tam;\n  bool isThere[tam + 1];\n  for (int j = 0; j <= tam; j++) { isThere[j] = false; }\n  for (int b = 0; b < a; b++) {\n    cin >> comeco >> fim;\n    for (int c = comeco; c <= fim; c++) { isThere[c] = true; }\n  }\n  int resp = 0;\n  int presentes[tam + 1];\n  string ordem = \"\";\n  for (int b = 1; b <= tam; b++) {\n    if (!isThere[b]) {\n      presentes[resp] = b;\n      resp++;\n    }\n  }\n  cout << resp << endl;\n  for (int b = 0; b < resp; b++) {\n    cout << presentes[b];\n    if (b == resp - 1) {\n      cout << endl;\n    } else {\n      cout << \" \";\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "M = const int with M = 3010\nb = int vector and a = int vector array of size M\nn, m = int\nin function judge taking an int x and returning a bool\n  num1 = int with num1 = size of a[1]\n  for i = 2 to m inclusive\n    if size of a[i] is greater than x\n      increment num1 by size of a[i] - x\n    else\n      increment num1 by size of a[i]\n  \n  return true if num1 is greater than x else return false\n\nin function get_ans taking an int x and returning a long long\n  ans = long long with ans = 0\n  num1 = int with num1 = size of a[1]\n  clear b\n  for i = 2 to m inclusive\n    if size of a[i] is greater than x\n      for j = x to size of a[i]\n        increment num1\n        increment ans by a[i][j]\n      \n      for j = 0 to x append a[i][j] to b\n    else\n      for j = 0 to size of a[i] append a[i][j] to b\n  \n  sort b\n  if num1 is less than x and x - num1 + 1 is greater than size of b then return 10000000000000ll\n  hh = int with hh = x - num1 + 1\n  for i = 0 to hh increment ans by b[i]\n  return ans\n\nin function cmp taking two ints x and y and returning a bool\n  return true if x is greater than y else return false\n\n\n  read n then m\n  for i = 1 to n inclusive\n    x, y = int\n    read x then y\n    append y to a[x]\n  \n  for i = 1 to m inclusive sort a[i] using cmp\n  ans = long long with ans = 10000000000000ll\n  for i = 0 to n / 2 inclusive set ans to min of ans and get_ans of i\n  print ans\n  \n\n",
        "const int M = 3010;\nvector<int> a[M], b;\nint n, m;\nbool judge(int x) {\n  int num1 = a[1].size();\n  for (int i = 2; i <= m; i++) {\n    if (a[i].size() > x)\n      num1 += a[i].size() - x;\n    else\n      num1 += a[i].size();\n  }\n  return num1 > x;\n}\nlong long get_ans(int x) {\n  long long ans = 0;\n  int num1 = a[1].size();\n  b.clear();\n  for (int i = 2; i <= m; i++) {\n    if (a[i].size() > x) {\n      for (int j = x; j < a[i].size(); j++) {\n        num1++;\n        ans += a[i][j];\n      }\n      for (int j = 0; j < x; j++) b.push_back(a[i][j]);\n    } else\n      for (int j = 0; j < a[i].size(); j++) b.push_back(a[i][j]);\n  }\n  sort(b.begin(), b.end());\n  if (num1 < x && x - num1 + 1 > b.size()) return 10000000000000ll;\n  int hh = x - num1 + 1;\n  for (int i = 0; i < hh; i++) ans += b[i];\n  return ans;\n}\nbool cmp(int x, int y) {\n  return x > y;\n}\nint main() {\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++) {\n    int x, y;\n    cin >> x >> y;\n    a[x].push_back(y);\n  }\n  for (int i = 1; i <= m; i++) sort(a[i].begin(), a[i].end(), cmp);\n  long long ans = 10000000000000ll;\n  for (int i = 0; i <= n / 2; i++) ans = min(ans, get_ans(i));\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create long long integer pair p of 3007 size\nc = long long integers array of length 3007\n\n  integer n,m = long long integers\n  read n,m\n  set long long integer mx to 0\n  for i = 0 to less than n do the following\n    read p[i].second,p[i].first\n    add one to c[p[i].second]\n  \n  sort the values of p to p + n\n  for i = 2 to less than or equal to m then make mx the maximum of mx or c[i]\n  set long long integer ans to 21474836470000\n  set long long integer sum to 0\n  for i = mx to greater than or equal to 0 do the following\n    for j = 0 to less than n do the following\n      if p[j].second is not equal to 1 and c[p[j].second] > i then do the following\n        minus 1from c[p[j].second]\n        set p[j].second to 1\n        add 1 to c[1]\n        sum equals sum plus p[j].first\n      \n    \n    set long long integer k to i - c[1] + 1\n    set long long integer t to sum\n    for j = 0 to less than n do the following\n      if k is greater than 0 then do the following\n        if p[j].second is not equal to 1 then do the following\n          t equals t plus p[j].first\n          minus 1 from k--\n        \n      \n    \n    set ans to min(ans, t)\n  \n  output ans,\\n\n\n",
        "pair<long long int, long long int> p[3007];\nlong long int c[3007];\nint main() {\n  long long int n, m;\n  cin >> n >> m;\n  long long int mx = 0;\n  for (long long int i = 0; i < n; i++) {\n    cin >> p[i].second >> p[i].first;\n    c[p[i].second]++;\n  }\n  sort(p, p + n);\n  for (long long int i = 2; i <= m; i++) mx = max(mx, c[i]);\n  long long int ans = 21474836470000;\n  long long int sum = 0;\n  for (long long int i = mx; i >= 0; i--) {\n    for (long long int j = 0; j < n; j++) {\n      if (p[j].second != 1 && c[p[j].second] > i) {\n        c[p[j].second]--;\n        p[j].second = 1;\n        c[1]++;\n        sum += p[j].first;\n      }\n    }\n    long long int k = i - c[1] + 1;\n    long long int t = sum;\n    for (long long int j = 0; j < n; j++) {\n      if (k > 0) {\n        if (p[j].second != 1) {\n          t += p[j].first;\n          k--;\n        }\n      }\n    }\n    ans = min(ans, t);\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "\n  ax, ay, bx, by, cx, cy, n =integers\n  Read ax, ay, bx, by, cx, cy, n\n  if cx is greater than bx\n    if cy is greater than by\n      if (ax is less than cx and ax is greater than bx) OR (ay is less than cy and ay is greater than by)\n        print NO and a new line\n      else do the following\n        print YES and a new line\n      \n    else do the following\n      if (ax is less than cx and ax is greater than bx) OR (ay is greater than cy and ay is less than by)\n        print NO and a new line\n      else do the following\n        print YES and a new line\n      \n    \n  else do the following\n    if cy is greater than by\n      if (ax is greater than cx and ax is less than bx) OR| (ay is less than cy and ay is greater than by\n        print NO and a new line\n      else do the following\n        print YES and a new line\n      \n    else do the following\n      if (ax is greater than cx and ax is less than bx) OR| (ay is greater than cy and ay is less than by)\n        print NO and a new line\n      else do the following\n        print YES and a new line\n      \n    \n  \n  \n\n",
        "int main() {\n  int ax, ay, bx, by, cx, cy, n;\n  cin >> n >> ax >> ay >> bx >> by >> cx >> cy;\n  if (cx > bx) {\n    if (cy > by) {\n      if ((ax < cx && ax > bx) || (ay < cy && ay > by)) {\n        cout << \"NO\\n\";\n      } else {\n        cout << \"YES\\n\";\n      }\n    } else {\n      if ((ax < cx && ax > bx) || (ay > cy && ay < by)) {\n        cout << \"NO\\n\";\n      } else {\n        cout << \"YES\\n\";\n      }\n    }\n  } else {\n    if (cy > by) {\n      if ((ax > cx && ax < bx) || (ay < cy && ay > by)) {\n        cout << \"NO\\n\";\n      } else {\n        cout << \"YES\\n\";\n      }\n    } else {\n      if ((ax > cx && ax < bx) || (ay > cy && ay < by)) {\n        cout << \"NO\\n\";\n      } else {\n        cout << \"YES\\n\";\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create 2d integer array bio with size 1000 by 1000\ncreate constant integer array smjeroviX with size 8 with smjeroviX = {0, 0, 1, -1, 1, 1, -1, -1}\ncreate constant integer array smjeroviY with size 8 with smjeroviY = {1, -1, 0, 0, 1, -1, 1, -1}\n\n  create integers n, aX, aY, bX, bY, cX, cY\n  read n read aX read aY read bX read bY read cX read cY\n  decrement aX\n  decrement aY\n  decrement bX\n  decrement bY\n  decrement cX\n  decrement cY\n  create integer queue q\n  add element bX to end of q\n  add element bY to end of q\n  set bio[bX][bY] to 1\n  while q is not empty\n    create integer x with x = front of q\n    remove next element from q\n    set y to front of q\n    remove next element from q\n    if x is cX and y is cY\n      print \"YES\\n\"\n      \n    \n    for i = 0 to 8 exclusive\n      create integer X with X = x + smjeroviX[i]\n      create integer Y with Y = y + smjeroviY[i]\n      if X is less than 0 or X is n or Y is less than 0 or Y is n or bio[X][Y], break current loop iteration\n      set bio[X][Y] to 1\n      if X is not aX and Y is not aY and ( X + Y is not aX + aY) and ( X - Y is not aX - aY)\n        add element X to end of q\n        add element Y to end of q\n      \n    \n  \n  print \"NO\\n\"\n  \n\n",
        "int bio[1000][1000];\nconst int smjeroviX[8] = {0, 0, 1, -1, 1, 1, -1, -1};\nconst int smjeroviY[8] = {1, -1, 0, 0, 1, -1, 1, -1};\nint main() {\n  int n, aX, aY, bX, bY, cX, cY;\n  cin >> n >> aX >> aY >> bX >> bY >> cX >> cY;\n  aX--;\n  aY--;\n  bX--;\n  bY--;\n  cX--;\n  cY--;\n  queue<int> q;\n  q.push(bX);\n  q.push(bY);\n  bio[bX][bY] = 1;\n  while (!q.empty()) {\n    int x = q.front();\n    q.pop();\n    int y = q.front();\n    q.pop();\n    if (x == cX && y == cY) {\n      cout << \"YES\\n\";\n      return 0;\n    }\n    for (int i = 0; i < 8; i++) {\n      int X = x + smjeroviX[i];\n      int Y = y + smjeroviY[i];\n      if (X < 0 || X == n || Y < 0 || Y == n || bio[X][Y]) continue;\n      bio[X][Y] = 1;\n      if (X != aX && Y != aY && (X + Y != aX + aY) && (X - Y != aX - aY)) {\n        q.push(X);\n        q.push(Y);\n      }\n    }\n  }\n  cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  integers = n,ax,ay,bx,by,cx,cy\n  read n,ax,ay,bx,by,cx,cy\n  if (bx - ax) * (cx - ax)is less than 0 or (by - ay) * (cy - ay) < 0 then do the following\n    output NO\n  else\n    print YES\n  \n\n",
        "int main() {\n  int n, ax, ay, bx, by, cx, cy;\n  cin >> n >> ax >> ay >> bx >> by >> cx >> cy;\n  if ((bx - ax) * (cx - ax) < 0 || (by - ay) * (cy - ay) < 0)\n    cout << \"NO\" << endl;\n  else\n    cout << \"YES\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read input to n\n  create integers x1 and y1\n  read x1 and y1\n  declare ints x2 and y2\n  read x2 and y2\n  declare integers x3 and y3\n  read x3 and y3\n  if x2 < x1 and y2 < y1 and x3 < x1 and y3 < y1\n    print \"YES\"\n  else if x2 > x1 && y2 > y1 && x3 > x1 && y3 > y1\n    print \"YES\"\n  else if x2 > x1 && x3 > x1 && y3 < y1 && y2 < y1\n    print \"YES\"\n  else if x2 < x1 && x3 < x1 && y2 > y1 && y3 > y1\n    print \"YES\"\n  else\n    print \"NO\"\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x1, y1;\n  cin >> x1 >> y1;\n  int x2, y2;\n  cin >> x2 >> y2;\n  int x3, y3;\n  cin >> x3 >> y3;\n  if (x2 < x1 && y2 < y1 && x3 < x1 && y3 < y1)\n    cout << \"YES\" << endl;\n  else if (x2 > x1 && y2 > y1 && x3 > x1 && y3 > y1)\n    cout << \"YES\" << endl;\n  else if (x2 > x1 && x3 > x1 && y3 < y1 && y2 < y1)\n    cout << \"YES\" << endl;\n  else if (x2 < x1 && x3 < x1 && y2 > y1 && y3 > y1)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "n, qx, qy, kx, ky, tx, ty = integers\n\n  Read n\n  Read qx\n  Read qy\n  Read kx\n  Read ky\n  Read tx\n  Read ty\n  if kx is less than qx\n    if ky is less than qy\n      if tx is less than qx and ty is less than qy\n        print YES and a new line\n      else do the following\n        print NO and a new line\n    else do the following\n      if tx is less than qx and ty is greater than qy\n        print YES and a new line\n      else do the following\n        print NO and a new line\n    \n  else do the following\n    if ky is less than qy\n      if tx is greater than qx and ty is less than qy\n        print YES and a new line\n      else do the following\n        print NO and a new line\n    else do the following\n      if tx is greater than qx and ty is greater than qy\n        print YES and a new line\n      else do the following\n        print NO and a new line\n    \n  \n\n",
        "int n, qx, qy, kx, ky, tx, ty;\nint main() {\n  cin >> n;\n  cin >> qx;\n  cin >> qy;\n  cin >> kx;\n  cin >> ky;\n  cin >> tx;\n  cin >> ty;\n  if (kx < qx) {\n    if (ky < qy) {\n      if (tx < qx && ty < qy) {\n        cout << \"YES\" << endl;\n      } else\n        cout << \"NO\" << endl;\n    } else {\n      if (tx < qx && ty > qy) {\n        cout << \"YES\" << endl;\n      } else\n        cout << \"NO\" << endl;\n    }\n  } else {\n    if (ky < qy) {\n      if (tx > qx && ty < qy) {\n        cout << \"YES\" << endl;\n      } else\n        cout << \"NO\" << endl;\n    } else {\n      if (tx > qx && ty > qy) {\n        cout << \"YES\" << endl;\n      } else\n        cout << \"NO\" << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  integers = n\n  read n\n  integers = x,y,x1,y1,x2,y2\n  read input x,y,x1,y1,x2,y2\n  integers = flag = 1\n  if x1 is x or y1 then do the following\n  if abs is abs(y - y1 then do the following or abs(x - x2\n    set flag to 0\n  else if x1 is less than x and x2 > x then do the following\n    set flag to 0\n  else if x1 > x and x2 is less than x then do the following\n    set flag to 0\n  else if y1 is less than y and y2 > y then do the following\n    set flag to 0\n  else if y1 > y and y2 is less than y then do the following\n    set flag to 0\n  \n  if flag is true\n    output YES\n  else\n    output NO\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x, y, x1, y1, x2, y2;\n  cin >> x >> y >> x1 >> y1 >> x2 >> y2;\n  int flag = 1;\n  if (x1 == x || y1 == y || x2 == x || y2 == y) { flag = 0; }\n  if (abs(x - x1) == abs(y - y1) || abs(x - x2) == abs(y - y2)) {\n    flag = 0;\n  } else if (x1 < x && x2 > x) {\n    flag = 0;\n  } else if (x1 > x && x2 < x) {\n    flag = 0;\n  } else if (y1 < y && y2 > y) {\n    flag = 0;\n  } else if (y1 > y && y2 < y) {\n    flag = 0;\n  }\n  if (flag)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "boolean function search with int arguments ax, ay, bx, by, cx and cy\n  if bx < ax and cx < ax and by < ay and cy < ay\n    return true\n  else if bx < ax and cx < ax and by > ay and cy > ay\n    return true\n  else if bx > ax and cx > ax and by < ay and cy < ay\n    return true\n  else if bx > ax and cx > ax and by > ay and cy > ay\n    return true\n  return false\n\n\n  create ints n, ax, ay, bx, by, cx and cy\n  read n, ax, ay, bx, by, cx and cy\n  if search(ax, ay, bx, by, cx, cy) returns true\n    print \"YES\"\n  else\n    print \"NO\"\n  \n\n",
        "bool search(int ax, int ay, int bx, int by, int cx, int cy) {\n  if (bx < ax && cx < ax && by < ay && cy < ay)\n    return true;\n  else if (bx < ax && cx < ax && by > ay && cy > ay)\n    return true;\n  else if (bx > ax && cx > ax && by < ay && cy < ay)\n    return true;\n  else if (bx > ax && cx > ax && by > ay && cy > ay)\n    return true;\n  return false;\n}\nint main() {\n  int n, ax, ay, bx, by, cx, cy;\n  cin >> n >> ax >> ay >> bx >> by >> cx >> cy;\n  if (search(ax, ay, bx, by, cx, cy))\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b, c = long long int\n  read n\n  if n is a multiple of 3 or n mod 3 is 1\n    set a to n - 2\n    set b to 1\n    set c to 1\n  else if n mod 3 is 2\n    set a to n - 3\n    set b to 1\n    set c to 2\n  \n  print a and b and c\n\n",
        "int main() {\n  long long int n, a, b, c;\n  cin >> n;\n  if (n % 3 == 0 || n % 3 == 1) {\n    a = n - 2;\n    b = 1;\n    c = 1;\n  } else if (n % 3 == 2) {\n    a = n - 3;\n    b = 1;\n    c = 2;\n  }\n  cout << a << \" \" << b << \" \" << c << endl;\n}\n"
    ],
    [
        "\n  declare integer n\n  declare integer variable c8 = 0\n  read n\n  read from the input input and ignore it\n  let s be char array with size 101\n  read s\n  if n >= 11\n    declare integer r = n / 11\n    loop i from 0 while s[i] !=0, incrementing i\n      if s[i] is equal to '8', increment c8\n      if c8 is equal to r, break the loop\n    \n    print c8\n    \n  \n  print c8\n  \n\n",
        "int main() {\n  int n;\n  int c8 = 0;\n  cin >> n;\n  cin.ignore();\n  char s[101];\n  gets(s);\n  if (n >= 11) {\n    int r = n / 11;\n    for (int i = 0; s[i]; i++) {\n      if (s[i] == '8') c8++;\n      if (c8 == r) break;\n    }\n    cout << c8 << endl;\n    return 0;\n  }\n  cout << c8 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, num8, numn and num\n  create character array str with 101 element\n  read n and loop further\n    set num8 to 0\n    read input to str\n    for i from 0 to n exclusive\n      if str[i] = '8', increment num8 by one\n    assign n / 11 to numn\n    if num8 is greater than numn\n      change num to numn\n    else\n      change num to num8\n    print num\n  \n  \n\n",
        "int main() {\n  int n, num8, numn, num;\n  char str[101];\n  while (cin >> n) {\n    num8 = 0;\n    cin >> str;\n    for (int i = 0; i < n; i++)\n      if (str[i] == '8') num8++;\n    numn = n / 11;\n    if (num8 > numn)\n      num = numn;\n    else\n      num = num8;\n    cout << num << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  st, s = string\n  i, a, b, count = int with count = 0\n  read a then st\n  set b to a / 11\n  for i = 0 to a\n    if st[i] is '8' then increment count\n  \n  if count is less than b\n    print count\n  else\n    print b\n  \n  \n\n",
        "int main() {\n  string st, s;\n  int i, a, b, count = 0;\n  cin >> a >> st;\n  b = a / 11;\n  for (i = 0; i < a; i++) {\n    if (st[i] == '8') { count++; }\n  }\n  if (count < b) {\n    cout << count << endl;\n  } else {\n    cout << b << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  s = character array of size 101\n  n, i = integers, sum8 = integer = 0, sum = integer = 0, total = integer = 0\n  read n\n  read s\n  for i = 0 to n exclusive\n    if s[i] is 8, then increase sum8 by 1\n    increase sum by 1\n  \n  if sum8 >= sum / 11\n    total = sum / 11\n  else\n    total = sum8\n  print total\n  \n\n",
        "int main() {\n  char s[101];\n  int n, i, sum8 = 0, sum = 0, total = 0;\n  cin >> n;\n  cin >> s;\n  for (i = 0; i < n; i++) {\n    if (s[i] == '8') sum8++;\n    sum++;\n  }\n  if (sum8 >= sum / 11)\n    total = sum / 11;\n  else\n    total = sum8;\n  cout << total << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create character array s with size 101\n  create integers n, i, sum8, sum, total, with sum8 = 0, sum = 0, total = 0\n  read n\n  read s\n  for i = 0 to n exclusive\n    if s[i] is '8', increment sum8\n    increment sum\n  \n  if sum8 is greater than or equal to sum / 11\n    set total to sum / 11\n  else\n    set total to sum8\n  print total print newline\n  \n\n",
        "int main() {\n  char s[101];\n  int n, i, sum8 = 0, sum = 0, total = 0;\n  cin >> n;\n  cin >> s;\n  for (i = 0; i < n; i++) {\n    if (s[i] == '8') sum8++;\n    sum++;\n  }\n  if (sum8 >= sum / 11)\n    total = sum / 11;\n  else\n    total = sum8;\n  cout << total << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  create int n and sum, set to sum 0\n  read n\n  read s\n  for i=0 to length of s exclusive\n    if s[i] equal to 8, increment sum\n  \n  if n/11 greater than 11\n    print n/11\n  else\n    print sum and a newline\n\n",
        "int main() {\n  string s;\n  int n, sum = 0;\n  cin >> n;\n  cin >> s;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == '8') sum++;\n  }\n  if (n / 11 < sum)\n    cout << (n / 11) << endl;\n  else\n    cout << sum << endl;\n}\n"
    ],
    [
        "set N to 1e6 + 10\nmod = 998244353\ncreate int n\ncreate string x\ncreate map m from int to int\n\n  read n and x\n  for i=0 to n exclusive, increment m[x[i] - 0]\n  set s to size of x\n  print min of m[8] and s/11\n\n",
        "const int N = 1e6 + 10;\nconst int mod = 998244353;\nint n;\nstring x;\nmap<int, int> m;\nint main() {\n  cin >> n >> x;\n  for (int i = 0; i < n; i++) m[x[i] - '0']++;\n  int s = x.size();\n  cout << min(m[8], s / 11) << endl;\n}\n"
    ],
    [
        "\n  n, k = integers with k = 0\n  Read n\n  s=string\n  Read s\n  for i = 0 to n exclusive\n    if s[i] is 8, then increment k\n  \n  print minimum value of n / 11 and k and a new line\n  \n\n",
        "int main() {\n  int n, k = 0;\n  cin >> n;\n  string s;\n  cin >> s;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '8') { k++; }\n  }\n  cout << min(n / 11, k) << endl;\n  return 0;\n}\n"
    ],
    [
        "MAX = const int with MAX = 100000\nIN = const int with INF = 1000000001\na = int array of size MAX\nn, sum = int with sum = 0\ns = string\n\n  read n\n  read s\n  len = int with len = length of s\n  for i = 0 to len increment sum if s[i] is '8'\n  res = int with res = n / 11\n  if sum is less or equal to res\n    print sum\n  else\n    print res\n  \n\n",
        "const int MAX = 100000;\nconst int INF = 1000000001;\nint a[MAX];\nint n, sum = 0;\nstring s;\nint main() {\n  cin >> n;\n  cin >> s;\n  int len = s.length();\n  for (int i = 0; i < len; ++i) sum += (s[i] == '8');\n  int res = n / 11;\n  if (sum <= res)\n    cout << sum << endl;\n  else\n    cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  Read n\n  number =string\n  Read number\n  has_eight =integer with 0\n  for i = 0 to length of string number exclusive\n    if number[i] is 8, then increment has_eight\n  if n is less than 11 OR has_eight is 0\n    print 0 and a new line\n    \n  \n  if (n / 11) is greater than or equal to has_eight\n    print has_eight and a new line\n  else if (n / 11) is less than has_eight\n    print n / 11 and a new line\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string number;\n  cin >> number;\n  int has_eight = 0;\n  for (int i = 0; i < number.length(); i++)\n    if (number[i] == '8') has_eight++;\n  if (n < 11 || has_eight == 0) {\n    cout << 0 << endl;\n    return 0;\n  }\n  if ((n / 11) >= has_eight)\n    cout << has_eight << endl;\n  else if ((n / 11) < has_eight)\n    cout << n / 11 << endl;\n}\n"
    ],
    [
        "\n  declare integer variables n and count with count = 0\n  read n\n  create character c\n  for integer i = 0 to n exclusive\n    read c\n    if c = '8', increment count\n  \n  if n < 11 or count = 0\n    print 0\n    \n    \n  \n  print min of count and n / 11\n  \n  \n\n",
        "int main() {\n  int n, count = 0;\n  cin >> n;\n  char c;\n  for (int i = 0; i < n; i++) {\n    cin >> c;\n    if (c == '8') count++;\n  }\n  if (n < 11 || count == 0) {\n    cout << 0 << endl;\n    return 0;\n    ;\n  }\n  cout << min(count, n / 11) << endl;\n  return 0;\n  ;\n}\n"
    ],
    [
        "k, i, n, ans, m = integers\ns = string\n\n  read n, s\n  for i = 0 to n exclusive\n    if s[i] is 8, increment k\n  \n  ans = min of k and n / 11\n  print ans\n\n",
        "int k, i, n, ans, m;\nstring s;\nint main() {\n  cin >> n >> s;\n  for (i = 0; i < n; i++) {\n    if (s[i] == '8') k++;\n  }\n  ans = min(k, n / 11);\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  s = string\n  read s\n  eight, other = int with eight = 0 and other = 0\n  for i= 0 to n\n    if s[i] is '8'\n      increment eight\n    else\n      increment other\n  \n  if eight is 0\n    print 0\n  else\n    ans = int with ans = other / 10\n    if ans is greater than eight\n      print eight\n      \n    \n    if eight - ans is 0\n      print ans\n    else\n      print (((eight - ans) + (other mod 10)) / 11) + ans\n    \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  int eight = 0, other = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '8')\n      eight++;\n    else\n      other++;\n  }\n  if (eight == 0)\n    cout << 0 << endl;\n  else {\n    int ans = other / 10;\n    if (ans > eight) {\n      cout << eight << endl;\n      return 0;\n    }\n    if (eight - ans == 0)\n      cout << ans << endl;\n    else {\n      cout << (((eight - ans) + (other % 10)) / 11) + ans << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  create integers n, i and cnt where i and cnt = 0\n  create string s\n  read n and s\n  while s[i] != '\\0'\n    if s[i] = '8', increment cnt by one\n    increment i\n  \n  if n >= 11 and n / 11 <= cnt and cnt != 0\n    print n / 11 and \"\\n\"\n  else if n >= 11 && n / 11 >= cnt && cnt != 0\n    print cnt and \"\\n\"\n  else\n    print \"0\\n\"\n  \n\n",
        "int main() {\n  int n, i = 0, cnt = 0;\n  string s;\n  cin >> n >> s;\n  while (s[i] != '\\0') {\n    if (s[i] == '8') cnt++;\n    i++;\n  }\n  if (n >= 11 && n / 11 <= cnt && cnt != 0)\n    cout << n / 11 << \"\\n\";\n  else if (n >= 11 && n / 11 >= cnt && cnt != 0)\n    cout << cnt << \"\\n\";\n  else\n    cout << \"0\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  declare integers n and sum with sum = 0\n  read n\n  read s\n  for i from 0 to length of s exclusive\n    if s[i] = '8', increment sum\n  \n  if n / 11 is less than sum\n    print n / 11\n  else\n    print sum\n\n",
        "int main() {\n  string s;\n  int n, sum = 0;\n  cin >> n;\n  cin >> s;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == '8') sum++;\n  }\n  if (n / 11 < sum)\n    cout << (n / 11) << endl;\n  else\n    cout << sum << endl;\n}\n"
    ],
    [
        "\n  declare int variable n\n  declare string variable num\n  read n and num\n  declare int count = 0\n  for integer i = 0 to n exclusive\n    if num[i] is equal to '8', increment count by one\n  \n  print count if n / 11 > count and n / 11 otherwise\n\n",
        "int main() {\n  int n;\n  string num;\n  cin >> n >> num;\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    if (num[i] == '8') { count++; }\n  }\n  cout << (n / 11 > count ? count : n / 11) << endl;\n}\n"
    ],
    [
        "\n  n, i, no_of_8, groups =integers with no_of_8 = 0\n  c = character\n  Read n\n  for i = 1 to n exclusive\n    Read c\n    f c is 8, then increment no_of_8\n  \n  set groups to n / 11\n  if no_of_8 is greater than or equal to groups\n    print groups and a new line\n  else do the following\n    print no_of_8 and a new line\n  \n\n",
        "int main() {\n  int n, i, no_of_8 = 0, groups;\n  char c;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> c;\n    if (c == '8') no_of_8++;\n  }\n  groups = n / 11;\n  if (no_of_8 >= groups)\n    cout << groups << endl;\n  else\n    cout << no_of_8 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  declare integer ans = 0\n  create char array s with 101 element\n  read s\n  for integer i = 0 to n exclusive\n    if s[i] = '8', increment ans by 1\n  \n  if ans is equal to 0 or n / 11 is equal to 0\n    print 0\n  else if ans > n / 11\n    print n / 11\n  else\n    print ans\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int ans = 0;\n  char s[101];\n  cin >> s;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '8') ans++;\n  }\n  if (ans == 0 || n / 11 == 0)\n    cout << 0 << endl;\n  else if (ans > n / 11)\n    cout << n / 11 << endl;\n  else\n    cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int\n  read t\n  while decrement t\n    n and k = int\n    read n, k\n    set flag =0\n    for i=0 to n/k exclusive\n      for j=0 to k exclusive\n        print char(97+j)\n        assign j to flag\n      \n    \n    for i=0 to n - (n/k) * k exclusive, print char(97 + flag)\n    print a newline\n  \n\n",
        "int main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    int flag = 0;\n    for (int i = 0; i < (n / k); i++) {\n      for (int j = 0; j < k; j++) {\n        cout << char(97 + j);\n        flag = j;\n      }\n    }\n    for (int i = 0; i < n - (n / k) * k; i++) { cout << char(97 + flag); }\n    cout << endl;\n  }\n}\n"
    ],
    [
        "\n  create integer n\n  create string s\n  read n\n  read s\n  create string t with t = \"\"\n  for i = 0 to n exclusive\n    create integer k with k = (i * (i + 1)) / 2\n    if k is greater than or equal to n, break loop\n    set t to t + s[k]\n  \n  print t print newline\n  \n\n",
        "int main() {\n  int n;\n  string s;\n  cin >> n;\n  cin >> s;\n  string t = \"\";\n  for (int i = 0; i < n; i++) {\n    int k = (i * (i + 1)) / 2;\n    if (k >= n) { break; }\n    t = t + s[k];\n  }\n  cout << t << endl;\n  return 0;\n}\n"
    ],
    [
        "create long longs x, y and z, with z = 1\ndeclare string variables s and ss\n\n  read x and s\n  for integer i = 0 to x exclusive\n    increase ss by s[i]\n    increase i by z\n    increment z\n  \n  print ss and a new line\n  \n\n",
        "long long x, y, z = 1;\nstring s, ss;\nint main() {\n  cin >> x >> s;\n  for (int i = 0; i < x;) {\n    ss += s[i];\n    i += z;\n    z++;\n  }\n  cout << ss << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  v = vector of characters\n  s = vector of characters\n  count and size are integers, with count = 1\n  declare character variable called c\n  read size\n  for integer i = 0 to size exclusive\n    read c\n    push c into v\n  \n  let in and i be integers, with i = 0\n  while i is less than size\n    if i = 0\n      push v[i] into s\n      increase i by one\n    else\n      set value of in to count\n      for integer j = 0 to in exclusive\n      if i is less than size push v[i] into s\n      increase count\n    \n  \n  for integer i = 0 to length of s exclusive, print s[i]\n  print new line\n  \n\n",
        "int main() {\n  vector<char> v;\n  vector<char> s;\n  int count = 1, size;\n  char c;\n  cin >> size;\n  for (int i = 0; i < size; i++) {\n    cin >> c;\n    v.push_back(c);\n  }\n  int in, i = 0;\n  while (i < size) {\n    if (i == 0) {\n      s.push_back(v[i]);\n      i++;\n    } else {\n      in = count;\n      for (int j = 0; j < in; j++) { i++; }\n      if (i < size) s.push_back(v[i]);\n      count++;\n    }\n  }\n  for (int i = 0; i < s.size(); i++) { cout << s[i]; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable called n\n  read n\n  let a be string\n  read a\n  for integer i = 1 while i * (i + 1) / 2 < n + 1, print a[(i * (i + 1) / 2) - 1]\n  print new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string a;\n  cin >> a;\n  for (int i = 1; i * (i + 1) / 2 < n + 1; i++) { cout << a[(i * (i + 1) / 2) - 1]; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, sum, index\n  create character arrays s, a, with s size 55, a size 55\n  read n read s\n  set sum to index to 0\n  for i = 0\n    increment index by i\n    if index is greater than or equal to n, break loop\n    set a[increment sum] to s[index]\n  \n  set a[sum] to '\\0'\n  print a print newline\n  \n\n",
        "int main() {\n  int n, sum, index;\n  char s[55], a[55];\n  cin >> n >> s;\n  sum = index = 0;\n  for (int i = 0;; i++) {\n    index += i;\n    if (index >= n) break;\n    a[sum++] = s[index];\n  }\n  a[sum] = '\\0';\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "define function compare with arguments p1 and p2 of type pair of string and int\n  return true if p1.second > p2.second or false if it is not\n\n\n  n is integer\n  read n\n  declare string called s\n  read s\n  declare string variable called ans = \" \"\n  declare integer called h = 1\n  declare integer variable called c = 1\n  for integer i = 0 to length of s exclusive\n    if c = h\n      increase ans by s[i]\n      increment h\n      c = 1\n    else\n      increase c by one\n  \n  print ans and a new line\n  read n\n\n",
        "int compare(pair<string, int> p1, pair<string, int> p2) {\n  return (p1.second > p2.second);\n}\nint main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  string ans = \"\";\n  int h = 1;\n  int c = 1;\n  for (int i = 0; i < int(s.size()); i++) {\n    if (c == h) {\n      ans += s[i];\n      h++;\n      c = 1;\n    } else\n      c++;\n  }\n  cout << ans << endl;\n  cin >> n;\n}\n"
    ],
    [
        "s, d = strings\nn, i, l = long long\n\n  read n\n  read s\n  while n is not 0\n    increment l\n    n=n-l\n  \n  for i=1 to less or equal l\n    sd = sd + s[0]\n    Erases the portion of the string\n  \n  print sd and new line\n  \n\n",
        "string s, sd;\nlong long n, i, l;\nint main() {\n  cin >> n;\n  cin >> s;\n  while (n != 0) {\n    l++;\n    n -= l;\n  }\n  for (i = 1; i <= l; i++) {\n    sd = sd + s[0];\n    s.erase(0, i);\n  }\n  cout << sd << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string a\n  create integers n, num, l with num = 0, l = 2\n  read n read a\n  while true\n    if num is less than n - 1\n      print a[num]\n      increment num by l\n      increment l\n    else\n      print a[num] print newline\n      break loop\n    \n  \n  \n\n",
        "int main() {\n  string a;\n  int n, num = 0, l = 2;\n  cin >> n >> a;\n  while (true) {\n    if (num < n - 1) {\n      cout << a[num];\n      num += l;\n      l++;\n    } else {\n      cout << a[num] << endl;\n      break;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long n\n  read n\n  create string palabra\n  read palabra\n  create string answer with answer = \"\"\n  create long long aumento with aumento = 1\n  for i = 0 to n exclusive, setting i to i + aumento\n    add element substring of palabra from i to 1 to end of answer\n    increment aumento\n  \n  print answer print newline\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  string palabra;\n  cin >> palabra;\n  string answer = \"\";\n  long long aumento = 1;\n  for (long long i = 0; i < n; i = i + aumento) {\n    answer.append(palabra.substr(i, 1));\n    aumento++;\n  }\n  cout << answer << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, sum, index\n  create character arrays s, a, with s size 56, a size 56\n  read n read s\n  set sum to index to 0\n  for i = 0\n    increment index by i\n    if index is greater than or equal to n, break loop\n    set a[increment sum] to s[index]\n  \n  set a[sum] to '\\0'\n  print a print newline\n  \n\n",
        "int main() {\n  int n, sum, index;\n  char s[56], a[56];\n  cin >> n >> s;\n  sum = index = 0;\n  for (int i = 0;; i++) {\n    index += i;\n    if (index >= n) break;\n    a[sum++] = s[index];\n  }\n  a[sum] = '\\0';\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer called n\n  read n\n  create string s\n  read s\n  let i be integer = 2\n  ans is an empty string\n  ans = ans + s[0]\n  j is integer = 3\n  while i <= n - 1\n    ans = ans + s[i]\n    i = i + j\n    increment j\n  \n  print ans and a new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  int i = 2;\n  string ans = \"\";\n  ans = ans + s[0];\n  int j = 3;\n  while (i <= n - 1) {\n    ans = ans + s[i];\n    i = i + j;\n    j++;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variable a\n  declare integer variables n and s with s = 0\n  read n and a\n  for i = 1 to n inclusive\n    increase s by i\n    if s <= n print a[s - i]\n  \n  print new line\n  \n\n",
        "int main() {\n  string a;\n  int n, s = 0;\n  cin >> n >> a;\n  for (int i = 1; s <= n; i++) {\n    s += i;\n    if (s <= n) cout << a[s - i];\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n is integer\n  read n\n  let a be an array of characters of length n\n  for i = 0 to n exclusive put input to a[i]\n  let incr be integer = 1\n  for integer i = 0 to n exclusive incrementing by incr\n    print a[i]\n    increase incr\n  \n  print new line\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  char a[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int incr = 1;\n  for (int i = 0; i < n; i = i + incr) {\n    cout << a[i];\n    incr++;\n  }\n  cout << endl;\n}\n"
    ],
    [
        "\n  create integer n\n  let s be an array of characters of length 100\n  read n and s\n  t is integer = 1\n  for i = 0 to n exclusive\n    print s[i]\n    increase t by one\n  \n  print new line\n  \n\n",
        "int main() {\n  int n;\n  char s[100];\n  cin >> n >> s;\n  int t = 1;\n  for (int i = 0; i < n; i += t) {\n    cout << s[i];\n    t++;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n and it; it = 1\n  create string s\n  read n and s\n  for i = 0 to n exclusive with step of it\n    increase it by one\n    print s[i]\n  \n  print new line\n\n",
        "int main() {\n  int n, it = 1;\n  string s;\n  cin >> n >> s;\n  for (int i = 0; i < n; i += it) {\n    it++;\n    cout << s[i];\n  }\n  cout << endl;\n}\n"
    ],
    [
        "a and b are char arrays with size 60\n\n  let n be integer\n  read n in a loop\n    call memset(b, 0 and sizeof(b))\n    read n elements into a starting from index 1\n    k and d are integers = 0\n    for i = 1 to n inclusive, incrementing by k\n      set b[d] to a[i]\n      increment d\n      increase k\n    \n    print b and a new line\n  \n\n",
        "char a[60], b[60];\nint main() {\n  int n;\n  while (cin >> n) {\n    memset(b, 0, sizeof(b));\n    for (int i = 1; i <= n; i++) { cin >> a[i]; }\n    int k = 0, d = 0;\n    for (int i = 1; i <= n; i = i + k) {\n      b[d] = a[i];\n      d++;\n      k++;\n    }\n    cout << b << endl;\n  }\n}\n"
    ],
    [
        "\n  declare integer variable called n\n  read n\n  let a be an array of characters of size 60\n  read a\n  j is integer = 1\n  for i = 0 to n exclusive, incrementing i by j\n    print a[i]\n    increase j by one\n  \n  print new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  char a[60];\n  cin >> a;\n  int j = 1;\n  for (int i = 0; i < n; i = i + j) {\n    cout << a[i];\n    j++;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  set s to character array of length 60\n  n, ans = integers with ans set to 0\n  read n\n  read s\n  for i to n inclusive incremented by ans\n    increment ans by 1\n    print s[i]\n  \n  print new line\n  \n\n",
        "int main() {\n  char s[60];\n  int n, ans = 0;\n  cin >> n;\n  cin >> s;\n  for (int i = 0; i < n; i += ans) {\n    ans += 1;\n    cout << s[i];\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create string s\n  read s\n  create string ans\n  create integers cnt, sum with cnt = 0, sum = 0\n  for i = 0 to n exclusive, incrementing i by cnt\n    add element s[i] to end of ans\n    increment cnt\n  \n  print ans print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  string ans;\n  int cnt = 0, sum = 0;\n  for (int i = 0; i < n; i += cnt) {\n    ans.push_back(s[i]);\n    cnt++;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, cnt, i with cnt = 1, i = 0\n  create string s\n  read n read s\n  while true\n    print s[i]\n    increment i by cnt\n    increment cnt\n    if i + cnt is greater than n, break loop\n  \n  print newline\n  \n\n",
        "int main() {\n  int n, cnt = 1, i = 0;\n  string s;\n  cin >> n >> s;\n  while (true) {\n    cout << s[i];\n    i += cnt;\n    cnt++;\n    if (i + cnt > n) { break; }\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variables l, r, n and k\n  read k\n  for i = 0 to k exclusive\n    read l and r\n    print l, ' ' and r - (r modulo l)\n  \n\n",
        "int main() {\n  int l, r, n, k;\n  cin >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> l >> r;\n    cout << l << ' ' << r - (r % l) << endl;\n  }\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  l, r, R = long long arrays of size 1000 each\n  for i = 0 to n\n    read l[i] then r[i]\n    set R[i] to r[i] / l[i]\n  \n  for i = 0 to n print l[i] then \" \" then l[i] * R[i]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long l[1000], r[1000], R[1000];\n  for (int i = 0; i < n; i++) {\n    cin >> l[i] >> r[i];\n    R[i] = r[i] / l[i];\n  }\n  for (int i = 0; i < n; i++) cout << l[i] << \" \" << l[i] * R[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers t, n, l\n  read t\n  while decrement t is true\n    read n read l\n    print n print \" \" print ( l / n ) * n print newline\n  \n  \n\n",
        "int main() {\n  int t, n, l;\n  cin >> t;\n  while (t--) {\n    cin >> n >> l;\n    cout << n << \" \" << (l / n) * n << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers T, l, r\n  read T\n  for i = 1 to T inclusive\n    read l read r\n    print l print \" \" print l * ( r / l ) print newline\n  \n\n",
        "int main() {\n  int T, l, r;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cin >> l >> r;\n    cout << l << \" \" << l * (r / l) << endl;\n  }\n}\n"
    ],
    [
        "\n  create integer numberOfInputs\n  read numberOfInputs\n  create long longs input1 and input2\n  while numberOfInputs > 0, decrement it and keep looping\n    read input1 and input2\n    create long long div = input2 / input1\n    create long long answer = input1 * div\n    print input1, \" \" and answer\n  \n  \n\n",
        "int main() {\n  int numberOfInputs;\n  cin >> numberOfInputs;\n  long long input1, input2;\n  while (numberOfInputs--) {\n    cin >> input1 >> input2;\n    long long div = input2 / input1;\n    long long answer = input1 * div;\n    cout << input1 << \" \" << answer << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integers T, l ,r\n\n  create integers i, j\n  read T\n  for i = 1 to T inclusive\n    read l read r\n    print l print ' ' print ( r / l ) * l print '\\n'\n  \n  \n\n",
        "int T, l, r;\nint main() {\n  int i, j;\n  cin >> T;\n  for (i = 1; i <= T; i++) {\n    cin >> l >> r;\n    cout << l << ' ' << (r / l) * l << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  t = int\n  read t\n  loop t times\n    l, r = long int\n    read l then r\n    if l equals 1\n      print l and r\n    else\n      print l and \" \"\n      mod = long int with mod = r modulo l\n      print r - mod\n    \n  \n  \n\n",
        "int main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long int l, r;\n    cin >> l >> r;\n    if (l == 1)\n      cout << l << \" \" << r << endl;\n    else {\n      cout << l << \" \";\n      long int mod = (r % l);\n      cout << (r - mod) << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  t=int\n  read t\n  l,r,d=int\n  while decremented t not equal 0\n    read l,r\n    if r modulo l is zero\n      print l, space, r\n    else\n      d=r modulo l\n      d=r-d\n      print l, space, d\n    \n  \n\n",
        "int main() {\n  int t;\n  cin >> t;\n  int l, r, d;\n  while (t--) {\n    cin >> l >> r;\n    if (r % l == 0) {\n      cout << l << \" \" << r << endl;\n    } else {\n      d = r % l;\n      d = r - d;\n      cout << l << \" \" << d << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  create long long n and m\n  read n\n  create long long l and r\n  while decrement n\n    read l and r\n    if r mod l = 0\n      print l, \" \", r\n    else\n      print l, \" \", r - (r mod l)\n    \n  \n\n",
        "int main() {\n  long long n, m;\n  cin >> n;\n  long long l, r;\n  while (n--) {\n    cin >> l >> r;\n    if (r % l == 0) {\n      cout << l << \" \" << r << endl;\n    } else {\n      cout << l << \" \" << r - (r % l) << endl;\n    }\n  }\n}\n"
    ],
    [
        "x, y = long long\n\n  T = int\n  read T\n  loop T times\n    read x then y\n    r = long long with r = y mod x\n    print x then \" \" then y - r\n  \n  \n\n",
        "long long x, y;\nint main() {\n  int T;\n  cin >> T;\n  while (T--) {\n    cin >> x >> y;\n    long long r = y % x;\n    cout << x << \" \" << y - r << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, i and arrays p and s of length 100100\n  read n\n  for i=2 to n inclusive, read p[i]\n  for i=1 to n inclusive, read s[i]\n  for i=2 to n inclusive\n    if s[i] = -1, continue the loop\n    s[p[i]] = -1\n      set s[p[i]] = s[i]\n    else\n      s[p[i]] = min of s[p[i]] and s[i]\n  \n  for i=2 to n inclusive\n    if s[i] equal to -1, continue the loop\n    if s[p[i]] greater than s[i]\n      print -1\n      \n    \n  \n  set ans to s[1]\n  for i=2 to n inclusive\n    if s[i] equal to -1, continue the loop\n    assign ans + s[i] - s[p[i]] to ans\n  \n  print ans\n  \n\n",
        "int main() {\n  int n, p[100100], s[100100], i;\n  cin >> n;\n  for (i = 2; i <= n; i++) cin >> p[i];\n  for (i = 1; i <= n; i++) cin >> s[i];\n  for (i = 2; i <= n; i++) {\n    if (s[i] == -1) continue;\n    if (s[p[i]] == -1)\n      s[p[i]] = s[i];\n    else\n      s[p[i]] = min(s[p[i]], s[i]);\n  }\n  for (i = 2; i <= n; i++) {\n    if (s[i] == -1) continue;\n    if (s[p[i]] > s[i]) {\n      cout << -1 << endl;\n      return 0;\n    }\n  }\n  long long ans = s[1];\n  for (i = 2; i <= n; i++) {\n    if (s[i] == -1) continue;\n    ans += (s[i] - s[p[i]]);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create long long integer arrays s, ms, p, v with s size n, ms size n, p size n, v size n\n  set p[0] to 0\n  for i = 1 to n exclusive, decrementing p[increment i], read p[i]\n  for i = 0 to n exclusive\n    read s[i]\n    set ms[i] to s[i]\n  \n  for i = n - 1 to 0 exclusive, decrementing i\n    if ms[i] is less than 0, break current loop iteration\n    if s[p[i]] is less than 0 and ( ms[p[i]] is less than 0 or ms[p[i]] is greater than ms[i]), set ms[p[i]] to ms[i]\n  \n  if ms[0] is less than 0, set ms[0] to 0\n  create long long integer sum with sum = ms[0]\n  for i = 1 to n exclusive\n    if ms[i] is less than 0\n      set ms[i] to mms[p[i]]\n    else if ms[i] is less than ms[p[i]]\n      print -1 print newline\n      \n    else\n      increment sum by ms[i] - ms[p[i]]\n  \n  print sum print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long int s[n], ms[n], p[n], v[n];\n  p[0] = 0;\n  for (int i = 1; i < n; --p[i++]) cin >> p[i];\n  for (int i = 0; i < n; ++i) {\n    cin >> s[i];\n    ms[i] = s[i];\n  }\n  for (int i = n - 1; i > 0; --i) {\n    if (ms[i] < 0) continue;\n    if (s[p[i]] < 0 && (ms[p[i]] < 0 || ms[p[i]] > ms[i])) ms[p[i]] = ms[i];\n  }\n  if (ms[0] < 0) ms[0] = 0;\n  long long int sum = ms[0];\n  for (int i = 1; i < n; ++i) {\n    if (ms[i] < 0)\n      ms[i] = ms[p[i]];\n    else if (ms[i] < ms[p[i]]) {\n      cout << -1 << endl;\n      return 0;\n    } else\n      sum += ms[i] - ms[p[i]];\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "let N be a constant integer with value N is equal to 100001\ng = array of vector integers of size N\nlet n, val be integers with val = array of integers of length N\nsum = array of long integers of length N\nlet depth first search of int u and int p be a boolean type\n  if length of g[u] is equal to 1 and p is not equal to -1\n    if sum[u] is equal to -1\n      set val[u] to 0\n      assign the value sum[p] to sum[u]\n    else do the following\n      assign the value of sum[u] - sum[p] to val[u]\n    return the value as true\n  \n  if sum[u] is equal to -1\n    let mn be a long integer with mn = 1e9\n    for i =0 to length of g[u] exclusive\n      let v be a integer with v = g[u][i]\n      if v is equal to p , proceed to next\n      let diff be a long integer with diff = sum[v] - sum[p]\n      if diff is less than 0, return false\n      mn = minimum of mn and diff\n    \n    the uth element of val = mn\n    sum[u] is equal to sum[p] + val[u]\n  else if ( p is not equal to -1 )\n    the value of sum[u] - sum[p] is assigned to val[u]\n  let check is a boolean type with check = 1\n  for i = 0 to length of g[u] exclusive]\n    let v be a integer with v = g[u][i]\n    if v is equal to p , proceed to next\n    check = check and depth first search of v , u\n  \n  return the value of check\n\n\n  read n\n  for i = 0 to n - 1 exclusive\n    let p be a integer\n    read p\n    decrease p value by 1\n    do g[p].push_back(i + 1)\n    do g[i + 1].push_back(p)\n  \n  for i = 0 to n exclusive , read sum[i]\n  let val[0] = sum[0]\n  if not dfs of 0 and -1\n    print -1 and newline\n  else do the following\n    let long integer s = 0\n    for i = 0 to n exclusive , increase s by val[i]\n    print s and newline\n  \n  \n\n",
        "const int N = 100001;\nvector<int> g[N];\nint n, val[N];\nlong long sum[N];\nbool dfs(int u, int p) {\n  if (g[u].size() == 1 && p != -1) {\n    if (sum[u] == -1) {\n      val[u] = 0;\n      sum[u] = sum[p];\n    } else\n      val[u] = sum[u] - sum[p];\n    return true;\n  }\n  if (sum[u] == -1) {\n    long long mn = 1e9;\n    for (int i = 0; i < g[u].size(); ++i) {\n      int v = g[u][i];\n      if (v == p) continue;\n      long long diff = sum[v] - sum[p];\n      if (diff < 0) return false;\n      mn = min(mn, diff);\n    }\n    val[u] = mn;\n    sum[u] = sum[p] + val[u];\n  } else if (p != -1)\n    val[u] = sum[u] - sum[p];\n  bool check = 1;\n  for (int i = 0; i < g[u].size(); ++i) {\n    int v = g[u][i];\n    if (v == p) continue;\n    check = check && dfs(v, u);\n  }\n  return check;\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < n - 1; ++i) {\n    int p;\n    cin >> p;\n    --p;\n    g[p].push_back(i + 1);\n    g[i + 1].push_back(p);\n  }\n  for (int i = 0; i < n; ++i) cin >> sum[i];\n  val[0] = sum[0];\n  if (!dfs(0, -1))\n    cout << -1 << endl;\n  else {\n    long long s = 0;\n    for (int i = 0; i < n; ++i) s += val[i];\n    cout << s << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create long long p with size 200000\ncreate long long s with size 200000\n\n  create long long num with num = 0\n  create long longs n, i, j\n  read n\n  for i = 2 to n inclusive, read p[i]\n  for i = 1 to n inclusive\n    read s[i]\n    if s[i] is -1, set s[i] to 1e10\n  \n  for i = 1 to n inclusive, set s[p[i]] to minimum of s[p[i]] and s[i]\n  for i = 1 to n inclusive\n    if s[p[i]] is greater than s[i]\n      print -1 print newline\n      \n    \n    if s[i] is 1e10, set s[i] to s[p[i]]\n    increment num by s[i] - s[p[i]]\n  \n  print num print newline\n  \n\n",
        "long long p[200000];\nlong long s[200000];\nint main() {\n  long long num = 0;\n  long long n, i, j;\n  cin >> n;\n  for (i = 2; i <= n; i++) { cin >> p[i]; }\n  for (i = 1; i <= n; i++) {\n    cin >> s[i];\n    if (s[i] == -1) s[i] = 1e10;\n  }\n  for (i = 1; i <= n; i++) s[p[i]] = min(s[p[i]], s[i]);\n  for (i = 1; i <= n; i++) {\n    if (s[p[i]] > s[i]) {\n      cout << -1 << endl;\n      return 0;\n    }\n    if (s[i] == 1e10) s[i] = s[p[i]];\n    num += s[i] - s[p[i]];\n  }\n  cout << num << endl;\n  return 0;\n}\n"
    ],
    [
        "declare const int maxn = 1e5 + 5\ndeclare const long long inf = 0x3f3f3f3f\ndeclare an array of integer vectors G with size maxn\ncreate long long arrays sum and a with maxn elements\ncreate integer array minson with maxn elements\ndeclare int variable n\ndefine function getson\n  declare int minkey = inf\n  for i = 0 to length of G[v] exclusive\n    create int to = G[v][i]\n    if minkey is greater than getson(to)\n      set minkey to sum[to]\n      change minson[v] to to\n    \n  \n  return sum[v]\n\nvoid function dfs with int arguments v and deep and long long argument fasum\n  if deep & 1 is not 0\n    assign sum[v] - fasum to a[v]\n  else if length of G[v] is not 0\n    change a[v] to 0\n    return\n  else\n    set a[v] to sum[minson[v]] - fasum\n  for i = 0 to length of G[v] exclusive, call dfs(G[v][i], fasum + a[v], deep + 1)\n\n\n  read n and loop further\n    create int pa\n    for i = 2 to n inclusive\n      read pa\n      push i to G[pa]\n    \n    for integer i = 1 to n inclusive, read sum[i]\n    call function getson with argument 1\n    call function dfs with arguments 1, 0 and 1\n    create long long maxsum = 0\n    create integer flag = 0\n    for integer i = 1 to n inclusive\n      if a[i] >= 0\n        add a[i] to maxsum\n      else\n        set flag to 1\n    \n    if flag is 0\n      print maxsum\n    else\n      print -1\n    for i = 0 to n inclusive, clear G[i]\n  \n  \n\n",
        "const int maxn = 1e5 + 5;\nconst long long inf = 0x3f3f3f3f;\nvector<int> G[maxn];\nlong long sum[maxn], a[maxn];\nint minson[maxn];\nint n;\nint getson(int v) {\n  int minkey = inf;\n  for (int i = 0; i < G[v].size(); ++i) {\n    int to = G[v][i];\n    if (minkey > getson(to)) {\n      minkey = sum[to];\n      minson[v] = to;\n    }\n  }\n  return sum[v];\n}\nvoid dfs(int v, long long fasum, int deep) {\n  if (deep & 1)\n    a[v] = sum[v] - fasum;\n  else if (!G[v].size()) {\n    a[v] = 0;\n    return;\n  } else\n    a[v] = sum[minson[v]] - fasum;\n  for (int i = 0; i < G[v].size(); ++i) dfs(G[v][i], fasum + a[v], deep + 1);\n}\nint main() {\n  while (cin >> n) {\n    int pa;\n    for (int i = 2; i <= n; ++i) {\n      cin >> pa;\n      G[pa].push_back(i);\n    }\n    for (int i = 1; i <= n; ++i) cin >> sum[i];\n    getson(1);\n    dfs(1, 0, 1);\n    long long maxsum = 0;\n    int flag = 0;\n    for (int i = 1; i <= n; ++i) {\n      if (a[i] >= 0)\n        maxsum += a[i];\n      else\n        flag = 1;\n    }\n    if (!flag)\n      cout << maxsum << endl;\n    else\n      cout << -1 << endl;\n    for (int i = 0; i <= n; ++i) G[i].clear();\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create string x\n  read x\n  create integers v and h = 0\n  for i = 0 to length of x exclusive\n    if x[i] is '0'\n      if v is 0\n        print 1, ' ', 1 and a new line, then increment v\n      else\n        print 3, ' ', 1 and a new line, then set v to 0\n    else\n      if h is 0\n        print 4, ' ', 3 and a new line, then increment h\n      else\n        print 4, ' ', 1 and a new line, then set h to 0\n    \n  \n  \n\n",
        "int main() {\n  string x;\n  cin >> x;\n  int v = 0, h = 0;\n  for (int i = 0; i < x.size(); i++) {\n    if (x[i] == '0') {\n      if (!v)\n        cout << 1 << ' ' << 1 << endl, v++;\n      else\n        cout << 3 << ' ' << 1 << endl, v = 0;\n    } else {\n      if (!h)\n        cout << 4 << ' ' << 3 << endl, h++;\n      else\n        cout << 4 << ' ' << 1 << endl, h = 0;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "declare boolean variables l and r\nlet s be string\n\n  read s\n  for i = 0 to length of s exclusive\n    if s[i] = '0' && l is true\n      print \"3 1\" and a new line\n      set value of l to false\n    else if s[i] = '0'\n      print \"1 1\" and a new line\n      l = true\n    else if s[i] = '1' && r is true\n      print \"4 1\" and a new line\n      assign value of false to r\n    else\n      print \"4 3\" and a new line\n      r = true\n    \n  \n  \n\n",
        "bool l, r;\nstring s;\nint main() {\n  cin >> s;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0' && l) {\n      cout << \"3 1\" << endl;\n      l = false;\n    } else if (s[i] == '0') {\n      cout << \"1 1\" << endl;\n      l = true;\n    } else if (s[i] == '1' && r) {\n      cout << \"4 1\" << endl;\n      r = false;\n    } else {\n      cout << \"4 3\" << endl;\n      r = true;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAXN with value 100000 + 5\n\n  create string s\n  read s\n  let cnt1 and cnt2 be integers = 0\n  for integer i = 0 to length of s exclusive\n    if s[i] = '0'\n      if cnt1 is even\n        print 1, \" \" and 1\n      else\n        print 3, \" \" and 1\n      increment cnt1\n    else\n      if cnt2 is even\n        print 4, \" \" and 3\n      else\n        print 4, \" \" and 1\n      increase cnt2\n    \n    print \"\\n\"\n  \n  \n\n",
        "const int MAXN = 100000 + 5;\nint main() {\n  string s;\n  cin >> s;\n  int cnt1 = 0, cnt2 = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0') {\n      if (cnt1 % 2 == 0)\n        cout << 1 << \" \" << 1;\n      else\n        cout << 3 << \" \" << 1;\n      cnt1++;\n    } else {\n      if (cnt2 % 2 == 0)\n        cout << 4 << \" \" << 3;\n      else\n        cout << 4 << \" \" << 1;\n      cnt2++;\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  s is string\n  read s\n  l1 is integer = length of s\n  create booleans vertikal and horizontal = 0\n  for integer i = 0 to l1 exclusive\n    if s[i] = '0'\n      if vertikal is not 0\n        assign value of 0 to vertikal\n        print \"3 1\\n\"\n      else\n        assign value of 1 to vertikal\n        print \"1 1\\n\"\n      \n    else\n      if horizontal is not 0\n        assign value of 0 to horizontal\n        print \"4 1\\n\"\n      else\n        set value of horizontal to 1\n        print \"4 3\\n\"\n      \n    \n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int l1 = s.length();\n  bool vertikal = 0, horizontal = 0;\n  for (int i = 0; i < l1; i++) {\n    if (s[i] == '0') {\n      if (vertikal) {\n        vertikal = 0;\n        cout << \"3 1\\n\";\n      } else {\n        vertikal = 1;\n        cout << \"1 1\\n\";\n      }\n    } else {\n      if (horizontal) {\n        horizontal = 0;\n        cout << \"4 1\\n\";\n      } else {\n        horizontal = 1;\n        cout << \"4 3\\n\";\n      }\n    }\n  }\n}\n"
    ],
    [
        "\n  create string s\n  read s\n  create integers o, z, with o = 0, z = 0\n  for i = 0 to size of s exclusive\n    if s[i] is '0'\n      increment o\n      if o % 2\n        print 1 print \" \" print 1 print newline\n      else\n        print 3 print \" \" print 1 print newline\n    else if s[i] is '1'\n      increment z\n      if z % 2\n        print 4 print \" \" print 3 print newline\n      else\n        print 4 print \" \" print 1 print newline\n    \n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int o = 0, z = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0') {\n      o++;\n      if (o % 2)\n        cout << 1 << \" \" << 1 << endl;\n      else\n        cout << 3 << \" \" << 1 << endl;\n    } else if (s[i] == '1') {\n      z++;\n      if (z % 2)\n        cout << 4 << \" \" << 3 << endl;\n      else\n        cout << 4 << \" \" << 1 << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  create string str\n  read str\n  create integer len with len = length of str\n  create integers a, c, with a = 0, c = 0\n  for i = 0 to len exclusive\n    if str[i] is '0'\n      if a is 0\n        set a to 1\n        print \"1 1\"\n      else\n        set a to 0\n        print \"3 1\"\n      \n    \n    if str[i] is '1'\n      if c is 0\n        set c to 1\n        print \"4 3\"\n      else\n        set c to 0\n        print \"4 1\"\n      \n    \n  \n  \n\n",
        "int main() {\n  string str;\n  cin >> str;\n  int len = str.length();\n  int a = 0, c = 0;\n  for (int i = 0; i < len; i++) {\n    if (str[i] == '0') {\n      if (a == 0) {\n        a = 1;\n        puts(\"1 1\");\n      } else {\n        a = 0;\n        puts(\"3 1\");\n      }\n    }\n    if (str[i] == '1') {\n      if (c == 0) {\n        c = 1;\n        puts(\"4 3\");\n      } else {\n        c = 0;\n        puts(\"4 1\");\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "assign value 200005 to constant integer N\nassign value 998244353 to constant integer MOD\ndefine function solve\n  create string s\n  create boolean v = false\n  create boolean g = false\n  read s\n  declare integer n = length of s\n  for i = 0 to length of s exclusive\n    if s[i] = '0'\n      if v is true\n        print 3, \" \", 1 and a new line\n        set v to false\n      else\n        print \"1 1\" and a new line\n        set v to true\n      \n    else\n      if g is true\n        print 4, \" \", 1 and a new line\n        set g to false\n      else\n        print 4, \" \", 3 and a new line\n        set g to true\n      \n    \n  \n\n\n  declare integer variable t = 1\n  while t is not 0, decrement it and call solve\n\n",
        "const int N = 200005;\nconst long long MOD = 998244353;\nvoid solve() {\n  string s;\n  bool v = false;\n  bool g = false;\n  cin >> s;\n  int n = s.length();\n  for (int i = 0; i < (s.length()); i++) {\n    if (s[i] == '0') {\n      if (v) {\n        cout << 3 << \" \" << 1 << endl;\n        v = false;\n      } else {\n        cout << \"1 1\" << endl;\n        v = true;\n      }\n    } else {\n      if (g) {\n        cout << 4 << \" \" << 1 << endl;\n        g = false;\n      } else {\n        cout << 4 << \" \" << 3 << endl;\n        g = true;\n      }\n    }\n  }\n}\nint main() {\n  int t = 1;\n  while (t--) { solve(); }\n}\n"
    ],
    [
        "declare expo_fast with long long integers a, b as arguments, returning long long integer\n  set a to a\n  create long long integer result with result = 1\n  while b is true\n    if b bitwise and 1, set result to result * a\n    set b to b bitshift right 1\n    set a to a * a\n  \n  return result from function\n\ndeclare take_in with long long integer vector pointer arr as argument returning void\n  for i = 0 to result of run size from arr exclusive, read value of arr[i]\n\ndeclare disp_arr with long long integer vector pointer as argument, returning void\n  for i = 0 to result of run size from arr exclusive, print value of arr[i] print \" \"\n\ndeclare func with string s, integer n as arguments, returning string\n  create string q\n  resize q to size n\n  set q[0] to s[0]\n  set q[1] to s[1]\n  set q[2] to s[2]\n  for i = 3 to n exclusive\n    if i % 3 is 0\n      set q[i] to q[0]\n    else if i % 3 is 1\n      set q[i] to q[1]\n    else\n      set q[i] to q[2]\n  \n  return q from function\n\n\n  create string s\n  read s\n  create character stack stk\n  create long long integers ans with ans = 0\n  create booleans cond1, cond2 with cond1 = true, cond2 = true\n  for i = 0 to length of s exclusive\n    if s[i] is '0'\n      if cond1 is true\n        set cond1 to false\n        print \"1 1\\n\"\n      else\n        set cond1 to true\n        print \"3 1\\n\"\n      \n    else\n      if cond2 is true\n        set cond2 to false\n        print \"4 3\\n\"\n      else\n        set cond2 to true\n        print \"4 1\\n\"\n      \n    \n  \n\n",
        "long long int expo_fast(long long int a, long long int b) {\n  a = a;\n  long long int result = 1;\n  while (b) {\n    if (b & 1) result = (result * a);\n    b >>= 1;\n    a = (a * a);\n  }\n  return (result);\n}\nvoid take_in(vector<long long int> *arr) {\n  for (int i = 0; i < arr->size(); i++) cin >> (*(arr))[i];\n}\nvoid disp_arr(vector<long long int> *arr) {\n  for (int i = 0; i < arr->size(); i++) cout << (*(arr))[i] << \" \";\n}\nstring func(string s, int n) {\n  string q;\n  q.resize(n);\n  q[0] = s[0];\n  q[1] = s[1];\n  q[2] = s[2];\n  for (int i = 3; i < n; i++) {\n    if (i % 3 == 0)\n      q[i] = q[0];\n    else if (i % 3 == 1)\n      q[i] = q[1];\n    else\n      q[i] = q[2];\n  }\n  return q;\n}\nint main() {\n  string s;\n  cin >> s;\n  stack<char> stk;\n  long long int ans = 0;\n  bool cond1 = true, cond2 = true;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == '0') {\n      if (cond1) {\n        cond1 = false;\n        cout << \"1 1\\n\";\n      } else {\n        cond1 = true;\n        cout << \"3 1\\n\";\n      }\n    } else {\n      if (cond2) {\n        cond2 = false;\n        cout << \"4 3\\n\";\n      } else {\n        cond2 = true;\n        cout << \"4 1\\n\";\n      }\n    }\n  }\n}\n"
    ],
    [
        "create string s\ncreate integer array r with size 1001\ncreate integer array c with size 1001\n\n  read s\n  create integer n with n = length of s\n  create boolean slot_0 with slot_0 = false\n  create boolean slot_1 with slot_1 = false\n  for i = 0 to n exclusive\n    if s[i] is '0'\n      if not slot_0\n        print \"1 1\\n\"\n        set slot_0 to true\n      else\n        print \"3 1\\n\"\n        set slot_0 to false\n      \n    else\n      if not slot_1\n        print \"4 3\\n\"\n        set slot_1 to true\n      else\n        print \"4 1\\n\"\n        set slot_1 to false\n      \n    \n  \n\n",
        "string s;\nint r[1001];\nint c[1001];\nint main() {\n  cin >> s;\n  int n = s.length();\n  bool slot_0 = false;\n  bool slot_1 = false;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '0') {\n      if (!slot_0) {\n        cout << \"1 1\\n\";\n        slot_0 = true;\n      } else {\n        cout << \"3 1\\n\";\n        slot_0 = false;\n      }\n    } else {\n      if (!slot_1) {\n        cout << \"4 3\\n\";\n        slot_1 = true;\n      } else {\n        cout << \"4 1\\n\";\n        slot_1 = false;\n      }\n    }\n  }\n}\n"
    ],
    [
        "create llin with no arguments, returning long long integer\n  create long long integer tmp\n  read tmp\n  return tmp from function\n\ndeclare solve with no arguments, returning void\n  create long long integer nsticks with nsticks = result of run llin\n  create long long integer array lengths with size nsticks\n  create long long integer min with min = 101\n  create long long integer max with max = 0\n  for i = 0 to nsticks exclusive\n    create long long integer tmp with tmp = result of run llin\n    set lengths[i] to tmp\n    if tmp is greater than max, set max to tmp\n    if tmp is less than min, set min to tmp\n  \n  create long long integer min_t with min_t to min\n  create long long integer min_cost with min_cost = 1000005\n  for t = min to max + 1 exclusive\n    create long long integer tmp_cost with tmp_cost = 0\n    for i = 0 to nsticks exclusive\n      create long long integer tmp_length with tmp_length = lengths[i]\n      if tmp_length is greater than t + 1\n        increment tmp_cost by tmp_length - ( t + 1 )\n      else if tmp_length is less than t - 1\n        increment tmp_cost by t - 1 - tmp_length\n    \n    if min_cost is greater than tmp_cost\n      set min_t to t\n      set min_cost to tmp_cost\n    \n  \n  print min_t print \" \" print min_cost print '\\n'\n  return from function\n\n\n  create integer TESTS with TESTS = 1\n  while decrement TESTS is true, run solve\n  \n\n",
        "long long int llin() {\n  long long int tmp;\n  cin >> tmp;\n  return tmp;\n}\nvoid solve() {\n  long long int nsticks = llin();\n  long long int lengths[nsticks];\n  long long int min = 101;\n  long long int max = 0;\n  for (long long int i = 0; i < nsticks; i++) {\n    long long int tmp = llin();\n    lengths[i] = tmp;\n    if (tmp > max) max = tmp;\n    if (tmp < min) min = tmp;\n  }\n  long long int min_t = min;\n  long long int min_cost = 1000005;\n  for (long long int t = min; t < max + 1; t++) {\n    long long int tmp_cost = 0;\n    for (long long int i = 0; i < nsticks; i++) {\n      long long int tmp_length = lengths[i];\n      if (tmp_length > t + 1)\n        tmp_cost += tmp_length - (t + 1);\n      else if (tmp_length < t - 1)\n        tmp_cost += t - 1 - (tmp_length);\n    }\n    if (min_cost > tmp_cost) {\n      min_t = t;\n      min_cost = tmp_cost;\n    }\n  }\n  cout << min_t << \" \" << min_cost << '\\n';\n  return;\n}\nint main() {\n  int TESTS = 1;\n  while (TESTS--) { solve(); }\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integer a, b, i, cnt, max, set cnt = 0, max = 0\n  for i = 0 to n execute\n    print a, b\n    set cnt = cnt + b - a\n    if cnt>max set max = cnt\n  \n  print max\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a, b, i, cnt = 0, max = 0;\n  for (i = 0; i < n; i++) {\n    cin >> a >> b;\n    cnt = cnt + b - a;\n    if (cnt > max) max = cnt;\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers x, y, c, m with c = 0, m = 0\n  create integer n\n  read n\n  while decrement n is true\n    read x read y\n    decrement c by x\n    increment c by y\n    if c is greater than m, set m to c\n  \n  print m print newline\n  \n\n",
        "int main() {\n  int x, y, c = 0, m = 0;\n  int n;\n  cin >> n;\n  while (n--) {\n    cin >> x >> y;\n    c -= x;\n    c += y;\n    if (c > m) { m = c; }\n  }\n  cout << m << endl;\n  return 0;\n}\n"
    ],
    [
        "create string str\nlet n, a, b, capacity, total be integers, set capacity = 0, total=0\n\n  read n\n  for i=0 to n exclusive\n    read a and b\n    total = total - a\n    set total to total + b\n    assign max of capacity and total to capacity\n  \n  print capacity\n  \n\n",
        "string str;\nint n, a, b, capacity = 0, total = 0;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> a >> b;\n    total -= a;\n    total += b;\n    capacity = max(capacity, total);\n  }\n  cout << capacity << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integers on, off, count, c with count = 0, c = 0\n  while decrement n is true\n    read off read on\n    increment c by on - off\n    if c is greater than count, set count to c\n  \n  print count print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int on, off, count = 0, c = 0;\n  while (n--) {\n    cin >> off >> on;\n    c += on - off;\n    if (c > count) count = c;\n  }\n  cout << count << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  integers = n\n  read n\n  integers = max,a,b,c\n  read a,b\n  set c to a + b\n  set max to c\n  for i = 1 to less than n do the following\n    read a,b\n    subtract a from c\n    c equals c plus b\n    if c is greater than max then do the following max = c\n  \n  output max\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int max, a, b, c;\n  cin >> a >> b;\n  c = a + b;\n  max = c;\n  for (int i = 1; i < n; i++) {\n    cin >> a >> b;\n    c -= a;\n    c += b;\n    if (c > max) max = c;\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, i, j, k, max, cap = int\n  set max to -1\n  set cap to 0\n  read n\n  for i = 0 to n\n    rad j then k\n    set cap to cap - j + k\n    if cap is greater than max set max to cap\n  \n  print max\n  \n\n",
        "int main() {\n  int n, i, j, k, max, cap;\n  max = -1;\n  cap = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> j >> k;\n    cap = cap - j + k;\n    if (cap > max) max = cap;\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be an integer\n  read n\n  max = int = 0\n  cp = 0 = int\n  for i = 0 to n\n    let a, b be ints\n    read a and b\n    increment cp by (b- a)\n    if cp >= max then set max to cp\n  \n  print max\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int max = 0;\n  int cp = 0;\n  for (int i = 0; i < n; i++) {\n    int a, b;\n    cin >> a >> b;\n    cp += (b - a);\n    if (cp >= max) max = cp;\n  }\n  cout << max << endl;\n}\n"
    ],
    [
        "\n  create integers n, a, b, c, m with c = 0, m = 0\n  read n\n  for i = 0 to n exclusive\n    read a read b\n    set c to c + b - a\n    if m is less than c, set m to c\n  \n  print m print newline\n  \n\n",
        "int main() {\n  int n, a, b, c = 0, m = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a >> b;\n    c = c + b - a;\n    if (m < c) m = c;\n  }\n  cout << m << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  ans =0\n  temp =0\n  for i=0 to n exclusive\n    create int a and b\n    read a and b\n    set temp to temp - a\n    assign temp + b to temp\n    set ans = max of temp and ans\n  \n  print ans\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int ans = 0;\n  int temp = 0;\n  for (int i = 0; i < n; i++) {\n    int a, b;\n    cin >> a >> b;\n    temp -= a;\n    temp += b;\n    ans = max(temp, ans);\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  create long longs n, max, d, with max = 0, d = 0\n  read n\n  create long long arrays a, b, with a size 100000, with b size 100000\n  for i = 0 to n exclusive\n    read a[i] read b[i]\n    set d to d - a[i]\n    set d to d + b[i]\n    if d is greater than max, set max to d\n  \n  print max print newline\n  \n\n",
        "int main() {\n  long long n, max = 0, d = 0;\n  cin >> n;\n  long long a[100000], b[100000];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i] >> b[i];\n    d = d - a[i];\n    d = d + b[i];\n    if (d > max) max = d;\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integer arrays a, b with a size n, b size n\n  for i = 0 to n exclusive, read a[i] read b[i]\n  create integer curr with curr = 0\n  create integer req with req = 0\n  for i = 0 to n exclusive\n    decrement curr by a[i]\n    increment cur by b[i]\n    if curr is greater than req, set req to curr\n  \n  print req print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[n], b[n];\n  for (int i = 0; i < n; i++) { cin >> a[i] >> b[i]; }\n  int curr = 0;\n  int req = 0;\n  for (int i = 0; i < n; i++) {\n    curr -= a[i];\n    curr += b[i];\n    if (curr > req) { req = curr; }\n  }\n  cout << req << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  create integer maxValue set maxValue = INT_MIN\n  read n\n  create Integer a, b\n  create integer d set d = 0\n  create integer c set c = 0\n  for i =0 to n execute\n    print a, b\n    set c = c + a\n    set d = d + b\n    if maxValue is less than the absolute value of c - d set maxValue = abs(c - d)\n  \n  print maxValue\n  \n\n",
        "int main() {\n  int n;\n  int maxValue = INT_MIN;\n  cin >> n;\n  int a, b;\n  int d = 0;\n  int c = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a >> b;\n    c = c + a;\n    d = d + b;\n    if (maxValue < abs(c - d)) maxValue = abs(c - d);\n  }\n  cout << maxValue << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  while read n is true\n    create integers ans, temp with ans = 0, temp = 0\n    for i = 0 to n exclusive\n      create integers p, q\n      read p read q\n      increment temp by q\n      decrement temp by p\n      set ans to maximum of ans and temp\n    \n    print ans print newline\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int ans = 0, temp = 0;\n    for (int i = 0; i < n; i++) {\n      int p, q;\n      cin >> p >> q;\n      temp += q;\n      temp -= p;\n      ans = max(ans, temp);\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n=int, Max and Count=0\n  read n\n  a and b=array of n int\n  for i=0 to n exclusive\n    read a[i],b[i]\n    subtract a[i] from Count\n    add b[i] to Count\n    if Count>Max Max=Count\n  \n  print Max\n  \n\n",
        "int main() {\n  int n, Max = 0, Count = 0;\n  cin >> n;\n  int a[n], b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i] >> b[i];\n    Count -= a[i];\n    Count += b[i];\n    if (Count > Max) { Max = Count; }\n  }\n  cout << Max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, i, j, c, n, p, q = int with j = 0 and c = 0 and p = 0 and q = 0\n  read n\n  for i = 1 to n inclusive\n    read a then b\n    set p to p + a\n    set q to q + b\n    set c to q - p\n    if c > j set j to c\n  \n  print j\n  \n\n",
        "int main() {\n  int a, b, i, j = 0, c = 0, n, p = 0, q = 0;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> a >> b;\n    p = p + a;\n    q = q + b;\n    c = q - p;\n    if (c > j) { j = c; }\n  }\n  cout << j << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create character array s with size 10001\n  create integer t\n  while read t is true\n    create integers ns, sm with ns = -1, sm = 0\n    while decrement t is true\n      create integers doll, puppet\n      read doll read puppet\n      set sm to sm - doll + puppet\n      set ns to maximum of ns and sm\n    \n    print ns print newline\n  \n\n",
        "int main() {\n  char s[10001];\n  int t;\n  while (cin >> t) {\n    int ns = -1, sm = 0;\n    while (t--) {\n      int doll, puppet;\n      cin >> doll >> puppet;\n      sm = sm - doll + puppet;\n      ns = max(ns, sm);\n    }\n    cout << ns << endl;\n  }\n}\n"
    ],
    [
        "\n  n = integer\n  while n can be read as a valid integer\n    a, b, total, max = integers, k = integer = 0\n    for i = 0 to n exclusive\n      read a, b\n      if k is 0\n        total = b\n        k = 1\n        max = b\n      else if k is 1\n        total = total - a + b\n        if total > max, then max = total\n      \n    \n    print max\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int a, b, total, k = 0, max;\n    for (int i = 0; i < n; i++) {\n      cin >> a >> b;\n      if (k == 0) {\n        total = b;\n        k = 1;\n        max = b;\n      } else if (k == 1) {\n        total = total - a + b;\n        if (total > max) max = total;\n      }\n    }\n    cout << max << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b\n  create integer counter with counter = 0\n  create integer tranSize with tranSize = 0\n  create integer rep\n  read rep\n  while decrement rep is true\n    read a read b\n    decrement counter by a\n    increment counter by b\n    if counter is greater than tranSize, set tranSize to counter\n  \n  print tranSize print newline\n  \n\n",
        "int main() {\n  int a, b;\n  int counter = 0;\n  int tranSize = 0;\n  int rep;\n  cin >> rep;\n  while (rep--) {\n    cin >> a >> b;\n    counter -= a;\n    counter += b;\n    if (counter > tranSize) { tranSize = counter; }\n  }\n  cout << tranSize << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  v = long long int vector\n  n, out, in, sum = long long int with sum = 0\n  read n\n  loop n times\n    read out then in\n    set sum to sum - out + in\n    append sum to v\n  \n  sort v\n  reverse v\n  print v[0]\n  \n\n",
        "int main() {\n  vector<long long int> v;\n  long long int n, out, in, sum = 0;\n  cin >> n;\n  while (n--) {\n    cin >> out >> in;\n    sum = sum - out + in;\n    v.push_back(sum);\n  }\n  sort(v.begin(), v.end());\n  reverse(v.begin(), v.end());\n  cout << v[0] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, x, y, i, max, a = long long integer with max, a = 0\n  read n\n  for i = 0 to n exclusive\n    read x, y\n    a = a - x + y\n    if max < a, max = a\n  \n  print max\n\n",
        "int main() {\n  long long int n, x, y, i, max = 0, a = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> x >> y;\n    a = a - x + y;\n    if (max < a) { max = a; }\n  }\n  cout << max << \"\\n\";\n}\n"
    ],
    [
        "\n  create integers minx, n, a, b and test with minx and test = 0\n  read variable n from the input\n  for integer i = 0 to n exclusive\n    read standard input to a and b\n    change test to test - a\n    change test to sum of test and b\n    change minx to max of minx and test\n  \n  print minx to the standard output\n  \n\n",
        "int main() {\n  int minx = 0, n, a, b, test = 0;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> a >> b;\n    test -= a;\n    test += b;\n    minx = max(minx, test);\n  }\n  cout << minx << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  a, b = int array of size n each\n  cntr, ans = int with cntr = 0 and ans = 0\n  for i = 0 to n\n    read a[i] then b[i]\n    decrement cntr by a[i]\n    increment cntr by b[i]\n    set ans to max of ans and cntr\n  \n  print ans\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[n], b[n];\n  int cntr = 0, ans = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i] >> b[i];\n    cntr -= a[i];\n    cntr += b[i];\n    ans = max(ans, cntr);\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  create integers n, a, b, s, t\n  while read n is true\n    set t to 0\n    create integers r, z, with r = 0, z = 0\n    for i = 0 to n exclusive\n      read a read b\n      increment r by a\n      increment z by b\n      set s to z - r\n      set t to maximum of t ans s\n    \n    print t print newline\n  \n  \n\n",
        "int main() {\n  int n, a, b, s, t;\n  while (cin >> n) {\n    t = 0;\n    int r = 0, z = 0;\n    for (int i = 0; i < n; i++) {\n      cin >> a >> b;\n      r += a;\n      z += b;\n      s = z - r;\n      t = max(t, s);\n    }\n    cout << t << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "s = integer\n\n  create integers x, a[10001], b[10001], maxs, set maxs to 0\n  read x\n  for i=1 to x inclusive, read a[i] and b[i]\n  for i=1 to x inclusive\n    set s to s - a[i]\n    assign s + b[i] to s\n    if s greater than maxs, set maxs to s\n  \n  print maxs\n  \n\n",
        "int s;\nint main() {\n  int x, a[10001], b[10001], maxs = 0;\n  cin >> x;\n  for (int i = 1; i <= x; i++) cin >> a[i] >> b[i];\n  for (int i = 1; i <= x; i++) {\n    s -= a[i];\n    s += b[i];\n    if (s > maxs) maxs = s;\n  }\n  cout << maxs << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, r, t, with r = 0, t = 0\n  read n\n  for i = 0 to n exclusive\n    create integers a, b\n    read a read b\n    set t to t = a + b\n    if t is greater than r, set r to t\n  \n  print r print newline\n  \n\n",
        "int main() {\n  int n, r = 0, t = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    int a, b;\n    cin >> a >> b;\n    t = t - a + b;\n    if (t > r) r = t;\n  }\n  cout << r << endl;\n  return 0;\n}\n"
    ],
    [
        "bool function lucky with integer argument n\n  while n != 0\n    if n % 10 != 4 && n % 10 != 7 return false\n    divide n by 10\n  \n  return true\n\nalmost_lucky is a boolean function with integer argument n\n  if lucky(n) is true, return true\n  for i = 2 while i * i <= n\n    if n % i = 0 && (lucky(i) or lucky(n / i) is true)\n  \n  return false\n\n\n  declare integer n\n  read n\n  if almost_lucky(n) is true\n    print \"YES\"\n  else\n    print \"NO\"\n  \n  \n\n",
        "bool lucky(int n) {\n  while (n != 0) {\n    if (n % 10 != 4 && n % 10 != 7) { return false; }\n    n /= 10;\n  }\n  return true;\n}\nbool almost_lucky(int n) {\n  if (lucky(n)) { return true; }\n  for (int i = 2; i * i <= n; ++i) {\n    if (n % i == 0 && (lucky(i) || lucky(n / i))) { return true; }\n  }\n  return false;\n}\nint main() {\n  int n;\n  cin >> n;\n  if (almost_lucky(n)) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "function str (get int n, return string)\n  ss = stringstream\n  push n into ss\n  s=string\n  s = ss\n  return s\n\nsorte=array of 1001 int\ntam=0\nfunction lucky\n  for i=0 to 1001 exclusive\n    s string = str(i)\n    sorte2=true\n    for c=0 to length of s exclusive\n      if s[c] != '4' and != '7'\n        sorte2 = false\n        break\n      \n    \n    if sorte2\n      sorte[tam] = i\n      increment tam\n    \n  \n\n\n  call lucky()\n  n=int\n  read n\n  pos=0\n  divide=false\n  while sorte[pos] <= n and pos < tam\n    if n modulo sorte[pos] is zero\n      divide=true\n      break\n    \n    increment pos\n  \n  if divide\n    print \"YES\"\n  else\n    print \"NO\"\n  \n  \n\n",
        "string str(int n) {\n  stringstream ss;\n  ss << n;\n  string s;\n  ss >> s;\n  return s;\n}\nint sorte[1001];\nint tam = 0;\nvoid lucky() {\n  for (int i = 0; i < 1001; i++) {\n    string s = str(i);\n    bool sorte2 = true;\n    for (int c = 0; c < s.length(); c++) {\n      if (s[c] != '4' && s[c] != '7') {\n        sorte2 = false;\n        break;\n      }\n    }\n    if (sorte2) {\n      sorte[tam] = i;\n      tam++;\n    }\n  }\n}\nint main() {\n  lucky();\n  int n;\n  cin >> n;\n  int pos = 0;\n  bool divide = false;\n  while (sorte[pos] <= n && pos < tam) {\n    if (n % sorte[pos] == 0) {\n      divide = true;\n      break;\n    }\n    pos++;\n  }\n  if (divide) {\n    cout << \"YES\\n\";\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "assign elements 4, 7, 44, 77, 47, 74, 444, 447, 474, 477, 777, 744, 747, 774 to int array arr\nset bool s to false\n\n  create int n\n  read n\n  for i=0 to 14 exclusive\n    if n mod arr[i] = 0\n      print YES\n      s = true\n      break\n    else\n      continue the loop\n  \n  if s is false, print NO and a newline\n  \n\n",
        "int arr[] = {4, 7, 44, 77, 47, 74, 444, 447, 474, 477, 777, 744, 747, 774};\nbool s = false;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < 14; ++i) {\n    if (n % arr[i] == 0) {\n      cout << \"YES\" << endl;\n      s = true;\n      break;\n    } else\n      continue;\n  }\n  if (s == false) cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, i, , a, j, h\n  read n\n  for i = 1 to n inclusive\n    set k to i\n    if n % k is 0\n      set j to h to 0\n      while k is not 0\n        set a to k % 10\n        if a is 4 or a is 7, increment h\n        set k to k / 10\n        increment j\n      \n      if h is j\n        print \"YES\" print newline\n        \n      \n    \n  \n  print \"NO\" print newline\n\n",
        "int main() {\n  int n, i, k, a, j, h;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    k = i;\n    if (n % k == 0) {\n      j = h = 0;\n      while (k != 0) {\n        a = k % 10;\n        if (a == 4 || a == 7) { h++; }\n        k = k / 10;\n        j++;\n      }\n      if (h == j) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"NO\" << endl;\n}\n"
    ],
    [
        "\n  num = integer\n  arr = integer array of 14 strings with arr = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777}\n  read num\n  for i = 0 to 13\n    if num modulo arr[i] is 0\n      print YES\n      \n    \n  \n  print NO\n  \n\n",
        "int main() {\n  int num;\n  int arr[14] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777};\n  cin >> num;\n  for (int i = 0; i < 14; i++) {\n    if (num % arr[i] == 0) {\n      cout << \"YES\" << endl;\n      return 0;\n    }\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  set int i, j, l, x, m, m1, k to 0, res=0\n  read x\n  set int a as array of 1000 all to 0\n  for = 4 to less than or equal to 1000 do the following\n    set i to j\n    set m to 0, m1\n    if i is greater than 0 then do\n      set l to i modulo 10\n      if l is 4 or 7 then add one to m\n      set i to i / 10\n      add one to m1\n    \n    if m is m1 then do the following\n      set a[k] to j\n      add one to k\n    \n  \n  for = 0 to less than k do the following\n    if x modulo a[i] is 0 then do\n      set res to 5\n      break\n    \n  \n  if res is 5 then do the following commands\n    output YES\n  else\n    output NO\n  \n\n",
        "int main() {\n  int i, j, l, x, m, m1, k = 0, res = 0;\n  cin >> x;\n  int a[1000] = {0};\n  for (j = 4; j <= 1000; j++) {\n    i = j;\n    m = 0, m1 = 0;\n    while (i > 0) {\n      l = i % 10;\n      if (l == 4 || l == 7) m++;\n      i = i / 10;\n      m1++;\n    }\n    if (m == m1) {\n      a[k] = j;\n      k++;\n    }\n  }\n  for (i = 0; i < k; i++) {\n    if (x % a[i] == 0) {\n      res = 5;\n      break;\n    }\n  }\n  if (res == 5)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer n\ncreate integer array arr with arr = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477}\n\n  read n\n  for i = 0 to size of arr / 4 exclusie\n    if not ( n % arr[i] )\n      print \"YES\\n\"\n      exit from program with code 0\n    \n  print \"NO\\n\"\n  \n\n",
        "int n;\nint arr[] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477};\nint main() {\n  cin >> n;\n  for (int i = 0; i < sizeof(arr) / 4; i++)\n    if (!(n % arr[i])) {\n      cout << \"YES\\n\";\n      exit(0);\n    }\n  cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "int function getdigits with int argument n\n  declare int variable c = 0\n  while n is not 0\n    divide n by 10\n    increment c\n  \n  return c\n\n\n  declare int variables n, d, i and flag where flag = 0\n  \n  read input to n\n  assign result of etdigits(n) to d\n  if n % 4 = 0\n    set flag to 1\n  else if n % 7 = 0\n    assign 1 to flag\n  else if n % 47 = 0\n    assign 1 to flag\n  else if n % 477 = 0\n    change flag to 1\n  else if n % 447 = 0\n    assign 1 to flag\n  else if n % 474 = 0\n    set flag to 1\n  else if n % 744 = 0\n    assign 1 to flag\n  else if n % 747 = 0\n    set flag to 1\n  else if n % 774 = 0\n    set flag to 1\n  \n  if flag is true\n    print \"YES\"\n      print \"\\n\"\n  else\n    print \"NO\"\n      print \"\\n\"\n  \n\n",
        "int getdigits(int n) {\n  int c = 0;\n  while (n != 0) {\n    n /= 10;\n    c++;\n  }\n  return c;\n}\nint main() {\n  int n, d, i, flag = 0;\n  ;\n  cin >> n;\n  d = getdigits(n);\n  if (n % 4 == 0) {\n    flag = 1;\n  } else if (n % 7 == 0) {\n    flag = 1;\n  } else if (n % 47 == 0) {\n    flag = 1;\n  } else if (n % 477 == 0) {\n    flag = 1;\n  } else if (n % 447 == 0) {\n    flag = 1;\n  } else if (n % 474 == 0) {\n    flag = 1;\n  } else if (n % 744 == 0) {\n    flag = 1;\n  } else if (n % 747 == 0) {\n    flag = 1;\n  } else if (n % 774 == 0) {\n    flag = 1;\n  }\n  if (flag)\n    cout << \"YES\"\n      << \"\\n\";\n  else\n    cout << \"NO\"\n      << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  integers = a\n  read a\n  set int l to 0\n  set int m to a\n  for i = 0 to less than a do the following\n    set m to m / 10\n    set l to l + 1\n    if m is 0 then do break\n  \n  for k = 1 to less than or equal to l do the following\n    set int b[k] to\n    for i = 1 to less than or equal to k do the following\n      set int sum1 to 0\n      set b[k - i] to 4\n      for j = 0 to less than k then sum1 = 10 * sum1 + b[j]\n      if a modulo sum1 is 0 then do\n        output YES\n        \n      \n    \n    for i = 1 to less than or equal to k do the following\n      set int sum1 to 0\n      set b[k - i] to 7\n      for j = 0 to less than k do the following\n      if a modulo sum1 is 0 then do\n        output YES\n        \n      \n    \n    for j = 0 to less than k do b[j] = 0\n    for i = 1 to less than or equal to k do the following\n      set int sum1 to 0\n      set b[k - i] to 7\n      for j = 0 to less than k do the following\n      if a modulo sum1 is 0 then do\n        output YES\n        \n      \n    \n    for i = 1 to less than or equal to k do the following\n      set int sum1 to 0\n      set b[k - i] to 4\n      for j = 0 to less than k do the following\n      if a modulo sum1 is 0 then do\n        output YES\n        \n      \n    \n  \n  output NO\n\n",
        "int main() {\n  int a;\n  cin >> a;\n  int l = 0;\n  int m = a;\n  for (int i = 0; i < a; i++) {\n    m = m / 10;\n    l = l + 1;\n    if (m == 0) { break; }\n  }\n  for (int k = 1; k <= l; k++) {\n    int b[k] = {};\n    for (int i = 1; i <= k; i++) {\n      int sum1 = 0;\n      b[k - i] = 4;\n      for (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n      if (a % sum1 == 0) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n    for (int i = 1; i <= k; i++) {\n      int sum1 = 0;\n      b[k - i] = 7;\n      for (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n      if (a % sum1 == 0) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n    for (int j = 0; j < k; j++) { b[j] = 0; }\n    for (int i = 1; i <= k; i++) {\n      int sum1 = 0;\n      b[k - i] = 7;\n      for (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n      if (a % sum1 == 0) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n    for (int i = 1; i <= k; i++) {\n      int sum1 = 0;\n      b[k - i] = 4;\n      for (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n      if (a % sum1 == 0) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"NO\" << endl;\n}\n"
    ],
    [
        "set int n, arr[] to 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777\n\n  read n\n  for i = 0 to less than 10 do the following\n    if n / arr[i] has no remainder then do the following\n      output YES\n      \n    \n  \n  output NO\n  \n\n",
        "int n, arr[] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777};\nint main() {\n  cin >> n;\n  for (int i = 0; i < 10; i++) {\n    if (!(n % arr[i])) {\n      cout << \"YES\" << endl;\n      return 0;\n    }\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, k = integer\n  read n, k\n  x, y, x0, y0, total = double with total(0.0)\n  read x0, y0\n  while decrement n\n    read x, y\n    total = total + sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0))\n    x0 = x\n    y0 = y\n  \n  print fixed, setprecision(6), total * k / 50\n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  double x, y, x0, y0, total(0.0);\n  cin >> x0 >> y0;\n  while (--n) {\n    cin >> x >> y;\n    total += sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0));\n    x0 = x;\n    y0 = y;\n  }\n  cout << fixed << setprecision(6) << total * k / 50 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, k = int\n  read n then k\n  x, y, x0, y0, total = double with total = 0.0\n  read x0 then y0\n  loop n times\n    read x then y\n    add sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0)) to total\n    set x0 = x\n    set y0 = y\n  \n  print total * k / 50 with 6 decimal digits\n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  double x, y, x0, y0, total(0.0);\n  cin >> x0 >> y0;\n  while (--n) {\n    cin >> x >> y;\n    total += sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0));\n    x0 = x;\n    y0 = y;\n  }\n  cout << fixed << setprecision(6) << total * k / 50 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, k\n  read n read k\n  create doubles x, y, x0, y0, total with total initialized with 0.0\n  read x0 read y0\n  while decrement n is true\n    read x read y\n    increment total by square root of ( (x - x0) * (x - x0) + (y - y0) * (y - y0) )\n    set x0 to x\n    set y0 to y\n  \n  print fixed, set cout decimal precision to 6, print total*k/50 print newline\n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  double x, y, x0, y0, total(0.0);\n  cin >> x0 >> y0;\n  while (--n) {\n    cin >> x >> y;\n    total += sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0));\n    x0 = x;\n    y0 = y;\n  }\n  cout << fixed << setprecision(6) << total * k / 50 << endl;\n  return 0;\n}\n"
    ],
    [
        "double function dist with integer arguments x1, y1, x2 and y2\n  return square root of (pow((x1 - x2), 2) + pow((y1 - y2), 2))\n\n\n  create integers n and k\n  read n and k\n  declare boolean f = true\n  create integers x1, y1, x2 and y2\n  create double totDist\n  decrement n in a loop while n > 0\n    if f is true\n      read x1 and y1\n      set f to false\n    else\n      read x2 and y2\n      increase totDist by dist of (x1, y1, x2, y2)\n      set x1 to x2\n      assign value of y2 to y1\n    \n  \n  create double r = totDist * k / 50.0\n  print fixed and r\n  \n\n",
        "double dist(int x1, int y1, int x2, int y2) {\n  return sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2));\n}\nint main() {\n  int n, k;\n  cin >> n >> k;\n  bool f = true;\n  int x1, y1, x2, y2;\n  double totDist;\n  while (n--) {\n    if (f) {\n      cin >> x1 >> y1;\n      f = false;\n    } else {\n      cin >> x2 >> y2;\n      totDist += dist(x1, y1, x2, y2);\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  double r = totDist * k / 50.0;\n  cout << fixed << r << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s = string\n  read s\n  for i = 0 to s.length() exclusive\n    while (s[i - 1] is character ' ' and s[i] is character ' '), erase(s.begin() + i - 1) from s\n    if ((s[i] is . or s[i] is ! or s[i] is , or s[i] is ?))\n      if (s[i - 1] is character ' ' and s[i + 1] is character ' ')\n        erase(s.begin() + i - 1) from s\n      else if (s[i + 1] is not character ' '\n        insert(s.begin() + i + 1, character ' ') in s\n      while (s[i - 1] is character ' ') erase(s.begin() + i - 1) from s\n    \n  \n  print s\n  \n\n",
        "int main() {\n  string s;\n  getline(cin, s);\n  for (int i = 0; i < s.length(); i++) {\n    while (s[i - 1] == ' ' && s[i] == ' ') s.erase(s.begin() + i - 1);\n    if ((s[i] == '.' || s[i] == '!' || s[i] == ',' || s[i] == '?')) {\n      if (s[i - 1] == ' ' && s[i + 1] == ' ')\n        s.erase(s.begin() + i - 1);\n      else if (s[i + 1] != ' ')\n        s.insert(s.begin() + i + 1, ' ');\n      while (s[i - 1] == ' ') s.erase(s.begin() + i - 1);\n    }\n  }\n  cout << s << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create const ints N = 1e5 + 5 and OO = 0x3f3f3f3f\n\n  declare string variable str\n  read input into str\n  loop i from 0 to length of str exclusive\n    if str[i] is equal to ' ' and str[i + 1] is equal to ' '\n      remove element at position i from str\n      decrement i by one\n    \n    if str[i] = ',' or str[i] = '!' or str[i] = '?' or str[i] = '.'\n      if str[i + 1] != ' ' and i < length of str-1\n        declare string a = \" \"\n        insert a to position i + 1 of str\n      \n      if str[i - 1] is equal to ' '\n        remove element at position i - 1 from str\n        decrement i by one\n      \n    \n  \n  print str\n\n",
        "const int N = 1e5 + 5, OO = 0x3f3f3f3f;\nint main() {\n  string str;\n  getline(cin, str);\n  for (int i = 0; i < str.size(); i++) {\n    if (str[i] == ' ' && str[i + 1] == ' ') {\n      str.erase(str.begin() + i);\n      i--;\n    }\n    if (str[i] == ',' || str[i] == '!' || str[i] == '?' || str[i] == '.') {\n      if (str[i + 1] != ' ' && i < str.size() - 1) {\n        string a = \" \";\n        str.insert(i + 1, a);\n      }\n      if (str[i - 1] == ' ') {\n        str.erase(str.begin() + (i - 1));\n        i--;\n      }\n    }\n  }\n  cout << str << endl;\n}\n"
    ],
    [
        "\n  s = string array\n  set int sp to 0, p = 0\n  get the line as variable s\n  set string s2 to\n  set int l to s.size()\n  for i = 0 to less than l do the following\n    if s[i] is then do\n      add one to sp\n    else if (s[i] equals , . ? or ! then do the following\n      add one to p\n      s2 equals s2 plus s[i]\n    else\n      if sp is 0 and p = 0 then do the following instructions\n        s2 equals s2 plus s[i]\n      else if sp and p = 0 the do the following\n        s2 equals s2 plus space\n        s2 equals s2 plus s[i]\n        set sp to 0\n      else\n        s2 equals s2 plus space\n        s2 equals s2 plus s[i]\n        set p to 0\n        set sp to 0\n      \n    \n  \n  output s2\n  \n\n",
        "int main() {\n  string s;\n  int sp = 0, p = 0;\n  getline(cin, s);\n  string s2 = \"\";\n  int l = s.size();\n  for (int i = 0; i < l; i++) {\n    if (s[i] == ' ')\n      sp++;\n    else if (s[i] == ',' || s[i] == '.' || s[i] == '?' || s[i] == '!') {\n      p++;\n      s2 += s[i];\n    } else {\n      if (sp == 0 && p == 0)\n        s2 += s[i];\n      else if (p == 0 && sp > 0) {\n        s2 += ' ';\n        s2 += s[i];\n        sp = 0;\n      } else {\n        s2 += ' ';\n        s2 += s[i];\n        p = 0;\n        sp = 0;\n      }\n    }\n  }\n  cout << s2 << endl;\n  return 0;\n}\n"
    ],
    [
        "create character variable c with size of 10005\ns = string\n\n  input line into array c of 10005 size\n  set int i to 0\n  set int lg to strlen(c)\n  set bool ok to 0\n  if i is less than lg then do\n    if isalpha is true\n      if ok = 0 and i is not equal to 0 and not isalpha(c[i - 1] then add a space character to s\n      s equals s plus c[i]\n      set ok to 0\n    else\n      set if (c[i] = ? or c[i] = ! or c[i] = , or c[i] = .) s += c[i] then add a c[i] to s and add a space to s, and make ok = 1\n    \n    add one to i\n  \n  output s\n  \n\n",
        "char c[10005];\nstring s;\nint main() {\n  cin.getline(c, 10005);\n  int i = 0;\n  int lg = strlen(c);\n  bool ok = 0;\n  while (i < lg) {\n    if (isalpha(c[i])) {\n      if (ok == 0 && i != 0 && !isalpha(c[i - 1])) s += ' ';\n      s += c[i];\n      ok = 0;\n    } else {\n      if (c[i] == '?' || c[i] == '!' || c[i] == ',' || c[i] == '.') s += c[i], s += ' ', ok = 1;\n    }\n    ++i;\n  }\n  cout << s << '\\n';\n  return 0;\n}\n"
    ],
    [
        "in function File\n  call freopen on \"output.txt\", \"w\" and stdout\n  call freopen on \"input.txt\", \"r\" and stdin\n\ndefine empty function fast\npi = const double with pi = 2 * acos of 0.0\nnn = const int with nn = 1e5 + 4\noo = const int with oo = 0x3f3f3f3f\nin function nCr taking two long longs n and r and returning a long long\n  if n is less than r then return 0\n  if r is 0 then return 1\n  return n * nCr of n - 1 and r - 1 / r\n\nin function gcd taking two long longs a and b and returning a long long\n  if b is 0 return a\n  return gcd of b and a mod b\n\n\n  call fast\n  s = string\n  call getline on cin and s\n  arr = char vector\n  if s[0] is a lower case letter then append s[0] to arr\n  for i = 1 to size of s\n    if s[i] is a lower case letter\n      if s[i - 1] is a lower case letter\n        append s[i] to arr\n      else\n        append ' ' then s[i] to arr\n    else if s[i] is ' '\n      continue loop\n    else\n      append s[i] to arr\n  \n  print all values of arr\n  print newline\n  \n\n",
        "void File() {\n  freopen(\"output.txt\", \"w\", stdout);\n  freopen(\"input.txt\", \"r\", stdin);\n}\nvoid fast() {}\nconst double pi = 2 * acos(0.0);\nconst int nn = 1e5 + 4;\nconst int oo = 0x3f3f3f3f;\nlong long nCr(long long n, long long r) {\n  if (n < r) return 0;\n  if (r == 0) return 1;\n  return n * nCr(n - 1, r - 1) / r;\n}\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nint main() {\n  fast();\n  string s;\n  getline(cin, s);\n  vector<char> arr;\n  if (s[0] >= 'a' && s[0] <= 'z') arr.push_back(s[0]);\n  for (int i = 1; i < ((int)((s).size())); i++) {\n    if (s[i] >= 'a' && s[i] <= 'z') {\n      if (s[i - 1] >= 'a' && s[i - 1] <= 'z')\n        arr.push_back(s[i]);\n      else\n        arr.push_back(' '), arr.push_back(s[i]);\n    } else if (s[i] == ' ')\n      continue;\n    else\n      arr.push_back(s[i]);\n  }\n  for (int i = 0; i < ((int)((arr).size())); i++) cout << arr[i];\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "s = string\nans = string array of size 111111\n\n  call getline of cin and s\n  n, p = int with n = size of s and p = 0\n  for i = 0 to n\n    if s[i] equals ',' or '.' or '!' or '?'\n      set ans[p] to \" \" then increment p\n      set ans[p - 1][0] to s[i]\n    else if s[i] is a lowercase character\n      j = int with j = i\n      loop while s[j] is a lowercase character and j is less than n increment j\n      set ans[p] to result of s.substr of i and j - i then increment p\n      set i to j - 1\n    \n  \n  l = int with l = 0\n  for i = 0 to p\n    if ans[i][0] is greater or equal to 'a'\n      if l equals 1 print ' '\n      print ans[i]\n      set l to 1\n    else\n      print ans[i] and ' '\n      set l to 0\n    \n  \n  print newline\n  \n\n",
        "string s;\nstring ans[111111];\nint main() {\n  getline(cin, s);\n  int n = s.size(), p = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == ',' || s[i] == '.' || s[i] == '!' || s[i] == '?') {\n      ans[p++] = \" \";\n      ans[p - 1][0] = s[i];\n    } else if (s[i] >= 'a' && s[i] <= 'z') {\n      int j = i;\n      for (; s[j] >= 'a' && s[j] <= 'z' && j < n;) { j++; }\n      ans[p++] = s.substr(i, j - i);\n      i = j - 1;\n    }\n  }\n  int l = 0;\n  for (int i = 0; i < p; i++) {\n    if (ans[i][0] >= 'a') {\n      if (l == 1) { cout << ' '; }\n      cout << ans[i];\n      l = 1;\n    } else {\n      cout << ans[i] << ' ';\n      l = 0;\n    }\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "create string in\ndeclare string n = \"\"\n\n  read line and store it into in\n  declare int m = length of in\n  declare boolean se = false\n  for i from 0 to m exclusive\n    if in[i] >= 'a' and in[i] <= 'z'\n      append n to in[i]\n    else if in[i] = ' '\n      if n is equal to \" \" continue the loop from the start\n      print n\n      assign ' ' to n\n      change se to true\n      continue the loop from the start\n    else\n      if se is true and n = \" \"\n        print in[i]\n        set n to ' '\n        set se to false\n        go to the start of the loop\n      \n      print n and in[i]\n      change n to ' '\n    \n  \n  print n if if n != \" \"\n  print a new line\n  \n\n",
        "string in;\nstring n = \"\";\nint main() {\n  getline(cin, in);\n  int m = in.size();\n  bool se = false;\n  for (int i = 0; i < m; i++) {\n    if (in[i] >= 'a' && in[i] <= 'z') {\n      n += in[i];\n    } else if (in[i] == ' ') {\n      if (n == \" \") { continue; }\n      cout << n;\n      n = ' ';\n      se = true;\n      continue;\n    } else {\n      if (se && n == \" \") {\n        cout << in[i];\n        n = ' ';\n        se = false;\n        continue;\n      }\n      cout << n << in[i];\n      n = ' ';\n    }\n  }\n  if (n != \" \") { cout << n; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variable s\n  loop when read data from input into s\n    declare string n = \"\"\n    declare integer d = length of s\n    for i = 0 to d exclusive incrementing i\n      if s[i] is equal to ' '\n        if n[n.length() - 1] is not ' ', incremen n by s[i]\n      else if s[i] = '.' || s[i] = ',' || s[i] = '!' || s[i] = '?'\n        if n[n.length() - 1] is not ' '\n          append s[i] + ' ' to n\n        else\n          remove n.length() - 1 elements from n\n          append s[i] + ' ' to n\n        \n      else\n        append s[i] to n\n      \n    \n    print all elements of n sequentially\n    print a new line\n  \n  \n\n",
        "int main() {\n  string s;\n  while (getline(cin, s)) {\n    string n = \"\";\n    int d = s.length();\n    for (int i = 0; i < d; i++) {\n      if (s[i] == ' ') {\n        if (n[n.length() - 1] != ' ') { n = n + s[i]; }\n      } else if (s[i] == '.' || s[i] == ',' || s[i] == '!' || s[i] == '?') {\n        if (n[n.length() - 1] != ' ') {\n          n = n + s[i] + ' ';\n        } else {\n          n.erase(n.length() - 1);\n          n = n + s[i] + ' ';\n        }\n      } else {\n        n = n + s[i];\n      }\n    }\n    for (int i = 0; i < n.length(); i++) cout << n[i];\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare isp with character c as argument, returning boolean\n  if c is '.' or c is ',' or c is '!' or c is '?', return true from function\n  return false from function\n\n\n  create string s\n  read line from cin to s\n  create integer len with len = size of s\n  create string s2\n  create integer lenn with lenn = len - 1\n  for i = 0 to lenn exclusive\n    if s[i] is ' ' and ( s[i+1] is ' ' or result of run isp with s[i+1] as argument is true ), break current loop iteration\n    increment s2 by s[i]\n    if result of run isp with s[i] as argument is true and s[i+1] is not ' ', increment s2 by ' '\n  \n  increment s2 by s[len - 1]\n  print s2 print newline\n\n",
        "bool isp(char c) {\n  if (c == '.' or c == ',' or c == '!' or c == '?') return true;\n  return false;\n}\nint main() {\n  string s;\n  getline(cin, s);\n  int len = s.size();\n  string s2;\n  int lenn = len - 1;\n  for (int i = 0; i < lenn; i++) {\n    if (s[i] == ' ' and (s[i + 1] == ' ' or isp(s[i + 1]))) continue;\n    s2 += s[i];\n    if (isp(s[i]) and s[i + 1] != ' ') s2 += ' ';\n  }\n  s2 += s[len - 1];\n  cout << s2 << endl;\n}\n"
    ],
    [
        "s = string\np = integer\nans = character array of size 111111\n\n  read s\n  n = integer with n = s.size()\n  for i = 0 to n exclusive\n    if s[i] >= a and s[i] <= z\n      ans[increment p] = s[i]\n    else if s[i] is , or s[i] is . or s[i] is ? or s[i] is !\n      for p and ans[p - 1] is character' ', decrement p\n      ans[increment p] = s[i]\n      ans[increment p] = character ' '\n    else if (s[i] is character ' '\n      if ans[p - 1] is not character ' ', ans[increment p] = s[i]\n    \n  \n  print ans\n  \n\n",
        "string s;\nint p;\nchar ans[111111];\nint main() {\n  getline(cin, s);\n  int n = s.size();\n  for (int i = 0; i < n; i++) {\n    if (s[i] >= 'a' && s[i] <= 'z') {\n      ans[p++] = s[i];\n    } else if (s[i] == ',' || s[i] == '.' || s[i] == '?' || s[i] == '!') {\n      for (; p && ans[p - 1] == ' ';) { p--; }\n      ans[p++] = s[i];\n      ans[p++] = ' ';\n    } else if (s[i] == ' ') {\n      if (ans[p - 1] != ' ') { ans[p++] = s[i]; }\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create const double PI = 3.1415926535897932384626433832795\ndeclare long long mod = 1e9 + 7\nfunction isp with char argument c that returns bool\n  return true if c = '.' || c = ',' || c = '?' || c = '!' and false otherwise\n\n\n  change output decimal precision to 12\n  change output decimal format to fixed\n  let s and ans be strings where ans = \"\"\n  read s and loop further\n    if length of s = 1 and isp of s[0] return true and size of ans > 0\n      assign s[0] to ans[ans.size() - 1] and append \" \" to ans\n    else\n      change ans to ans + s + \" \"\n  \n  create int sz = length of ans\n  create integers last and i = 0\n  for i = 0, last = 0 to sz - 1 exclusive\n    if ans[i] = ' ' and isp(ans[i + 1]) is true\n      print (substring of ans from position last to position i - last) + ans[i + 1] + \" \", set value of last to i + 2 and increment i\n    else if ans[i] = ' '\n      print substring of ans from position last with length of i - last + 1, then change last to i + 1\n    else if isp(ans[i]) is true\n      if ans[i + 1] != ' '\n        print substring of ans from position last with length of i - last + 1 and \" \", then change last to i + 1\n      else\n        print substring of ans from position last with length of i - last + 1 and \" \", then change last to i + 1\n  \n  print substring of ans from position last to i and '\\n'\n  \n\n",
        "const double PI = 3.1415926535897932384626433832795;\nlong long mod = 1e9 + 7;\nbool isp(char c) {\n  return (c == '.' || c == ',' || c == '?' || c == '!');\n}\nint main() {\n  cout.precision(12);\n  cout << fixed;\n  string s, ans = \"\";\n  while (cin >> s) {\n    if (s.size() == 1 && isp(s[0]) && ans.size())\n      ans[ans.size() - 1] = s[0], ans += \" \";\n    else\n      ans = ans + s + \" \";\n  }\n  int sz = ans.size();\n  int last = 0, i = 0;\n  for (i = 0, last = 0; i < sz - 1; ++i) {\n    if (ans[i] == ' ' && isp(ans[i + 1]))\n      cout << ans.substr(last, i - last) + ans[i + 1] + \" \", last = i + 2, i++;\n    else if (ans[i] == ' ')\n      cout << ans.substr(last, i - last + 1), last = i + 1;\n    else if (isp(ans[i]))\n      if (ans[i + 1] != ' ')\n        cout << ans.substr(last, i - last + 1) + \" \", last = i + 1;\n      else\n        cout << ans.substr(last, i - last + 1), last = i + 1;\n  }\n  cout << ans.substr(last, i - last) << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, dx\n  read n read dx\n  create string arrays a, b, c, d, with a size 1001, b size 1001, c size 1001, d size 1001\n  create integer array t with size 1001\n  create integer sum with sum = 0\n  for i = 0 to n exclusive, read a[i] read b[i] read t[i]\n  or i = 0 to n - 1 exclusive\n    for j = i + 1 to n exclusive\n      if t[j] - t[i] is greater than 0 and t[j] - t[i] is less than or equal to dx\n        if a[i] is b[j] and b[i] is a[j]\n          create integer flat with flat = 0\n          for k = 0 to sum exclusive\n            if a[i] is c[k] and b[i] is d[k] or a[i] is d[k] and b[i] is c[k]\n              set flat to 1\n              break loop\n            \n          if not flag\n            set c[sum] to a[i]\n            set d[sum] to b[i]\n            increment sum\n          \n        \n  print sum print newline\n  for i = 0 to sum exclusive, print c[i] print \" \" print d[i] print newline\n\n",
        "int main() {\n  int n, dx;\n  cin >> n >> dx;\n  string a[1001], b[1001], c[1001], d[1001];\n  int t[1001];\n  int sum = 0;\n  for (int i = 0; i < n; i++) cin >> a[i] >> b[i] >> t[i];\n  for (int i = 0; i < n - 1; i++)\n    for (int j = i + 1; j < n; j++)\n      if (t[j] - t[i] > 0 && t[j] - t[i] <= dx)\n        if (a[i] == b[j] && b[i] == a[j]) {\n          int flat = 0;\n          for (int k = 0; k < sum; k++)\n            if (a[i] == c[k] && b[i] == d[k] || a[i] == d[k] && b[i] == c[k]) {\n              flat = 1;\n              break;\n            }\n          if (!flat) {\n            c[sum] = a[i];\n            d[sum] = b[i];\n            sum++;\n          }\n        }\n  cout << sum << endl;\n  for (int i = 0; i < sum; i++) { cout << c[i] << \" \" << d[i] << endl; }\n}\n"
    ],
    [
        "let x and y be arrays of double of size 100000\nn and t = integers\ndefine function sorty\n  let i and k be integers\n  for i = 0 to n exclusive\n    create integer min with value x[i]\n    set integer pos to i\n    for k = i + 1 to n exclusive\n      if x[k] is less than min\n        set value of min to x[k]\n        set value of pos to k\n      \n    \n    invoke function swap with arguments x[i] and x[pos]\n    invoke function swap with arguments y[i] and y[pos]\n  \n\n\n  read n and t\n  let i be integer\n  for i = 0 to n exclusive\n    a and b = doubles\n    read a and b\n    x[i] = (a - (b / 2.0))\n    y[i] = (a + (b / 2.0))\n  \n  call sorty\n  create integer ct with value 2\n  for i = 0 to n - 1 exclusive\n    create double h with value y[i] + t\n    if x[i + 1] >= h increment ct\n    h = x[i + 1] - t\n    if y[i] is less than h increment ct\n  \n  print ct and a new line\n\n",
        "double x[100000], y[100000];\nint n, t;\nvoid sorty() {\n  int i, k;\n  for (i = 0; i < n; i++) {\n    int min = x[i];\n    int pos = i;\n    for (k = i + 1; k < n; k++) {\n      if (x[k] < min) {\n        min = x[k];\n        pos = k;\n      }\n    }\n    swap(x[i], x[pos]);\n    swap(y[i], y[pos]);\n  }\n}\nint main() {\n  cin >> n >> t;\n  int i;\n  for (i = 0; i < n; i++) {\n    double a, b;\n    cin >> a >> b;\n    x[i] = (a - (b / 2.0));\n    y[i] = (a + (b / 2.0));\n  }\n  sorty();\n  int ct = 2;\n  for (i = 0; i < n - 1; i++) {\n    double h = y[i] + t;\n    if (x[i + 1] >= h) { ct++; }\n    h = x[i + 1] - t;\n    if (y[i] < h) { ct++; }\n  }\n  cout << ct << endl;\n}\n"
    ],
    [
        "let a be an array of integers of length 10005\n\n  create integers n and t\n  read n and t\n  multiply t by 2\n  mi and mx are integers with mi = 5000 and mx = 0\n  invoke function memset with arguments a, 0 and size of a\n  while n--\n    let x and aa be integers\n    read x and aa\n    set integer ll to x * 2 + 4000 - aa;\n    set integer rr to x * 2 + 4000 + aa\n    for i = ll to rr inclusive\n      increase a[i]\n      set mx to max of mx, i\n      set value of mi to min of mi, i\n    \n  \n  len and ans are integers with len = 0 and ans = 2\n  for integer i = mi to mx inclusive\n    increase len\n    if a[i] is true\n      if len is greater than t\n        increase ans by 2\n      else if len is equal to t\n        increase ans by one\n      len = 0\n    \n  \n  if len is greater than t\n    increase ans by 2\n  else if len is equal to t\n    increment ans\n  print ans and a new line\n  \n\n",
        "int a[10005];\nint main() {\n  int n, t;\n  cin >> n >> t;\n  t *= 2;\n  int mi = 5000, mx = 0;\n  memset(a, 0, sizeof(a));\n  while (n--) {\n    int x, aa;\n    cin >> x >> aa;\n    int ll = x * 2 + 4000 - aa;\n    int rr = x * 2 + 4000 + aa;\n    for (int i = ll; i <= rr; ++i) {\n      a[i]++;\n      mx = max(mx, i);\n      mi = min(mi, i);\n    }\n  }\n  int len = 0, ans = 2;\n  for (int i = mi; i <= mx; ++i) {\n    len++;\n    if (a[i]) {\n      if (len > t)\n        ans += 2;\n      else if (len == t)\n        ans++;\n      len = 0;\n    }\n  }\n  if (len > t)\n    ans += 2;\n  else if (len == t)\n    ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "double constant PI is acos(-1.0)\n\n  let n and s be integers\n  read n and s\n  create integers x and size\n  create arrays of doubles start and end with size 1005\n  call memset with arguments start, 0 and sizeof(start)\n  call memset with arguments end, 0 and sizeof(end)\n  for integer i = 0 to n exclusive\n    read x and size\n    start[i] = x - size / 2.0\n    end[i] = x + size / 2.0\n  \n  sort n elements of array start\n  sort n elements of array end\n  res is integer = 2\n  for integer i = 0 to n - 1 exclusive\n    set double gap to start[i + 1] - end[i]\n    if s is less than gap increase res by 2\n    if s = gap increase res by 1\n  \n  print res and \"\\n\"\n  \n\n",
        "const double Pi = acos(-1.0);\nint main() {\n  int n, s;\n  cin >> n >> s;\n  int x, size;\n  double start[1005], end[1005];\n  memset(start, 0, sizeof(start));\n  memset(end, 0, sizeof(end));\n  for (int i = 0; i < n; i++) {\n    cin >> x >> size;\n    start[i] = x - size / 2.0;\n    end[i] = x + size / 2.0;\n  }\n  sort(start, start + n);\n  sort(end, end + n);\n  int res = 2;\n  for (int i = 0; i < n - 1; i++) {\n    double gap = start[i + 1] - end[i];\n    if (s < gap) { res += 2; }\n    if (s == gap) { res++; }\n  }\n  cout << res << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  let n, i and sum be integers with sum = 2\n  let x, y and t be doubles\n  a = array of doubles of length 2005\n  read n and t\n  for i = 0 to n + n exclusive looping by steps of 2\n    read x and y\n    a[i] = x - y * 0.5\n    a[i + 1] = x + y * 0.5\n  \n  sort a from the start to n + n\n  b = array of doubles of length 2005\n  for i = 1 to n exclusive\n    b[i] = a[i * 2] - a[i * 2 - 1]\n    if b[i] is equal to t\n      sum = sum + 1\n    else if b[i] is greater than t\n      sum = sum + 2\n  \n  print sum and a new line\n  \n\n",
        "int main() {\n  int n, i, sum = 2;\n  double x, y, t;\n  double a[2005];\n  cin >> n >> t;\n  for (i = 0; i < n + n; i = i + 2) {\n    cin >> x >> y;\n    a[i] = x - y * 0.5;\n    a[i + 1] = x + y * 0.5;\n  }\n  sort(a, a + n + n);\n  double b[2005];\n  for (i = 1; i < n; i++) {\n    b[i] = a[i * 2] - a[i * 2 - 1];\n    if (b[i] == t)\n      sum = sum + 1;\n    else if (b[i] > t)\n      sum = sum + 2;\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let x, d and c be doubles\n  assign value 0, n, t to the integer cnt\n  arr is an array of double double pairs\n  read n and t\n  for i = 0 to n exclusive\n    read x and d\n    divide d by 2\n    arr[i] = make_pair(x - d, x + d)\n  \n  sort arr\n  for integer i = 0 to n - 1 exclusive\n    c = first element of arr[i + 1] - second element\n    decrease c by t\n    if c = 0\n      increase cnt\n    else if c is greater than 0\n      increase cnt by 2\n  \n  print cnt + 2 and a new line\n  \n\n",
        "int main() {\n  double x, d, c;\n  int cnt = 0, n, t;\n  pair<double, double> arr[1500];\n  cin >> n >> t;\n  for (int i = 0; i < n; i++) {\n    cin >> x >> d;\n    d /= 2;\n    arr[i] = make_pair(x - d, x + d);\n  }\n  sort(arr, arr + n);\n  for (int i = 0; i < n - 1; i++) {\n    c = arr[i + 1].first - arr[i].second;\n    c -= t;\n    if (c == 0)\n      cnt++;\n    else if (c > 0)\n      cnt += 2;\n  }\n  cout << cnt + 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "create map mp from long long to long long\n\n  create integers n, t, c with c = 2\n  read n read t\n  create doubles x, y\n  create pair array p with double, double, size n\n  for i = 0 to n exclusive\n    read x read y\n    if x is greater than or equal to 0\n      set first element of p[i] to x - (y/2)\n      set second element of p[i] to x + (y/2)\n    else\n      set first element of p[i] to x - (y/2)\n      set second element of p[i] to x + (y/2)\n    \n  \n  sort elements from p to p + n\n  for i = 0 to n exclusive\n    set x to first element of p[i] - second element of p[i-1]\n    if x is t\n      increment c\n    else if x is greater than t\n      increment c by 2\n  \n  print c print newline\n  \n\n",
        "map<long long, long long> mp;\nint main() {\n  int n, t, c = 2;\n  cin >> n >> t;\n  double x, y;\n  pair<double, double> p[n];\n  for (int i = 0; i < n; i++) {\n    cin >> x >> y;\n    if (x >= 0) {\n      p[i].first = x - (y / 2);\n      p[i].second = x + (y / 2);\n    } else {\n      p[i].first = x - (y / 2);\n      p[i].second = x + (y / 2);\n    }\n  }\n  sort(p, p + n);\n  for (int i = 0; i < n; i++) {\n    x = p[i].first - p[i - 1].second;\n    if (x == t)\n      c++;\n    else if (x > t)\n      c += 2;\n  }\n  cout << c << endl;\n  return 0;\n}\n"
    ],
    [
        "let mp be a map from long long to long long\n\n  integers n, t and c with c = 2\n  read n and t\n  declare doubles called x and y\n  p is array of pairs of double, double with size n\n  for integer i = 0 to n exclusive\n    read x and y\n    if x >= 0\n      p[i].first = x - (y / 2)\n      p[i].second = x + (y / 2)\n    else\n      p[i].first = x - (y / 2)\n      p[i].second = x + (y / 2)\n    \n  \n  sort array p\n  for integer i = 0 to n exclusive\n    x = p[i].first - p[i - 1].second\n    if x is equal to t\n      increase c\n    else if x is greater than t\n      increase c by 2\n  \n  print c and a new line\n  \n\n",
        "map<long long, long long> mp;\nint main() {\n  int n, t, c = 2;\n  cin >> n >> t;\n  double x, y;\n  pair<double, double> p[n];\n  for (int i = 0; i < n; i++) {\n    cin >> x >> y;\n    if (x >= 0) {\n      p[i].first = x - (y / 2);\n      p[i].second = x + (y / 2);\n    } else {\n      p[i].first = x - (y / 2);\n      p[i].second = x + (y / 2);\n    }\n  }\n  sort(p, p + n);\n  for (int i = 0; i < n; i++) {\n    x = p[i].first - p[i - 1].second;\n    if (x == t)\n      c++;\n    else if (x > t)\n      c += 2;\n  }\n  cout << c << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers n, t\ncreate double vector coord\n\n  read n read t\n  for i = 0 to n exclusive\n    create integers x, a\n    read x read\n    add element 1.0 * x - 1.0 * a / 2 to end of coord\n    add element 1.0 * x + 1.0 * a / 2 to end of coord\n  \n  sort elements from beginning of coord to end of coord\n  create integer ans with ans = 2\n  for i = 1 to size of coord -1 exclusive, incrementing i by 2\n    create double x1, x2 with x1 = coord[i], x2 = coord[i+1]\n    if x2 - x1 is less than t\n      break current loop iteration\n    else if x2 - x1 is t\n      increment ans by 1\n    else\n      increment ans by 2\n  \n  print ans print \"\\n\"\n\n",
        "int n, t;\nvector<double> coord;\nint main() {\n  cin >> n >> t;\n  for (int i = 0; i < n; ++i) {\n    int x, a;\n    cin >> x >> a;\n    coord.push_back(1.0 * x - 1.0 * a / 2);\n    coord.push_back(1.0 * x + 1.0 * a / 2);\n  }\n  sort(coord.begin(), coord.end());\n  int ans = 2;\n  for (int i = 1; i < coord.size() - 1; i += 2) {\n    double x1 = coord[i], x2 = coord[i + 1];\n    if (x2 - x1 < t)\n      continue;\n    else if (x2 - x1 == t)\n      ans += 1;\n    else\n      ans += 2;\n  }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "create integers n and t\ncoord = vector of doubles\n\n  read n and t\n  for integer i = 0 to n exclusive\n    declare integers called x and a\n    read x and a\n    push 1.0 * x - 1.0 * a / 2 into coord\n    push 1.0 * x + 1.0 * a / 2 into coord\n  \n  sort coord\n  create integer ans with value 2\n  for i = 1 to the length of coord - 1 exclusive with increments of 2\n    let double x1 = coord[i] and double x2 = coord[i + 1]\n    if x2 - x1 is less than t\n      go to the start of the loop\n    else if x2 - x1 is equal to t\n      increase ans by 1\n    else\n      increase ans by 2\n  \n  print ans and \"\\n\"\n\n",
        "int n, t;\nvector<double> coord;\nint main() {\n  cin >> n >> t;\n  for (int i = 0; i < n; ++i) {\n    int x, a;\n    cin >> x >> a;\n    coord.push_back(1.0 * x - 1.0 * a / 2);\n    coord.push_back(1.0 * x + 1.0 * a / 2);\n  }\n  sort(coord.begin(), coord.end());\n  int ans = 2;\n  for (int i = 1; i < coord.size() - 1; i += 2) {\n    double x1 = coord[i], x2 = coord[i + 1];\n    if (x2 - x1 < t)\n      continue;\n    else if (x2 - x1 == t)\n      ans += 1;\n    else\n      ans += 2;\n  }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "mod = int with mod = 1e9 + 7\nn = int\nN = const int with N = 50\np, t = int array of size N each\nin function compare taking int a, int b and returning bool\n  if p[a] > p[b] return 1\n  if p[a] is p[b] and t[a] <= t[b] return 1\n  \n\nin function eq taking int a, int b and returning bool\n  if p[a] is p[b] and t[a] is t[b] return 1\n  \n\n\n  k = int\n  read n then k\n  a = int array of size n\n  for i = 0 to n\n    read p[i] then t[i]\n    set a[i] to i\n  \n  call stable_sort on a, a + n, compare\n  c = int with c = 1\n  i = int with i = k - 2\n  loop while i >= 0 and eq of a[k - 1], a[i]\n    increment c\n    decrement i\n  \n  set to k\n  loop while i < n and eq of a[k - 1], a[i]\n    increment c\n    increment i\n  \n  print c\n\n",
        "int mod = (1e9) + 7;\nint n;\nconst int N = 50;\nint p[N], t[N];\nbool compare(int a, int b) {\n  if (p[a] > p[b]) return 1;\n  if (p[a] == p[b] && t[a] <= t[b]) return 1;\n  return 0;\n}\nbool eq(int a, int b) {\n  if (p[a] == p[b] && t[a] == t[b]) return 1;\n  return 0;\n}\nint main() {\n  int k;\n  cin >> n >> k;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> p[i] >> t[i];\n    a[i] = i;\n  }\n  stable_sort(a, a + n, compare);\n  int c = 1;\n  int i = k - 2;\n  while (i >= 0 && eq(a[k - 1], a[i])) {\n    c++;\n    i--;\n  }\n  i = k;\n  while (i < n && eq(a[k - 1], a[i])) {\n    c++;\n    i++;\n  }\n  cout << c << endl;\n}\n"
    ],
    [
        "create ints n, i, p, t, and k and int array a of size 111111\n\n  read n and k\n  for i = 0 to n exclusive\n    read p and t\n    increment a[p * 50 - t]\n  \n  set t to 10000\n  while a[t] is less than k, set k to k - a[t--]\n  print a[t]\n  \n\n",
        "int n, i, a[111111], p, t, k;\nint main() {\n  cin >> n >> k;\n  for (i = 0; i < n; i++) {\n    cin >> p >> t;\n    a[p * 50 - t]++;\n  }\n  t = 10000;\n  while (a[t] < k) k -= a[t--];\n  cout << a[t] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  i, j, n, a, k = int\n  arr = two dimensional int array of sizes 55 and 2\n  read n then k\n  for i = 0 to n\n    for j = 0 to 2 read arr[i][j]\n  \n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] > arr[j][0]\n        tmp = int with tmp = arr[i][0]\n        set arr[i][0] to arr[j][0]\n        set arr[j][0] to tmp\n        set tmp to arr[i][1]\n        set arr[i][1] to arr[j][1]\n        set arr[j][1] to tmp\n      \n    \n  \n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0]\n        if arr[i][1] < arr[j][1]\n          tmp = int with tmp = arr[i][1]\n          set arr[i][1] to arr[j][1]\n          set arr[j][1] to tmp\n        \n      \n    \n  \n  p = int with p = 0 and frr = int array of size 55\n  for i = 0 to n set frr[i] to 0\n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0] and arr[i][1] is arr[j][1] increment frr[p]\n    \n    increment p\n  \n  print frr[k - 1]\n  \n\n",
        "int main() {\n  int i, j, n, a, k;\n  int arr[55][2];\n  cin >> n >> k;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < 2; j++) { cin >> arr[i][j]; }\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] > arr[j][0]) {\n        int tmp = arr[i][0];\n        arr[i][0] = arr[j][0];\n        arr[j][0] = tmp;\n        tmp = arr[i][1];\n        arr[i][1] = arr[j][1];\n        arr[j][1] = tmp;\n      }\n    }\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] == arr[j][0]) {\n        if (arr[i][1] < arr[j][1]) {\n          int tmp = arr[i][1];\n          arr[i][1] = arr[j][1];\n          arr[j][1] = tmp;\n        }\n      }\n    }\n  }\n  int frr[55], p = 0;\n  for (i = 0; i < n; i++) { frr[i] = 0; }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] == arr[j][0] && arr[i][1] == arr[j][1]) { frr[p]++; }\n    }\n    p++;\n  }\n  cout << frr[k - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create new integers n and k\n  read n and k\n  create an array of int int pairs A witn n + 1 element\n  for integer i = 1 to n inclusive\n    read input to A[i].first and A[i].second\n    invert the sign of A[i].first\n  \n  sort A from position 1 to n + 1\n  create integer ans = 0\n  for i = 1 to n inclusive incrementing i\n    if A[i] = A[k], increment ans by one\n  print ans and '\\n'\n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  pair<int, int> A[n + 1];\n  for (int i = 1; i <= n; i++) {\n    cin >> A[i].first >> A[i].second;\n    A[i].first *= -1;\n  }\n  sort(A + 1, A + n + 1);\n  int ans = 0;\n  for (int i = 1; i <= n; i++)\n    if (A[i] == A[k]) ans++;\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  i, j, n, a, k = int\n  arr = two dimensional int array of sizes 55 and 2\n  read n then k\n  for i = 0 to n\n    for j = 0 to 2 read arr[i][j]\n  \n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0]\n        tmp = int with tmp = arr[i][0]\n        set arr[i][0] to arr[j][0]\n        set arr[j][0] to tmp\n        set tmp to arr[i][1]\n        set arr[i][1] to arr[j][1]\n        set arr[j][1] to tmp\n      \n    \n  \n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0]\n        if arr[i][1] < arr[j][1]\n          tmp = int with tmp = arr[i][1]\n          set arr[i][1] to arr[j][1]\n          set arr[j][1] to tmp\n        \n      \n    \n  \n  p = int with p = 0 and frr = int array of size 55\n  for i = 0 to n set frr[i] to 0\n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0] and arr[i][1] is arr[j][1] incrment frr[p]\n    \n    increment p\n  \n  print frr[k - 1]\n\n",
        "int main() {\n  int i, j, n, a, k;\n  int arr[55][2];\n  cin >> n >> k;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < 2; j++) { cin >> arr[i][j]; }\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] > arr[j][0]) {\n        int tmp = arr[i][0];\n        arr[i][0] = arr[j][0];\n        arr[j][0] = tmp;\n        tmp = arr[i][1];\n        arr[i][1] = arr[j][1];\n        arr[j][1] = tmp;\n      }\n    }\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] == arr[j][0]) {\n        if (arr[i][1] < arr[j][1]) {\n          int tmp = arr[i][1];\n          arr[i][1] = arr[j][1];\n          arr[j][1] = tmp;\n        }\n      }\n    }\n  }\n  int frr[55], p = 0;\n  for (i = 0; i < n; i++) { frr[i] = 0; }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] == arr[j][0] && arr[i][1] == arr[j][1]) { frr[p]++; }\n    }\n    p++;\n  }\n  cout << frr[k - 1] << endl;\n}\n"
    ],
    [
        "\n  create ints i, j, n, k, ans1, ans2, and c and int arrays a of size 10000 and b of size 10000\n  read n and k\n  Enter integers for every index of arrays a and b\n  for i = 0 to n exclusive\n    for j = n - 1 to i exclusive\n      if a[j] is greater than a[j - 1]\n        swap the values of a[j] and a[j - 1]\n        swap the values of b[j] and b[j - 1]\n      \n      if a[j] is equal to a[j - 1] and b[j] is less than a[j - 1], swap the values of b[j] and b[j -1]\n    \n  \n  set ans1 to a[k - 1]\n  set ans2 to b[k - 1]\n  for i = 0 and c = 0 to n exclusive\n    if ans1 is equal to a[i] and ans2 is equal to b[i], increment c++\n  \n  print c\n\n",
        "int main() {\n  int a[10000], b[10000], i, j, n, k, ans1, ans2, c;\n  cin >> n >> k;\n  for (i = 0; i < n; i++) cin >> a[i] >> b[i];\n  for (i = 0; i < n; i++) {\n    for (j = n - 1; j > i; j--) {\n      if (a[j] > a[j - 1]) {\n        swap(a[j], a[j - 1]);\n        swap(b[j], b[j - 1]);\n      }\n      if (a[j] == a[j - 1] && b[j] < b[j - 1]) swap(b[j], b[j - 1]);\n    }\n  }\n  ans1 = a[k - 1];\n  ans2 = b[k - 1];\n  for (i = 0, c = 0; i < n; i++) {\n    if (ans1 == a[i] && ans2 == b[i]) c++;\n  }\n  cout << c << endl;\n}\n"
    ],
    [
        "declare const int N = 50 + 5\ncreate integers n, k and res\ncreate an array of int-int pairs a with size N\ndeclare boolean function cmp that takes pairs of int-int a and b as an arguments\n  if a.first is greater than b.first\n    return true\n  else if a.first is equal to b.first\n    if a.second is less than b.second, return true\n    return false\n  else\n    return false\n\ndefine function Input\n  read n and k\n  for i from 1 to n inclusive, read input to a[i].first and a[i].second\n  sort a from position 1 to n + 1 using cmp as a comparator method\n\nfunction Solve\n  declare int problems = a[k].first and penalty=a[k].second\n  for i from 1 to n inclusive\n    if a[i].first = problems and a[i].second is equal to penalty, increment res\n  \n  print res and '\\n'\n\n\n  call Input()\n  call Solve()\n  \n\n",
        "const int N = 50 + 5;\nint n, k, res;\npair<int, int> a[N];\nbool cmp(pair<int, int> a, pair<int, int> b) {\n  if (a.first > b.first)\n    return true;\n  else if (a.first == b.first) {\n    if (a.second < b.second) return true;\n    return false;\n  } else\n    return false;\n}\nvoid Input() {\n  cin >> n >> k;\n  for (int i = 1; i <= n; i++) cin >> a[i].first >> a[i].second;\n  sort(a + 1, a + n + 1, cmp);\n}\nvoid Solve() {\n  int problems = a[k].first, penalty = a[k].second;\n  for (int i = 1; i <= n; i++) {\n    if (a[i].first == problems && a[i].second == penalty) res++;\n  }\n  cout << res << '\\n';\n}\nint main() {\n  Input();\n  Solve();\n  return 0;\n}\n"
    ],
    [
        "create int array a of size 100 containing array of size 100\ndeclare margesort taking in ints l and r and int arrays p and t\ndeclare marge taking in int l, m, and r and int arrays p and t\n\n  let ints n and k and int arrays p of size 100 and t of size 100\n  read n and k\n  for i - 0 to n exclusive\n    read p[i] and t[i]\n    increment a[p[i]][t[i]]\n  \n  call margesort with arguments p, t, 0, and n - 1\n  print a[p[k - 1]][t[k - 1]]\n  \n\ndecalre margesort taking in ints l and r and int arrays p and t\n  if l is less than r\n    let int m = (l + r - 1) / 2\n    call margesort(p, t, l, m)\n    call margesort(p, t, m + 1, r)\n    call margesort with arguments p, t, l, m, and r\n  \n\ndeclare marge taking in ints l, m, and r and int arrays p and t\n  let ints i, j, and k\n  create integer n1 = m - l + 1\n  let integer n2 = r - m\n  create int arrays L of size n1, R of size n2, ll of size n1, and rr of size n2\n  for i = 0 to n1 exclusive\n    set L[i] to p[l + i]\n    set ll[i] to t[l + i]\n  \n  for j = 0 to n2 exclusive\n    set R[j] to p[m + 1 + j]\n    set rr[j] to t[m + 1 + j]\n  \n  set i to 0\n  set j to 0\n  set k to l\n  while i is less than n1 and j is less than n2\n    if L[i] is greater than R[j]\n      set p[k] to L[i]\n      set t[k] to ll[i]\n      increase i by 1\n    else if L[i] is equal to R[j] and ll[i] is less than or equal to rr[j]\n      set p[k] to L[i]\n      set t[k] to ll[i]\n      increment i\n    else\n      set p[k] to R[j]\n      set t[k] to rr[j]\n      increment j\n    \n    increase k by 1\n  \n  while i is less than n1\n    set p[k] to L[i]\n    set t[k] to ll[i]\n    increment i\n    increment k\n  \n  while j is less than n2\n    set p[k] to R[j]\n    set t[k] to rr[j]\n    increment j\n    add 1 to k\n  \n\n",
        "int a[100][100];\nvoid margesort(int p[], int t[], int l, int r);\nvoid marge(int p[], int t[], int l, int m, int r);\nint main() {\n  int n, k, p[100], t[100];\n  cin >> n >> k;\n  for (int i = 0; i < n; i++) {\n    cin >> p[i] >> t[i];\n    a[p[i]][t[i]]++;\n  }\n  margesort(p, t, 0, n - 1);\n  cout << a[p[k - 1]][t[k - 1]] << endl;\n  return 0;\n}\nvoid margesort(int p[], int t[], int l, int r) {\n  if (l < r) {\n    int m = (l + r - 1) / 2;\n    margesort(p, t, l, m);\n    margesort(p, t, m + 1, r);\n    marge(p, t, l, m, r);\n  }\n}\nvoid marge(int p[], int t[], int l, int m, int r) {\n  int i, j, k;\n  int n1 = m - l + 1;\n  int n2 = r - m;\n  int L[n1], R[n2], ll[n1], rr[n2];\n  for (i = 0; i < n1; i++) {\n    L[i] = p[l + i];\n    ll[i] = t[l + i];\n  }\n  for (j = 0; j < n2; j++) {\n    R[j] = p[m + 1 + j];\n    rr[j] = t[m + 1 + j];\n  }\n  i = 0;\n  j = 0;\n  k = l;\n  while (i < n1 && j < n2) {\n    if (L[i] > R[j]) {\n      p[k] = L[i];\n      t[k] = ll[i];\n      i++;\n    } else if (L[i] == R[j] && ll[i] <= rr[j]) {\n      p[k] = L[i];\n      t[k] = ll[i];\n      i++;\n    } else {\n      p[k] = R[j];\n      t[k] = rr[j];\n      j++;\n    }\n    k++;\n  }\n  while (i < n1) {\n    p[k] = L[i];\n    t[k] = ll[i];\n    i++;\n    k++;\n  }\n  while (j < n2) {\n    p[k] = R[j];\n    t[k] = rr[j];\n    j++;\n    k++;\n  }\n}\n"
    ],
    [
        "\n  declare integers n, k\n  read n read k\n  declare pair of integer, integer array a size 50\n  for i = 0 to n exclusive\n    read first element for a[i], second element of a[i]\n    let first element of a[i] be first element of a[i] * -1\n  \n  sort elements from a to a + n\n  print result of run count with a, a + n, a[k - 1] as arguments, newline\n  return 0 from function\n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  pair<int, int> a[50];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i].first >> a[i].second;\n    a[i].first *= -1;\n  }\n  sort(a, a + n);\n  cout << count(a, a + n, a[k - 1]) << endl;\n  return (0);\n}\n"
    ],
    [
        "n, i, p, t, k = int and a = int array of size 111111\n\n  read n then k\n  for i = 0 to n\n    read p then t\n    increment a[p * 50 - t]\n  \n  set t to 2500\n  loop while a[t] is less than k decrement k by a[t] then decrement t\n  print a[t]\n  \n\n",
        "int n, i, a[111111], p, t, k;\nint main() {\n  cin >> n >> k;\n  for (i = 0; i < n; i++) {\n    cin >> p >> t;\n    a[p * 50 - t]++;\n  }\n  t = 2500;\n  while (a[t] < k) k -= a[t--];\n  cout << a[t] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m, i, j, k, a, b, create integer array x with size 51\n  while read n read m\n    set j to 0\n    for i = 0 to n exclusive\n      read a read b\n      set x[i] to a * 50 - b\n    \n    sort elements from x to x + n\n    for i = 0 to n exclusive\n      if x[i] is x[n-m], increment j\n    \n    print j print newline\n  \n  \n\n",
        "int main() {\n  int n, m, x[51], i, j, k, a, b;\n  while (cin >> n >> m) {\n    j = 0;\n    for (i = 0; i < n; i++) {\n      cin >> a >> b;\n      x[i] = a * 50 - b;\n    }\n    sort(x, x + n);\n    for (i = 0; i < n; i++) {\n      if (x[i] == x[n - m]) { j++; }\n    }\n    cout << j << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare int variables n and d\n  declare double variable a\n  read n, a and d\n  create an arrays of long longs t and v with n elements\n  loop i from 0 to n exclusive, read t[i] and v[i]\n  declare long double T = 0\n  loop i from 0 to n exclusive\n    if v[i] * v[i] >= 2 * a * d\n      T = max of t[i] + sqrt((2.0 * d) / a and T\n    else\n      create long double t1 = v[i] / a\n      create long double s = (v[i] * v[i]) / (2 * a)\n      T = max of T and t[i] + t1 + ((d - s) / v[i])\n    \n    set output decimal precision to 12 and print T\n  \n\n",
        "int main() {\n  int n, d;\n  double a;\n  cin >> n >> a >> d;\n  long long t[n], v[n];\n  for (int i = 0; i < n; i++) cin >> t[i] >> v[i];\n  long double T = 0;\n  for (int i = 0; i < n; i++) {\n    if (v[i] * v[i] >= 2 * a * d) {\n      T = max((long double)t[i] + sqrt((2.0 * d) / a), T);\n    } else {\n      long double t1 = v[i] / a;\n      long double s = (v[i] * v[i]) / (2 * a);\n      T = max(T, (long double)t[i] + t1 + ((d - s) / v[i]));\n    }\n    cout << setprecision(12) << T << endl;\n  }\n}\n"
    ],
    [
        "maxn = const int with maxn = 2e5 + 10\nn, a, b = int and arr = int array of size maxn\n\n  read n then a then b\n  read n values into arr\n  sort arr\n  print arr[b] - arr[b - 1]\n\n",
        "const int maxn = 2e5 + 10;\nint arr[maxn], n, a, b;\nint main() {\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  sort(arr, arr + n);\n  cout << arr[b] - arr[b - 1] << endl;\n}\n"
    ],
    [
        "\n  n =integer with 0\n  a =integer with 0\n  b =integer with 0\n  Read n\n  Read a\n  Read b\n  h = array of 2000 integers\n  Read n values into array h\n  sort array elements of h in ascending order\n  print h[b] - h[b - 1] and a new line\n  \n\n",
        "int main() {\n  int n = 0;\n  int a = 0;\n  int b = 0;\n  cin >> n;\n  cin >> a;\n  cin >> b;\n  int h[2000];\n  for (int i = 0; i < n; i++) cin >> h[i];\n  sort(h, h + n);\n  cout << h[b] - h[b - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array arr of length 2005\n\n  create integers a, b, and c\n  read a, b, and c\n  for i = 0 to a exclusive, read arr[i]\n  sort array arr\n  create integer mn = arr[c - 1]\n  create integer mx = arr[c] - 1\n  print the max of 0 and mx - mn + 1\n\n",
        "int arr[2005];\nint main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  for (int i = 0; i < a; i++) { cin >> arr[i]; }\n  sort(arr, arr + a);\n  int mn = arr[c - 1];\n  int mx = arr[c] - 1;\n  cout << max(0, mx - mn + 1) << endl;\n}\n"
    ],
    [
        "\n  n, a, b, i = long long int\n  read n then a then b\n  p = long long int array of size n\n  read n values into p\n  sort p\n  x = long long int with x = p[n - a] - p[b - 1]\n  print x\n\n",
        "int main() {\n  long long int n, a, b, i;\n  cin >> n >> a >> b;\n  long long int p[n];\n  for (i = 0; i < n; i++) cin >> p[i];\n  sort(p, p + n);\n  long long int x = p[n - a] - p[b - 1];\n  cout << x << endl;\n}\n"
    ],
    [
        "create ints n, a and b\ndeclare integer array x with 2005 elements\n\n  read n, a and b\n  for i from 0 to n exclusive, read input to x[i]\n  sort x\n  print x[b] - x[b - 1] and '\\n'\n\n",
        "int n, a, b;\nint x[2005];\nint main() {\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) cin >> x[i];\n  sort(x, x + n);\n  cout << x[b] - x[b - 1] << '\\n';\n}\n"
    ],
    [
        "\n  create integers n, a, b\n  read n read a read b\n  create integer array p with size n\n  for i = 0 to n exclusive, read p[i]\n  sort elements from p to p + n\n  create long long count with count = 0\n  if p[b-1] is not p[b]\n    increment count by p[b] - p[b-1]\n    print count print newline\n  else\n    print \"0\" print newline\n  \n  \n\n",
        "int main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  int p[n];\n  for (int i = 0; i < n; i++) { cin >> p[i]; }\n  sort(p, p + n);\n  long long count = 0;\n  if (p[b - 1] != p[b]) {\n    count += p[b] - p[b - 1];\n    cout << count << endl;\n  } else {\n    cout << \"0\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create string T\ncreate long long N, K, M, A, B, C[2005], D, sum\n\n  read N, A and B\n  for i=1 to N inclusive, read C[i]\n  sort elements between C+1 and C + N + 1\n  print C[B + 1] - C[B] and a newline\n\n",
        "string T;\nlong long N, K, M, A, B, C[2005], D, sum;\nint main() {\n  cin >> N >> A >> B;\n  for (int i = 1; i <= N; i++) { cin >> C[i]; }\n  sort(C + 1, C + N + 1);\n  cout << C[B + 1] - C[B] << '\\n';\n}\n"
    ],
    [
        "\n  create ints n, a, b and way\n  read n, a and b\n  create int pointer *chore to the new array of int with n elements\n  loop i from 0 to n exclusive, read chore[i]\n  sort chore\n  declare int j = n - 1\n  decrement j while j > n - a\n  if chore[j] = chore[j - 1]\n    print 0 and \"\\n\"\n  else\n    print chore[j] - chore[j - 1] and \"\\n\"\n  \n\n",
        "int main() {\n  int n, a, b, way;\n  cin >> n >> a >> b;\n  int *chore = new int[n];\n  for (int i = 0; i < n; i++) cin >> chore[i];\n  sort(chore, chore + n);\n  int j = n - 1;\n  while (j > n - a) { j--; }\n  if (chore[j] == chore[j - 1])\n    cout << 0 << \"\\n\";\n  else\n    cout << chore[j] - chore[j - 1] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "define int constant maxn, set to 5e3 + 5\ndefine unsigned integer constant base, set to 311\ndefine unsigned integer array A to be of maxn elements\n\n  define integer N\n  read N\n  define integers a and b\n  read a, b\n  for int i from 1 to N by 1, read A[i]\n  sort(A + 1, A + N + 1)\n  print A[b + 1] - A[b] and a newline\n  \n\n",
        "const int maxn = 5e3 + 5;\nconst unsigned long long base = 311;\nunsigned long long A[maxn];\nint main() {\n  int N;\n  cin >> N;\n  int a, b;\n  cin >> a >> b;\n  for (int i = (1); i <= (N); i += (1)) cin >> A[i];\n  sort(A + 1, A + N + 1);\n  cout << A[b + 1] - A[b] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create int a, b, n, i, au, nx\n  read n\n  read a and b\n  create vector int c\n  for i=0 to n exclusive\n    read au\n    put au at the end of c\n  \n  sort c\n  set nx to c[b] - c[b - 1]\n  print nx and a newline\n  \n\n",
        "int main() {\n  int a, b, n, i, au, nx;\n  cin >> n;\n  cin >> a >> b;\n  vector<int> c;\n  for (i = 0; i < n; i++) {\n    cin >> au;\n    c.push_back(au);\n  }\n  sort(c.begin(), c.end());\n  nx = c[b] - c[b - 1];\n  cout << nx << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b, i, ans = int\n  read n then a then b\n  f = int vector of size n\n  read n values into f\n  sort f from rbegin to rend\n  set ans to n, a, b, i, ans\n  print ans\n  \n\n",
        "int main() {\n  int n, a, b, i, ans;\n  cin >> n >> a >> b;\n  vector<int> f(n);\n  for (i = 0; i < n; i++) cin >> f[i];\n  sort(f.rbegin(), f.rend());\n  ans = -(f[a] - f[a - 1]);\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b = int\n  read n then a then b\n  V = int vector of size n\n  read n values into V\n  sort V\n  print V[b] - V[b - 1]\n  \n\n",
        "int main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  vector<int> V(n);\n  for (int i = 0; i < n; ++i) cin >> V[i];\n  sort(V.begin(), V.end());\n  cout << V[b] - V[b - 1] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "N=1000055\nM=1000000007\nn,a,b=int\nv=vector of int\n\n  read n,a,b\n  for i=1 to n inclusive\n    q=int\n    read q\n    add q to end of v\n  \n  sort v\n  q=v[n-1]-v[n-a-1]\n  if q <= 0\n    print 0\n    exit\n  \n  print q\n  \n\n",
        "const int N = 1e6 + 55;\nconst int M = 1e9 + 7;\nint n, a, b;\nvector<int> v;\nint main() {\n  cin >> n >> a >> b;\n  for (int i = 1; i <= n; ++i) {\n    int q;\n    cin >> q;\n    v.push_back(q);\n  }\n  sort(v.begin(), v.end());\n  int q = v[n - a] - v[n - a - 1];\n  if (q <= 0) {\n    cout << 0 << endl;\n    exit(0);\n  }\n  cout << q << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  a = int\n  b = int\n  complexity = int vector\n  read n then a then b\n  i = int with i = 0\n  loop while i is less than n incrementing i each time\n    tmp = int\n    read tmp\n    append tmp to complexity\n  \n  sort complexity\n  cnt = int with cnt = 0\n  for i = complexity[b - 1] to complexity[b] increment cnt\n  print cnt\n\n",
        "int main() {\n  int n;\n  int a;\n  int b;\n  vector<int> complexity;\n  cin >> n >> a >> b;\n  int i = 0;\n  for (; i < n; i++) {\n    int tmp;\n    cin >> tmp;\n    complexity.push_back(tmp);\n  }\n  sort(complexity.begin(), complexity.end());\n  int cnt = 0;\n  for (i = complexity[b - 1]; i < complexity[b]; i++) { cnt++; }\n  cout << cnt << endl;\n}\n"
    ],
    [
        "\n  let n, a, b, i be long integers\n  read n , a, b\n  let c[n] be long integer\n  for i = 0 to n exclusive , read ith element of c\n  sort the values of c and c + n\n  print c[b] - c[b - 1] and newline\n  \n\n",
        "int main() {\n  long long n, a, b, i;\n  cin >> n >> a >> b;\n  long long c[n];\n  for (i = 0; i < n; i++) { cin >> c[i]; }\n  sort(c, c + n);\n  cout << c[b] - c[b - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, a, b\n  create integer vector h\n  read n read a read b\n  resize vector to size n\n  for i = 0 to n exclusive, read h[i]\n  sort elements from beginning of h to end of h using integer greater function to compare\n  create integer min_petya with min_petya = h[a-1]\n  create max_vasya with max_vasya = h[a]\n  if min_petya is max_vasya\n    print 0 print newline\n  else\n    print min_petya - max_vasya print newline\n  \n  \n\n",
        "int main() {\n  int n, a, b;\n  vector<int> h;\n  cin >> n >> a >> b;\n  h.resize(n);\n  for (int i = 0; i < n; i++) { cin >> h[i]; }\n  sort(h.begin(), h.end(), greater<int>());\n  int min_petya = h[a - 1];\n  int max_vasya = h[a];\n  if (min_petya == max_vasya) {\n    cout << 0 << endl;\n  } else {\n    cout << min_petya - max_vasya << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "N = const long long with N = 1e9 + 3\nMN = const long long with MN = 1e9 + 7\nMX = const long long with MX = -1e9 - 7\nn, a, b, x, c1, c2, cnt = long long\ns, s1 = string\nbl = bool with bl = false\nc = long long\npr = pair of long long and long long\nv = vector of long long\nmp = map from long long to long long\nst = set of long long\niterator it = set of long long\n\n  read n, a, b\n  for i = 0 to n exclusive\n    read x\n    append x in v\n  \n  sort v.begin() and v.end()\n  if v[b - 1] is v[b]\n    print 0\n  else\n    print v[b] - v[b - 1]\n  \n  print new line\n  \n\n",
        "const long long N = 1e9 + 3;\nconst long long MN = 1e9 + 7;\nconst long long MX = -1e9 - 7;\nlong long n, a, b, x, c1, c2, cnt;\nstring s, s1;\nbool bl = false;\nlong long c;\npair<long long, long long> pr;\nvector<long long> v;\nmap<long long, long long> mp;\nset<long long> st;\nset<long long>::iterator it;\nint main() {\n  cin >> n >> a >> b;\n  for (long long i = 0; i < n; i++) {\n    cin >> x;\n    v.push_back(x);\n  }\n  sort(v.begin(), v.end());\n  if (v[b - 1] == v[b]) {\n    cout << 0;\n  } else {\n    cout << v[b] - v[b - 1];\n  }\n  cout << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integer vector h\n  create integers a, b, n, num\n  read n read a read b\n  for i = 0 to n exclusive\n    read num\n    add element num to end of h\n  \n  sort elements from beginning of h to end of h\n  if h[b-1] is h[b]\n    print 0 print newline\n  else\n    print h[b] - h[b-1] print newline\n  \n\n",
        "int main() {\n  vector<int> h;\n  int a, b, n, num;\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) {\n    cin >> num;\n    h.push_back(num);\n  }\n  sort(h.begin(), h.end());\n  if (h[b - 1] == h[b])\n    cout << 0 << endl;\n  else\n    cout << h[b] - h[b - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long int n, a, b, kount, x, set kount = 0\n  create vector long long int h\n  read n, a and b\n  for i=0 to n exclusive\n    read x\n    add x to end of h\n  \n  sort h\n  if h[b - 1] different from h[b], set kount to h[b] - h[b - 1]\n  print kount\n  \n\n",
        "int main() {\n  long long int n, a, b, kount = 0, x;\n  vector<long long int> h;\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    h.push_back(x);\n  }\n  sort(h.begin(), h.end());\n  if (h[b - 1] != h[b]) { kount = h[b] - h[b - 1]; }\n  cout << kount << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, a and b\n  read n, a and b\n  create vector int h(n)\n  for i=0 to n exclusive, read h[i]\n  sort vector h\n  print h[b] - h[b - 1] and a newline\n  \n\n",
        "int main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  vector<int> h(n);\n  for (int i = 0; i < n; i++) { cin >> h[i]; }\n  sort(h.begin(), h.end());\n  cout << h[b] - h[b - 1] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "integer function selsort with an array of long long argument arr and int argument n\n  loop i from 0 to n - 1 exclusive\n    declare integer min = i\n    for j = to n exclusive\n      if arr[j] is less than arr[min], set min to j\n    \n    create long long t with value arr[i]\n    set arr[i] to arr[min]\n    assign t to arr[min]\n  \n\n\n  declare integers n, a and b\n  read n, a and b\n  let arr be long long array with size n\n  loop i from 0 to n exclusive, read input to arr[i]\n  call selsort(arr, n)\n  print arr[n - a] - arr[n - a - 1] and \"\\n\"\n\n",
        "int selsort(long long arr[], int n) {\n  for (int i = 0; i < n - 1; i++) {\n    int min = i;\n    for (int j = i + 1; j < n; j++) {\n      if (arr[j] < arr[min]) { min = j; }\n    }\n    long long t = arr[i];\n    arr[i] = arr[min];\n    arr[min] = t;\n  }\n}\nint main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  long long arr[n];\n  for (int i = 0; i < n; i++) { cin >> arr[i]; }\n  selsort(arr, n);\n  cout << arr[n - a] - arr[n - a - 1] << \"\\n\";\n}\n"
    ],
    [
        "create integer array h with size 2000\n\n  create integers n, a, b\n  read n read a read b\n  for i = 0 to n exclusive, read h[i]\n  sort elements from h to h + n\n  create integer ans with ans = h[b] - h[b-1]\n  print ans print newline\n  \n\n",
        "int h[2000];\nint main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) { cin >> h[i]; }\n  sort(h, h + n);\n  int ans = h[b] - h[b - 1];\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, n, i =integers\n  Read a, b, n\n  C = array of n integers\n  Read n values into array C\n  sort array elements of C in ascending order\n  print C[b] - C[b - 1] and a new line\n\n",
        "int main() {\n  int a, b, n, i;\n  cin >> n >> a >> b;\n  int C[n];\n  for (i = 0; i < n; i++) cin >> C[i];\n  sort(C, C + n);\n  cout << C[b] - C[b - 1] << endl;\n}\n"
    ],
    [
        "create integers n, a, and b\nlet chores be an array of integers of length 2000\n\n  read n, a, and b\n  for i to n exclusive, read chores[i]\n  sort arrary chores\n  output chores[b] - chores[b - 1] and new line\n\n",
        "int n, a, b;\nint chores[2000];\nint main() {\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) { cin >> chores[i]; }\n  sort(chores, chores + n);\n  cout << chores[b] - chores[b - 1] << '\\n';\n}\n"
    ],
    [
        "\n  n, a, b, m =integers and c = array of 2555 integers\n  Read n, a, b\n  Read n values into array c\n  sort array elements of c in ascending order\n  set m to c[b] - c[b - 1]\n  print m and a new line\n\n",
        "int main() {\n  long long int n, a, b, c[2555], m;\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) cin >> c[i];\n  sort(c, c + n);\n  m = c[b] - c[b - 1];\n  cout << m << endl;\n}\n"
    ],
    [
        "\n  n and b = integers\n  read n and b\n  create vector of integers V with n elements\n  read n elements into V\n  assign value b to the integer total\n  for integer i = 0 to n exclusive, add V[i] to the total\n  double t = total / n\n  create vector of doubles ans with n elements\n  for integer i = 0 to n exclusive\n    if V[i] is greater than t\n      print \"-1\\n\"\n      \n    \n    assign value of t - V[i] to the ans[i]\n  \n  print fixed and set decimal precision to 10\n  for integer i = 0 to n exclusive print ans[i]\n  \n\n",
        "int main() {\n  int n, b;\n  cin >> n >> b;\n  vector<int> V(n);\n  for (int i = 0; i < n; ++i) cin >> V[i];\n  int total = b;\n  for (int i = 0; i < n; ++i) total += V[i];\n  double t = (double)total / n;\n  vector<double> ans(n);\n  for (int i = 0; i < n; ++i) {\n    if (V[i] > t) {\n      cout << \"-1\\n\";\n      return 0;\n    }\n    ans[i] = t - V[i];\n  }\n  cout << fixed << setprecision(10);\n  for (int i = 0; i < n; ++i) cout << ans[i] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create integer arrays p of size 101 within an array of size 101, ai of size 1000, bi of size 1000\ncreate unsigned integer array ci of size 1000\n\n  created unsigned integers n, m, and k\n  read n, m, and k\n  create string u\n  create unsigned integer o = 0\n  for i = 0 to n exclusive\n    read u\n    for j = 0 to m exclusive\n      create unsigned integer ix = o + j\n      read ai[ix], bi [ix], ci[ix]\n    \n    set o to the result of o + m\n  \n  created unsigned integer e = n * m\n  create integer ma = 0\n  for u = 0 to e exclusive in increments of m\n    for v = 0 to e exclusive in increments of m\n      if u is equal to v, continue to next loop iteration\n      for i = 1 to m inclusive\n        created unsigned integer ix = u + i -1\n        for j = 1 to k inclusive\n          create integer mx = p[j][i - 1]\n          for x = 1 to ci[ix] inclusive and j inclusive\n            create integer mm = p[j - x][i - 1] + (bi[v + i - 1] - ai[ix]) * x\n            if mm is greater than mx, set mx to mm\n          \n          set p[j][i] to mx\n        \n      \n      if p[k][m] is greater than ma, set ma to p[k][m]\n    \n  \n  print ma\n  \n\n",
        "int p[101][101], ai[1000], bi[1000];\nunsigned int ci[1000];\nint main() {\n  unsigned int n, m, k;\n  cin >> n >> m >> k;\n  string u;\n  unsigned int o = 0;\n  for (unsigned int i = 0; i < n; ++i) {\n    cin >> u;\n    for (unsigned int j = 0; j < m; ++j) {\n      unsigned int ix = o + j;\n      cin >> ai[ix] >> bi[ix] >> ci[ix];\n    }\n    o += m;\n  }\n  unsigned int e = n * m;\n  int ma = 0;\n  for (unsigned int u = 0; u < e; u += m) {\n    for (unsigned int v = 0; v < e; v += m) {\n      if (u == v) continue;\n      for (unsigned int i = 1; i <= m; ++i) {\n        unsigned int ix = u + i - 1;\n        for (unsigned int j = 1; j <= k; ++j) {\n          int mx = p[j][i - 1];\n          for (unsigned int x = 1; x <= ci[ix] && x <= j; ++x) {\n            int mm = p[j - x][i - 1] + (bi[v + i - 1] - ai[ix]) * x;\n            if (mm > mx) mx = mm;\n          }\n          p[j][i] = mx;\n        }\n      }\n      if (p[k][m] > ma) ma = p[k][m];\n    }\n  }\n  cout << ma << endl;\n  return 0;\n}\n"
    ],
    [
        "create 2d array of integers a with size 15 by 105\ncreate 2d array of integers b with size 15 by 105\ncreate 2d array of integers c with size 15 by 105\ndeclare boolean array vis with 105 elements\ndeclare ints n, m and k\nfunction Cal with int arguments x and y that returns int\n  set first sizeof vis bytes at the pointer vis to 0\n  if x = y, return -1\n  declare int variable cost = k\n  create int ans = 0\n  while cost != 0\n    create integer flag\n    declare integer maxgas = 0\n    declare integer variable dp = 1\n    for integer i = 1 to m inclusive\n      if vis[i] is true, skip the rest of the loop\n      if b[y][i] - a[x][i] is greater than maxgas\n        assign 0 to dp\n        assign b[y][i] - a[x][i] to maxgas\n        change flag to i\n      \n    \n    if dp is true, break the loop\n    set vis[flag] to 1\n    add min of cost and c[x][flag] * maxgas to ans\n    decrease cost by min of cost and c[x][flag]\n  \n  return ans\n\n\n  set first sizeof vis bytes at the pointer vis to 0\n  read n, m and k\n  for i = 1 to n inclusive\n    create string s\n    read input to s\n    for j from 1 to m inclusive, read a[i][j], b[i][j] and c[i][j]\n  \n  declare int variable ans = 0\n  change i from 1 to n inclusive in a loop\n    change j from 1 to n inclusive in a loop, setting ans to max of ans and Cal(i, j)\n  \n  print ans\n\n",
        "int a[15][105];\nint b[15][105];\nint c[15][105];\nbool vis[105];\nint n, m, k;\nint Cal(int x, int y) {\n  memset(vis, 0, sizeof vis);\n  if (x == y) return -1;\n  int cost = k;\n  int ans = 0;\n  while (cost) {\n    int flag;\n    int maxgas = 0;\n    int dp = 1;\n    for (int i = 1; i <= m; i++) {\n      if (vis[i]) continue;\n      if (b[y][i] - a[x][i] > maxgas) {\n        dp = 0;\n        maxgas = b[y][i] - a[x][i];\n        flag = i;\n      }\n    }\n    if (dp) break;\n    vis[flag] = 1;\n    ans += min(cost, c[x][flag]) * maxgas;\n    cost -= min(cost, c[x][flag]);\n  }\n  return ans;\n}\nint main() {\n  memset(vis, 0, sizeof vis);\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++) {\n    string s;\n    cin >> s;\n    for (int j = 1; j <= m; j++) { cin >> a[i][j] >> b[i][j] >> c[i][j]; }\n  }\n  int ans = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) { ans = max(ans, Cal(i, j)); }\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "n,m,k=int\na,b,c=array of 11 by 111 int\nf=array of 111 int\n\n  read n,m,k\n  for i=0 to n exclusive\n    name=string\n    read name\n    for j=0 to m exclusive read a[i][j], b[i][j], c[i][j]\n  \n  ans=0\n  for st=0 to n exclusive\n    for fn=0 to n exclusive\n      if st is not fn\n        cst and num=array of 111 int\n        for j=0 to m exclusive\n          cst[j]=b[fn][j]-a[st][j]\n          num[j]=c[st][j]\n        \n        fill f with -1\n        f[0]=0\n        for j=0 to m exclusive\n          for cnt=0 to num[j] exclusive\n            for pos=k-1 down to 0 inclusive\n              if f[pos] >= 0 f[pos+1] = max(f[pos+1], f[pos]+cst[j])\n        ans=max(ans, element pointed by max_element(f, f+k+1))\n      \n  pritn ans\n\n",
        "int n, m, k;\nint a[11][111], b[11][111], c[11][111];\nint f[111];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; ++i) {\n    string name;\n    cin >> name;\n    for (int j = 0; j < m; ++j) { cin >> a[i][j] >> b[i][j] >> c[i][j]; }\n  }\n  int ans = 0;\n  for (int st = 0; st < n; ++st)\n    for (int fn = 0; fn < n; ++fn)\n      if (st != fn) {\n        int cst[111], num[111];\n        for (int j = 0; j < m; ++j) {\n          cst[j] = b[fn][j] - a[st][j];\n          num[j] = c[st][j];\n        }\n        memset(f, -1, sizeof(f));\n        f[0] = 0;\n        for (int j = 0; j < m; ++j)\n          for (int cnt = 0; cnt < num[j]; ++cnt)\n            for (int pos = k - 1; pos >= 0; --pos)\n              if (f[pos] >= 0) f[pos + 1] = max(f[pos + 1], f[pos] + cst[j]);\n        ans = max(ans, *max_element(f, f + k + 1));\n      }\n  cout << ans << endl;\n}\n"
    ],
    [
        "let a, b, c be int matrices of size 11x101, and d, e int arrays of length 101\nlet x, y be ints\nlet n, m, kkk, maxn be ints\nin boolean function cmp that takes int x, int y\n  return d[x] > d[y]\n\n\n  read n, m, kkk\n  for i = 0 to n exclusive\n    cc = string\n    read cc\n    for j = 0 to m exclusive, read a[i][j], b[i][j], c[i][j]\n  \n  for i = 0 to n exclusive\n    let ans be an int\n    for j = 0 to n exclusive\n      set ans to 0\n      if i is different from j\n        reset d to all 0\n        for k = 0 to m exclusive set e[k] to k\n        for k = 0 to m exclusive, set d[k] to b[j][k] - a[i][k]\n        sort the first m elements of e using cmp\n        let kk = kkk be an int\n        let p be an integer\n        set p = 0\n        while p < m and kk is positive\n          if d[e[p]] is negative or zero\n            set kk to 0\n            exit loop\n          \n          if c[i][e[p]] <= kk\n            increment ans by c[i][e[p]] * d[e[p]]\n            decrement kk by c[i][e[p]]\n            increment p\n          else\n            increment ans by kk * d[e[p]]\n            set kk to 0\n          \n        \n        if ans > maxn\n          set maxn to ans\n          set x = i\n          set y = j\n        \n      \n    \n  \n  print maxn\n\n",
        "int a[11][101], b[11][101], c[11][101], d[101], e[101];\nint x, y;\nint n, m, kkk, maxn;\nbool cmp(int x, int y) {\n  return d[x] > d[y];\n}\nint main() {\n  cin >> n >> m >> kkk;\n  for (int i = 0; i < n; i++) {\n    string cc;\n    cin >> cc;\n    for (int j = 0; j < m; j++) cin >> a[i][j] >> b[i][j] >> c[i][j];\n  }\n  for (int i = 0; i < n; i++) {\n    int ans;\n    for (int j = 0; j < n; j++) {\n      ans = 0;\n      if (i != j) {\n        memset(d, 0, sizeof(d));\n        for (int k = 0; k < m; k++) e[k] = k;\n        for (int k = 0; k < m; k++) { d[k] = b[j][k] - a[i][k]; }\n        sort(e, e + m, cmp);\n        int kk = kkk;\n        int p;\n        p = 0;\n        while ((p < m) && (kk > 0)) {\n          if (d[e[p]] <= 0) {\n            kk = 0;\n            break;\n          }\n          if (c[i][e[p]] <= kk) {\n            ans = ans + c[i][e[p]] * d[e[p]];\n            kk = kk - c[i][e[p]];\n            p = p + 1;\n          } else {\n            ans = ans + kk * d[e[p]];\n            kk = 0;\n          }\n        }\n        if (ans > maxn) {\n          maxn = ans;\n          x = i;\n          y = j;\n        }\n      }\n    }\n  }\n  cout << maxn << endl;\n}\n"
    ],
    [
        "declare const int MOD = 1e9 + 7\ncreate integers n, m and k\ncreate 2d arrays of integers a, b and c with size 10 by 100\ninteger function solve with int arguments u and v\n  create vector of integers profits\n  for i = 0 to m exclusive\n    loop j from 0 to c[u][i] exclusive, push max of 0 and b[v][i]-a[u][i] into profits\n  sort profits\n  declare integer variable ans = 0\n  for i = 0 to min of k and length of profits exclusive, increase ans by profits[i]\n  return ans\n\n\n  read n, m and k\n  for i = 0 to n exclusive\n    declare string variable name\n    read name\n    loop j from 0 to m exclusive, read a[i][j], b[i][j] and c[i][j]\n  \n  create integer ans = 0\n  for i from 0 to n exclusive\n    for j from 0 to n exclusive, assign max of ans and solve(i, j) to ans\n  print ans and '\\n'\n\n",
        "const int MOD = 1e9 + 7;\nint n, m, k;\nint a[10][100], b[10][100], c[10][100];\nint solve(int u, int v) {\n  vector<int> profits;\n  for (int i = 0; i < m; ++i)\n    for (int j = 0; j < c[u][i]; ++j) profits.push_back(max(0, b[v][i] - a[u][i]));\n  sort(profits.rbegin(), profits.rend());\n  int ans = 0;\n  for (int i = 0; i < min(k, (int)profits.size()); ++i) ans += profits[i];\n  return ans;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; ++i) {\n    string name;\n    cin >> name;\n    for (int j = 0; j < m; ++j) cin >> a[i][j] >> b[i][j] >> c[i][j];\n  }\n  int ans = 0;\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j < n; ++j) ans = max(ans, solve(i, j));\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "declare arrays of integers a, b and c with size 105 by 105 and integer variables n, m and k\nfunction buy with int arguments x and y that returns int\n  create an array of integers v with size 105\n  let ans and i be integers with ans = 0\n  declare integer variable last = k\n  while last is not 0\n    declare integer variable maxn = 0\n    declare int maxi\n    declare integer variable num\n    for i from 1 to m inclusive\n      if v[i] is true, skip the rest of the loop\n      if b[y][i] - a[x][i] is greater than maxn\n        assign i to maxi\n        set maxn to b[y][i] - a[x][i]\n      \n    \n    if maxn = 0, stop the loop\n    change num to min of last and c[x][maxi]\n    add num * maxn to ans\n    assign 1 to v[maxi]\n    decrease last by num\n  \n  return ans\n\n\n  declare ints i and j\n  declare string variable s\n  read n, m and k\n  loop i from 1 to n inclusive\n    read input to s\n    read a[i][j], b[i][j] and c[i][j] m times\n  \n  create int ans = 0\n  for i = 1 to n inclusive\n    loop j from 1 to n inclusive, change ans to max of ans and buy(i, j)\n  \n  print ans\n  \n\n",
        "int a[105][105], b[105][105], c[105][105], n, m, k;\nint buy(int x, int y) {\n  int v[105] = {0};\n  int ans = 0, i;\n  int last = k;\n  while (last) {\n    int maxn = 0;\n    int maxi;\n    int num;\n    for (i = 1; i <= m; i++) {\n      if (v[i]) continue;\n      if (b[y][i] - a[x][i] > maxn) {\n        maxi = i;\n        maxn = b[y][i] - a[x][i];\n      }\n    }\n    if (maxn == 0) break;\n    num = min(last, c[x][maxi]);\n    ans += num * maxn;\n    v[maxi] = 1;\n    last -= num;\n  }\n  return ans;\n}\nint main() {\n  int i, j;\n  string s;\n  cin >> n >> m >> k;\n  for (i = 1; i <= n; i++) {\n    cin >> s;\n    for (j = 1; j <= m; j++) { cin >> a[i][j] >> b[i][j] >> c[i][j]; }\n  }\n  int ans = 0;\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= n; j++) { ans = max(ans, buy(i, j)); }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integers Maxn, Maxm with Maxn = 15, Maxm = 100 + 5\ncreate integers n, m, k, ans create 2d integer arrays a, b, c, with a size Maxn by Maxm, b size Maxn by Maxm, c size Maxn by Maxm\n\n  read n read m read k\n  create string s\n  for i = 0 to n exclusive\n    read s\n    for j = 0 to m exclusive, read a[i][j] read b[i][j] read c[i][j]\n  \n  create pair of integer, integer array d with size Maxm\n  for i = 0 to n exclusive\n    for j = 0 to n exclusive\n      for l = 0 to m exclusive, set d[l] to make pair from ( b[j][l] - a[i][l] and c[i][l] )\n      sort elements from d to d + m\n      reverse sort elements from d to d + m\n      create integers num, p, cnt with num = 0, p = 0, cnt = 0\n      while p is less than m and cnt + second element of d[p] is less than or equal to k\n        if first element of d[p] is less than 0, break loop\n        increment cnt by second element of d[p]\n        increment num by first element of d[p] * second eleement of d[p]\n        increment p\n      \n      if first element of d[p] is greater than 0, increment num by first element of d[p] * ( k - cnt )\n      set ans to maximum of ans and num\n    \n  \n  print ans print newline\n  \n\n",
        "const int Maxn = 15, Maxm = 100 + 5;\nint n, m, k, a[Maxn][Maxm], b[Maxn][Maxm], c[Maxn][Maxm], ans;\nint main() {\n  cin >> n >> m >> k;\n  string s;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    for (int j = 0; j < m; j++) cin >> a[i][j] >> b[i][j] >> c[i][j];\n  }\n  pair<int, int> d[Maxm];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      for (int l = 0; l < m; l++) d[l] = make_pair(b[j][l] - a[i][l], c[i][l]);\n      sort(d, d + m);\n      reverse(d, d + m);\n      int num = 0, p = 0, cnt = 0;\n      while (p < m && cnt + d[p].second <= k) {\n        if (d[p].first < 0) break;\n        cnt += d[p].second;\n        num += d[p].first * d[p].second;\n        p++;\n      }\n      if (d[p].first > 0) num += d[p].first * (k - cnt);\n      ans = max(ans, num);\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create 2d long long array a with size 11 by 105\ncreate 2d long long array b with size 11 by 105\ncreate 2d long long array c with size 11 by 105\ndeclare boolean array vis with 105 elements\ndeclare long longs n, m and k\ncal is a long long function with int arguments x and y\n  create long long last = k\n  create long long ans = 0\n  set sizeof(vis) bytes at the pointer vis to 0\n  while last != 0\n    declare long long v = 0\n    declare long long p\n    declare long long flag = 0\n    for integer i = 1 to m inclusive\n      if vis[i] is false\n        if b[y][i] - a[x][i] is greater than v\n          assign b[y][i] - a[x][i] to v\n          set p to i\n          assign 1 to flag\n        \n      \n    \n    if flag = 0, break\n    set vis[p] to 1\n    if last >= c[x][p]\n      increase ans by c[x][p] * v\n      decrease last by c[x][p]\n    else\n      increase ans by last * v\n      change last to 0\n    \n  \n  return ans\n\n\n  read n, m and k\n  for i from 1 to n inclusive\n    declare string s\n    read input to s\n    for j from 1 to m inclusive, read input to a[i][j], b[i][j] and c[i][j]\n  \n  declare long long variable ans = 0\n  loop i from 1 to n inclusive\n    for int j = 1 to n inclusive, change ans to max of ans and cal(i, j)\n  print ans and \"\\n\"\n\n",
        "long long a[11][105];\nlong long b[11][105];\nlong long c[11][105];\nbool vis[105];\nlong long n, m, k;\nlong long cal(int x, int y) {\n  long long last = k;\n  long long ans = 0;\n  memset(vis, 0, sizeof(vis));\n  while (last) {\n    long long v = 0;\n    long long p;\n    long long flag = 0;\n    for (int i = 1; i <= m; i++) {\n      if (!vis[i]) {\n        if (b[y][i] - a[x][i] > v) {\n          v = b[y][i] - a[x][i];\n          p = i;\n          flag = 1;\n        }\n      }\n    }\n    if (flag == 0) break;\n    vis[p] = 1;\n    if (last >= c[x][p]) {\n      ans += c[x][p] * v;\n      last -= c[x][p];\n    } else {\n      ans += last * v;\n      last = 0;\n    }\n  }\n  return ans;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++) {\n    string s;\n    cin >> s;\n    for (int j = 1; j <= m; j++) cin >> a[i][j] >> b[i][j] >> c[i][j];\n  }\n  long long ans = 0;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++) { ans = max(ans, cal(i, j)); }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "\n  declare n as long long, a as long long array with size 100100\n  read n\n  for i = 0 to n exclusive, read a[i]\n  declare s as long long = 0\n  for k = 0 to n - 1 exclusive\n    declare integer t = 0\n    while k + ( 1 bitshift left t + 1 ) is less than n, increment i\n    increment s by a[k], a[k + (1 << t)] by a[k]\n    print s, newline\n  \n  \n\n",
        "int main() {\n  long long n, a[100100];\n  cin >> n;\n  for (int i = 0; i < n; ++i) cin >> a[i];\n  long long s = 0;\n  for (int k = 0; k < n - 1; ++k) {\n    int t = 0;\n    while (k + (1 << t + 1) < n) ++t;\n    s += a[k], a[k + (1 << t)] += a[k];\n    cout << s << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "MaxN = const int with MaxN = 1E5 + 10\na = int array of size MaxN\n\n  n = int\n  read n\n  read n values into a\n  ans = int with ans = 0\n  for i = 0 to n - 1\n    lg = int with lg = log2 of n - i - 1\n    increment ans by a[i]\n    increment a[i + (1 bitshift left by lg)] by a[i]\n    print ans\n  \n\n",
        "const int MaxN = 1E5 + 10;\nint a[MaxN];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; ++i) cin >> a[i];\n  int ans = 0;\n  for (int i = 0; i < n - 1; ++i) {\n    int lg = log2(n - i - 1);\n    ans += a[i];\n    a[i + (1 << lg)] += a[i];\n    cout << ans << endl;\n  }\n}\n"
    ],
    [
        "n, i, a, ans, d = integers with ans = 0, a, d = integer array of size 1111111\n\n  read n\n  for i = 0 to n exclusive, read a[i]\n  d[1] = 1\n  for i = 2 to n exclusive, d[i] = d[i / 2] * 2\n  for i = 0 to i + 1 < n\n    a[i + d[n - i - 1]] = a[i + d[n - i - 1]] + a[i]\n    ans = ans + a[i]\n    print ans\n  \n  \n\n",
        "int n, i, a[1111111], ans = 0, d[1111111];\nint main() {\n  cin >> n;\n  for (i = 0; i < n; i++) cin >> a[i];\n  d[1] = 1;\n  for (i = 2; i < n; i++) d[i] = d[i / 2] * 2;\n  for (i = 0; i + 1 < n; i++) {\n    a[i + d[n - i - 1]] += a[i];\n    ans += a[i];\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  create long long int array arr[n]\n  read every index of arr\n  create long long N = 0\n  for i = 0 to n - 1 exclusive\n    let integer t = floor(log2(n - i - 1))\n    set N to N + arr[i]\n    create int j = i + pow(2, t)\n    set arr[j] to arr[j] + arr[i]\n    set arr[i] to 0\n    print N\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long arr[n];\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  long long N = 0;\n  for (int i = 0; i < n - 1; i++) {\n    int t = floor(log2(n - i - 1));\n    N = N + arr[i];\n    int j = i + pow(2, t);\n    arr[j] += arr[i];\n    arr[i] = 0;\n    cout << N << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "a = integer array of size 100001\n\n  n = integer\n  read n\n  for i = 1 to n + 1 exclusive, read a[i]\n  res = long long with res = 0\n  t = integer\n  for i = 1 to n exclusive\n    for t = 1, i + t <= n, t = t * 2\n      ;\n    t = right shift t 1 place\n    res = res + a[i]\n    a[i + t] = a[i + t] + a[i]\n    print res\n  \n  \n\n",
        "int a[100001];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i < n + 1; i++) cin >> a[i];\n  long long res = 0;\n  int t;\n  for (int i = 1; i < n; i++) {\n    for (t = 1; i + t <= n; t *= 2)\n      ;\n    t >>= 1;\n    res += a[i];\n    a[i + t] += a[i];\n    cout << res << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long int n\n  read n\n  create long long int a[n + 5]\n  for i=0 to n inclusive, read a[i]\n  set c to 0\n  for i=0 to n exclusive\n    set c to c + a[i]\n    print c and a newline\n    j=1\n    while ( - 1 + j * 2 < n, set j to j*2\n    set a[i + j] to a[i + j] + a[i]\n  \n\n",
        "int main() {\n  long long int n;\n  cin >> n;\n  long long int a[n + 5];\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  long long int c = 0;\n  for (int i = 1; i < n; i++) {\n    c += a[i];\n    cout << c << \"\\n\";\n    long long int j = 1;\n    while ((i - 1) + j * 2 < n) j *= 2;\n    a[i + j] += a[i];\n  }\n}\n"
    ],
    [
        "power2 is a long long function with long long arguments pow and mod\n  declare long longs res = 1ll and x = 2ll\n  while pow > 0\n    if pow & 1 is true, set res to (res * x) modulo mod\n    pow >>= 1\n    assign (x * x) modulo mod to x\n  \n  return res\n\n\n  create long long n\n  read n\n  if n is true\n    declare long long M = 1 * 1000 * 1000 * 1000 + 7\n    declare long long variable sol\n    assign power2(2 * n - 1, M) to sol\n    increase sol by power2(n - 1, M)\n    sol = sol modulo M\n    print sol\n  else\n    print 1\n  \n  \n\n",
        "long long power2(long long pow, long long mod) {\n  long long res = 1ll, x = 2ll;\n  while (pow > 0) {\n    if (pow & 1) res = (res * x) % mod;\n    pow >>= 1;\n    x = (x * x) % mod;\n  }\n  return res;\n}\nint main() {\n  long long n;\n  cin >> n;\n  if (n) {\n    long long M = 1 * 1000 * 1000 * 1000 + 7;\n    long long sol;\n    sol = power2(2 * n - 1, M);\n    sol += power2(n - 1, M);\n    sol %= M;\n    cout << sol << endl;\n  } else {\n    cout << 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare int variables a, n and p where p = 1000000007\nlong long function fastmod with long long arguments a and n\n  if n is equal to 1, return a\n  declare long long variable ans = fastmod(a, n / 2) modulo p\n  if n is even\n    return ans % p * ans % p\n  else{\n    return ans % p * ans % p * a % p\n  \n\n\n  declare long long variable k\n  read k\n  if k >= 2\n    declare long long variable t = fastmod(2, k - 1)\n    print (t + 2 * t * t % p) % p\n  else if k = 1\n    print 3\n  else\n    print 1\n  \n  \n\n",
        "int a, n, p = 1000000007;\nlong long fastmod(long long a, long long n) {\n  if (n == 1) { return a; }\n  long long ans = fastmod(a, n / 2) % p;\n  if (n % 2 == 0) {\n    return ans % p * ans % p;\n  } else {\n    return ans % p * ans % p * a % p;\n  }\n}\nint main() {\n  long long k;\n  cin >> k;\n  if (k >= 2) {\n    long long t = fastmod(2, k - 1);\n    cout << (t + 2 * t * t % p) % p << endl;\n  } else if (k == 1) {\n    cout << 3 << endl;\n  } else {\n    cout << 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "mod = constant long long with value of 1e9 + 7\nin function qpow2 that returns a long long and takes argument p = long long\n  a = long long with value of 2\n  res = long long with value of 1\n  while p\n    if p bitwise and 1\n      set res to res * a\n      set res to res modulo mod\n    \n    set a to a * a\n    set a to a modulo mod\n    set p to right shift p by 1\n  \n  return res\n\n\n  n = long long\n  read n\n  if n equals 0\n    print 1\n  else\n    print (call qpow2 with argument n-1 plus call qpow2 with argument 2*n-1) modulo mod\n  \n  \n\n",
        "const long long mod = 1e9 + 7;\nlong long qpow2(long long p) {\n  long long a = 2;\n  long long res = 1;\n  while (p) {\n    if (p & 1) {\n      res *= a;\n      res %= mod;\n    }\n    a *= a;\n    a %= mod;\n    p >>= 1;\n  }\n  return res;\n}\nint main() {\n  long long n;\n  cin >> n;\n  if (n == 0) {\n    cout << 1 << endl;\n  } else {\n    cout << (qpow2(n - 1) + qpow2(2 * n - 1)) % mod << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "oo=1000000000, MD=1000000007\nfunction fastExp (get long long b and e, return long long)\n  ans=1\n  while e > 0\n    if e and 1 ans = (ans*b) modulo MD\n    b = (b*b) modulo MD\n    right shift e\n  \n  return ans\n\n\n  n=long long\n  read n\n  ans=(fastExp(4,n) + fastExp(2,n)) modulo MD\n  ans = (ans*fastExp(2,MD-2)) modulo MD\n  print ans\n  \n\n",
        "const int oo = 1e9, MD = 1e9 + 7;\nlong long fastExp(long long b, long long e) {\n  long long ans = 1;\n  while (e > 0) {\n    if (e & 1) ans = (ans * b) % MD;\n    b = (b * b) % MD;\n    e >>= 1;\n  }\n  return ans;\n}\nint main() {\n  long long n;\n  cin >> n;\n  long long ans = (fastExp(4, n) + fastExp(2, n)) % MD;\n  ans = (ans * fastExp(2, MD - 2)) % MD;\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "mul is a long long function with long long arguments x and p\n  declare long long ans = 1\n  while p is not 0\n    if p & 1 != 0, assign ans * x % 1000000007 to ans\n    set x to x * x % 1000000007\n    assign p >> 1 to p\n  \n  return ans\n\n\n  declare long long variable n\n  read n\n  if n is equal to 0\n    print 1\n  else\n    declare long long variable w = mul(2, n - 1) % 1000000007\n    print (w + w * w % 1000000007 * 2 % 1000000007) % 1000000007\n  \n  \n\n",
        "long long mul(long long x, long long p) {\n  long long ans = 1;\n  while (p) {\n    if (p & 1) ans = ans * x % 1000000007;\n    x = x * x % 1000000007;\n    p = p >> 1;\n  }\n  return ans;\n}\nint main() {\n  long long n;\n  cin >> n;\n  if (n == 0)\n    cout << 1 << endl;\n  else {\n    long long w = mul(2, n - 1) % 1000000007;\n    cout << (w + w * w % 1000000007 * 2 % 1000000007) % 1000000007 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "MOD = 1000000007\nmod = 1000000007\nN = 100005\ninv = array of 100005 long long\nfunction powmod (get long long a and b, return long long)\n  res = 1\n  a = a modulo mod\n  while b = b >> 1\n    if b and 1 multiply res by a modulo mod\n    multiply a by a modulo mod\n  \n  return res\n\n\n  n = long long\n  read n\n  inv[1] = 1\n  for i=2 to N exclusive inv[i] = (MOD-MOD/i)*inv[MOD modulo i] modulo MOD\n  d=powmod(2, n)\n  ans = d*(d+1) modulo mod * inv[2] modulo mod\n  print ans\n\n",
        "long long MOD = 1e9 + 7;\nlong long mod = 1e9 + 7;\nconst int N = 100005;\nlong long inv[100005];\nlong long powmod(long long a, long long b) {\n  long long res = 1;\n  a %= mod;\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nint main() {\n  long long n;\n  cin >> n;\n  inv[1] = 1;\n  for (int i = 2; i < N; i++) { inv[i] = (MOD - MOD / i) * inv[MOD % i] % MOD; }\n  long long d = powmod(2, n);\n  long long ans = d * (d + 1) % mod * inv[2] % mod;\n  cout << ans << endl;\n}\n"
    ],
    [
        "create constant long long INF with INF = (1ll bitshift left 62) - 1\ncreate constant long long M with M = 1e9 + 7\ndeclare modularExponentiation with long longs x, y as arguments, returning long long\n  create integer res with res = 1\n  while y is greater than 0\n    if y bitwise and 1, set res to ( res * x ) % M\n    set y to y bitshift right 1\n    set x to ( x * x ) % M\n  \n  return res from function\n\n\n  create long long n\n  read n\n  create long long ans with ans = result of run modularExponentiation with 2, n as arguments\n  set ans to ( ans + ( ans * ans )) / 2\n  print ans % M print newline\n\n",
        "const long long INF = (1ll << 62) - 1;\nconst long long M = 1e9 + 7;\nlong long modularExponentiation(long long x, long long y) {\n  int res = 1;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % M;\n    y = y >> 1;\n    x = (x * x) % M;\n  }\n  return res;\n}\nint main() {\n  long long n;\n  cin >> n;\n  long long ans = modularExponentiation(2, n);\n  ans = (ans + (ans * ans)) / 2;\n  cout << ans % M << endl;\n}\n"
    ],
    [
        "\n  n, a, b, c = int\n  read n then a then b then c\n  ans = int with ans = 0\n  for i = 0 to 4000 inclusive\n    for k = 0 to 4000 inclusive\n      sum = int with sum = a * i + b * k\n      if sum is greater than n then continue inner loop\n      if (n - sum) mod c equals 0 then set ans to max of ans and (i + k + (n - sum) / c)\n    \n  \n  print ans\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int ans = 0;\n  for (int i = 0; i <= 4000; i++) {\n    for (int k = 0; k <= 4000; k++) {\n      int sum = a * i + b * k;\n      if (sum > n) continue;\n      if ((n - sum) % c == 0) { ans = max(ans, (i + k + (n - sum) / c)); }\n    }\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "a = int array of size 3 with all values set to 0\ndp = int array of size 10000\n\n  n = int\n  read n then a[0] then a[1] then a[2]\n  set all values of dp to -100\n  set dp[0] to 0\n  for i = 0 to 3\n    for j = a[i] to n inclusive set dp[j] to max of dp[j] and dp[j - a[i]] + 1\n  \n  print dp[n]\n  \n\n",
        "int a[3] = {0};\nint dp[10000];\nint main() {\n  int n;\n  cin >> n >> a[0] >> a[1] >> a[2];\n  memset(dp, -100, sizeof(dp));\n  dp[0] = 0;\n  for (int i = 0; i < 3; i++) {\n    for (int j = a[i]; j <= n; j++) { dp[j] = max(dp[j], dp[j - a[i]] + 1); }\n  }\n  cout << dp[n] << endl;\n  return 0;\n}\n"
    ],
    [
        "create ints n, a, b and c\n\n  read n\n  declare integer array w with size 5\n  loop i from 1 to 3 inclusive, read input to w[i]\n  let e be int array with size 5000\n  set sizeof(e) bytes at the pointer e to -40\n  assign 0 to e[0]\n  loop i from 1 to 3 inclusive\n    for j = w[i] to n inclusive, assign max of e[j - w[i]] + 1 and e[j] to e[j]\n  \n  print e[n]\n\n",
        "int n, a, b, c;\nint main() {\n  cin >> n;\n  int w[5];\n  for (int i = 1; i <= 3; i++) cin >> w[i];\n  int e[5000];\n  memset(e, -40, sizeof(e));\n  e[0] = 0;\n  for (int i = 1; i <= 3; i++) {\n    for (int j = w[i]; j <= n; j++) { e[j] = max(e[j - w[i]] + 1, e[j]); }\n  }\n  cout << e[n] << endl;\n}\n"
    ],
    [
        "integers = a array that is size 4\nintegers = dp array size 4001\n\n  integers = n\n  read n,a[1],a[2],a[3]\n  create memset dp with a size of dp\n  set dp[0] to 0\n  for i = 1 to less than or equal to 3 do the following\n    for j = a[i] to less than or equal to n then dp[j] = the maximum out of dp[j] and dp[j-a[i]+1\n  \n  output dp[n]\n\n",
        "int a[4];\nint dp[4001];\nint main() {\n  int n;\n  cin >> n >> a[1] >> a[2] >> a[3];\n  memset(dp, -42, sizeof(dp));\n  dp[0] = 0;\n  for (int i = 1; i <= 3; i++) {\n    for (int j = a[i]; j <= n; j++) { dp[j] = max(dp[j], dp[j - a[i]] + 1); }\n  }\n  cout << dp[n] << endl;\n}\n"
    ],
    [
        "let a be int array with size 3 fileld with 0\ndeclare integer array dp with size 10000\n\n  declare integer variable n\n  read input to n, a[0], a[1] and a[2]\n  set sizeof(dp) bytes at the pointer dp to -9999\n  set dp[0] to 0\n  loop i from 0 to 3 exclusive\n    loop j from a[i] to n inclusive incrementing j, change dp[j] to max of dp[j] and dp[j - a[i]] + 1\n  \n  print dp[n]\n  \n\n",
        "int a[3] = {0};\nint dp[10000];\nint main() {\n  int n;\n  cin >> n >> a[0] >> a[1] >> a[2];\n  memset(dp, -9999, sizeof(dp));\n  dp[0] = 0;\n  for (int i = 0; i < 3; i++) {\n    for (int j = a[i]; j <= n; j++) { dp[j] = max(dp[j], dp[j - a[i]] + 1); }\n  }\n  cout << dp[n] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b, c = integers\n  read n, a, b, c\n  mx = integer with mx = -1\n  for i = n / a down to 0\n    for j = n / b down to 0\n      x = integer with x = n - (i * a + j * b)\n      if x modulo c is 0 and x >= 0, mx = max of mx and i + j + x / c\n    \n  \n  print mx\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int mx = -1;\n  for (int i = n / a; i >= 0; --i) {\n    for (int j = n / b; j >= 0; --j) {\n      int x = n - (i * a + j * b);\n      if (x % c == 0 and x >= 0) { mx = max(mx, i + j + x / c); }\n    }\n  }\n  cout << mx << endl;\n}\n"
    ],
    [
        "\n  n, a, b, c =integers\n  Read n, a, b, c\n  res = integer with 0\n  for i = 0 to n / a exclusive\n    for i = 0 to n / b exclusive\n      set k to n - i * a - j * b\n      if k is greater than 0 and k modulo c is 0, then set res to maximum value of res and i + j + k / c\n    \n  \n  print res and a new line\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int res = 0;\n  for (int i = 0; i <= n / a; i++) {\n    for (int j = 0; j <= n / b; j++) {\n      int k = n - i * a - j * b;\n      if (k >= 0 && k % c == 0) res = max(res, i + j + k / c);\n    }\n  }\n  cout << res << \"\\n\";\n}\n"
    ],
    [
        "\n  create integers n, a ,b, c, max with max = 0\n  read n read a read b read c\n  for x = 0 to a * x is less than or equal to n, incrementing x\n    for y = 0 to ( y * b ) + ( a * x ) is less than or equal to n, incrementing y\n      create integer z with z = (n - a * x - b * y) / c\n      if a * x + b * y + z * c is n\n        if x + y + z is greater than max, set max to x + y + z\n      \n    \n  \n  print max print newline\n  \n\n",
        "int main() {\n  int n, a, b, c, max = 0;\n  cin >> n >> a >> b >> c;\n  for (int x = 0; a * x <= n; x++) {\n    for (int y = 0; (y * b) + (a * x) <= n; y++) {\n      int z = (n - a * x - b * y) / c;\n      if (a * x + b * y + z * c == n) {\n        if (x + y + z > max) max = x + y + z;\n      }\n    }\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, a, b, c be integers\n  read n, a, b, c\n  let x, y, z, p , i be integers with p = 0\n  i is equal to minimum of a , minimum of b and c\n  i is equal to n / i\n  for x is equal to i , x >= 0 , decrease x by 1\n    for y = 0 to i inclusive\n      z is equal to absolute value of (n - (a * x + b * y)) / c\n      if a * x + b * y + c * z is equal to n , p = maximum of p and x + y + z\n    \n  \n  print p and newline\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int x, y, z, p = 0, i;\n  i = min(a, min(b, c));\n  i = n / i;\n  for (x = i; x >= 0; x--) {\n    for (y = 0; y <= i; y++) {\n      z = abs((n - (a * x + b * y)) / c);\n      if ((a * x + b * y + c * z) == n) { p = max(p, x + y + z); }\n    }\n  }\n  cout << p << endl;\n}\n"
    ],
    [
        "arr = integer array of size 5, n = integer\ndp = integer array of size 4004, mn = integer\nin the function fun that takes integer rem and returns integer\n  if rem is 0, return 0\n  if rem < mn, return -11111111\n  if dp[rem] is not -1, return dp[rem]\n  ret = integer with ret = -11111111\n  for i = 0 to 3, ret = max(ret, 1 + fun(rem - arr[i]))\n  return dp[rem] = ret\n\n\n  set all contents of dp to -1\n  read n\n  mn = 100000000\n  for i = 0 to 2\n    read arr[i]\n    mn = min of arr[i] and mn\n  \n  print fun(n)\n\n",
        "int arr[5], n;\nint dp[4004], mn;\nint fun(int rem) {\n  if (rem == 0) return 0;\n  if (rem < mn) return -11111111;\n  if (dp[rem] != -1) return dp[rem];\n  int ret = -11111111;\n  for (int i = 0; i < 3; i++) { ret = max(ret, 1 + fun(rem - arr[i])); }\n  return dp[rem] = ret;\n}\nint main() {\n  memset(dp, -1, sizeof dp);\n  cin >> n;\n  mn = 100000000;\n  for (int i = 0; i < 3; i++) {\n    cin >> arr[i];\n    mn = min(arr[i], mn);\n  }\n  cout << fun(n) << endl;\n}\n"
    ],
    [
        "create long longs n, a, b and c\nlet dp be 2d long long array with size 5006 by 5005\nlong long function result with long long arguments total and cnt\n  if total = 0 return cnt\n  declare long long variables d, e and f = 0\n  if dp[total][cnt] is not -1m return dp[total][cnt]\n  if a <= total, assign result(total - a, cnt + 1) to d\n  if b <= total, assign result(total - b, cnt + 1) to e\n  if c <= total, assign result(total - c, cnt + 1) to f\n  return dp[total][cnt] = max of d and max(e, f)\n\n\n  set value of sizeofdp bytes at the pointer dp to -1\n  read input to n, a, b and c\n  declare long long variable ans = result(n, 0)\n  print ans\n\n",
        "long long n, a, b, c;\nlong long dp[5006][5005];\nlong long result(long long total, long long cnt) {\n  if (total == 0) return cnt;\n  long long d = 0, e = 0, f = 0;\n  if (dp[total][cnt] != -1) return dp[total][cnt];\n  if (a <= total) d = result(total - a, cnt + 1);\n  if (b <= total) e = result(total - b, cnt + 1);\n  if (c <= total) f = result(total - c, cnt + 1);\n  return dp[total][cnt] = max(d, max(e, f));\n}\nint main() {\n  memset(dp, -1, sizeof dp);\n  cin >> n >> a >> b >> c;\n  long long ans = result(n, 0);\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  create integer n, create integer array a with size 3\n  read n read a[0] read a[1] read a[2]\n  sort elements from a to a + 3\n  create integers i, j, k, ans with i = 0, j = 0, k = 0, ans = -1\n  for i = 0 to a * a[2] is less than n + 1, incrementing i\n    for j = 0 to i * a[2] + j * a[1] is less than n + 1, incrementing j\n      if (n - i * a[2] - j * a[1]) % a[0] is 0, set ans to maximum of ans and i + j + (n - i * a[2] - j * a[1]) / a[0])\n    \n  \n  print ans print newline\n\n",
        "int main() {\n  int n, a[3];\n  cin >> n >> a[0] >> a[1] >> a[2];\n  sort(a, a + 3);\n  int i = 0, j = 0, k = 0, ans = -1;\n  for (i = 0; i * a[2] < n + 1; i++) {\n    for (j = 0; i * a[2] + j * a[1] < n + 1; j++) {\n      if ((n - i * a[2] - j * a[1]) % a[0] == 0) { ans = max(ans, i + j + (n - i * a[2] - j * a[1]) / a[0]); }\n    }\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "declare const int N = 4005\ndeclare const int inf = 1e9\ncreate const long long INF = 1e18\ndeclare const double PI = acos(-1.0)\ndeclare const double EPS = 1e-8\ncreate const int MOD = 1000000007\ndeclare integer variables n, a, b and c\ndeclare int array dp with size N\n\n  read n, a, b and c\n  loop i from 0 to n inclusive, assign -inf to dp[i]\n  assign 0 to dp[0]\n  for i = 1 to n inclusive\n    if a <= i, set dp[i] to max of dp[i] and dp[i - a] + 1\n    if b <= i, assign max of dp[i] and dp[i - b] + 1 to dp[i]\n    if c <= i, change dp[i] to max of dp[i] and dp[i - c] + 1\n  \n  print dp[n] and \"\\n\"\n  \n\n",
        "const int N = 4005;\nconst int inf = 1e9;\nconst long long INF = 1e18;\nconst double PI = acos(-1.0);\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint n, a, b, c;\nint dp[N];\nint main() {\n  cin >> n >> a >> b >> c;\n  for (int i = 0; i <= n; i++) dp[i] = -inf;\n  dp[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    if (a <= i) dp[i] = max(dp[i], dp[i - a] + 1);\n    if (b <= i) dp[i] = max(dp[i], dp[i - b] + 1);\n    if (c <= i) dp[i] = max(dp[i], dp[i - c] + 1);\n  }\n  cout << dp[n] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "N = constant integer with N = 1e5 + 7\narr = array of size N\n\n  n, a, b, c = integers\n  read n, a, b, c\n  set all contents of arr to 0 after casting to integer\n  arr[a] = arr[b] = arr[c] = 1\n  for i = (cast to integer)(1) to (cast to integer)(n)\n    if i >= a and arr[i - a], arr[i] = max(arr[i], arr[i - a] + 1)\n    if i >= b and arr[i - b], arr[i] = max(arr[i], arr[i - b] + 1)\n    if i >= c and arr[i - c], arr[i] = max(arr[i], arr[i - c] + 1)\n  \n  print arr[n]\n\n",
        "const int N = 1e5 + 7;\nint arr[N];\nint main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  memset(arr, (int)(0), sizeof(arr));\n  arr[a] = arr[b] = arr[c] = 1;\n  for (int i = (int)(1); i <= (int)(n); i++) {\n    if (i >= a and arr[i - a]) arr[i] = max(arr[i], arr[i - a] + 1);\n    if (i >= b and arr[i - b]) arr[i] = max(arr[i], arr[i - b] + 1);\n    if (i >= c and arr[i - c]) arr[i] = max(arr[i], arr[i - c] + 1);\n  }\n  cout << arr[n] << endl;\n}\n"
    ],
    [
        "p = array of 3 integers\ndp = 2d array of size [4010][4010]\n\n  n = integer\n  read n\n  for i = 0 to 2, read p[i]\n  minp, maxp = integers with minp = min(min(p[0], p[1]), p[2]), maxp = max(max(p[0], p[1]), p[2])\n  dp[0][0] = true\n  for i = minp to n\n    for k = 1 to i / minp\n      for j = 0 to 2\n        if i >= p[j], dp[i][k] = dp[i][k] binary or dp[i - p[j]][k - 1]\n  for i = n / minp down to 1\n    if dp[n][i]\n      print i\n      break loop\n    \n\n",
        "int p[3];\nbool dp[4000 + 10][4000 + 10];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < 3; i++) cin >> p[i];\n  int minp = min(min(p[0], p[1]), p[2]), maxp = max(max(p[0], p[1]), p[2]);\n  dp[0][0] = true;\n  for (int i = minp; i <= n; i++)\n    for (int k = 1; k <= i / minp; k++)\n      for (int j = 0; j < 3; j++)\n        if (i >= p[j]) dp[i][k] |= dp[i - p[j]][k - 1];\n  for (int i = n / minp; i >= 1; i--)\n    if (dp[n][i]) {\n      cout << i << endl;\n      break;\n    }\n}\n"
    ],
    [
        "create integers a, b and c\ndeclare int array memo with size 4001\nfunction solve with int argument i that returns integer\n  if i = 0, return 0\n  if memo[i] != - 1, return memo[i]\n  create integers opt1, opt2 and opt3 = -1e9\n  if i >= a, change opt1 to solve(i - a) + 1\n  if i >= b, change opt2 to solve(i - b) + 1\n  if i >= c, change opt3 to solve(i - c) + 1\n  return memo[i] = max of opt1 and (max of opt2 and opt3)\n\n\n  set first sizeof memo bytes at the pointer memo to -1\n  declare integer variable n\n  read n, a, b and c\n  print result of solve(n)\n  \n\n",
        "int a, b, c;\nint memo[4001];\nint solve(int i) {\n  if (i == 0) return 0;\n  if (memo[i] != -1) return memo[i];\n  int opt1 = -1e9, opt2 = -1e9, opt3 = -1e9;\n  if (i >= a) { opt1 = solve(i - a) + 1; }\n  if (i >= b) { opt2 = solve(i - b) + 1; }\n  if (i >= c) { opt3 = solve(i - c) + 1; }\n  return memo[i] = max(opt1, max(opt2, opt3));\n}\nint main() {\n  memset(memo, -1, sizeof memo);\n  int n;\n  cin >> n >> a >> b >> c;\n  cout << solve(n) << endl;\n  return 0;\n}\n"
    ],
    [
        "declare cut_ribbon with integers n, a, b, c as arguments\n  create integer array arr with size n + 1\n  set bytes from arr to size of arr to value 0\n  if a is less than or equal to n, set arr[a] to 1\n  if b is less than or equal to n, set arr[b] to 1\n  if c is less than or equal to n, set arr[c] to 1\n  for i = 0 to n inclusive\n    if i is greater than a and arr[i-a] is not 0, set arr[i] to maximum of arr[i] and arr[i-a]+1\n    if i is greater than b and arr[i-b] is not 0, set arr[i] to maximum of arr[i] and arr[i-b]+1\n    if i is greater than c and arr[i-c] is not 0, set arr[i] to maximum of arr[i] and arr[i-c] + 1\n  \n  return arr[n] from function\n\n\n  create integers n, a, b, c\n  read n read a read b read c\n  print result of run cut_ribbon with n, a, b, c as arguments, print newline\n  \n\n",
        "int cut_ribbon(int n, int a, int b, int c) {\n  int arr[n + 1];\n  memset(arr, 0, sizeof(arr));\n  if (a <= n) { arr[a] = 1; }\n  if (b <= n) { arr[b] = 1; }\n  if (c <= n) { arr[c] = 1; }\n  for (int i = 0; i <= n; i++) {\n    if (i > a && arr[i - a] != 0) { arr[i] = max(arr[i], arr[i - a] + 1); }\n    if (i > b && arr[i - b] != 0) { arr[i] = max(arr[i], arr[i - b] + 1); }\n    if (i > c && arr[i - c] != 0) { arr[i] = max(arr[i], arr[i - c] + 1); }\n  }\n  return arr[n];\n}\nint main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  cout << cut_ribbon(n, a, b, c) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  x, y, r, ans = integers\n  read x, y, r\n  if 2 * r > min(x, y)\n    print Second\n  else\n    print First\n  \n\n",
        "int main() {\n  int x, y, r, ans;\n  cin >> x >> y >> r;\n  if (2 * r > min(x, y))\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  l, b, r = integers\n  read l, b, r\n  d, plates = integers with d = 2 * r, plates = 0\n  if min(l, b) < d\n    print Second\n  else\n    print First\n\n",
        "int main() {\n  int l, b, r;\n  cin >> l >> b >> r;\n  int d = 2 * r, plates = 0;\n  if (min(l, b) < d)\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n}\n"
    ],
    [
        "\n  a, b, c = int\n  read a then b then c\n  if a and b are both greater or equal to 2 * c\n    print \"First\"\n  else\n    print \"Second\"\n  print newline\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  if (a >= 2 * c && b >= 2 * c)\n    cout << \"First\";\n  else\n    cout << \"Second\";\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAXN with MAXN = 100000 + 7\ncreate constant integer mod with mod = 23333333\ncreate integers a, b, r\n\n  read a read b read r\n  if a is less than 2 * r or b is less than 2 * r\n    print \"Second\" print newline\n  else\n    print \"First\" print newline\n  \n\n",
        "const int MAXN = 100000 + 7;\nconst int mod = 23333333;\nint a, b, r;\nint main() {\n  cin >> a >> b >> r;\n  if (a < 2 * r || b < 2 * r)\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n  return 0;\n}\n"
    ],
    [
        "str=array of 30100 strings\na,b,r=int\n\n  read a,b,r\n  multiply r by 2\n  if r <= a and r <= b\n    print \"First\"\n  else\n    print \"Second\"\n\n",
        "string str[30100];\nint a, b, r;\nint main() {\n  cin >> a >> b >> r;\n  r *= 2;\n  if (r <= a && r <= b)\n    puts(\"First\");\n  else\n    puts(\"Second\");\n}\n"
    ],
    [
        "integers = t integer pi = 3.14\n\n  integers = a,b,r\n  read a,b,r\n  if 2 * r is greater than min(a, b then do the following\n    output Second\n  else\n    integers = cnt = 0\n    integers = ans = max(a,b)\n    integers = res = min(a,b)\n    if 1 is true do the following\n      set ans to maximum of ans and res\n      set res to minimum and ans and res\n      cnt equals cnt plus res / (2 * r)\n      subtract (res / (2 * r)) * 2 * r from ans\n      integers = minn = minimum of ans or res\n      if minn is less than 2 * r then do the following break\n    \n    if cnt is greater than or equal to 1 then do the following\n      output First\n    else\n      output Second\n  \n  \n\n",
        "const int pi = 3.14;\nint main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (2 * r > min(a, b)) {\n    cout << \"Second\" << endl;\n  } else {\n    int cnt = 0;\n    int ans = max(a, b);\n    int res = min(a, b);\n    while (1) {\n      ans = max(ans, res);\n      res = min(ans, res);\n      cnt += res / (2 * r);\n      ans -= (res / (2 * r)) * 2 * r;\n      int minn = min(ans, res);\n      if (minn < 2 * r) break;\n    }\n    if (cnt >= 1)\n      cout << \"First\" << endl;\n    else\n      cout << \"Second\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n,k,l = long long integers\n  input n,k,l\n  if 2 * l is less than or equal to minimum of n and k then do the following\n    output First\n  else\n    output Second\n  \n\n",
        "int main() {\n  long long int n, k, l;\n  cin >> n >> k >> l;\n  if (2 * l <= min(n, k))\n    cout << \"First\" << endl;\n  else\n    cout << \"Second\" << endl;\n  return 0;\n}\n"
    ],
    [
        "a, b, r = integers\n\n  Read a, b, r\n  if a is less than 2 * r OR b is less than 2 * r\n    print Second and a new line\n  else do the following\n    print First and a new line\n  \n\n",
        "int a, b, r;\nint main() {\n  cin >> a >> b >> r;\n  if (a < 2 * r || b < 2 * r)\n    cout << \"Second\\n\";\n  else\n    cout << \"First\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n1, n2, r\n  read n1 read n2 read r\n  create integer r2 with r2 = r + r\n  if n1 is greater than or equal to r2 and n2 is greater than or equal to r2\n    print \"First\\n\"\n  else\n    print \"Second\\n\"\n  \n\n",
        "int main() {\n  int n1, n2, r;\n  cin >> n1 >> n2 >> r;\n  int r2 = r + r;\n  if (n1 >= r2 && n2 >= r2)\n    cout << \"First\\n\";\n  else\n    cout << \"Second\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, r = int\n  read a then b then r\n  set r to r * 2\n  if a or b is less than r\n    print \"Second\"\n  else\n    print \"First\"\n  \n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  r *= 2;\n  if (a < r || b < r) {\n    cout << \"Second\" << endl;\n  } else {\n    cout << \"First\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, r, m\n  read a read b read r\n  if a is greater than b\n    set m to b\n  else\n    set m to a\n  if m is greater than or equal to 2 * r\n    print \"First\" print newline\n  else\n    print \"Second\" print newline\n  \n\n",
        "int main() {\n  int a, b, r, m;\n  cin >> a >> b >> r;\n  if (a > b)\n    m = b;\n  else\n    m = a;\n  if (m >= 2 * r)\n    cout << \"First\" << endl;\n  else\n    cout << \"Second\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, r =integers\n  Read a, b, r\n  if minimum value of a and b is greater than or equal to 2 * r\n    print First and a new line\n  else do the following\n    print Second and a new line\n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (min(a, b) >= 2 * r) {\n    cout << \"First\" << endl;\n  } else\n    cout << \"Second\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int min, height, width, radius\n  while read height, width, radius\n    if heigth less than width\n      set min to height\n    else\n      min = width\n    assign radius * 2 to radius\n    if min >= radius\n      print First\n    else\n      print Second\n  \n  \n\n",
        "int main() {\n  int min, height, width, radius;\n  while (cin >> height >> width >> radius) {\n    if (height < width)\n      min = height;\n    else\n      min = width;\n    radius = radius * 2;\n    if (min >= radius)\n      cout << \"First\" << endl;\n    else\n      cout << \"Second\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  define ints a, b, and r\n  read a, b, r\n  if 2 r <= a and 2 r <= b\n    print First and newline\n  else...\n    print Second followed by newline\n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (2 * r <= a && 2 * r <= b)\n    cout << \"First\\n\";\n  else\n    cout << \"Second\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  integers = a,b,r\n  read a,b,r\n  multiply r by 2\n  if r is greater than minimum of a or b then proceed with the following\n    output Second\n  else\n    output First\n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  r *= 2;\n  if (r > min(a, b))\n    cout << \"Second\" << '\\n';\n  else\n    cout << \"First\" << '\\n';\n}\n"
    ],
    [
        "\n  define ints n, a, b, c\n  read a, b, c\n  if a < c * 2 or b < c * 2\n    print \"Second\" and newline\n  otherwise\n    print \"First\" and a newline\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> a >> b >> c;\n  if (a < c * 2 || b < c * 2)\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n}\n"
    ],
    [
        "\n  n, m, r = integers\n  while read n, m, r\n    if r * 2 <= n and r * 2 <= m\n      print First\n    else\n      print Second\n  \n\n",
        "int main() {\n  int n, m, r;\n  while (cin >> n >> m >> r) {\n    if (r * 2 <= n && r * 2 <= m)\n      cout << \"First\" << endl;\n    else\n      cout << \"Second\" << endl;\n  }\n}\n"
    ],
    [
        "a, b, r = integers\n\n  Read a, b, r\n  if a is less than r * 2 OR b is less than r * 2\n    print Second and a new line\n  else do the following\n    print First and a new line\n  \n\n",
        "int a, b, r;\nint main() {\n  cin >> a >> b >> r;\n  if (a < r * 2 || b < r * 2)\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, r\n  read a read b read r\n  if a is greater than or equal to b\n    if ( 2 * r is less than or equal to b )\n      print \"First\\n\"\n    else\n      print \"Second\\n\"\n  else\n    if ( 2 * r is less than or equal to a )\n      print \"First\\n\"\n    else\n      print \"Second\\n\"\n  \n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (a >= b) {\n    if (2 * r <= b)\n      cout << \"First\\n\";\n    else\n      cout << \"Second\\n\";\n  } else {\n    if (2 * r <= a)\n      cout << \"First\\n\";\n    else\n      cout << \"Second\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  x, y, r = integers\n  read x, y, r\n  if x < r * 2 or y < r * 2\n    print Second\n  else\n    print First\n  \n\n",
        "int main() {\n  int x, y, r;\n  cin >> x >> y >> r;\n  if (x < r * 2 || y < r * 2)\n    cout << \"Second\\n\";\n  else\n    cout << \"First\\n\";\n  return 0;\n}\n"
    ],
    [
        "create long long int mod = 1000000007\n\n  let a, b and r be integers\n  read a, b and r\n  if 2 * r is greater than min(a, b)\n    print Second\n  else\n    print First\n  \n  \n\n",
        "long long int mod = 1000000007;\nint main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (2 * r > min(a, b)) {\n    cout << \"Second\" << endl;\n  } else {\n    cout << \"First\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, r = integers\n  read a, b, r\n  if 2 * r <= min(a, b)\n    print First\n  else\n    print Second\n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (2 * r <= min(a, b))\n    cout << \"First\" << endl;\n  else\n    cout << \"Second\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let k, b, n, t be long integers\n  read k, b, n, t\n  let the value of long integer z is equal to k + b\n  let g be a integer with value g is equal to n\n  while (z is less than t and g is greater than 0)\n    decrease g by 1\n    let the value of z is equal to z * k + b\n  \n  if (z is equal to t) , decrease g by 1\n  print g and newline\n\n",
        "int main() {\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long z = k + b;\n  int g = n;\n  while (z < t && g > 0) {\n    g--;\n    z = z * k + b;\n  }\n  if (z == t) { g--; }\n  cout << g << endl;\n}\n"
    ],
    [
        "\n  create long long u = 1\n  create long long k, b, n and t\n  read k, b, n and t\n  if k = 1\n    create long long x = 1\n    for i = 1 to n inclusive\n    create long long variable r = t\n    create long long variable ans = 0\n    while r is less than x\n      increase ans by one\n      increase r by b\n    \n    print ans\n    \n  \n  create long long r = 0\n  while u * (k - 1 + b) <= (k * t - t + b)\n    multiply u by k\n    increase r by one\n  \n  print max of n - r + 1 and 0LL\n\n",
        "int main() {\n  long long u = 1;\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  if (k == 1) {\n    long long x = 1;\n    for (long long i = 1; i <= n; i++) x += b;\n    long long r = t;\n    long long ans = 0;\n    while (r < x) {\n      ans++;\n      r += b;\n    }\n    cout << ans << endl;\n    return 0;\n  }\n  long long r = 0;\n  while (u * (k - 1 + b) <= (k * t - t + b)) {\n    u *= k;\n    r++;\n  }\n  cout << max(n - r + 1, 0LL) << endl;\n}\n"
    ],
    [
        "\n  l, b, n, t = long long\n  read k, b, n, t\n  set x = 1 and cnt = -1\n  for i = 1 to n inclusive\n    set x = k * x + b\n    if x is greater than t\n      set cnt = i - 1\n      stop the loop\n    \n  \n  if cnt is equal to -1\n    print 0\n  otherwise\n    print n - cnt\n  \n\n",
        "int main() {\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long x = 1, cnt = -1;\n  for (long long i = 1; i <= n; ++i) {\n    x = k * x + b;\n    if (x > t) {\n      cnt = i - 1;\n      break;\n    }\n  }\n  if (cnt == -1)\n    cout << 0 << endl;\n  else\n    cout << n - cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long k, b, n, z\n  read k, b, n and z\n  set x = 1\n  while n and k*x+b equal to or greater than z\n    assign k*x+b to x\n    decrement n\n  \n  print n and a new line\n  \n\n",
        "int main() {\n  long long k, b, n, z;\n  cin >> k >> b >> n >> z;\n  int x = 1;\n  while (n && k * x + b <= z) {\n    x = k * x + b;\n    n--;\n  }\n  cout << n << endl;\n  return 0;\n}\n"
    ],
    [
        "k, b, n, t, ans = integers\nassign 1 to m\n\n  read k, b, n, t\n  while m equal to or greater than t, assign m*k+b to m, increment ans\n  if n >= ans\n    print n - ans + 1\n  otherwise\n    print 0 and a new line\n  \n\n",
        "int k, b, n, t, ans;\nlong long m = 1;\nint main() {\n  cin >> k >> b >> n >> t;\n  while (m <= t) m = m * k + b, ans++;\n  if (n >= ans)\n    cout << n - ans + 1 << endl;\n  else\n    cout << 0 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare double variables k, b, n and t\n  read k, b, n and t\n  declare integer x = 0\n  declare double variable dub = (t *(k - 1) + b) / (b + k - 1)\n  if k = 1\n    dub = (t - 1) / b\n    set value of x to dub casted to integer\n    if x is greater than n\n  else\n    for i = 1 to n + 1 inclusive\n      if pow(k, i) >= dub + 1\n        set value of x to i - 1\n        stop the loop\n      \n      if i = n + 1, assign value of n to x\n    \n  \n  create integer ans = n - x\n  print ans\n  \n\n",
        "int main() {\n  double k, b, n, t;\n  cin >> k >> b >> n >> t;\n  int x = 0;\n  double dub = (t * (k - 1) + b) / (b + k - 1);\n  if (k == 1) {\n    dub = (t - 1) / b;\n    x = (int)dub;\n    if (x > n) { x = n; }\n  } else {\n    for (int i = 1; i <= n + 1; i++) {\n      if (pow(k, i) >= (int)dub + 1) {\n        x = i - 1;\n        break;\n      }\n      if (i == n + 1) { x = n; }\n    }\n  }\n  int ans = n - x;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let c1, c2, x, k, i, b, n, t, cnt be long long with cnt = 0\n  read k, b, n, t\n  set c1 = b + t * (k - 1)\n  set c2 = b + k - 1\n  set cnt = 1\n  set x = n\n  if k not equal to 1 do the following\n    for i = n iterate while i is less than or equal to 0 having i decrease by 1 after each iteration\n      if c1 is greater or equal to cnt * c2 do the following\n        set x = i\n      else do the following\n        break out of the iteration loop\n      set cnt = cnt * k\n    \n    print x and one newline\n  else do the following\n    for i = 0 to n inclusive\n      if i * b is greater or equal to 1 + n * b - t break out of the iteration loop\n    \n    print i and one newline\n  \n  \n\n",
        "int main() {\n  long long c1, c2, x, k, i, b, n, t, cnt = 0;\n  cin >> k >> b >> n >> t;\n  c1 = b + t * (k - 1);\n  c2 = b + k - 1;\n  cnt = 1;\n  x = n;\n  if (k != 1) {\n    for (i = n; i >= 0; i--) {\n      if (c1 >= cnt * c2)\n        x = i;\n      else\n        break;\n      cnt *= k;\n    }\n    cout << x << endl;\n  } else {\n    for (i = 0; i <= n; i++) {\n      if (i * b >= 1 + n * b - t) break;\n    }\n    cout << i << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in the function solve that takes long long k, b, n, t and returns long long\n  if k is 1\n    low, high = long long with low = -1, high = n\n    while high - low > 1\n      mid = long long with mid = (low + high) / 2\n      if 1 - t + b * (n - mid) <= 0\n        high = mid\n      else\n        low = mid\n      \n    \n    return high\n  \n  answ = long long with answ = n\n  pow = __float128 with pow = 1\n  while answ > 0 and (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0\n    pow = pow * k\n    decrement answ\n  \n  return answ\n\n\n  k, b, n, t = long long\n  while read k, b, n, t, print solve(k, b, n, t)\n  \n\n",
        "long long solve(long long k, long long b, long long n, long long t) {\n  if (k == 1) {\n    long long low = -1, high = n;\n    while (high - low > 1) {\n      long long mid = (low + high) / 2;\n      if (1 - t + b * (n - mid) <= 0) {\n        high = mid;\n      } else {\n        low = mid;\n      }\n    }\n    return high;\n  }\n  long long answ = n;\n  __float128 pow = 1;\n  while (answ > 0 && (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0) {\n    pow *= k;\n    answ--;\n  }\n  return answ;\n}\nint main() {\n  long long k, b, n, t;\n  while (cin >> k >> b >> n >> t) { cout << solve(k, b, n, t) << endl; }\n  return 0;\n}\n"
    ],
    [
        "\n  k, b, n, t, i, j, m, ans, r, x, xx = long long int with m = 0, x = 1, xx = 0\n  read k, b, n, t\n  for i = 1 increment i\n    r = (x * k) + b\n    if r <= t\n      increment m\n    else\n      break loop\n    x = r\n  \n  ans = n - m\n  ans = max of xx and ans\n  print ans\n\n",
        "int main() {\n  long long int k, b, n, t, i, j, m = 0, ans, r, x = 1, xx = 0;\n  cin >> k >> b >> n >> t;\n  for (i = 1;; i++) {\n    r = (x * k) + b;\n    if (r <= t)\n      m++;\n    else\n      break;\n    x = r;\n  }\n  ans = n - m;\n  ans = max(xx, ans);\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  create long long integers k, b, n and t\n  read k, b, n and t\n  declare long long integer variable num = 1\n  declare long long integer variable index = 0\n  while num <= t\n    num = k * num + b\n    increment index\n  \n  decrease index\n  print max of 0ll and n - index and '\\n'\n\n",
        "int main() {\n  long long int k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long int num = 1;\n  long long int index = 0;\n  while (num <= t) {\n    num = k * num + b;\n    index++;\n  }\n  index--;\n  cout << max(0ll, n - index) << '\\n';\n}\n"
    ],
    [
        "set constant integer M = 100 + 10\n\n  create long long integer k, b, n, t\n  read k, b, n, t\n  if k = 1\n    set z = 1 + n*b\n    if z is equal to or less than t\n      print 0\n    otherwise\n      set res = z - t\n      ans = res / b + (res modulo b different from 0)\n      print and and a new line\n    \n  otherwise\n    set long long integer num1 = t * (k - 1) + b\n    num2= k - 1 + b\n    set num3 = num1/num2\n    set num1 equal to 1\n    set integer tm = 0\n    while num*k is equal to or less than num3\n      set num = num * k\n      increment tm\n    \n    set m = n - tm\n    m = max between m and 0\n    print m\n  \n  \n\n",
        "const int M = 100 + 10;\nint main() {\n  long long int k, b, n, t;\n  cin >> k >> b >> n >> t;\n  if (k == 1) {\n    long long int z = 1 + n * b;\n    if (z <= t) {\n      cout << \"0\" << endl;\n    } else {\n      long long int res = z - t;\n      long long int ans = res / b + (res % b != 0);\n      cout << ans << endl;\n    }\n  } else {\n    long long int num1 = t * (k - 1) + b;\n    long long int num2 = k - 1 + b;\n    long long int num3 = num1 / num2;\n    long long int num = 1;\n    int tm = 0;\n    while (num * k <= num3) {\n      num = num * k;\n      tm++;\n    }\n    int m = n - tm;\n    m = max(m, 0);\n    cout << m << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create long long ans, set k, b, n, t, x to 1\n\n  read k, b, n and t\n  while x <=t, set x=x * k + b, increment ans\n  print max between 011 and n - ans + 1\n  \n\n",
        "long long k, b, n, t, x = 1, ans;\nint main() {\n  cin >> k >> b >> n >> t;\n  while (x <= t) x = x * k + b, ans++;\n  cout << max(0ll, n - ans + 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  k, b, n, t = long longs\n  read k, b, n and t\n  declare cnt as long long set to 1\n  while c less than or equal to t\n    set cnt to cnt * k + b\n    decrement n\n  \n  print max(0LL, n + 1)\n  \n\n",
        "int main() {\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long cnt = 1;\n  while (cnt <= t) {\n    cnt = cnt * k + b;\n    n--;\n  }\n  cout << max(0LL, n + 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "long long function bigmod with long long arguments a, b and m\n  if b = 0\n  x = bigmod of a, b / 2 and m\n  x = (x % m * x % m) % m\n  if b % 2) x = (x % m * a % m\n  return x % m\n\nlong long function po with long long arguments a and b\n  return 1 if a = 1\n  declare long long r = 1\n  decrement b and loop, while b > 0; multiply r by a in that loop\n  return r\n\n\n  declare long long variables k, b, n, t and s where s = 0\n  read k, b, n and t\n  for i = 0 to n inclusive\n    assign value of s + po(k, i) to new long long v\n    if v >= t\n      if v is greater than t\n        print n - i + 1\n      else\n        print n - i\n      \n    \n    increase s by b * po(k, i)\n  \n  print \"0\"\n\n",
        "long long bigmod(long long a, long long b, long long m) {\n  if (b == 0) return 1 % m;\n  long long x = bigmod(a, b / 2, m);\n  x = (x % m * x % m) % m;\n  if (b % 2) x = (x % m * a % m) % m;\n  return x % m;\n}\nlong long po(long long a, long long b) {\n  if (a == 1) return 1;\n  long long r = 1;\n  while (b--) r *= a;\n  return r;\n}\nint main() {\n  long long k, b, n, t, s = 0;\n  cin >> k >> b >> n >> t;\n  for (int i = 0; i <= n; i++) {\n    long long v = s + po(k, i);\n    if (v >= t) {\n      if (v > t)\n        cout << n - i + 1 << endl;\n      else\n        cout << n - i << endl;\n      return 0;\n    }\n    s += b * po(k, i);\n  }\n  puts(\"0\");\n}\n"
    ],
    [
        "\n  k, b, n, t =integers\n  Read k, b, n, t\n  sum=integer with 1\n  cnt=integer with 0\n  while sum is less than or equal to t\n    set sum to sum * k + b\n    increment cnt\n  \n  if cnt is greater than n\n    print 0 and a new line\n  else do the following\n    print n - cnt + 1 and a new line\n  \n\n",
        "int main() {\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long sum = 1;\n  int cnt = 0;\n  while (sum <= t) {\n    sum = sum * k + b;\n    cnt++;\n  }\n  if (cnt > n)\n    cout << 0 << endl;\n  else\n    cout << n - cnt + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "long long function solve with long long arguments k, b, n and t\n  if k = 1\n    declare long longs low = -1 and high = n\n    while high - low is greater than 1\n      declare long long variable mid = (low + high) / 2\n      if 1 - t + b * (n - mid) <= 0\n        assign value of mid to high\n      else\n        assign value of mid to low\n      \n    \n    return high\n  \n  declare long long variable answ = n\n  declare __float128 variable pow = 1\n  while answ > 0 && (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0\n    multiply pow by k\n    decrease answ\n  \n  return answ\n\n\n  declare long long variables k, b, n and t\n  while car read k, b, n and t, print solve(k, b, n, t)\n  \n\n",
        "long long solve(long long k, long long b, long long n, long long t) {\n  if (k == 1) {\n    long long low = -1, high = n;\n    while (high - low > 1) {\n      long long mid = (low + high) / 2;\n      if (1 - t + b * (n - mid) <= 0) {\n        high = mid;\n      } else {\n        low = mid;\n      }\n    }\n    return high;\n  }\n  long long answ = n;\n  __float128 pow = 1;\n  while (answ > 0 && (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0) {\n    pow *= k;\n    answ--;\n  }\n  return answ;\n}\nint main() {\n  long long k, b, n, t;\n  while (cin >> k >> b >> n >> t) { cout << solve(k, b, n, t) << endl; }\n  return 0;\n}\n"
    ],
    [
        "point, num_diff and num are maps from string to int\ndeclare string variable s\nname is an array of strings with size 56\nboolean function cmp with string arguments s1 and s2\n  if point[s1] != point[s2] return point[s1] > point[s2]\n  if num_diff[s1] != num_diff[s2] return num_diff[s1] > num_diff[s2]\n  return num[s1] > num[s2]\n\nlet s1 and s2 be strings\ndeclare integer variable n\nnum1 and num2 are integers\nc = character\n\n  read n\n  for i = 1 to n inclusive read name[i]\n  for integer i = 1 to (n * (n - 1)) >> 1 inclusive\n    read s, num1, c and num2\n    s1 = substring of s from the start to the first character '-'\n    s2 = substring of s from the first character '-' to the end\n    if num1 is greater than num2, add 3 to point[s1]\n    if num1 is less than num2, add 3 to point[s2]\n    if num1 = num2\n      increase point[s1]\n      increase point[s2]\n    \n    increase num[s1] by num1\n    increase num[s2] by num2\n    increase num_diff[s1] by num1 - num2\n    increase num_diff[s2] by num2 - num1\n  \n  sort name from name + 1 to name + n + 1 using comparator cmp\n  sort name from name + 1 to name + (n / 2 + 1) using comparator cmp\n  for integer i = 1 to (n >> 1) inclusive print name[i] and a new line\n  \n\n",
        "map<string, int> point, num_diff, num;\nstring s;\nstring name[56];\nbool cmp(string s1, string s2) {\n  if (point[s1] != point[s2]) return point[s1] > point[s2];\n  if (num_diff[s1] != num_diff[s2]) return num_diff[s1] > num_diff[s2];\n  return num[s1] > num[s2];\n}\nstring s1, s2;\nint n;\nint num1, num2;\nchar c;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) { cin >> name[i]; }\n  for (int i = 1; i <= (n * (n - 1)) >> 1; i++) {\n    cin >> s >> num1 >> c >> num2;\n    s1 = s.substr(0, s.find(\"-\"));\n    s2 = s.substr(s.find(\"-\") + 1);\n    if (num1 > num2) { point[s1] += 3; }\n    if (num1 < num2) { point[s2] += 3; }\n    if (num1 == num2) {\n      point[s1]++;\n      point[s2]++;\n    }\n    num[s1] += num1;\n    num[s2] += num2;\n    num_diff[s1] += num1 - num2;\n    num_diff[s2] += num2 - num1;\n  }\n  sort(name + 1, name + n + 1, cmp);\n  sort(name + 1, name + (n / 2 + 1));\n  for (int i = 1; i <= (n >> 1); i++) { cout << name[i] << endl; }\n  return 0;\n}\n"
    ],
    [
        "scored, conceed, points are maps of string to int\nvec and a are vectors of strings\nboolean function cmp with string arguments a and b\n  if points[b] is greater than points[a]\n    return 1\n  else if points[b] is less than points[a]\n    \n  else\n    dif1 is an integer = scored[a] - conceed[a]\n    dif2 is an integer = scored[b] - conceed[b]\n    if dif1 is less than dif2\n      return 1\n    else if dif1 is greater than dif2\n      \n    else\n      if scored[a] is greater than scored[b]\n        \n      else if scored[a] is less than scored[b]\n        return 1\n    \n  \n\n\n  set integer n to 0\n  st = string\n  read n\n  m and k are integers with m = n and k = n / 2\n  while m--\n    read st\n    push st into vec\n  \n  n = (n * n - 1) / 2\n  st = \"\"\n  read character from the input\n  while n--\n    let i be integer\n    team1 and team2 are empty strings\n    read line from input into st\n    for i = 0 to length of st exclusive\n      if st[i] is equal to '-'\n        increase i by one\n        break the loop\n      \n      increase team1 by st[i]\n    \n    loop through i while i < length of st, incrementing i\n      if st[i] is equal to ' '\n        increase i\n        stop the loop\n      \n      increase team2 by st[i]\n    \n    let j and sum1 be integers with j = 1 and sum1 = 0\n    loop through i while i < length of st, incrementing i\n      if st[i] is equal to ':'\n        increase i by one\n        break the loop\n      \n      create integer c with value st[i] - 48\n      sum1 = (sum1 * j) + c\n      multiply j by 10\n    \n    increase scored[team1] by sum1\n    increase conceed[team2] by sum1\n    create integer sum2 with value 0\n    set value of j to 1\n    loop through i while i < length of st, incrementing i\n      create integer c with value st[i] - 48\n      sum2 = (sum2 * j) + c\n      multiply j by 10\n    \n    increase scored[team2] by sum2\n    increase conceed[team1] by sum2\n    if sum1 is greater than sum2\n      increase points[team1] by 3\n    else if sum1 is less than sum2\n      increase points[team2] by 3\n    else\n      increment points[team1]\n      increment points[team2]\n    \n  \n  sort vec using cmp as comparator function\n  for i = length of vec - 1 to k inclusive, decrementing i, push i into vec\n  sort a\n  for i = 0 to length of a exclusive print a[i]\n\n",
        "map<string, int> scored, conceed, points;\nvector<string> vec, a;\nbool cmp(string a, string b) {\n  if (points[b] > points[a])\n    return 1;\n  else if (points[b] < points[a])\n    return 0;\n  else {\n    int dif1 = scored[a] - conceed[a];\n    int dif2 = scored[b] - conceed[b];\n    if (dif1 < dif2)\n      return 1;\n    else if (dif1 > dif2)\n      return 0;\n    else {\n      if (scored[a] > scored[b])\n        return 0;\n      else if (scored[a] < scored[b])\n        return 1;\n    }\n  }\n}\nint main() {\n  int n = 0;\n  string st;\n  cin >> n;\n  int m = n, k = n / 2;\n  while (m--) {\n    cin >> st;\n    vec.push_back(st);\n  }\n  n = (n * n - 1) / 2;\n  st = \"\";\n  getchar();\n  while (n--) {\n    int i;\n    string team1 = \"\", team2 = \"\";\n    getline(cin, st);\n    for (i = 0; i < st.size(); i++) {\n      if (st[i] == '-') {\n        i++;\n        break;\n      }\n      team1 += st[i];\n    }\n    for (; i < st.size(); i++) {\n      if (st[i] == ' ') {\n        i++;\n        break;\n      }\n      team2 += st[i];\n    }\n    int j = 1, sum1 = 0;\n    for (; i < st.size(); i++) {\n      if (st[i] == ':') {\n        i++;\n        break;\n      }\n      int c = st[i] - 48;\n      sum1 = (sum1 * j) + c;\n      j *= 10;\n    }\n    scored[team1] += sum1;\n    conceed[team2] += sum1;\n    int sum2 = 0;\n    j = 1;\n    for (; i < st.size(); i++) {\n      int c = st[i] - 48;\n      sum2 = (sum2 * j) + c;\n      j *= 10;\n    }\n    scored[team2] += sum2;\n    conceed[team1] += sum2;\n    if (sum1 > sum2)\n      points[team1] += 3;\n    else if (sum1 < sum2)\n      points[team2] += 3;\n    else {\n      points[team1]++;\n      points[team2]++;\n    }\n  }\n  sort(vec.begin(), vec.end(), cmp);\n  for (int i = vec.size() - 1; i >= k; i--) a.push_back(vec[i]);\n  sort(a.begin(), a.end());\n  for (int i = 0; i < a.size(); i++) cout << a[i] << endl;\n}\n"
    ],
    [
        "create maps pt, sc, mi from string to integer\ncreate string array name with size 50\ndeclare cmp with strings s1, s2 as arguments, returning boolean\n  if pt[s1] is not pt[s2], return pt[s1] is greater than pt[s2] from function\n  if mi[s1] is not mi[s2]\n    return mi[s1] is greater than mi[s2] from function\n  else\n    return sc[s1] is greater than sc[s2] from function\n\n\n  create integer n\n  read n\n  for i = 0 to n exclusive, read name[i]\n  discard characters from stdin\n  for i = 0 to n * (n-1) /2 exclusive\n    create strings A, B\n    read line from cin to A with '-' as delimiter\n    read line from cin to B with ' ' as delimiter\n    create character ch\n    create integers pA, pB\n    read pA read ch read pB\n    discard characters from stdin\n    if pA is less than pB, increment pt[B] by 3\n    if pA is greater than pB, increment pt[A] by 3\n    if pA is pB, increment pt[A], increment pt[B]\n    increment sc[A] by pA\n    increment mi[A] by pA - pB\n    increment sc[B] by pB\n    increment mi[B] by pB - pA\n  \n  sort elements from name to name + n using cmp function to compare\n  sort elements from name to name + n / 2\n  for i = 0 to n / 2 exclusive, print name[i] print newline\n  \n\n",
        "map<string, int> pt, sc, mi;\nstring name[50];\nbool cmp(string s1, string s2) {\n  if (pt[s1] != pt[s2]) return pt[s1] > pt[s2];\n  if (mi[s1] != mi[s2])\n    return mi[s1] > mi[s2];\n  else\n    return sc[s1] > sc[s2];\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> name[i];\n  cin.ignore();\n  for (int i = 0; i < n * (n - 1) / 2; i++) {\n    string A, B;\n    getline(cin, A, '-');\n    getline(cin, B, ' ');\n    char ch;\n    int pA, pB;\n    cin >> pA >> ch >> pB;\n    cin.ignore();\n    if (pA < pB) pt[B] += 3;\n    if (pA > pB) pt[A] += 3;\n    if (pA == pB) pt[A]++, pt[B]++;\n    sc[A] += pA;\n    mi[A] += pA - pB;\n    sc[B] += pB;\n    mi[B] += pB - pA;\n  }\n  sort(name, name + n, cmp);\n  sort(name, name + n / 2);\n  for (int i = 0; i < n / 2; i++) cout << name[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "n=int, wp, dg and sg=array of 55 int\nname=array of 55 string\nfunction cmp (get int a and b, return bool)\n  if wp[a] is not wp[b] return wp[a] > wp[b]\n  if dg[a] is not dg[b] return dg[a] > dg[b]\n  return sg[a] > sg[b]\n\n\n  read n\n  for i=0 to n exclusive read name[i]\n  for i=0 to n*(n-1)/2 exclusive\n    s,a,b=string\n    p,q=int\n    c=char\n    read s,p,c,q\n    a=left portion of s before '-'\n    b=right portion of s after '-'\n    a1=find(name, name+n, a)-name, b1=find(name, name+n, b)-name\n    if p>q\n      add 3 to wp[a1]\n    else if q is p\n      increment wp[a1]\n      increment wp[b1]\n    else\n      add 3 to wp[b1]\n    \n    add p-q to dg[a1]\n    add p to sg[a1]\n    add q-p to dg[b1]\n    add q to sg[b1]\n  \n  a=array of 55 int\n  for i=0 to n exclusive a[i]=i\n  sort first n items of a using function cmp\n  ans=array of 55 string\n  for i=0 to n/2 exclusive ans[i]=name[a[i]]\n  sort first n/2 items of ans\n  for i=0 to n/2 exclusive print ans[i]\n  \n\n",
        "int n, wp[55], dg[55], sg[55];\nstring name[55];\nbool cmp(int a, int b) {\n  if (wp[a] != wp[b]) { return wp[a] > wp[b]; }\n  if (dg[a] != dg[b]) { return dg[a] > dg[b]; }\n  return sg[a] > sg[b];\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> name[i]; }\n  for (int i = 0; i < n * (n - 1) / 2; i++) {\n    string s, a, b;\n    int p, q;\n    char c;\n    cin >> s >> p >> c >> q;\n    a = s.substr(0, s.find('-'));\n    b = s.substr(s.find('-') + 1);\n    int a1 = find(name, name + n, a) - name, b1 = find(name, name + n, b) - name;\n    if (p > q) {\n      wp[a1] += 3;\n    } else if (q == p) {\n      wp[a1]++;\n      wp[b1]++;\n    } else {\n      wp[b1] += 3;\n    }\n    dg[a1] += p - q;\n    sg[a1] += p;\n    dg[b1] += q - p;\n    sg[b1] += q;\n  }\n  int a[55];\n  for (int i = 0; i < n; i++) { a[i] = i; }\n  sort(a, a + n, cmp);\n  string ans[55];\n  for (int i = 0; i < n / 2; i++) { ans[i] = name[a[i]]; }\n  sort(ans, ans + n / 2);\n  for (int i = 0; i < n / 2; i++) { cout << ans[i] << endl; }\n  return 0;\n}\n"
    ],
    [
        "create string array nam of size 50\nlet int n and int arrays wp of size 50, dg of size 50, and sg of size 50\ndeclare comp taking in ints a and b and returning bool\n  if wp[a] is not equal to wp[b]\n    return wp[a] > wp[b]\n  else if dg[a] is not equal to dg[b]\n    return the result of dg[a] > dg[b]\n  else do\n    return sg[a] > sg[b]\n\n\n  read n\n  for i = 0 to n exclusive, read nam[i]\n  for i = 0 to n * (n - 1) / 2 exclusive\n    create strings tmp, a, and b\n    make ints p and q\n    create char c\n    read tmp, p, c, and q\n    set a to tmp.substr(0, tmp.find('-'))\n    set b to tmp.substr(tmp.find('-') + 1)\n    create ints ai = find(nam, nam + n, a) - nam and bi = find(nam, nam + n, b) - nam\n    if p is more than q\n      set wp[ai] to wp[ai] + 3\n    else if p is less than q\n      set wp[bi] to wp[bi] + 3\n    else\n      add 1 to wp[ai] and ap[bi]\n    set dg[ai] to ad[ai] + p - q, add p to sg[ai], add q - p to dg[bi], and add q to sg[bi]\n  \n  create integer array a of size 50\n  for i = 0 to n exclusive, set a[i] to i\n  sort a using a + n and comp\n  create string array names of size 50\n  for i = 0 to n / 2 exclusive, set names[i] to nam[a[i]]\n  sort names using names + n / 2\n  for i = 0 to n / 2 exclusive, print names[i]\n  \n\n",
        "string nam[50];\nint n, wp[50], dg[50], sg[50];\nbool comp(int a, int b) {\n  if (wp[a] != wp[b])\n    return wp[a] > wp[b];\n  else if (dg[a] != dg[b])\n    return dg[a] > dg[b];\n  else\n    return sg[a] > sg[b];\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < (int)(n); i++) cin >> nam[i];\n  for (int i = 0; i < (int)(n * (n - 1) / 2); i++) {\n    string tmp, a, b;\n    int p, q;\n    char c;\n    cin >> tmp >> p >> c >> q;\n    a = tmp.substr(0, tmp.find('-'));\n    b = tmp.substr(tmp.find('-') + 1);\n    int ai = find(nam, nam + n, a) - nam, bi = find(nam, nam + n, b) - nam;\n    if (p > q)\n      wp[ai] += 3;\n    else if (p < q)\n      wp[bi] += 3;\n    else\n      wp[ai]++, wp[bi]++;\n    dg[ai] += p - q, sg[ai] += p, dg[bi] += q - p, sg[bi] += q;\n  }\n  int a[50];\n  for (int i = 0; i < (int)(n); i++) a[i] = i;\n  sort(a, a + n, comp);\n  string names[50];\n  for (int i = 0; i < (int)(n / 2); i++) names[i] = nam[a[i]];\n  sort(names, names + n / 2);\n  for (int i = 0; i < (int)(n / 2); i++) cout << names[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "declare integers n, m, a, b and 2d array of integers v of size 2100 by 2100\ndeclare integers k, x, y and 2d array of integers d of size 2100 by 2100\nboolean function solve with integer arguments x, y and k\n  create ingteger variables t, l = max of 1 and x - k; r = min of x + k and n\n  for integer i = l to r inclusive\n    set t to k - abs(i - x)\n    if y - t is greater than 0 && !v[i][y - t]\n      set a to i\n      set value of b to y - t\n      return 1\n    \n    if y + t <= m && !v[i][y + t]\n      a = i\n      b = y + t\n      return 1\n    \n  \n  \n\n\n  read n, m and k\n  for i = 0 to k exclusive\n    read x and y\n    for integer j = -2 to 2 inclusive\n      for integer k = -2 to 2 inclusive\n        if x + j < 1 || x + j > n || y + k < 1 || y + k is greater than m, continue the loop\n        d[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k))\n      \n    while solve(x, y, d[x][y]) is false, increment d[x][y]\n    v[a][b] = 1\n    print a, \" \", b and a new line\n  \n\n",
        "int n, m, a, b, v[2100][2100];\nint k, d[2100][2100], x, y;\nbool solve(int x, int y, int k) {\n  int l = max(1, x - k), r = min(x + k, n), t;\n  for (int i = l; i <= r; i++) {\n    t = k - abs(i - x);\n    if (y - t > 0 && !v[i][y - t]) {\n      a = i;\n      b = y - t;\n      return 1;\n    }\n    if (y + t <= m && !v[i][y + t]) {\n      a = i;\n      b = y + t;\n      return 1;\n    }\n  }\n  return 0;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> x >> y;\n    for (int j = -2; j <= 2; j++)\n      for (int k = -2; k <= 2; k++) {\n        if (x + j < 1 || x + j > n || y + k < 1 || y + k > m) continue;\n        d[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k));\n      }\n    while (!solve(x, y, d[x][y])) d[x][y]++;\n    v[a][b] = 1;\n    cout << a << \" \" << b << endl;\n  }\n}\n"
    ],
    [
        "create integers n, m, a, b, create 2d integer array v with size 2100 by 2100\ncreate integers k, x, y, create 2d integer array d with size 2100 by 2100\ndeclare solve with integers x, y, k as arguments, returning boolean\n  create integers l, r, t with l = maximum of ( 1 and x - k ), r = minimum of ( x + k and n )\n  for i = l to r inclusive\n    set t to k - absolute value of ( i - x )\n    if y - t is greater than 0 and v[i][y-t] is false\n      set a to i\n      set b to y - t\n      return 1 from function\n    \n    if y + t is less than or equal to m and v[i][y+t] is false\n      set a to i\n      set b to y + t\n      return 1\n    \n  \n  \n\n\n  read n read m read k\n  for i = 0 to k exclusive\n    read x read y\n    for j = -2 to 2 inclusive\n      for k = -2 to 2 inclusive\n        if x + j is less than 1 or x + j is greater than n or y + k is less than 1 or y + k is greater than m, break current loop iteration\n        set d[x][y] to maximum of ( d[x][y] and d[x+j][y+k] - absolute value of j - absolute value of k )\n      \n    while result of run solve with x, y, d[x][y] as arguments is false, increment d[x][y]\n    set v[a][b] to 1\n    print a print \" \" print b print newline\n  \n\n",
        "int n, m, a, b, v[2100][2100];\nint k, d[2100][2100], x, y;\nbool solve(int x, int y, int k) {\n  int l = max(1, x - k), r = min(x + k, n), t;\n  for (int i = l; i <= r; i++) {\n    t = k - abs(i - x);\n    if (y - t > 0 && !v[i][y - t]) {\n      a = i;\n      b = y - t;\n      return 1;\n    }\n    if (y + t <= m && !v[i][y + t]) {\n      a = i;\n      b = y + t;\n      return 1;\n    }\n  }\n  return 0;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> x >> y;\n    for (int j = -2; j <= 2; j++)\n      for (int k = -2; k <= 2; k++) {\n        if (x + j < 1 || x + j > n || y + k < 1 || y + k > m) continue;\n        d[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k));\n      }\n    while (!solve(x, y, d[x][y])) d[x][y]++;\n    v[a][b] = 1;\n    cout << a << \" \" << b << endl;\n  }\n}\n"
    ],
    [
        "create integers n, m, a and b, and 2d array of integers v 2100 by 2100\ncreate integers k, x and y, and 2d array of integers d 2100 by 2100\nboolean method solve with integer arguments x, y and k\n  declare integers t, l = max of 1 and x - k and r = min of x + k and n\n  for integer i = l to r inclusive\n    set value of t to k - abs(i - x)\n    if y - t is greater than 0 and !v[i][y - t]\n      set a to i\n      set value of b to y - t\n      return 1\n    \n    if y + t <= m and !v[i][y + t]\n      assign value of i to the a\n      set b to y + t\n      return 1\n    \n  \n  \n\n\n  read n, m and k\n  for i = 0 to k exclusive\n    read x and y\n    for integer j = -2 to 2 inclusive\n      for integer k = -2 to 2 inclusive\n        if x + j < 1 or x + j > n or y + k < 1 or y + k > m, continue the loop\n        set d[x][y] = max of d[x][y] and d[x + j][y + k] - abs(j) - abs(k))\n      \n    while solve(x, y, d[x][y]) is 0, increment d[x][y]\n    set value of v[a][b] to 1\n    print a, \" \", b and a new line\n  \n\n",
        "int n, m, a, b, v[2100][2100];\nint k, d[2100][2100], x, y;\nbool solve(int x, int y, int k) {\n  int l = max(1, x - k), r = min(x + k, n), t;\n  for (int i = l; i <= r; i++) {\n    t = k - abs(i - x);\n    if (y - t > 0 && !v[i][y - t]) {\n      a = i;\n      b = y - t;\n      return 1;\n    }\n    if (y + t <= m && !v[i][y + t]) {\n      a = i;\n      b = y + t;\n      return 1;\n    }\n  }\n  return 0;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> x >> y;\n    for (int j = -2; j <= 2; j++)\n      for (int k = -2; k <= 2; k++) {\n        if (x + j < 1 || x + j > n || y + k < 1 || y + k > m) continue;\n        d[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k));\n      }\n    while (!solve(x, y, d[x][y])) d[x][y]++;\n    v[a][b] = 1;\n    cout << a << \" \" << b << endl;\n  }\n}\n"
    ],
    [
        "a = array of pair of size 200020 of int and int\nn, k, c, x, y, m, z, ac, t, b, i = long long\n\n  for (read n, increment i, decrement n\n    for read k, c, x, y, m and t = 0, decrement k, z = max(z, t)\n      if ac <= 200000, a[increment ac] = make_pair(pair of int to int (t, c), i)\n      b = (c * x + y) modulo m\n      if b < c and k, increment t\n      c = b\n    \n  print z\n  if ac < 200001\n    sort a and a + ac\n    for i = 0 to ac, print first.second of a[i],\" \", second of a[i] + 1\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "a1, a2, n, k, second, ans, ans1 = long long with second = 0 and ans = 0\nh = pair of long long and pair of long long and long long vector\nin function read\n  read n\n  x, y, m = int then for i = 0 to n\n    read k\n    add k to second\n    read a1\n    t = long long with t = a1\n    read x then y then m\n    append make_pair of 0 and make_pair of a1 and i + 1 to h\n    set ans1 to 0\n    for j = 1 to k\n      set a2 to (a1 * x + y) mod m\n      if a2 is less than a1 then increment ans1\n      set a1 to a2\n      set t to max of t and a1\n      if size of h is less or equal to 200000 then append make_pair of ans1 and make_pair of a1 and i + 1 to h\n    \n    set ans to max of ans and ans1\n  \n  sort vector h\n  print ans\n  if second is less or equal to 200000\n    for i = 0 to second print h[i].second.first and h[i].second.second\n\n\n  call read\n  \n\n",
        "long long a1, a2, n, k, second = 0, ans = 0, ans1;\nvector<pair<long long, pair<long long, long long>>> h;\nvoid read(void) {\n  cin >> n;\n  for (int i = 0, x, y, m; i < n; ++i) {\n    cin >> k;\n    second += k;\n    cin >> a1;\n    long long t = a1;\n    cin >> x >> y >> m;\n    h.push_back(make_pair(0, make_pair(a1, i + 1)));\n    ans1 = 0;\n    for (int j = 1; j < k; ++j) {\n      a2 = (a1 * x + y) % m;\n      if (a2 < a1) ans1++;\n      a1 = a2;\n      t = max(t, a1);\n      if (h.size() <= 200000) h.push_back(make_pair(ans1, make_pair(a1, i + 1)));\n    }\n    ans = max(ans, ans1);\n  }\n  sort(h.begin(), h.end());\n  cout << ans << \"\\n\";\n  if (second <= 200000)\n    for (int i = 0; i < second; ++i) cout << h[i].second.first << \" \" << h[i].second.second << \"\\n\";\n}\nint main() {\n  read();\n  return 0;\n}\n"
    ],
    [
        "a = pair of pair of int and int and int of size 200020\nn, k, c, x, y, m, z, ac, t, b, i = long long\n\n  read n then loop n times decrementing n and incrementing i each time\n    read k then c then x then y then m and set t to 0 then loop k times decrementing k and setting z to max of z and t each time\n      if ac is less or equal to 200000 then set a[ac] to value of make_pair of pair of int and int of t and c and i then increment ac\n      set b to (c * x + y) mod m\n      if b is less than c and k is not 0 then increment t\n      set c to b\n    \n  print z\n  if ac is less than 200001\n    call sort on a and a + ac\n    for i = 0 to ac print a[i].first.second and a[i].second + 1\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "let a = array of integers of length 200020, pair of integets\nlet n, k, c, x, y, m, z, ac, t, b, i be long integers\n\n  for read n, n is decreased by 1, i is increased by 1\n    for read the values k, c, x, y, m, t , t = 0 , k value is decreased by 1, z = maximum of z and t\n      if ac <= 200000, a[ac++] = make_pair(pair<int, int>(t, c), i\n      let the value of b is equal to c * x + y modulo m\n      if b is less than c and k, increase t by 1\n      the value of b is assigned to c\n    \n  print z and newline\n  if ac is less than 200001\n    sort the values a and a + ac\n    for i = 0 to ac exclusive, print a[i].first.second and a[i].second + 1 and newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair array a with size 200020 with pair of ( pair of ( integer and integer) and integer )\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n, decrement n, incrementing i\n    for read k read c read x read y read m, t = 0, deecrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to make pair from ( pair of ( integer and integer ) initialized with ( t, c ), and integer )\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "\n  create long longs n, count with count = 0\n  read n\n  create constant integer max_i with max_i = 2e5\n  create integer counter with counter = 0\n  create tuple array data with integer, integer, integer, with size max_i + 9\n  for i = 0 to n exclusive\n    create long longs k, a0, x, y, m, t, a, with t = 0, a = 0\n    read k read a0 read x read y read m\n    for j = 0 to k exclusive\n      if counter is less than or equal to max_i, set data[increment counter] to make tuple from t, a0, i\n      set a to (a0 * x + y) % m\n      if a is less than a0 and j is not k - 1, increment t\n      set a0 to a\n    \n    set count to maximum of count and t\n  \n  print count print newline\n  if counter is less than or equal to max_i\n    sort elements from data to data + counter\n    for i = 0 to counter exclusive, print get element 1 from data[i] print \" \" print get element 2 from data[i] + 1 print newline\n  \n\n",
        "int main() {\n  long long n, count = 0;\n  cin >> n;\n  const int max_i = 2e5;\n  int counter = 0;\n  tuple<int, int, int> data[max_i + 9];\n  for (int i = 0; i < n; i++) {\n    long long k, a0, x, y, m, t = 0, a = 0;\n    cin >> k >> a0 >> x >> y >> m;\n    for (int j = 0; j < k; j++) {\n      if (counter <= max_i) { data[counter++] = make_tuple(t, a0, i); }\n      a = (a0 * x + y) % m;\n      if (a < a0 && j != k - 1) { t++; }\n      a0 = a;\n    }\n    count = max(count, t);\n  }\n  cout << count << endl;\n  if (counter <= max_i) {\n    sort(data, data + counter);\n    for (int i = 0; i < counter; i++) { cout << get<1>(data[i]) << \" \" << get<2>(data[i]) + 1 << endl; }\n  }\n}\n"
    ],
    [
        "MAX = const int with MAX = 2e5\na = pair of pair of long long and long long and long long array of size MAX + 9\nn, k, a0, x, y, m, ans, cnt, t, tmp = long long\n\n  read n\n  for i = 0 to n\n    read k then a0 then x then y then m then set t to 0\n    for j = 0 to k\n      if cnt is less or equal to MAX then set a[cnt] to {{t, a0}, i} then increment cnt\n      set tmp to (a0 * x + y) mod m\n      if tmp is less than a0 and j is not k - 1 increment t\n      set a0 to tmp\n    \n    set ans to max of ans and t\n  \n  print ans\n  if cnt is less than MAX\n    call sort on a and a + cnt\n    for i = 0 to cnt print a[i].first.second and a[i].second + 1\n  \n\n",
        "const int MAX = 2e5;\npair<pair<long long, long long>, long long> a[MAX + 9];\nlong long n, k, a0, x, y, m, ans, cnt, t, tmp;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> k >> a0 >> x >> y >> m, t = 0;\n    for (int j = 0; j < k; j++) {\n      if (cnt <= MAX) a[cnt++] = {{t, a0}, i};\n      tmp = (a0 * x + y) % m;\n      if (tmp < a0 && j != k - 1) t++;\n      a0 = tmp;\n    }\n    ans = max(ans, t);\n  }\n  cout << ans << '\\n';\n  if (cnt <= MAX) {\n    sort(a, a + cnt);\n    for (int i = 0; i < cnt; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << '\\n';\n  }\n}\n"
    ],
    [
        "create pair a with pair of ( integer, integer), integer, with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n to decrement n, incrementing i\n    for read k read c read x read y read m, t = 0 to decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to create pair from ( pair of integer and integer initialized with ( t, c ) and i\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair of ( pair of ( integer and integer ) and integer ) array a with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n to decrement n, incrementing i\n    for read k read c read x read y read m, t = 0 to decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to make pair of ( pair of ( integer and integer) initialized with (t, c ) and i )\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair of ( pair of ( integer, integer ), integer ) array a with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n to derement n, incrementing i\n    for read k read c read x read y read m, t = 0 to decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000 set a[increment ac] to make pair from ( pair of (integer, integer ) initialized with (t, c ), i )\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair array of pair of ( pair of ( integer, integer ), integer ) a with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n, decrement n, incrementing i\n    for read k read c read x read y read m, t = 0, to decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to make pair with ( (pair of integer, integer initialized with ( t, c ) ), i\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair array a with size 200020 with pair of ( pair of (integer and integer) and integer )\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n, decrement n, incrementing i\n    for read k read c read x read y read m, t = 0, decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to new pair from ( pair of ( integer and integer ) initialized with (t, c) and i )\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "\n  create integers a, b and c\n  read input to a, b and c\n  if b is greater than c, swap b and c\n  print (2 * a + b - 1) * b + (c - b - 1) * (a + b - 1)\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  if (b > c) { swap(b, c); }\n  cout << (2 * a + b - 1) * b + (c - b - 1) * (a + b - 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "oo = constant integer = 1e9\n\n  a, b, c = integer\n  read a, b, c\n  ans = integer = b * c + (a - 1) * (b + c - 1)\n  print ans\n  \n\n",
        "const int oo = 1e9;\nint main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  int ans = b * c + (a - 1) * (b + c - 1);\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c =integers\n  Read a, b, c\n  print a * b + b * c + c * a - (a + b + c) + 1 and a new line\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << a * b + b * c + c * a - (a + b + c) + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long longs x, y and z\n\n  read x, y and z\n  print x * y + y * z + x * z - x - z - y + 1\n  \n\n",
        "long long x, y, z;\nint main() {\n  cin >> x >> y >> z;\n  cout << x * y + y * z + x * z - x - z - y + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "let gcd be a function which accepts integers a and b\n  return gcd(b, a modulo b) if b else a\n\n\n  let n, m, c be integers\n  read n, m, c\n  print n * m * c - (n - 1) * (m - 1) * (c - 1) and newline\n\n",
        "int gcd(int a, int b) {\n  return b ? gcd(b, a % b) : a;\n}\nint main() {\n  int n, m, c;\n  cin >> n >> m >> c;\n  cout << n * m * c - (n - 1) * (m - 1) * (c - 1) << endl;\n}\n"
    ],
    [
        "\n  create integers a, b, c\n  read a read b read c\n  print a * b + b * c + a * c - a - b - c + 1 print newline\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << a * b + b * c + a * c - a - b - c + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, c\n  read a read b read c\n  print a * b + b * c + c * a - a - b - c + 1 print newline\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << a * b + b * c + c * a - a - b - c + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let a, b, c be int\n  read a and b and c\n  print a * b + b * c + c * a - a - b - c + 1\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << a * b + b * c + c * a - a - b - c + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers a, b, c\n\n  read a read b read c\n  print a * b + b * c + c * a - a - b - c + 1 print newline\n\n",
        "int a, b, c;\nint main() {\n  cin >> a >> b >> c;\n  cout << a * b + b * c + c * a - a - b - c + 1 << endl;\n}\n"
    ],
    [
        "\n  create long longs a, b, c\n  read a read b read c\n  create long long ans with ans = (c + a - 1) * (b + a - 1) - a * (a - 1)\n  print ans print newline\n  \n\n",
        "int main() {\n  long long a, b, c;\n  cin >> a >> b >> c;\n  long long ans = (c + a - 1) * (b + a - 1) - a * (a - 1);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant long long OO with OO = 1e5 + 555\ndeclare rakm with character x as argument, returning long long\n  return x - 48 from function\n\ndeclare _7rf with long long x as argument, returning character\n  return x + 48 from function\n\ndeclare odd with long long x as argument, returning boolean\n  return x % 2\n\ndeclare even with long long x as argument, returning boolean\n  return 1 - x % 2\n\ndeclare factorial with long long x as argument, returning long long\n  if x is 0 or x is 1\n    return 1 from function\n  else\n    return x * result of run factorial with x - 1 as argument\n  \n\ndeclare ss with long long x as argument, returning long long\n  create long long sum with sum = 0\n  while x is greater than 0\n    increment sum by x % 10\n    set x to x / 10\n  \n  return sum from function\n\ndeclare a3ks with long long x as argument, returning long long\n  create long longs b, u, with b = 0, u = x\n  while u is greater than 0\n    set b to ( b * 10 ) + u % 10\n    set u to u / 10\n  \n  return b from function\n\ndeclare prime with long long x as argument, returning boolean\n  for i = 2 to x exclusive\n    if x % i is 0, return 0 from function\n  \n  return 1 from function\n\n\n  create integers a, b, c\n  read a read b read c\n  print (a * b * c) - ((a - 1) * (b - 1) * (c - 1)) print newline\n\n",
        "const long long OO = 1e5 + 555;\nlong long rakm(char x) {\n  return x - 48;\n}\nchar _7rf(long long x) {\n  return x + 48;\n}\nbool odd(long long x) {\n  return x % 2;\n}\nbool even(long long x) {\n  return 1 - x % 2;\n}\nlong long factorial(long long x) {\n  if (x == 0 || x == 1) {\n    return 1;\n  } else {\n    return x * factorial(x - 1);\n  }\n}\nlong long ss(long long x) {\n  long long sum = 0;\n  while (x > 0) {\n    sum += x % 10;\n    x /= 10;\n  }\n  return sum;\n}\nlong long a3ks(long long x) {\n  long long b = 0, u = x;\n  while (u > 0) {\n    b = (b * 10) + u % 10;\n    u /= 10;\n  }\n  return b;\n}\nbool prime(long long x) {\n  for (int i = 2; i < x; i++) {\n    if (x % i == 0) { return 0; }\n  }\n  return 1;\n}\nint main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << (a * b * c) - ((a - 1) * (b - 1) * (c - 1)) << endl;\n}\n"
    ],
    [
        "\n  declare integer variables a, b and c\n  read a, b and c\n  print (a * b) + (b * c) + (c * a) - a - b - c + 1\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << (a * b) + (b * c) + (c * a) - a - b - c + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "declare constant int N = 1e5 + 100\ncreate ints a, b and c\ndeclare vector of integers called v\n\n  read input to a, b and c\n  print (a * b * c) - (a - 1) * (b - 1) * (c - 1)\n  \n\n",
        "const int N = 1e5 + 100;\nint a, b, c;\nvector<int> v;\nint main() {\n  cin >> a >> b >> c;\n  cout << (a * b * c) - (a - 1) * (b - 1) * (c - 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAX with MAX = 5e4 + 5\ncreate constant long long MAX2 with MAX2 = 11\ncreate constant integer MOD with MOD = 1000000000 + 7\ncreate constant long long INF with INF = 20000\ncreate constant integer array dr with dr = {1, 0, -1, 0, 1, 1, -1, -1}\ncreate constant integer array dc with dc = {0, 1, 0, -1, 1, -1, 1, -1}\ncreate constant double pi with pi = acosign of -1\ncreate integer a, b, c\n\n  read a read b read c\n  print a * b + (a + b - 1) * (c - 1) print \"\\n\"\n  \n\n",
        "const int MAX = 5e4 + 5;\nconst long long MAX2 = 11;\nconst int MOD = 1000000000 + 7;\nconst long long INF = 20000;\nconst int dr[] = {1, 0, -1, 0, 1, 1, -1, -1};\nconst int dc[] = {0, 1, 0, -1, 1, -1, 1, -1};\nconst double pi = acos(-1);\nint a, b, c;\nint main() {\n  cin >> a >> b >> c;\n  cout << a * b + (a + b - 1) * (c - 1) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "N=100100\na,b,c=int\nv=vector of int\n\n  read a,b,c\n  print (b*c)+(a-1)*(b+c-1)\n  \n\n",
        "const int N = 1e5 + 100;\nint a, b, c;\nvector<int> v;\nint main() {\n  cin >> a >> b >> c;\n  cout << (b * c) + (a - 1) * (b + c - 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c =integers\n  Read a, b, c\n  ans = integer, set to (c + a - 1) * (b + a - 1) - a * (a - 1)\n  print ans and a new line\n  \n\n",
        "int main() {\n  long long a, b, c;\n  cin >> a >> b >> c;\n  long long ans = (c + a - 1) * (b + a - 1) - a * (a - 1);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long a, b, c\n  read a, b, c\n  print (a * b * c) - ((a - 1) * (b - 1) * (c - 1))\n  \n\n",
        "int main() {\n  long long a, b, c;\n  cin >> a >> b >> c;\n  cout << (a * b * c) - ((a - 1) * (b - 1) * (c - 1)) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c = integer\n  read a, b, c\n  print the result of b * c + (a - 1) * (b + c - 1)\n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << b * c + (a - 1) * (b + c - 1) << endl;\n}\n"
    ],
    [
        "create constant integer INF with INF = 0x3f3f3f3f\ncreate constant long long INFLL with INFLL = 0x3f3f3f3f3f3f3f3fLL\n\n  create long longs a, b, c\n  read a read b read c\n  create long long ans with ans = (c + a - 1) * (b + a - 1) - a * (a - 1)\n  print ans print newline\n  \n\n",
        "const int INF = 0x3f3f3f3f;\nconst long long INFLL = 0x3f3f3f3f3f3f3f3fLL;\nint main() {\n  long long a, b, c;\n  cin >> a >> b >> c;\n  long long ans = (c + a - 1) * (b + a - 1) - a * (a - 1);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variables str, str2 and s\n  declare integer variables num and i\n  read num and str and loop further\n    sort str\n    for i from 0 to length of str exclusive adding num to i, append str[i] to str2\n    for i = 0 to num exclusive, append str2 to s\n    assign s to str2\n    sort str2\n    if str2 != str\n      print -1\n      \n    else\n      print s\n    \n  \n  \n\n",
        "int main() {\n  string str, str2, s;\n  int num, i;\n  while (cin >> num >> str) {\n    sort(str.begin(), str.end());\n    for (i = 0; i < str.size(); i += num) { str2 += str[i]; }\n    for (i = 0; i < num; i++) { s += str2; }\n    str2 = s;\n    sort(str2.begin(), str2.end());\n    if (str2 != str) {\n      cout << -1 << endl;\n      ;\n    } else {\n      cout << s << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create constant double PI with PI = acosign of -1\ncreate constant integer MAX with MAX = 2e9 + 7\ncreate constant long long MOD with MOD = 1e9 + 7\ncreate map m from character to integer\ndeclare solve with no arguments, returning void\n  create integer k\n  read k\n  create string s\n  read s\n  create integer n with n = size of s\n  if n % k is not 0\n    print -1 print newline\n    return false from function\n  \n  create integer need with need = n / k\n  for i = 0 to n exclusive, increment m[s[i]]\n  create string t with t = \"\"\n  for i = 97 to 123 exclusive\n    if m[character casted i] % k is 0\n      for j = 0 to m[character casted i] / k exclusive, increment by character casted i\n    else\n      print -1 print newline\n      return false from function\n    \n  \n  for i = 0 to k exclusive, print t\n  print newline\n\n\n  run solve\n  \n\n",
        "const double PI = acos(-1);\nconst int MAX = 2e9 + 7;\nconst long long MOD = 1e9 + 7;\nmap<char, int> m;\nvoid solve() {\n  int k;\n  cin >> k;\n  string s;\n  cin >> s;\n  int n = s.size();\n  if (n % k != 0) {\n    cout << -1 << endl;\n    return;\n  }\n  int need = n / k;\n  for (int i = 0; i < n; i++) { m[s[i]]++; }\n  string t = \"\";\n  for (int i = 97; i < 123; i++) {\n    if (m[char(i)] % k == 0) {\n      for (int j = 0; j < m[char(i)] / k; j++) { t += char(i); }\n    } else {\n      cout << -1 << endl;\n      return;\n    }\n  }\n  for (int i = 0; i < k; i++) { cout << t; }\n  cout << endl;\n}\nint main() {\n  solve();\n  return 0;\n}\n"
    ],
    [
        "\n  k = int\n  s = string\n  c = int array of size 26 with all values set to 0\n  read k then s\n  if size of s is not a multiple of k\n    print -1\n    \n  \n  for i = 0 to size of s increment c[s[i] - 'a']\n  for i = 0 to 26\n    if c[i] is not a multiple of k\n      print -1\n      \n    \n  \n  res = string\n  for i = 0 to 26\n    for j = 0 to c[i] / k increment res by ('a' + i) as char\n  \n  for i = 0 to k print res\n  print newline\n  \n\n",
        "int main() {\n  int k;\n  string s;\n  int c[26] = {0};\n  cin >> k >> s;\n  if (s.size() % k != 0) {\n    cout << -1 << endl;\n    return 0;\n  }\n  for (int i = 0; i < s.size(); ++i) { ++c[s[i] - 'a']; }\n  for (int i = 0; i < 26; ++i) {\n    if (c[i] % k != 0) {\n      cout << -1 << endl;\n      return 0;\n    }\n  }\n  string res;\n  for (int i = 0; i < 26; ++i) {\n    for (int j = 0; j < c[i] / k; ++j) { res += char('a' + i); }\n  }\n  for (int i = 0; i < k; ++i) { cout << res; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  k=int\n  s=string\n  read k,s\n  count=array of 26 int filled with 0\n  for i=0 to length of s exclusive increment count[s[i]-'a']\n  s1=string\n  c=0\n  increment c while c<26\n    if count[c] modulo k not equal 0\n      break\n    else\n      append count[c]/k copies of 'a'+c to s1\n    \n  \n  if c is 26\n    while decremented value of k not equal 0 print s1\n    print newline\n  else\n    print -1\n  \n  \n\n",
        "int main() {\n  int k;\n  string s;\n  cin >> k >> s;\n  int count[26] = {0};\n  for (int i = 0; i < s.length(); ++i) { count[s[i] - 'a'] += 1; }\n  string s1;\n  int c = 0;\n  for (; c < 26; ++c) {\n    if (count[c] % k != 0) {\n      break;\n    } else {\n      s1.append(count[c] / k, 'a' + c);\n    }\n  }\n  if (c == 26) {\n    while (k--) { cout << s1; }\n    cout << endl;\n  } else {\n    cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare count as integer\n  read count\n  declare s as string\n  read s\n  declare n as integer = length of s\n  declare integer array a size 26 = {0}\n  for i = 0 to n exclusive, increment a[s[i] - 'a']\n  for i = 0 to 26 exclusive\n    if a[i] % count is not 0\n      print \"-1\" print newline\n      \n    \n  \n  declare string ans = \"\"\n  for i = 0 to 26 exclusive\n    if a[i] is true\n      for j = 0 to a[i] / count exclusive\n        declare temp with temp = i + 'a'\n        let ans be ans + temp\n      \n    \n  \n  for i = 0 to count exclusive, print ans\n  print newline\n\n",
        "int main() {\n  int count;\n  cin >> count;\n  string s;\n  cin >> s;\n  int n = s.length();\n  int a[26] = {0};\n  for (int i = 0; i < n; i++) { a[s[i] - 'a']++; }\n  for (int i = 0; i < 26; i++) {\n    if (a[i] % count != 0) {\n      cout << \"-1\" << endl;\n      return 0;\n    }\n  }\n  string ans = \"\";\n  for (int i = 0; i < 26; i++) {\n    if (a[i]) {\n      for (int j = 0; j < a[i] / count; j++) {\n        char temp = i + 'a';\n        ans = ans + temp;\n      }\n    }\n  }\n  for (int i = 0; i < count; i++) { cout << ans; }\n  cout << endl;\n}\n"
    ],
    [
        "\n  create integers k\n  read k\n  create string str\n  read str\n  create integer n with n = length of str\n  create map characters from character to integer\n  create map iterator itr from character to integer\n  for i = 0 to n exclusive\n    if first index of str[i] in characters is not end of characters\n      increment characters[str[i]] by 1\n    else\n      set characters[str[i]] to 1\n    \n  \n  for itr = beginning of characters to itr is not end of characters, incrementing itr\n    if second element of itr is less than k\n      print -1 print newline\n      exit program with code 0\n    \n  \n  create string new_str with new_str = \"\"\n  for itr = beginning of characters to itr is not end of characters, incrementing itr\n    create integer repeat with repeat = second element of itr / k\n    for i = 0 to repeat exclusive, set new_str to new_str + first element of itr\n  \n  if length of new_str * k is less than n\n    print -1 print newline\n    exit program with code 0\n  \n  for i = 0 to k exclusive, print new_str\n  print newline\n  \n\n",
        "int main() {\n  int k;\n  cin >> k;\n  string str;\n  cin >> str;\n  int n = str.length();\n  map<char, int> characters;\n  map<char, int>::iterator itr;\n  for (int i = 0; i < n; i++) {\n    if (characters.find(str[i]) != characters.end()) {\n      characters[str[i]] += 1;\n    } else {\n      characters[str[i]] = 1;\n    }\n  }\n  for (itr = characters.begin(); itr != characters.end(); itr++) {\n    if (itr->second < k) {\n      cout << -1 << endl;\n      exit(0);\n    }\n  }\n  string new_str = \"\";\n  for (itr = characters.begin(); itr != characters.end(); itr++) {\n    int repeat = itr->second / k;\n    for (int i = 0; i < repeat; i++) { new_str = new_str + itr->first; }\n  }\n  if (new_str.length() * k < n) {\n    cout << -1 << endl;\n    exit(0);\n  }\n  for (int i = 0; i < k; i++) { cout << new_str; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "declare an array of chars inPutStr with size 1001\ndeclare int k and an array of ints strArr with 26 elements\ncreate char array subStr with 1001 elements\nmakeAString is a void function\n  create integer idx = 0\n  for j from 0 to 26 exclusive\n    while strArr[j] != 0\n      change subStr[idx] to j + 'a'\n      increment idx by one\n      assign strArr[j] - k to strArr[j]\n    \n  \n  for i from 0 to k exclusive\n    for j = 0 to idx exclusive, print subStr[j]\n  \n  print new line\n\n\n  for i = 0 to 26 exclusive, set strArr[i] to 0\n  read k\n  read inPutStr\n  for i = 0 while inPutStr[i] != 0\n    create integer id = inPutStr[i] - 'a'\n    set strArr[id] to strArr[id] + 1\n  \n  declare bool Result = true\n  for i from 0 to 26 exclusive\n    if strArr[i] % k != 0\n      assign false to Result\n      break the loop\n    \n  \n  if Result is true\n    call makeAString()\n  else\n    print \"-1\"\n  \n\n",
        "char inPutStr[1001];\nint strArr[26], k;\nchar subStr[1001];\nvoid makeAString() {\n  int idx = 0;\n  for (int j = 0; j < 26; j++) {\n    while (strArr[j] != 0) {\n      subStr[idx] = j + 'a';\n      idx++;\n      strArr[j] = strArr[j] - k;\n    }\n  }\n  for (int i = 0; i < k; i++) {\n    for (int j = 0; j < idx; j++) { cout << subStr[j]; }\n  }\n  cout << endl;\n}\nint main() {\n  for (int i = 0; i < 26; i++) { strArr[i] = 0; }\n  cin >> k;\n  cin >> inPutStr;\n  for (int i = 0; inPutStr[i]; i++) {\n    int id = inPutStr[i] - 'a';\n    strArr[id] = strArr[id] + 1;\n  }\n  bool Result = true;\n  for (int i = 0; i < 26; i++) {\n    if (strArr[i] % k != 0) {\n      Result = false;\n      break;\n    }\n  }\n  if (Result) {\n    makeAString();\n  } else\n    cout << \"-1\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let T, i, j, count, d and m be integers with count = 1 and m = 0\n  create an arrays of characters s and k with size 1000\n  read T and s\n  set j to length of s\n  sort s\n  for i = 0 to j exclusive\n    if s[i] = s[i + 1]\n      add 1 to count\n    else\n      if count % T = 0\n        assign count / T to d\n        loop, decrementing d, while it is not 0\n          set k[m] to s[i]\n          increment m\n        \n        set count to 1\n      else\n        print \"-1\"\n        \n      \n    \n  \n  set k[m] to '\\0'\n  decrement T and loop further, while T is not 0\n    for i from 0 while k[i] != '\\0' incrementing i, print k[i] in a loop\n  \n  print new line\n  \n\n",
        "int main() {\n  int T, i, j, count = 1, d, m = 0;\n  char s[1000], k[1000];\n  cin >> T >> s;\n  j = strlen(s);\n  sort(s, s + j);\n  for (i = 0; i < j; i++) {\n    if (s[i] == s[i + 1]) {\n      count += 1;\n    } else {\n      if (count % T == 0) {\n        d = count / T;\n        while (d--) {\n          k[m] = s[i];\n          m++;\n        }\n        count = 1;\n      } else {\n        cout << \"-1\" << endl;\n        return 0;\n      }\n    }\n  }\n  k[m] = '\\0';\n  while (T--) {\n    for (i = 0; k[i] != '\\0'; i++) { cout << k[i]; }\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "let solve be a void function which accepts string str , integer k\n  cnt = array of integers of length 26\n  memset of cnt, 0, length of cnt\n  for i = 0 to length of str exclusive , increment cnt[str[i] - a] by 1\n  let s1 be a string\n  initialize integer i to 0\n  for i is less than 26 , increment i by 1\n    if cnt[i] modulo k is not equal to 0\n      stop\n    else do the following\n      It extends the string s1 by appending cnt[i] / k, 'a' + i\n    \n  \n  if i is equal to 26\n    while k is decremented by 1, print s1\n    print newline\n  else do the following\n    print -1 and newline\n  \n\n\n  let k be a integer\n  read k\n  let str be a string\n  read str\n  solve the values str, k\n  \n\n",
        "void solve(string str, int k) {\n  int cnt[26];\n  memset(cnt, 0, sizeof(cnt));\n  for (int i = 0; i < str.length(); i++) cnt[str[i] - 'a']++;\n  string s1;\n  int i = 0;\n  for (; i < 26; i++) {\n    if (cnt[i] % k != 0)\n      break;\n    else {\n      s1.append(cnt[i] / k, 'a' + i);\n    }\n  }\n  if (i == 26) {\n    while (k--) { cout << s1; }\n    cout << endl;\n  } else {\n    cout << \"-1\" << endl;\n  }\n}\nint main() {\n  int k;\n  cin >> k;\n  string str;\n  cin >> str;\n  solve(str, k);\n  return 0;\n}\n"
    ],
    [
        "declare long longs i, j, k, n, m, ans, sz, c1, c2, x, f, z, declare long long arrays a with size 100009, ch with size 26\n\n  declare string s\n  read k, s\n  let sz be size of s\n  declare character set st\n  declare it as character set iterator\n  for i = 0 to sz exclusive\n    insert s[i] into st\n    increment ch[s[i] - 'a']\n  \n  declare long long vector v\n  for it = beginning of st to it is not end of st, incrementing it\n    create character c\n    set c to value of it\n    add ch[c-'a'] to end of v\n  \n  let sz be size of v\n  for i = 0 to sz exclusive\n    if v[i] % k is not 0\n      let f be 1\n      break loop\n    \n  \n  if f is true\n    print \"-1\" print newline\n    \n  else\n    declare ss as string\n    for it = beginning of st to it is not end of st, incrementing it\n      declare character c\n      let c be value of it\n      let z be ch[c - 'a'] / k\n      for i = 0 to z exclusive, increment ss by c\n    \n    for i = 0 to k exclusive, print ss\n    print newline\n  \n  \n\n",
        "long long i, j, k, n, m, a[100009], ans, sz, c1, c2, x, ch[26], f, z;\nint main() {\n  string s;\n  cin >> k >> s;\n  sz = s.size();\n  set<char> st;\n  set<char>::iterator it;\n  for (i = 0; i < sz; i++) {\n    st.insert(s[i]);\n    ch[s[i] - 'a']++;\n  }\n  vector<long long> v;\n  for (it = st.begin(); it != st.end(); it++) {\n    char c;\n    c = *it;\n    v.push_back(ch[c - 'a']);\n  }\n  sz = v.size();\n  for (i = 0; i < sz; i++) {\n    if (v[i] % k != 0) {\n      f = 1;\n      break;\n    }\n  }\n  if (f) {\n    cout << \"-1\" << endl;\n    return 0;\n  } else {\n    string ss;\n    for (it = st.begin(); it != st.end(); it++) {\n      char c;\n      c = *it;\n      z = ch[c - 'a'] / k;\n      for (i = 0; i < z; i++) ss += c;\n    }\n    for (i = 0; i < k; i++) cout << ss;\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integer vector v\n  create integer vector v1\n  create character vector v2\n  create integers k, c, temp, gh with c = 0, gh = 0\n  read k\n  create character ch\n  create strings s, ans\n  read s\n  create string s1 with s1 = s\n  sort elements from beginning of s1 to end of s1\n  for i = 0 to size of s1 exclusive\n    set c to 0\n    if s1[i] is not s1[i+1]\n      set ch to s1[i]\n      add character ch to end of v2\n      for j = 0 to size of s exclusive\n        if s[j] is ch, increment c\n      \n      create integer temp with temp = c\n      add element temp to end of v\n    \n  \n  for i = 0 to size of v exclusive\n    if v[i] % k is 0\n      create integer f with f = v[i] / k\n      add element f to end of v1\n    else\n      set gh to -1\n      break loop\n    \n  \n  for i = 0 to size of v1 exclusive\n    create integer m with m = v1[i]\n    create character g with g = v2[i]\n    while m is greater than 0\n      increment ans by g\n      decrement m\n    \n  \n  create string sum with sum = \"\"\n  create integer our with our = k - 1\n  while our is greater than or equal to 0\n    increment sum by ans\n    decrement our\n  \n  if gh is -1\n    print -1 print newline\n  else\n    print sum print newline\n  \n  \n\n",
        "int main() {\n  vector<int> v;\n  vector<int> v1;\n  vector<char> v2;\n  int k, c = 0, temp, gh = 0;\n  cin >> k;\n  char ch;\n  string s, ans;\n  cin >> s;\n  string s1 = s;\n  sort(s1.begin(), s1.end());\n  for (int i = 0; i < s1.size(); i++) {\n    c = 0;\n    if (s1[i] != s1[i + 1]) {\n      ch = s1[i];\n      v2.push_back(ch);\n      for (int j = 0; j < s.size(); j++) {\n        if (s[j] == ch) { c++; }\n      }\n      int temp = c;\n      v.push_back(temp);\n    }\n  }\n  for (int i = 0; i < v.size(); i++) {\n    if (v[i] % k == 0) {\n      int f = v[i] / k;\n      v1.push_back(f);\n    } else {\n      gh = -1;\n      break;\n    }\n  }\n  for (int i = 0; i < v1.size(); i++) {\n    int m = v1[i];\n    char g = v2[i];\n    while (m > 0) {\n      ans += g;\n      m--;\n    }\n  }\n  string sum = \"\";\n  int our = k - 1;\n  while (our >= 0) {\n    sum += ans;\n    our--;\n  }\n  if (gh == -1) {\n    cout << -1 << endl;\n  } else {\n    cout << sum << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers i, Len, k, create integer array Arr with size 26 with Arr = {0}\n  create strings s, kString\n  read k read s\n  for i = 0 to length of s exclusive, increment Arr[s[i] - 'a']\n  for i = 0 to 26 exclusive\n    if Arr[i] % k is not 0\n    \n      break loop\n    else\n      append 'a' + i to kString (Arr[i] / k) times\n    \n  \n  if i is 26\n    while decrement k is true, print kString\n    print newline\n  else\n    print -1 print newline\n  \n  \n\n",
        "int main() {\n  int i, Len, k, Arr[26] = {0};\n  string s, kString;\n  cin >> k >> s;\n  for (i = 0; i < s.length(); i++) { Arr[s[i] - 'a']++; }\n  for (i = 0; i < 26; i++) {\n    if (Arr[i] % k != 0)\n    {\n      break;\n    } else {\n      kString.append(Arr[i] / k, 'a' + i);\n    }\n  }\n  if (i == 26) {\n    while (k--) { cout << kString; }\n    cout << endl;\n  } else {\n    cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create constant double PI = acos(-1)\nlet const integer MAX = 2e9 + 7\nlet const long long MOD = 1e9 + 7\ncreate map m of chars to ints\ndeclare solve\n  let int k\n  read k\n  let string s\n  read s\n  create int n = s.size()\n  if n modulo k is not equal to 0\n    print - 1\n    terminate function\n  \n  create int need = n / k\n  increment all contents of m[s]\n  let string t = \"\"\n  for i = 97 to 123 exclusive\n    if m[char(i)] modulo k is 0\n      for j = 0 to m[char(i)] / k exclusive, set t to t + char(i)\n    otherwise do\n      print -1\n      end function\n    \n  \n  for i = 0 to k exclusive, print t\n  print new line\n\n\n  call solve\n  \n\n",
        "const double PI = acos(-1);\nconst int MAX = 2e9 + 7;\nconst long long MOD = 1e9 + 7;\nmap<char, int> m;\nvoid solve() {\n  int k;\n  cin >> k;\n  string s;\n  cin >> s;\n  int n = s.size();\n  if (n % k != 0) {\n    cout << -1 << endl;\n    return;\n  }\n  int need = n / k;\n  for (int i = 0; i < n; i++) { m[s[i]]++; }\n  string t = \"\";\n  for (int i = 97; i < 123; i++) {\n    if (m[char(i)] % k == 0) {\n      for (int j = 0; j < m[char(i)] / k; j++) { t += char(i); }\n    } else {\n      cout << -1 << endl;\n      return;\n    }\n  }\n  for (int i = 0; i < k; i++) { cout << t; }\n  cout << endl;\n}\nint main() {\n  solve();\n  return 0;\n}\n"
    ],
    [
        "ctn = int array of length 30\n\n  let n, k be int\n  let s be a string\n  read k and s\n  set n to the lenght of s\n  for i = 0 to n exclusive increment cnt at s[i] - 'a'\n  let can = true be a boolean\n  let ss be a blank string\n  for x = 'a' to 'z' inclusive\n    if cnt[x - 'a'] mod k is not 0\n      can is false\n    else\n      for j = 0 to cnt[x-'a']/k increment ss by x\n    \n  \n  if can\n    print ss for k times\n    print new line\n  else\n    print -1 and new line\n  \n\n",
        "int cnt[30];\nint main() {\n  int n, k;\n  string s;\n  cin >> k >> s;\n  n = s.length();\n  for (int i = 0; i < n; i++) { cnt[s[i] - 'a']++; }\n  bool can = true;\n  string ss = \"\";\n  for (char x = 'a'; x <= 'z'; x++) {\n    if (cnt[x - 'a'] % k != 0) {\n      can = false;\n    } else {\n      for (int j = 0; j < cnt[x - 'a'] / k; j++) { ss += x; }\n    }\n  }\n  if (can) {\n    for (int i = 0; i < k; i++) { cout << ss; }\n    cout << endl;\n  } else {\n    cout << -1 << endl;\n  }\n}\n"
    ],
    [
        "\n  create integers k, i and j\n  declare string s\n  create integer array c with size 26\n  read input to k and s\n  if length of s % k != 0\n    print -1 to the standart output\n    \n  \n  for i = 0 to length of s exclusive,\n  for i = 0 to 26 exclusive\n    if c[i] % k != 0\n      print -1 to the standart output\n      \n    \n  \n  create string result\n  for i = 0 to 26 exclusive\n    for j from 0 to c[i] / k exclusive, append char('a' + i) to result\n  \n  for i from 0 to k exclusive, print result to the standart output\n  print new line\n  \n\n",
        "int main() {\n  int k, i, j;\n  string s;\n  int c[26] = {0};\n  cin >> k >> s;\n  if (s.size() % k != 0) {\n    cout << -1 << endl;\n    return 0;\n  }\n  for (i = 0; i < s.size(); i++) { c[s[i] - 'a']++; }\n  for (i = 0; i < 26; i++) {\n    if (c[i] % k != 0) {\n      cout << -1 << endl;\n      return 0;\n    }\n  }\n  string result;\n  for (i = 0; i < 26; i++) {\n    for (j = 0; j < c[i] / k; j++) { result = result + char('a' + i); }\n  }\n  for (i = 0; i < k; i++) { cout << result; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 100 + 5\ncreate contant integer mod with mod = 1000000000 + 7\ndeclare boolean ok with character a as argument, returning boolean\n  if a is greater than or equal to 'a' and a is less than or equal to 'z', return 1 from function\n  if a is greater than or equal to 'A' and a is less than or equal to 'Z', return 1 from function\n  if a is greater than or equal to '0' and a is less than or equal to '9', return 1 from function\n  if a is '_', return 1 from function\n  \n\n\n  create character array a with size N\n  read a + 1\n  create integer len with len = string length of (a + 1)\n  create integer op with op = 1\n  create boolean flag with flag = 1\n  create integers cnt1, cnt2, ccnt, cnt3, with cnt1 = 0, cnt2 = 0, ccnt = 0, cnt3 = 0\n  for i = 1 to len and flag inclusive\n    if op is 1\n      increment cnt1\n      if a[i] is '@'\n        decrement cnt1\n        set op to 2\n        break current loop iteration\n      \n      if result of run ok with a[i] as argument is false, set flag to 0\n      if cnt1 is greater than 16, set flag to 0\n    else if op is 2\n      increment ccnt\n      if cnt is 0 or cnt1 is greater than 16, set flag to 0\n      if a[i] is '.'\n        if cnt2 is 0 or cnt2 is greater than 16, set flag to 0\n        set cnt2 to 0\n        break current loop iteration\n      \n      if a[i] is '/'\n        decrement ccnt\n        set op to 3\n        break current loop iteration\n      \n      if result of run ok with a[i] as argument is false, set flag to 0\n      increment cnt2\n      if cnt2 is greater than 16, set flag to 0\n    else\n      if cnt2 is 0 or cnt2 is greater than 16, set flag to 0\n      if ccnt is 0 or ccnt is greater than 32, set flag to 0\n      if result of run ok with a[i] as argument is false, set flag to 0\n      increment cnt3\n      if cnt3 is greater than 16, set flag to 0\n    \n  \n  if op is 1, set flag to 0\n  if op is 2 and ( cnt2 is 0 or cnt2 is greater than 16 ), set flag to 0\n  if op is 3 and ( cnt3 is 0 or cnt3 is greater than 16 ), set flag to 0\n  if flag is true\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n  \n\n",
        "const int N = 100 + 5;\nconst int mod = 1000000000 + 7;\nbool ok(char a) {\n  if (a >= 'a' && a <= 'z') return 1;\n  if (a >= 'A' && a <= 'Z') return 1;\n  if (a >= '0' && a <= '9') return 1;\n  if (a == '_') return 1;\n  return 0;\n}\nint main() {\n  char a[N];\n  cin >> a + 1;\n  int len = strlen(a + 1);\n  int op = 1;\n  bool flag = 1;\n  int cnt1 = 0, cnt2 = 0, ccnt = 0, cnt3 = 0;\n  for (int i = 1; i <= len && flag; i++) {\n    if (op == 1) {\n      cnt1++;\n      if (a[i] == '@') {\n        cnt1--;\n        op = 2;\n        continue;\n      }\n      if (!ok(a[i])) { flag = 0; }\n      if (cnt1 > 16) flag = 0;\n    } else if (op == 2) {\n      ccnt++;\n      if (cnt1 == 0 || cnt1 > 16) flag = 0;\n      if (a[i] == '.') {\n        if (cnt2 == 0 || cnt2 > 16) flag = 0;\n        cnt2 = 0;\n        continue;\n      }\n      if (a[i] == '/') {\n        ccnt--;\n        op = 3;\n        continue;\n      }\n      if (!ok(a[i])) { flag = 0; }\n      cnt2++;\n      if (cnt2 > 16) flag = 0;\n    } else {\n      if (cnt2 == 0 || cnt2 > 16) flag = 0;\n      if (ccnt == 0 || ccnt > 32) flag = 0;\n      if (!ok(a[i])) flag = 0;\n      cnt3++;\n      if (cnt3 > 16) flag = 0;\n    }\n  }\n  if (op == 1) flag = 0;\n  if (op == 2 && (cnt2 == 0 || cnt2 > 16)) flag = 0;\n  if (op == 3 && (cnt3 == 0 || cnt3 > 16)) flag = 0;\n  if (flag)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N = 100 + 5\ncreate constant integer mod = 1000000000 + 7\nbool function ok with char argument a\n  if a is a letter character return 1\n  if a is a capital letter character return 1\n  if a is a digit return 1\n  if a is '_' return 1\n  \n\n\n  declare array of characters of size N\n  read a + 1\n  create integer len with value = length of (a + 1)\n  set integer op to 1\n  set boolean flag to 1\n  integers cnt1 = 0, cnt2 = 0, ccnt = 0 and cnt3 = 0\n  for integer i = 1 to len and flag inclusive\n    if op is equal to 1\n      increase cnt1\n      if a[i] is '@'\n        decrement cnt1\n        set value of op to 2\n        go to the start of the loop\n      \n      if ok(a[i]) is false, set flag to 0\n      if cnt1 is greater than 16, set flag to 0\n    else if op is equal to 2\n      increment ccnt\n      if cnt1 = 0 or cnt1 > 16, set flag to 0\n      if a[i] is '.'\n        if cnt2 = 0 or cnt2 > 16, set flag to 0\n        set cnt2 to 0\n        go to the start of the loop\n      \n      if a[i] is '/'\n        decrement ccnt\n        op = 3\n        continue the loop\n      \n      if ok(a[i]) is false, set flag to 0\n      increase cnt2\n      if cnt2 is greater than 16, set flag to 0\n    else\n      if cnt2 = 0 or cnt2 is greater than 16, set flag to 0\n      if ccnt = 0 or ccnt is greater than 32, set flag to 0\n      if ok(a[i]) is false, set flag to 0\n      increase cnt3\n      if cnt3 is greater than 16, set flag to 0\n    \n  \n  if op is equal to 1, set flag to 0\n  if op = 2 and (cnt2 = 0 or cnt2 is greater than 16), set flag to 0\n  if op = 3 and (cnt3 = 0 or cnt3 is greater than 16), set flag to 0\n  if flag is true\n    print \"YES\" and a new line\n  else\n    print \"NO\" and a new line\n  \n\n",
        "const int N = 100 + 5;\nconst int mod = 1000000000 + 7;\nbool ok(char a) {\n  if (a >= 'a' && a <= 'z') return 1;\n  if (a >= 'A' && a <= 'Z') return 1;\n  if (a >= '0' && a <= '9') return 1;\n  if (a == '_') return 1;\n  return 0;\n}\nint main() {\n  char a[N];\n  cin >> a + 1;\n  int len = strlen(a + 1);\n  int op = 1;\n  bool flag = 1;\n  int cnt1 = 0, cnt2 = 0, ccnt = 0, cnt3 = 0;\n  for (int i = 1; i <= len && flag; i++) {\n    if (op == 1) {\n      cnt1++;\n      if (a[i] == '@') {\n        cnt1--;\n        op = 2;\n        continue;\n      }\n      if (!ok(a[i])) { flag = 0; }\n      if (cnt1 > 16) flag = 0;\n    } else if (op == 2) {\n      ccnt++;\n      if (cnt1 == 0 || cnt1 > 16) flag = 0;\n      if (a[i] == '.') {\n        if (cnt2 == 0 || cnt2 > 16) flag = 0;\n        cnt2 = 0;\n        continue;\n      }\n      if (a[i] == '/') {\n        ccnt--;\n        op = 3;\n        continue;\n      }\n      if (!ok(a[i])) { flag = 0; }\n      cnt2++;\n      if (cnt2 > 16) flag = 0;\n    } else {\n      if (cnt2 == 0 || cnt2 > 16) flag = 0;\n      if (ccnt == 0 || ccnt > 32) flag = 0;\n      if (!ok(a[i])) flag = 0;\n      cnt3++;\n      if (cnt3 > 16) flag = 0;\n    }\n  }\n  if (op == 1) flag = 0;\n  if (op == 2 && (cnt2 == 0 || cnt2 > 16)) flag = 0;\n  if (op == 3 && (cnt3 == 0 || cnt3 > 16)) flag = 0;\n  if (flag)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "declare myCompare with constant pair address's i, j, from string to integer\n  return second element of i is less than second element of j\n\ncreate string s\ndeclare check with no arguments, returning integer\n  create integers x, y, 0, with x = 0, y = 0, flag = 0\n  for i = 0 to size of s\n    if flag is 0\n      if s[i] is '@'\n        if i - x is greater than 16 or i - x is less than 1 or i + 1 is size of s, return 0 from function\n        set x to i + 1\n        set y to i + 1\n        set flag to 1\n      else if s[i] is alphanumeric or s[i] is digit or s[i] is '_'\n        break current loop iteration\n      else if s[i] is not alphanumeric or s[i] is not digit or s[i] is not '_'\n        \n      \n    else if flag is 1\n      if s[i] is '/'\n        if i - x is greater than 32 or i - x is less than 1 or i + 1 is size of s or s[i-1] is '.', return 0 from function\n        set x to i + 1\n        set flag to 2\n      else if s[i] is '.'\n        if i - y is greater than 16 or i - y is less than 1 or i + 1 is size of s, return 0 from function\n        set y to i + 1\n      else if s[i] is alphanumeric or s[i] is digit or s[i] is '.' or s[i] is '_'\n        if i + 1 is size of s\n          if i - x + 1 is greater than 32 or i - x + 1 is less than 1, return 0 from function\n          if i - y + 1 is greater than 16 or i - y + 1 is less than 1, return 0 from function\n        \n        break current loop iteration\n      else if s[i] is not alphanumeric or s[i] is not digit or s[i] is not '.' or s[i] is not '_'\n        \n      \n    else\n      if s[i] is '_' and i + 1 is size of s, return 0 from function\n      if s[i] is alphanumeric or s[i] is digit or s[i] is '_'\n        if i + 1 is size of s\n          if i - x + 1 is greater than 16 or i - x + 1 is less than 1, return 0 from function\n        \n        break current loop iteration\n      \n      if s[i] is not alphanumeric or s[i] is not digit or s[i] is not '_', return 0 from function\n    \n  \n  if flag is greater than 0\n    return 1 from function\n  else\n    \n\n\n  read s\n  print \"YES\" if result of run check is true, else \"NO\" print newline\n  \n\n",
        "bool myCompare(const pair<string, int> &i, const pair<string, int> &j) {\n  return i.second < j.second;\n}\nstring s;\nint check() {\n  int x = 0, y = 0, flag = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (flag == 0) {\n      if (s[i] == '@') {\n        if ((i - x) > 16 || (i - x) < 1 || (i + 1 == s.size())) return 0;\n        x = i + 1;\n        y = i + 1;\n        flag = 1;\n      } else if (isalpha(s[i]) || isdigit(s[i]) || s[i] == '_') {\n        continue;\n      } else if (!isalpha(s[i]) || !isdigit(s[i]) || s[i] != '_') {\n        return 0;\n      }\n    } else if (flag == 1) {\n      if (s[i] == '/') {\n        if ((i - x) > 32 || (i - x) < 1 || (i + 1 == s.size()) || s[i - 1] == '.') return 0;\n        x = i + 1;\n        flag = 2;\n      } else if (s[i] == '.') {\n        if ((i - y) > 16 || (i - y) < 1 || (i + 1 == s.size())) return 0;\n        y = i + 1;\n      } else if (isalpha(s[i]) || isdigit(s[i]) || s[i] == '.' || s[i] == '_') {\n        if (i + 1 == s.size()) {\n          if ((i - x + 1) > 32 || (i - x + 1) < 1) return 0;\n          if ((i - y + 1) > 16 || (i - y + 1) < 1) return 0;\n        }\n        continue;\n      } else if (!isalpha(s[i]) || !isdigit(s[i]) || s[i] != '.' || s[i] != '_') {\n        return 0;\n      }\n    } else {\n      if (s[i] == '_' && i + 1 == s.size()) return 0;\n      if (isalpha(s[i]) || isdigit(s[i]) || s[i] == '_') {\n        if (i + 1 == s.size()) {\n          if ((i - x + 1) > 16 || (i - x + 1) < 1) return 0;\n        }\n        continue;\n      }\n      if (!isalpha(s[i]) || !isdigit(s[i]) || s[i] != '_') { return 0; }\n    }\n  }\n  if (flag > 0)\n    return 1;\n  else\n    return 0;\n}\nint main() {\n  cin >> s;\n  cout << (check() ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
    ],
    [
        "boolean function l that takes character c as argument\n  return true if c is a letter\n  return true if c is a capital letter\n  return true if c is a digit\n  return true if c is an underscore\n  return false\n\nfunction un with string argument s\n  set value of int n to length s\n  if n is 0 or n > 16 return false\n  for i = 0 to n exclusive\n    if l(s at index i) is false return false\n  \n  return true\n\nfunction hn with string argument s\n  declare integers n = size of s, i, nw = 0\n  if n is 0 or n > 32 return false\n  appen character '.' to s\n  for i = 0 to n + 1 exclusive\n    if s[i] is character \".\"\n      if nw is equal to 0 or nw is greater than 16 return false\n      nw = 0\n    else\n      if l(s at index i) is false return false\n      increase nw\n    \n  \n  return true\n\nboolean function r with string argument s\n  return un(s)\n\nboolean function f with string argument s\n  int n = length of s, i, j\n  for i = 0 to n exclusive\n    if s at index i is \"@\" break the loop\n  \n  if i is equal to n return false\n  if un(substring of s from 0 to i) is false return false\n  for j = from i + 1 to n exclusive\n    if s[j] is \"/\" break the loop\n  \n  if hn(substring of s from i + 1 to j - i - 1) is false return false\n  if j is not equal to n and r(substring of s from 0 to j +1) is false return false\n  return true\n\nlet s be string\n\n  read s\n  if f(s)\n    print \"YES\" and a new line\n  else\n    print \"NO\" and a new line\n  \n  \n\n",
        "bool l(char c) {\n  if (c >= 'a' && c <= 'z') { return true; }\n  if (c >= 'A' && c <= 'Z') { return true; }\n  if (c >= '0' && c <= '9') { return true; }\n  if (c == '_') { return true; }\n  return false;\n}\nbool un(string s) {\n  int n = s.size();\n  if (n == 0 || n > 16) { return false; }\n  for (int i = 0; i < n; i++) {\n    if (!l(s[i])) { return false; }\n  }\n  return true;\n}\nbool hn(string s) {\n  int n = s.size(), i, nw = 0;\n  if (n == 0 || n > 32) { return false; }\n  s += '.';\n  for (i = 0; i < n + 1; i++) {\n    if (s[i] == '.') {\n      if (nw == 0 || nw > 16) { return false; }\n      nw = 0;\n    } else {\n      if (!l(s[i])) { return false; }\n      nw++;\n    }\n  }\n  return true;\n}\nbool r(string s) {\n  return un(s);\n}\nbool f(string s) {\n  int n = s.size(), i, j;\n  for (i = 0; i < n; i++) {\n    if (s[i] == '@') { break; }\n  }\n  if (i == n) { return false; }\n  if (!un(s.substr(0, i))) { return false; }\n  for (j = i + 1; j < n; j++) {\n    if (s[j] == '/') { break; }\n  }\n  if (!hn(s.substr(i + 1, j - i - 1))) { return false; }\n  if (j != n && !r(s.substr(j + 1))) { return false; }\n  return true;\n}\nstring s;\nint main() {\n  cin >> s;\n  if (f(s)) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create ints i, j, flag = 1, and dot = 0\n  let string ch\n  read ch\n  for i = 0 to length of ch exclusive\n    if ch[i] is equal to '@'\n      if i is greater than 16 or i is less than 1\n        set flag to 0\n        move to print\n      \n      break loop\n    else if ch[i] is greater than or equal to 'a' and ch[i] is less than or equal to 'z' or if ch[i] is greater than or equal to 'A' and ch[i] is less than or equal to 'Z'\n      continue to next loop\n    else if ch[i] is greater than or equal to '0' and ch[i] is less than or equal to '9' and if ch[i] is equal to '_'\n      continue to next loop iteration\n    else\n      set flag to 0\n      go to print\n    \n  \nidentify dot\n  for j = i + 1 to length of ch exclusive\n    if ch[j] is equal to '.'\n      if j - 1 is greater than 17 or j - i is less than 2\n        set flag to 0\n        go to print\n      \n      set i to j\n    else if ch[j] is greater than or equal to 'a' and ch[j] is less than or equal to 'z' or if ch[j] is greater than or equal to 'A' and ch[j] is less than or equal to 'Z'\n      continue to next loop\n    else if ch[j] is greater than or equal to '0' and ch[j] is less than or equal to '9' or if ch[j] is equal to '_'\n      continue to next loop\n    else if ch[j] is equal to '/'\n      if j - 1 is greater than 17 or j - i is less than 2\n        set flag to 0\n        go to print\n      \n      set i to j\n    otherwise\n      set flag to 0\n      move to print\n    \n  \n  if j - i is greater than 17 or j - i is less than 2, set flag to 0\nidentify print\n  print \"YES\\n\" if flag is truthy or \"NO\\n\" if not\n  \n\n",
        "int main() {\n  int i, j, flag = 1, dot = 0;\n  string ch;\n  cin >> ch;\n  for (i = 0; i < ch.length(); i++) {\n    if (ch[i] == '@') {\n      if (i > 16 || i < 1) {\n        flag = 0;\n        goto print;\n      }\n      break;\n    } else if ((ch[i] >= 'a' && ch[i] <= 'z') || (ch[i] >= 'A' && ch[i] <= 'Z'))\n      continue;\n    else if ((ch[i] >= '0' && ch[i] <= '9') || (ch[i] == '_'))\n      continue;\n    else {\n      flag = 0;\n      goto print;\n    }\n  }\ndot:\n  for (j = i + 1; j < ch.length(); j++) {\n    if (ch[j] == '.') {\n      if (j - i > 17 || j - i < 2) {\n        flag = 0;\n        goto print;\n      }\n      i = j;\n    } else if ((ch[j] >= 'a' && ch[j] <= 'z') || (ch[j] >= 'A' && ch[j] <= 'Z'))\n      continue;\n    else if ((ch[j] >= '0' && ch[j] <= '9') || (ch[j] == '_'))\n      continue;\n    else if (ch[j] == '/') {\n      if (j - i > 17 || j - i < 2) {\n        flag = 0;\n        goto print;\n      }\n      i = j;\n    } else {\n      flag = 0;\n      goto print;\n    }\n  }\n  if (j - i > 17 || j - i < 2) flag = 0;\nprint:\n  (flag) ? (cout << \"YES\\n\") : (cout << \"NO\\n\");\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer n\n  read n\n  print n\n  for i = 1 to n exclusive, print ' ' and i\n  print '\\n'\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; i++) cout << ' ' << i;\n  cout << '\\n';\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  print n\n  for i = 1 to n exclusive, print \" \" print i\n  print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; ++i) { cout << \" \" << i; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  print n\n  for i = 1 to n exclusive, print \" \" print i\n  print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; ++i) { cout << \" \" << i; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  print n\n  for integer i = 1 to n exclusive print \" \" and i\n  print new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; ++i) { cout << \" \" << i; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  print n\n  for i = 1 to n exclusive\n    if i is not n print \" \"\n    print i\n  \n  print new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; i++) {\n    if (i != n) cout << \" \";\n    cout << i;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be a integer\n  read n\n  print n\n  for ( i= 1 to n-1 inclusive ), print space and i\n  print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i <= n - 1; i++) cout << \" \" << i;\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer a\n  loop while reading a\n    print a\n    for integer i = 1 to a exclusive, print ' ' and i\n    print new line\n  \n  \n\n",
        "int main() {\n  int a;\n  while (cin >> a) {\n    cout << a;\n    for (int i = 1; i < a; i++) cout << ' ' << i;\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in the function desperate_optimization that takes integer precision\n  print floats with a fixed number of decimals\n  print floats with showpoint format\n  print precision with precision\n\n\n  call desperate_optimization on 10\n  n = integer\n  read n\n  print n\n  for i = 1 to n exclusive, print i\n  print new line\n  \n\n",
        "void desperate_optimization(int precision) {\n  cout.setf(ios::fixed);\n  cout.setf(ios::showpoint);\n  cout.precision(precision);\n}\nint main() {\n  desperate_optimization(10);\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; i++) cout << \" \" << i;\n  cout << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  a =integer\n  Read a\n  print a\n  if a is greater than 1, then print \" \"\n  for i = 0 to a - 1 exclusive\n    print i + 1\n    if i + 2 is not equal to a, then print \" \"\n  \n  print a new line\n  \n\n",
        "int main() {\n  int a;\n  cin >> a;\n  cout << a;\n  if (a > 1) cout << \" \";\n  for (int i = 0; i < a - 1; i++) {\n    cout << i + 1;\n    if (i + 2 != a) cout << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "MOD = integer\nin function mod_pow with arguments of long long a and long long b and returns a long long\n  if b is 0, then return 1\n  if b is 1, then return a modulo MOD\n  if the last bit in binary of b is 1, then return a modulo MOD * the result of calling mod_pow with arguments a, b - 1 and then modulo the result of that function by MOD\n  x = long long = the result of calling mod_pow with arguments a, and the b with its elements shifted to the right by one bit\n  return (x * x) modulo MOD\n\n\n  n, m = integer\n  read n, m\n  MOD = m\n  r = integer = the result of calling mod_pow with arguments 3, n\n  if r is 0\n    print the result of m - 1\n  else\n    print the result of r - 1\n  \n  \n\n",
        "int MOD;\nlong long mod_pow(long long a, long long b) {\n  if (b == 0) return 1;\n  if (b == 1) return a % MOD;\n  if (b & 1) return ((a % MOD) * mod_pow(a, b - 1)) % MOD;\n  long long x = mod_pow(a, b >> 1);\n  return (x * x) % MOD;\n}\nint main() {\n  int n, m;\n  cin >> n >> m;\n  MOD = m;\n  int r = mod_pow(3, n);\n  if (r == 0) {\n    cout << m - 1 << endl;\n  } else {\n    cout << r - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare power with long longs x, integers y, m as arguments, returning long long\n  create long long res with res = 1\n  while y is greater than 0\n    if y bitwise and 1\n      set res to res * x\n      set res to res % m\n    \n    set y to y bitwise right 1\n    set x to x * x\n    set x to x % m\n  \n  return res from function\n\n\n  create integers n, m\n  read n read m\n  create integer ans with ans = result of run power with long long casted (3), n, m as arguments\n  if ans is 0\n    print m - 1 print newline\n  else\n    print ans - 1 print newline\n  \n  \n\n",
        "long long power(long long x, int y, int m) {\n  long long res = 1;\n  while (y > 0) {\n    if (y & 1) {\n      res = res * x;\n      res %= m;\n    }\n    y = y >> 1;\n    x = x * x;\n    x %= m;\n  }\n  return res;\n}\nint main() {\n  int n, m;\n  cin >> n >> m;\n  int ans = power((long long)3, n, m);\n  if (ans == 0) {\n    cout << m - 1 << endl;\n  } else {\n    cout << ans - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in function modl taking three long longs n, k and p and returning a long long\n  if n is 0 return 0\n  if k is 0\n    return 1\n  else if k is even\n    return (modl of n, k / 2 and p * (modl of n, k / 2 and p)) mod p\n  else\n    return (n * modl of n, k - 1 and p) mod p\n\n\n  n, m = long long\n  read n then m\n  z = long long with z = modl of 3, n and m\n  if z is 0\n    print m - 1\n  else\n    print z - 1\n  \n\n",
        "long long modl(long long n, long long k, long long p) {\n  if (n == 0) return 0;\n  if (k == 0)\n    return 1;\n  else if (k % 2 == 0) {\n    return (modl(n, k / 2, p) * (modl(n, k / 2, p))) % p;\n  } else\n    return (n * modl(n, k - 1, p)) % p;\n}\nint main() {\n  long long n, m;\n  cin >> n >> m;\n  long long z = modl(3, n, m);\n  if (z == 0)\n    cout << m - 1 << endl;\n  else\n    cout << z - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers n and m\n  read n and m\n  create long long a = 3\n  create integer i = 1\n  create integer two = 0\n  while n > 0\n    if n is odd, assign i * a % m to i\n    set n to n / 2\n    change a to a squared modulo m\n  \n  print (i - 1 + m) % m\n  \n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  long long a = 3;\n  int i = 1;\n  int two = 0;\n  while (n > 0) {\n    if (n % 2 == 1) i = i * a % m;\n    n = n / 2;\n    a = (a * a) % m;\n  }\n  cout << (i - 1 + m) % m << endl;\n  return 0;\n}\n"
    ],
    [
        "in function pow taking three long longs a, b and m and returning a long long\n  res = long long with res = 1\n  loop while b is not 0\n    if b bitwise-and 1 is true then set res to (res * a) mod m\n    set a to (a * a) mod m\n    set b to b bithsift right by 1\n  \n  return res\n\n\n  n, m = long long\n  read n then m\n  print ((pow of 3, n and m) - 1 + m) mod m\n  \n\n",
        "long long pow(long long a, long long b, long long m) {\n  long long res = 1;\n  while (b) {\n    if (b & 1) { res = (res * a) % m; }\n    a = (a * a) % m;\n    b >>= 1;\n  }\n  return res;\n}\nint main() {\n  long long n, m;\n  cin >> n >> m;\n  cout << (pow(3, n, m) - 1 + m) % m << endl;\n  return 0;\n}\n"
    ],
    [
        "MAX = const integer with MAX = 3e4 + 5\nMAX2 = const long long with MAX2 = 11\nMOD = const integer with MOD = 1000000000 + 7\nINF = const long long with INF = 20000\ndr = const integer array with dr = {1, 0, -1, 0, 1, 1, -1, -1}\ndc = const integer array with dc = {0, 1, 0, -1, 1, -1, 1, -1}\npi = const double with pi = acos(-1)\neps = const double with eps = 1e-9\nn, m = long long\nin the function pw that returns long long\n  ret = long long with ret = 1, x = 3\n  while n\n    if n bitwise and 1, ret = (ret * x) modulo m\n    x = (x * x) modulo m\n    n = right shift n 1 place\n  \n  return ret\n\n\n  read n, m\n  print (pw() + m - 1) modulo m\n  \n\n",
        "const int MAX = 3e4 + 5;\nconst long long MAX2 = 11;\nconst int MOD = 1000000000 + 7;\nconst long long INF = 20000;\nconst int dr[] = {1, 0, -1, 0, 1, 1, -1, -1};\nconst int dc[] = {0, 1, 0, -1, 1, -1, 1, -1};\nconst double pi = acos(-1);\nconst double eps = 1e-9;\nlong long n, m;\nlong long pw() {\n  long long ret = 1, x = 3;\n  while (n) {\n    if (n & 1) ret = (ret * x) % m;\n    x = (x * x) % m;\n    n >>= 1;\n  }\n  return ret;\n}\nint main() {\n  cin >> n >> m;\n  cout << (pw() + m - 1) % m << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "m = long long\nin function pw taking two long longs x and p and returning a long long\n  if p is 0 return 1 mod m\n  z = long long with z = pw of x and p / 2\n  set z to z * z\n  set z to z mod m\n  if p is even return z\n  set z to z * x\n  set z to z mod m\n  return z\n\n\n  n = long long\n  raed n then m\n  res = long long with res = 2 * ((pw of 3 and n) - 1) / 2\n  set res to res mod m\n  increment res by m\n  set res to res mod m\n  print res\n  \n\n",
        "long long m;\nlong long pw(long long x, long long p) {\n  if (!p) return 1 % m;\n  long long z = pw(x, p / 2);\n  z *= z;\n  z %= m;\n  if (p % 2 == 0) return z;\n  z *= x;\n  z %= m;\n  return z;\n}\nint main() {\n  long long n;\n  cin >> n >> m;\n  long long res = 2 * (pw(3, n) - 1) / (2);\n  res %= m;\n  res += m;\n  res %= m;\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "declare power taking in long long ints x, y, and MOD and returning long long int\n  create unsigned long long int res = 1\n  set x to x modulo MOD\n  while y is more than 0\n    if y & 1 is truthy, set res to (res * x) % MOD\n    set y to y >> 1\n    set x to (x * x) % MOD\n  \n  convert res to long long int and return it\n\ncreate long long ints n, m, and res\n\n  read n and m\n  set res to power(3, n, m) - 1\n  print (res + m) % m\n  \n\n",
        "long long power(long long x, long long y, long long MOD) {\n  unsigned long long res = 1;\n  x = x % MOD;\n  while (y > 0) {\n    if (y & 1) { res = (res * x) % MOD; }\n    y = y >> 1;\n    x = (x * x) % MOD;\n  }\n  return (long long)res;\n}\nlong long n, m, res;\nint main() {\n  cin >> n >> m;\n  res = power(3, n, m) - 1;\n  cout << (res + m) % m << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long longs m and n\npw is a long long function with long long arguments a and b\n  declare long long res with value 1\n  while b is not 0\n    if b & 1 is true, change res to (res * a) modulo m\n    set a to a squared modulo m\n    change the value of b to b divided by 2\n  \n  return res\n\n\n  read input to n and m\n  declare long long variable with name ans and value = pw of 3 and n\n  decrement ans\n  if ans is less than 0, add m to ans\n  print ans to the standard output\n  \n\n",
        "long long m, n;\nlong long pw(long long a, long long b) {\n  long long res = 1;\n  while (b) {\n    if (b & 1) res = (res * a) % m;\n    a = (a * a) % m;\n    b /= 2;\n  }\n  return res;\n}\nint main() {\n  cin >> n >> m;\n  long long ans = (pw(3, n));\n  ans--;\n  if (ans < 0) ans += m;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "declare f taking in long long integers n and m and returning long long int\n  if n is equal to 0\n    return the result of 1 % m\n  else if n is equal to 1\n    return 3 % m\n  \n  create long long tmp = f(n / 2, m)\n  if n modulo 2 is 0\n    return the result of tmp * tmp % m\n  otherwise\n    return (tmp * tmp % m) * 3 % m\n  \n\n\n  create ints n and m\n  read n and m\n  create long long int fx = f(n, m)\n  if fx is 0\n    print m - 1\n  else\n    print fx - 1\n  \n  \n\n",
        "long long f(long long n, long long m) {\n  if (n == 0) {\n    return 1 % m;\n  } else if (n == 1) {\n    return 3 % m;\n  }\n  long long tmp = f(n / 2, m);\n  if (n % 2 == 0) {\n    return tmp * tmp % m;\n  } else {\n    return (tmp * tmp % m) * 3 % m;\n  }\n}\nint main() {\n  int n, m;\n  cin >> n >> m;\n  long long fx = f(n, m);\n  if (fx == 0) {\n    cout << m - 1 << endl;\n  } else {\n    cout << fx - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "m = long long\nin function power taking a long long a and an int n and returning an int\n  res = long long with res = 1\n  loop while n is greater than 0\n    if n is uneven\n      set res to res * a\n      set res to res mod m\n    \n    set a to a * a\n    set a to a mod m\n    set n to n / 2\n  \n  return res\n\n\n  n = int\n  read n then m\n  print (((power of 3 and n) - 1) mod m + m) mod m\n  \n\n",
        "long long m;\nint power(long long a, int n) {\n  long long res = 1;\n  while (n > 0) {\n    if (n % 2 == 1) {\n      res *= a;\n      res %= m;\n    }\n    a *= a;\n    a %= m;\n    n /= 2;\n  }\n  return res;\n}\nint main() {\n  int n;\n  cin >> n >> m;\n  cout << ((power(3, n) - 1) % m + m) % m << endl;\n  return 0;\n}\n"
    ],
    [
        "declare power with long longs a, b, m as arguments, returning long long\n  create long longs temp, ans with temp = a, ans = 1\n  while b is true\n    if b bitwise and 1 is true, set ans to (ans % m * temp % m) % m\n    set temp to (temp % m * temp % m) % m\n    set b to b / 2\n  \n  return ans from function\n\n\n  create long longs n, m\n  read n read m\n  print ( result of run power with 3, n, m as arguments - 1 + m ) % m print newline\n\n",
        "long long power(long long a, long long b, long long m) {\n  long long temp = a, ans = 1;\n  while (b) {\n    if (b & 1) ans = (ans % m * temp % m) % m;\n    temp = (temp % m * temp % m) % m;\n    b /= 2;\n  }\n  return ans;\n}\nint main() {\n  long long n, m;\n  cin >> n >> m;\n  cout << (power(3, n, m) - 1 + m) % m << endl;\n}\n"
    ],
    [
        "\n  create long longs ax, ay, bx, by, cx, cy\n  read ax read ay read bx read by read cx read cy\n  create long long ds with ds = (bx * cy - by * cx) - (ax * cy - ay * cx) + (ax * by - ay * bx)\n  if ds is 0\n    print \"TOWARDS\"\n  else if ds is less than 0\n    print \"RIGHT\"\n  else\n    print \"LEFT\"\n  print '\\n'\n\n",
        "int main() {\n  long long ax, ay, bx, by, cx, cy;\n  cin >> ax >> ay >> bx >> by >> cx >> cy;\n  long long ds = (bx * cy - by * cx) - (ax * cy - ay * cx) + (ax * by - ay * bx);\n  if (ds == 0)\n    cout << \"TOWARDS\";\n  else if (ds < 0)\n    cout << \"RIGHT\";\n  else\n    cout << \"LEFT\";\n  cout << '\\n';\n}\n"
    ],
    [
        "function solve (no args, no return value)\n  a1,a2,b1,b2,c1,c2=long long\n  read a1,a2,b1,b2,c1,c2\n  d=(b1-a1)*(c2-a2)-(b2-a2)*(c1-a1)\n  if d is 0\n    print \"TOWARDS\"\n  else if d > 0\n    print \"LEFT\"\n  else\n    print \"RIGHT\"\n  \n\n\n  set output precision to 12 digits\n  solve()\n  \n\n",
        "void solve() {\n  long long a1, a2, b1, b2, c1, c2;\n  cin >> a1 >> a2 >> b1 >> b2 >> c1 >> c2;\n  long long d = (b1 - a1) * (c2 - a2) - (b2 - a2) * (c1 - a1);\n  if (d == 0) {\n    cout << \"TOWARDS\" << endl;\n  } else if (d > 0) {\n    cout << \"LEFT\" << endl;\n  } else {\n    cout << \"RIGHT\" << endl;\n  }\n}\nint main() {\n  cout << setprecision(12) << fixed;\n  solve();\n  return 0;\n}\n"
    ],
    [
        "declare fp with long longs n, p as arguments, returning long long\n  if p is 0, return 1 from function\n  if p is 1, return n from function\n  create long long res with res = result of run fp with n, p / 2 as arguments\n  set res to res * res\n  if p % 2, set res to res * n\n  return res from function\n\n\n  create pair of integer, integer array arr with size 5\n  create integers a, b, c\n  create soubles s, ss, with s = -1, ss = -1\n  create boolean f with f = 0\n  for i = 0 to 3 exclusive\n    read first element of arr[i] read second element of arr[i]\n    if i is 1\n      if ((first element of arr[i] - first element of arr[i - 1]) is not 0) set s to (second element of arr[i] - second element of arr[i - 1]) / (first element of arr[i] - first element of arr[i - 1])\n    else if i is 2\n      if ((first element of arr[i] - first element of arr[i - 1]) is not 0) set ss to (second element of arr[i] - second element of arr[i - 1]) / (first element of arr[i] - first element of arr[i - 1])\n      if s is ss, set f to 1\n    \n  \n  if f is true, return print \"TOWARDS\" print '\\n', 0 from function\n  if second element of arr[0] is greater than second element of arr[1]\n    if first element of arr[2] is greater than first element of arr[1]\n      return print \"LEFT\" print '\\n', 0 from function\n    else\n      return print \"RIGHT\" print '\\n', 0 from function\n  else if second element of arr[0] is less than second element of arr[1]\n    if first element of arr[2] is less than first element of arr[1]\n      return print \"LEFT\" print '\\n', 0 from function\n    else\n      return print \"RIGHT\" print '\\n', 0 from function\n  else if second element of arr[0] is second element of arr[1] and first element of arr[0] is less than first element of arr[1]\n    if second element of arr[2] is greater than second element of arr[1]\n      return print \"LEFT\" print '\\n', 0 from function\n    else\n      return print \"RIGHT\" print '\\n', 0 from function\n  else if second element of arr[0] is second element of arr[1] and first element of arr[0] is greater than first element of arr[1]\n    if second element of arr[2] is less than second element of arr[1]\n      return print \"LEFT\" print '\\n', 0 from function\n    else\n      return print \"RIGHT\" print '\\n', 0 from function\n  \n  \n\n",
        "long long fp(long long n, long long p) {\n  if (p == 0) return 1;\n  if (p == 1) return n;\n  long long res = fp(n, p / 2);\n  res = ((res) * (res));\n  if (p % 2) res = (res * n);\n  return res;\n}\nint main() {\n  pair<int, int> arr[5];\n  int a, b, c;\n  double s = -1, ss = -1;\n  bool f = 0;\n  for (int i = 0; i < 3; i++) {\n    cin >> arr[i].first >> arr[i].second;\n    if (i == 1) {\n      if ((arr[i].first - arr[i - 1].first) != 0) s = (arr[i].second - arr[i - 1].second) / (arr[i].first - arr[i - 1].first);\n    } else if (i == 2) {\n      if ((arr[i].first - arr[i - 1].first) != 0) ss = (arr[i].second - arr[i - 1].second) / (arr[i].first - arr[i - 1].first);\n      if (s == ss) f = 1;\n    }\n  }\n  if (f) return cout << \"TOWARDS\" << '\\n', 0;\n  if (arr[0].second > arr[1].second) {\n    if (arr[2].first > arr[1].first)\n      return cout << \"LEFT\" << '\\n', 0;\n    else\n      return cout << \"RIGHT\" << '\\n', 0;\n  } else if (arr[0].second < arr[1].second) {\n    if (arr[2].first < arr[1].first)\n      return cout << \"LEFT\" << '\\n', 0;\n    else\n      return cout << \"RIGHT\" << '\\n', 0;\n  } else if (arr[0].second == arr[1].second && arr[0].first < arr[1].first) {\n    if (arr[2].second > arr[1].second)\n      return cout << \"LEFT\" << '\\n', 0;\n    else\n      return cout << \"RIGHT\" << '\\n', 0;\n  } else if (arr[0].second == arr[1].second && arr[0].first > arr[1].first) {\n    if (arr[2].second < arr[1].second)\n      return cout << \"LEFT\" << '\\n', 0;\n    else\n      return cout << \"RIGHT\" << '\\n', 0;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  x1, x2, x3, y1, y2, y3 =integers\n  Read x1, x2, x3, y1, y2, y3\n  if (y2 - y1) * (x3 - x2) is equal to (y3 - y2) * (x2 - x1)\n    print TOWARDS and a new line\n  else if (x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) is greater than 0\n    print RIGHT and a new line\n  else do the following\n    print LEFT and a new line\n  \n  \n\n",
        "int main() {\n  long long int x1, x2, x3, y1, y2, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  if ((y2 - y1) * (x3 - x2) == (y3 - y2) * (x2 - x1)) {\n    cout << \"TOWARDS\" << endl;\n  } else if ((x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) > 0) {\n    cout << \"RIGHT\" << endl;\n  } else {\n    cout << \"LEFT\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integers xa, ya, xb, yb, xc, and yc\n  read xa, ya, xb, yb, xc, and yc\n  create long long integer cp = (xb - xa) * (yc - ya) - (yb - ya) * (xc - xa)\n  if cp is greater than 0\n    print \"LEFT\\n\"\n  else if cp is less than 0\n    print \"RIGHT\\n\"\n  else\n    print \"TOWARDS\\n\"\n  \n\n",
        "int main() {\n  long long xa, ya, xb, yb, xc, yc;\n  cin >> xa >> ya >> xb >> yb >> xc >> yc;\n  long long cp = (xb - xa) * (yc - ya) - (yb - ya) * (xc - xa);\n  if (cp > 0)\n    cout << \"LEFT\\n\";\n  else if (cp < 0)\n    cout << \"RIGHT\\n\";\n  else\n    cout << \"TOWARDS\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integers x1, x2, x3, y1, y2, y3\n  read x1 read y1 read x2 read y2 read x3 read y3\n  if (y2 - y1) * (x3 - x2) is (y3 - y2) * (x2 - x1)\n    print \"TOWARDS\" print newline\n  else if (x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) is greater than 0\n    print \"RIGHT\" print newline\n  else\n    print \"LEFT\" print newline\n  \n  \n\n",
        "int main() {\n  long long int x1, x2, x3, y1, y2, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  if ((y2 - y1) * (x3 - x2) == (y3 - y2) * (x2 - x1)) {\n    cout << \"TOWARDS\" << endl;\n  } else if ((x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) > 0) {\n    cout << \"RIGHT\" << endl;\n  } else {\n    cout << \"LEFT\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  x1, y1, x2, y2, x3, y3 = long longs\n  read x1, y1, x2, y2, x3, y3\n  vx1 = long long = x2 - x1, vy1 = long long = y2 - y1, vx2 = long long = x3 - x2, vy2 = long long = y3 - y2\n  cha = long long = vx1 * vy2 - vx2 * vy1\n  if cha > 0, then print LEFT\n  if cha < 0, then print RIGHT\n  if cha is 0, then print TOWARDS\n  \n\n",
        "int main() {\n  long long x1, y1, x2, y2, x3, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  long long vx1 = x2 - x1, vy1 = y2 - y1, vx2 = x3 - x2, vy2 = y3 - y2;\n  long long cha = vx1 * vy2 - vx2 * vy1;\n  if (cha > 0) { cout << \"LEFT\" << endl; }\n  if (cha < 0) { cout << \"RIGHT\" << endl; }\n  if (cha == 0) { cout << \"TOWARDS\" << endl; }\n  return 0;\n}\n"
    ],
    [
        "\n  f = integer = 0\n  x1, x2, x3, y1, y, 2, y3 = long longs\n  read x1, y1, x2, y2, x3, y3\n  temp = long long = (x2 - x1) * (y3 - y2) - (y2 - y1) * (x3 - x2)\n  if temp is 0\n    f = 0\n  else if temp > 0\n    f = 1\n  else\n    f = 2\n  if f is 0\n    print TOWARDS\n  else if f is 2\n    print RIGHT\n  else\n    print LEFT\n  \n\n",
        "int main() {\n  int f = 0;\n  long long x1, x2, x3, y1, y2, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  long long temp = (x2 - x1) * (y3 - y2) - (y2 - y1) * (x3 - x2);\n  if (temp == 0)\n    f = 0;\n  else if (temp > 0)\n    f = 1;\n  else\n    f = 2;\n  if (f == 0)\n    puts(\"TOWARDS\");\n  else if (f == 2)\n    puts(\"RIGHT\");\n  else\n    puts(\"LEFT\");\n  return 0;\n}\n"
    ],
    [
        "\n  let x = array of long integers of length 4, y = array of long integers of length 4\n  for i = 1 to 3 inclusive , read x[i] and y[i]\n  let a1 be a long integer with a1 = y[1] - y[2]\n  let b1 be a long integer with b1 = x[2] - x[1]\n  let c1 be a long integer with c1 = x[1] * y[2] - x[2] * y[1]\n  let a2 be a long integer with a2 = y[2] - y[3]\n  let b2 be a long integer with b2 = x[3] - x[2]\n  let c2 be a long integer with c2 = x[2] * y[3] - x[3] * y[2]\n  if a1 * b2 is equal to a2 * b1 and b1 * c2 is equal to b2 * c1\n    print TOWARDS and newline\n  else do the following\n    if a1 * b2 is greater than a2 * b1\n      print LEFT and newline\n    else do the following\n      print RIGHT and newline\n  \n  \n\n",
        "int main() {\n  long long x[4], y[4];\n  for (int i = 1; i <= (3); i++) cin >> x[i] >> y[i];\n  long long a1 = y[1] - y[2];\n  long long b1 = x[2] - x[1];\n  long long c1 = x[1] * y[2] - x[2] * y[1];\n  long long a2 = y[2] - y[3];\n  long long b2 = x[3] - x[2];\n  long long c2 = x[2] * y[3] - x[3] * y[2];\n  if (a1 * b2 == a2 * b1 && b1 * c2 == b2 * c1) {\n    cout << \"TOWARDS\\n\";\n  } else {\n    if (a1 * b2 > a2 * b1)\n      cout << \"LEFT\\n\";\n    else\n      cout << \"RIGHT\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "declare cross with long longs x0, y0, x1, y1 as arguments, returning long long\n  return y1 * x0 - y0 * x1 from function\n\n\n  create long long vectors X, Y with X initialized with 3, Y initialized with 3\n  for i = 0 to 3 exclusive, read X[i] read Y[i]\n  create long long c with c = result of run cross with X[1] - X[0], Y[1] - Y[0], X[2] - X[1], Y[2] - Y[1] as arguments\n  if c is 0\n    print \"TOWARDS\\n\"\n  else if c is less than 0\n    print \"RIGHT\\n\"\n  else\n    print \"LEFT\\n\"\n  \n\n",
        "long long cross(long long x0, long long y0, long long x1, long long y1) {\n  return y1 * x0 - y0 * x1;\n}\nint main() {\n  vector<long long> X(3), Y(3);\n  for (long long i = 0; i < 3; ++i) cin >> X[i] >> Y[i];\n  long long c = cross(X[1] - X[0], Y[1] - Y[0], X[2] - X[1], Y[2] - Y[1]);\n  if (c == 0)\n    cout << \"TOWARDS\\n\";\n  else if (c < 0)\n    cout << \"RIGHT\\n\";\n  else\n    cout << \"LEFT\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  x1, y1, x2, y2, x3, y3 =integers\n  Read x1, y1, x2, y2, x3, y3\n  if (y2 - y1) * (x3 - x2) is equal to (y3 - y2) * (x2 - x1)\n    print TOWARDS and a new line\n  else if y1 is equal to y2\n    if x2 is greater than x1\n      if y3 is greater than y2\n        print LEFT and a new line\n      else do the following\n        print RIGHT and a new line\n    else do the following\n      if y3 is less than y2\n        print LEFT and a new line\n      else do the following\n        print RIGHT and a new line\n    \n  else if x1 is equal to x2\n    if y1 is less than y2\n      if x3 is greater than x2\n        print RIGHT and a new line\n      else do the following\n        print LEFT and a new line\n    else do the following\n      if x3 is less than x2\n        print RIGHT and a new line\n      else do the following\n        print LEFT and a new line\n    \n  else if x1 is less than x2 and y1 is less than y2\n    if x3 is less than x2\n      print LEFT and a new line\n    else do the following\n      print RIGHT and a new line\n  else if x1 is greater than x2 and y1 is greater than y2\n    if x3 is greater than x2\n      print LEFT and a new line\n    else do the following\n      print RIGHT and a new line\n  else if x1 is less than x2 and y1 is greater than y2\n    if x3 is greater than x2\n      print LEFT and a new line\n    else do the following\n      print RIGHT and a new line\n  else do the following\n    if x3 is less than x2\n      print LEFT and a new line\n    else do the following\n      print RIGHT and a new line\n  \n  \n\n",
        "int main() {\n  int x1, y1, x2, y2, x3, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  if ((y2 - y1) * (x3 - x2) == (y3 - y2) * (x2 - x1)) {\n    cout << \"TOWARDS\" << endl;\n  } else if (y1 == y2) {\n    if (x2 > x1) {\n      if (y3 > y2)\n        cout << \"LEFT\" << endl;\n      else\n        cout << \"RIGHT\" << endl;\n    } else {\n      if (y3 < y2)\n        cout << \"LEFT\" << endl;\n      else\n        cout << \"RIGHT\" << endl;\n    }\n  } else if (x1 == x2) {\n    if (y1 < y2) {\n      if (x3 > x2)\n        cout << \"RIGHT\" << endl;\n      else\n        cout << \"LEFT\" << endl;\n    } else {\n      if (x3 < x2)\n        cout << \"RIGHT\" << endl;\n      else\n        cout << \"LEFT\" << endl;\n    }\n  } else if (x1 < x2 && y1 < y2) {\n    if (x3 < x2)\n      cout << \"LEFT\" << endl;\n    else\n      cout << \"RIGHT\" << endl;\n  } else if (x1 > x2 && y1 > y2) {\n    if (x3 > x2)\n      cout << \"LEFT\" << endl;\n    else\n      cout << \"RIGHT\" << endl;\n  } else if (x1 < x2 && y1 > y2) {\n    if (x3 > x2)\n      cout << \"LEFT\" << endl;\n    else\n      cout << \"RIGHT\" << endl;\n  } else {\n    if (x3 < x2)\n      cout << \"LEFT\" << endl;\n    else\n      cout << \"RIGHT\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let n and m be integers\n  declare string called st\n  read n and m\n  res is an integer array with size m\n  fill res with 0\n  for i = 0 to n exclusive\n    read st\n    if there is no character \"1\" in st\n      print -1 and a new line\n      \n    \n    cur is an integer array with 3 * m elements\n    curAns is an array of integers with size m\n    for j = 0 to 3 * m exclusive set cur[j] to st[j % m] - '0'\n    declare integer called counter = 0\n    for a = m - 1 to 0 inclusive counting down\n      if cur[a] = 1\n        break the loop\n      else\n        increase counter\n    \n    for k = m to 2 * m exclusive\n      if cur[k] = 1\n        curAns[k % m] = 0\n        set counter to 0\n      else\n        increment counter and set curAns[k % m] = counter\n    \n    assign value of 0 to counter\n    for a = 2 * m to 3 * m exclusive\n      if cur[a] = 1\n        stop the loop\n      else\n        increment counter\n    \n    for integer k = 2 * m - 1 to m inclusive counting down\n      if cur[k] = 1\n        curAns[k % m] = 0\n        set value of counter to 0\n      else\n        increment counter\n        curAns[k % m] = min of curAns[k % m] and counter\n      \n    \n    for integer j = 0 to m exclusive increase res[j] by curAns[j]\n  \n  declare integer variable called min = INT_MAX\n  for integer i = 0 to m exclusive\n    if min is greater than res[i], set min to res[i]\n  \n  print min and a new line\n  \n\n",
        "int main() {\n  int n, m;\n  string st;\n  cin >> n >> m;\n  int res[m];\n  for (int i = 0; i < m; i++) { res[i] = 0; }\n  for (int i = 0; i < n; i++) {\n    cin >> st;\n    if (st.find('1') == string::npos) {\n      cout << -1 << endl;\n      return 0;\n    }\n    int cur[3 * m];\n    int curAns[m];\n    for (int j = 0; j < 3 * m; j++) { cur[j] = st[j % m] - '0'; }\n    int counter = 0;\n    for (int a = m - 1; a >= 0; a--) {\n      if (cur[a] == 1)\n        break;\n      else\n        counter++;\n    }\n    for (int k = m; k < 2 * m; k++) {\n      if (cur[k] == 1) {\n        curAns[k % m] = 0;\n        counter = 0;\n      } else\n        curAns[k % m] = ++counter;\n    }\n    counter = 0;\n    for (int a = 2 * m; a < 3 * m; a++) {\n      if (cur[a] == 1)\n        break;\n      else\n        counter++;\n    }\n    for (int k = 2 * m - 1; k >= m; k--) {\n      if (cur[k] == 1) {\n        curAns[k % m] = 0;\n        counter = 0;\n      } else {\n        counter++;\n        curAns[k % m] = min(curAns[k % m], counter);\n      }\n    }\n    for (int j = 0; j < m; j++) { res[j] += curAns[j]; }\n  }\n  int min = INT_MAX;\n  for (int i = 0; i < m; i++) {\n    if (min > res[i]) min = res[i];\n  }\n  cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "integer constant INF = 1 << 29\n\n  declare integer variables n and m\n  read n and m\n  a is an array of strings with size n\n  read n elements into a\n  ans is an array of integers with size m\n  set m elements of ans to 0\n  chk is integer\n  for i = 0 to n exclusive\n    set value of chk to 0\n    for integer j = 0 to m exclusive, increment chk by 1 if a[i][j] = '1'\n    if chk = 0\n      print \"-1\\n\"\n      \n    \n  \n  for i = 0 to n exclusive\n    declare integer called last\n    declare boolean variable called found = 0\n    for j = m - 1 to 0 inclusive counting down\n      if a[i][j] = '1'\n        set value of last to j\n        stop the loop\n      \n    \n    , curr is an array of integers with size m\n    for j = 0 to m exclusive, curr[j] = INT_MAX\n    for j = 0 to m exclusive\n      if a[i][j] = '1'\n        set value of last to j\n        found = 1\n      \n      if found is 0\n        curr[j] = min(curr[j], (m - last) + j)\n      else\n        curr[j] = min of curr[j] and abs(j - last)\n      \n    \n    found = 0\n    for j = 0 to m exclusive\n      if a[i][j] = '1'\n        last = j\n        break the loop\n      \n    \n    for integer j = m - 1 to 0 inclusive counting down\n      if a[i][j] = '1'\n        set value of last to j\n        assign value of 1 to found\n      \n      if found is 0\n        curr[j] = min(curr[j], (last + 1) + (m - 1 - j))\n      else\n        curr[j] = min(curr[j], abs(j - last))\n      \n    \n    for integer j = 0 to m exclusive increment ans[j] by curr[j]\n  \n  res is integer = INT_MAX\n  for i = 0 to m exclusive, set res to min(res, ans[i])\n  print res and a new line\n  \n\n",
        "const int INF = 1 << 29;\nint main() {\n  int n, m;\n  cin >> n >> m;\n  string a[n];\n  for (int i = 0; i < (n); i++) cin >> a[i];\n  int ans[m];\n  for (int i = 0; i < (m); i++) ans[i] = 0;\n  int chk;\n  for (int i = 0; i < (n); i++) {\n    chk = 0;\n    for (int j = 0; j < (m); j++) { chk += (a[i][j] == '1'); }\n    if (chk == 0) {\n      cout << \"-1\\n\";\n      return 0;\n    }\n  }\n  for (int i = 0; i < (n); i++) {\n    int last;\n    bool found = 0;\n    for (int j = m - 1; j >= 0; --j) {\n      if (a[i][j] == '1') {\n        last = j;\n        break;\n      }\n    }\n    int curr[m];\n    for (int j = 0; j < (m); j++) curr[j] = INT_MAX;\n    for (int j = 0; j < (m); j++) {\n      if (a[i][j] == '1') {\n        last = j;\n        found = 1;\n      }\n      if (!found) {\n        curr[j] = min(curr[j], (m - last) + j);\n      } else {\n        curr[j] = min(curr[j], abs(j - last));\n      }\n    }\n    found = 0;\n    for (int j = 0; j < m; ++j) {\n      if (a[i][j] == '1') {\n        last = j;\n        break;\n      }\n    }\n    for (int j = m - 1; j >= 0; --j) {\n      if (a[i][j] == '1') {\n        last = j;\n        found = 1;\n      }\n      if (!found) {\n        curr[j] = min(curr[j], (last + 1) + (m - 1 - j));\n      } else {\n        curr[j] = min(curr[j], abs(j - last));\n      }\n    }\n    for (int j = 0; j < (m); j++) ans[j] += curr[j];\n  }\n  int res = INT_MAX;\n  for (int i = 0; i < (m); i++) res = min(res, ans[i]);\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer maxn with maxn = 2e5 + 10\ncreate integers n, m\ncreate string array s with size 110\ncreate 2d integer array l with size 110 by 10010\ncreate 2d integer array r with size 110 by 10010\n\n  read n read m\n  for i = 0 to n exclusive, read s[i]\n  create boolean bad with bad = false\n  for i = 0 to n exclusive\n    create integer last with last = -1\n    for j = 0 to m exclusive\n      if s[i][j] is '0'\n        set l[i][j] to -1 if last is -1, else j - last\n      else\n        set l[i][j] to 0, set last to j\n    if last is less than 0, set bad to true\n    set last to -1\n    for j = m - 1 to 0 inclusive, decrementing j\n      if s[i][j] is '0'\n        set r[i][j] to -1 if last is -1, else last - j\n      else\n        set r[i][j] to 0, set last to j\n    for j = 0 to m exclusive\n      if l[i][j] is less than 0, set l[i][j] to j + l[i][m-1] + 1\n    for j = m - 1 to 0 inclusive, decrementing j\n      if r[i][j] is less than 0, set r[i][j] to (m - 1) - j + r[i][0] + 1\n  \n  if bad is true\n    print -1 print \"\\n\"\n    \n  \n  create long long ans with ans = n * m + 1\n  for j = 0 to m exclusive\n    create long long cur with cur = 0\n    for i = 0 to n exclusive, increment cur by minimum of l[i][j] and r[i][j]\n    set ans to minimum of ans and cur\n  \n  print ans print \"\\n\"\n\n",
        "const int maxn = 2e5 + 10;\nint n, m;\nstring s[110];\nint l[110][10010];\nint r[110][10010];\nint main() {\n  cin >> n >> m;\n  for (int i = 0; i < n; ++i) cin >> s[i];\n  bool bad = false;\n  for (int i = 0; i < n; ++i) {\n    int last = -1;\n    for (int j = 0; j < m; ++j)\n      if (s[i][j] == '0')\n        l[i][j] = (last == -1 ? -1 : j - last);\n      else\n        l[i][j] = 0, last = j;\n    if (last < 0) bad = true;\n    last = -1;\n    for (int j = m - 1; j >= 0; --j)\n      if (s[i][j] == '0')\n        r[i][j] = (last == -1 ? -1 : last - j);\n      else\n        r[i][j] = 0, last = j;\n    for (int j = 0; j < m; ++j)\n      if (l[i][j] < 0) l[i][j] = j + l[i][m - 1] + 1;\n    for (int j = m - 1; j >= 0; --j)\n      if (r[i][j] < 0) r[i][j] = (m - 1) - j + r[i][0] + 1;\n  }\n  if (bad) {\n    cout << -1 << \"\\n\";\n    return 0;\n  }\n  long long ans = n * m + 1;\n  for (int j = 0; j < m; ++j) {\n    long long cur = 0;\n    for (int i = 0; i < n; ++i) cur += min(l[i][j], r[i][j]);\n    ans = min(ans, cur);\n  }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "assign value 11000 to constant integer maxn\ncreate integer INF = 1 << 30\nlet m and n be integers\nda is an 2d array of integers with size 110 by maxn\njoo is an 2d array of integers with size 110 by maxn\n\n  read m and n\n  create string s\n  for i = 0 to m exclusive\n    read s\n    for integer j = 0 to n exclusive set da[i][j] to 1 if s[j] = '1', 0 if it is not\n  \n  declare integers t and jj\n  for i = 0 to m exclusive\n    t = INF\n    for j = 0 while j < n * 2\n      jj = j % n\n      if da[i][jj] = 1, set t to 0\n      set joo[i][jj] = t and increment t\n    \n    t = INF\n    for integer j = n * 2 to 0 inclusive counting down\n      jj = j % n\n      if da[i][jj] = 1, set t to 0\n      joo[i][jj] = min of joo[i][jj] and t\n    \n  \n  declare long longs mi = INF and sum\n  for integer j = 0 to n exclusive\n    assign value of 0 to sum\n    for integer i = 0 to m exclusive add joo[i][j] to sum\n    set mi to min of sum and mi\n  \n  if mi >= INF\n    print -1 and a new line\n  else\n    print mi and a new line\n  \n\n",
        "const int maxn = 11000;\nint INF = 1 << 30;\nint m, n;\nint da[110][maxn];\nint joo[110][maxn];\nint main() {\n  cin >> m >> n;\n  string s;\n  for (int i = 0; i < m; i++) {\n    cin >> s;\n    for (int j = 0; j < n; j++) da[i][j] = (s[j] == '1' ? 1 : 0);\n  }\n  int t, jj;\n  for (int i = 0; i < m; i++) {\n    t = INF;\n    for (int j = 0; j < n * 2; j++) {\n      jj = j % n;\n      if (da[i][jj] == 1) t = 0;\n      joo[i][jj] = t++;\n    }\n    t = INF;\n    for (int j = n * 2; j >= 0; j--) {\n      jj = j % n;\n      if (da[i][jj] == 1) t = 0;\n      joo[i][jj] = min(joo[i][jj], t++);\n    }\n  }\n  long long mi = INF, sum;\n  for (int j = 0; j < n; j++) {\n    sum = 0;\n    for (int i = 0; i < m; i++) { sum += joo[i][j]; }\n    mi = min(sum, mi);\n  }\n  if (mi >= INF)\n    cout << -1 << endl;\n  else\n    cout << mi << endl;\n  return 0;\n}\n"
    ],
    [
        "dist = array of 2 by 10004 int\n\n  n, m = int\n  read n and m\n  for i = 0 to n exclusive\n    str = string\n    read str\n    firstone = -1\n    ff = 0\n    while ff < m and str[ff] is not '1' increment ff\n    if ff is m\n      print -1\n      \n    \n    firstone = ff\n    dist[0][ff] = 0\n    j = ff+1 modulo m\n    while true\n      if str[j] is '1'\n        dist[0][j] = 0\n        k = j\n        while dist[0][k] < dist[0][k-1+m modulo m\n          k = k-1+m modulo m\n          dist[0][k] = dist[0][k+1 modulo m]+1\n        \n        if j is firstone break\n      else\n        dist[0][j] = dist[0][j+m-1 modulo m]+1\n      \n      j = j+1 modulo m\n    \n    for z = 0 to m exclusive\n      increment dist[1][z] by dist[0][z]\n      dist[0][z] = 0\n    \n  \n  minn = dist[1][0]\n  for h = 1 to m exclusive\n    if dist[1][h] < minn minn = dist[1][h]\n  \n  print minn\n  \n\n",
        "int dist[2][10004];\nint main() {\n  int n, m;\n  cin >> n >> m;\n  for (int i = 0; i < n; i++) {\n    string str;\n    cin >> str;\n    int firstone = -1;\n    int ff = 0;\n    while (ff < m && str[ff] != '1') ff++;\n    if (ff == m) {\n      cout << -1 << endl;\n      return 0;\n    }\n    firstone = ff;\n    dist[0][ff] = 0;\n    int j = (ff + 1) % m;\n    while (true) {\n      if (str[j] == '1') {\n        dist[0][j] = 0;\n        int k = j;\n        while (dist[0][k] < dist[0][(k - 1 + m) % m]) {\n          k = (k - 1 + m) % m;\n          dist[0][k] = dist[0][(k + 1) % m] + 1;\n        }\n        if (j == firstone) break;\n      } else {\n        dist[0][j] = dist[0][(j + m - 1) % m] + 1;\n      }\n      j = (j + 1) % m;\n    }\n    for (int z = 0; z < m; z++) {\n      dist[1][z] += dist[0][z];\n      dist[0][z] = 0;\n    }\n  }\n  int minn = dist[1][0];\n  for (int h = 1; h < m; h++) {\n    if (dist[1][h] < minn) { minn = dist[1][h]; }\n  }\n  cout << minn << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m\n  read n read m\n  create 2d character array a of size n by m\n  for i = 0 to n exclusive\n    for j = 0 to m exclusive, read a[i][j]\n  \n  for i = 0 to n exclusive\n    if not count of '1' from a[i] to a[i] + m\n      print -1 print '\\n'\n      \n    \n  \n  create 2d integer arrays nearest, l, r, with nearest size n by m, l size n by m, r size n by m\n  for i = 0 to n exclusive\n    create integer lst with lst = -1\n    for j = 0 to m exclusive\n      if a[i][j] is '1', set lst to j\n    \n    create boolean c with c = true\n    for j = 0 to m exclusive\n      set lst to j if a[i][j] is '1', else lst\n      set c to (c bitwise and a[i][j]) is 0\n      set l[i][j] to m - lst + j if c is true, else absolute value of j - lst\n    \n    set lst to -1\n    set c to true\n    for j = 0 to m exclusive\n      if a[i][j] is '1'\n        set lst to j\n        break loop\n      \n    \n    for j = m - 1 to 0 inclusive, decrementing j\n      set lst to j if a[i][j] is '1', else lst\n      set c to (c bitwise and a[i][j]) is 0\n      set r[i][j] to lst + 1 + m - ( j + 1 ) if c is true, else absolute value of j - lst\n    \n  \n  for i = 0 to n exclusive\n    for j = 0 to m exclusive, set nearest[i][j] to minimum of r[i][j] and l[i][j]\n  \n  create integer ans with ans = 0x3f3f3f3f\n  for j = 0 to m exclusive\n    create integer cur with cur = 0\n    for i = 0 to n exclusive, increment cur by nearest[i][j]\n    set ans to minimum of ans and cur\n  \n  print ans print '\\n'\n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  char a[n][m];\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) { cin >> a[i][j]; }\n  }\n  for (int i = 0; i < n; ++i) {\n    if (!count(a[i], a[i] + m, '1')) {\n      cout << -1 << '\\n';\n      return 0;\n    }\n  }\n  int nearest[n][m], l[n][m], r[n][m];\n  for (int i = 0; i < n; ++i) {\n    int lst = -1;\n    for (int j = 0; j < m; ++j) {\n      if (a[i][j] == '1') lst = j;\n    }\n    bool c = true;\n    for (int j = 0; j < m; ++j) {\n      lst = (a[i][j] == '1' ? j : lst);\n      c &= a[i][j] == '0';\n      l[i][j] = (c ? m - lst + j : abs(j - lst));\n    }\n    lst = -1;\n    c = true;\n    for (int j = 0; j < m; ++j) {\n      if (a[i][j] == '1') {\n        lst = j;\n        break;\n      }\n    }\n    for (int j = m - 1; j >= 0; --j) {\n      lst = (a[i][j] == '1' ? j : lst);\n      c &= a[i][j] == '0';\n      r[i][j] = (c ? lst + 1 + m - (j + 1) : abs(j - lst));\n    }\n  }\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) { nearest[i][j] = min(r[i][j], l[i][j]); }\n  }\n  int ans = 0x3f3f3f3f;\n  for (int j = 0; j < m; ++j) {\n    int cur = 0;\n    for (int i = 0; i < n; ++i) { cur += nearest[i][j]; }\n    ans = min(ans, cur);\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "\n  declare integer n\n  read n\n  if n is odd\n    print -1\n  else\n    print \"2 1\"\n    for integer i = 3 to n exclusive with increment step 2, print \" \", i + 1, \" \" and i\n    print new line\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  if (n % 2 == 1) {\n    cout << -1 << endl;\n  } else {\n    cout << \"2 1\";\n    for (int i = 3; i < n; i += 2) { cout << \" \" << i + 1 << \" \" << i; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  if n mod 2 = 1\n    print -1\n  otherwise\n    print 2 1\n    for i=3 to n exclusive, print \" \", i+1,\" \", i\n    print a new line\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  if (n % 2 == 1) {\n    cout << -1 << endl;\n  } else {\n    cout << \"2 1\";\n    for (int i = 3; i < n; i += 2) { cout << \" \" << i + 1 << \" \" << i; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int t and i\n  read t\n  if t mod 2 = 1\n    print -1\n  else\n    print 2 1\n    for i=3 to t exclusive, print \" \", i + 1, \" \", i\n    print a new line\n  \n  \n\n",
        "int main() {\n  int t, i;\n  cin >> t;\n  if (t % 2 == 1) {\n    cout << -1 << endl;\n  } else {\n    cout << \"2 1\";\n    for (i = 3; i < t; i += 2) { cout << \" \" << i + 1 << \" \" << i; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let num be integer array with size 101\n\n  declare integer variable n\n  read n\n  for integer i = 0 to n exclusive, set num[i] to i + 1\n  if n is even\n    print -1\n  else\n    for i = 1 to n exclusive swap num[i - 1] and num[i]\n    for integer i = 0 to n - 1 exclusive print num[i] and \" \"\n    print num[n - 1]\n  \n\n",
        "int num[101];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) num[i] = i + 1;\n  if (n % 2)\n    cout << -1 << endl;\n  else {\n    for (int i = 1; i < n; i += 2) { swap(num[i - 1], num[i]); }\n    for (int i = 0; i < n - 1; i++) cout << num[i] << \" \";\n    cout << num[n - 1] << endl;\n  }\n}\n"
    ],
    [
        "\n  n = long long\n  read n\n  if n is uneven\n    print -1\n  else\n    i = 1 to n inclusive\n      if i is uneven\n        print i + 1\n      else\n        print i - 1\n      if i equals n\n        print newline\n      else\n        print \" \"\n    \n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  if (n % 2 == 1)\n    cout << -1 << endl;\n  else {\n    for (long long i = 1; i <= n; i++) {\n      if (i % 2 == 1)\n        cout << i + 1;\n      else\n        cout << i - 1;\n      if (i == n)\n        cout << endl;\n      else\n        cout << \" \";\n    }\n  }\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  if n modulo 2 is 1\n    print -1\n  else\n    temp = integer with temp = 2\n    count = integer with count = 0\n    while not temp is n - 1\n      print temp,\" \"\n      increment count\n      if count modulo 2 is 1\n        temp = temp - 1\n      else\n        temp = temp + 3\n    \n    print temp\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  if (n % 2 == 1)\n    cout << -1 << endl;\n  else {\n    int temp = 2;\n    int count = 0;\n    while (temp != n - 1) {\n      cout << temp << \" \";\n      count++;\n      if (count % 2 == 1)\n        temp -= 1;\n      else\n        temp += 3;\n    }\n    cout << temp << endl;\n  }\n}\n"
    ],
    [
        "\n  a, b = integer\n  read a\n  if a modulo not 2 is 0\n    print -1\n  else\n    for b = 2 to a - 2 inclusive with b = b + 2 then print b,' ', b - 1\n    print a,' ',a - 1\n  \n  \n\n",
        "int main() {\n  int a, b;\n  cin >> a;\n  if (a % 2 != 0)\n    cout << -1 << endl;\n  else {\n    for (b = 2; b <= a - 2; b += 2) cout << b << ' ' << b - 1 << ' ';\n    cout << a << ' ' << a - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  p = integer\n  read p\n  if p modulo 2 is 1\n    print -1\n  else\n    print 2 1\n    for i = 4 to p inclusive with i = i + 2 then print i, i - 1\n    print new line\n  \n  \n\n",
        "int main() {\n  int p;\n  cin >> p;\n  if (p % 2 == 1)\n    cout << \"-1\\n\";\n  else {\n    cout << \"2 1\";\n    for (int i = 4; i <= p; i += 2) cout << \" \" << i << \" \" << i - 1;\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare fastIo with no arguments, returning void\n\n  run fastIo\n  create integer n\n  read n\n  create pair of ( pair of ( integer and integer ) and integer ) m\n  for i = 0 to n exclusive\n    create integers x, y\n    read x read y\n    increment m[ new pair with x and y ]\n  \n  create map iterator it from pair of integer and integer to integer with it = beginning of m\n  create integer cnt with cnt = 1\n  while it is not end of m\n    if second element of it is greater than cnt, set cnt to second element of it\n    increment it\n  \n  print cnt print newline\n  \n\n",
        "void fastIo() {}\nint main() {\n  fastIo();\n  int n;\n  cin >> n;\n  map<pair<int, int>, int> m;\n  for (int i = 0; i < n; i++) {\n    int x, y;\n    cin >> x >> y;\n    m[make_pair(x, y)]++;\n  }\n  map<pair<int, int>, int>::iterator it = m.begin();\n  int cnt = 1;\n  while (it != m.end()) {\n    if (it->second > cnt) cnt = it->second;\n    it++;\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant int N = 1e5 + 5\ncreate integers n, res and Max with res and Max = 1\na is an array of int/int pairs with N elements\nvoid function Input\n  read n\n  for i from 1 to n inclusive incrementing i, read a[i].first and a[i].second\n  sort a from index 1 to n + 1\n\nSolve is a void function\n  declare integer curr = 1\n  loop i from 2 to n inclusive\n    if a[i].first = a[i - 1].first and a[i].second = a[i - 1].second\n      increment curr and set res to max of res and curr\n    else\n      change curr to 1\n  \n  print res and '\\n'\n\n\n  call function Input\n  call function Solve\n  \n\n",
        "const int N = 1e5 + 5;\nint n, res = 1, Max = 1;\npair<int, int> a[N];\nvoid Input() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i].first >> a[i].second;\n  sort(a + 1, a + n + 1);\n}\nvoid Solve() {\n  int curr = 1;\n  for (int i = 2; i <= n; i++) {\n    if (a[i].first == a[i - 1].first && a[i].second == a[i - 1].second)\n      curr++, res = max(res, curr);\n    else\n      curr = 1;\n  }\n  cout << res << '\\n';\n}\nint main() {\n  Input();\n  Solve();\n  return 0;\n}\n"
    ],
    [
        "\n  n, temp = integer 2d array of size [24][60], maxi, h, m = integers with temp = {0}, maxi = 0\n  read n\n  while n\n    read h, m\n    increment temp[h][m]\n    if temp[h][m] > maxi, maxi = temp[h][m]\n  \n  print maxi\n  \n\n",
        "int main() {\n  int n, temp[24][60] = {0}, maxi = 0, h, m;\n  cin >> n;\n  while (n--) {\n    cin >> h >> m;\n    temp[h][m]++;\n    if (temp[h][m] > maxi) maxi = temp[h][m];\n  }\n  cout << maxi << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, h, m, t , c, rest = integer with t = -1, c = 0, res = 1\n  read n\n  for i = 0 to n exclusive\n    read h and m\n    t0 = integer with t0 = h * 60 + m\n    c = if t0 is t, c + 1 else 1\n    if c > res, res = c\n    t = t0\n  \n  print res\n  \n\n",
        "int main() {\n  int n, h, m, t = -1, c = 0, res = 1;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> h >> m;\n    int t0 = h * 60 + m;\n    c = t0 == t ? c + 1 : 1;\n    if (c > res) res = c;\n    t = t0;\n  }\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, i, j\n  create integer arrays h, m, count with h size 100000, m size 100000, count size 100000\n  read n\n  for i = 0 to n exclusive, read h[i] read m[i]\n  for i = 0 to n exclusive, set count[i] to 1\n  for i = 0, j = 0 to i is less than n - 1, incrementing i\n    if h[i] is h[i+1] and m[i] is m[i+1]\n      increment count[j]\n    else if count[j] is not 1\n      increment j\n  \n  create integer ans with ans = count[0]\n  for i = 0 to n exclusive\n    if count[i] is greater than ans, set ans to count[i]\n  \n  print ans print newline\n  \n\n",
        "int main() {\n  int n, i, j;\n  int h[100000], m[100000], count[100000];\n  cin >> n;\n  for (i = 0; i < n; i++) { cin >> h[i] >> m[i]; }\n  for (i = 0; i < n; i++) count[i] = 1;\n  for (i = 0, j = 0; i < n - 1; i++) {\n    if (h[i] == h[i + 1] && m[i] == m[i + 1]) {\n      count[j]++;\n    } else if (count[j] != 1)\n      j++;\n  }\n  int ans = count[0];\n  for (i = 0; i < n; i++) {\n    if (count[i] > ans) ans = count[i];\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, i, c = int with c = 0 and x, y = int array of size 100010 each\n  v = int vector\n  read n\n  mp = map of pair of int and int and int\n  for i = 0 to n\n    read x[i] then y[i]\n    increment mp[make_pair of x[i] and y[i]]\n  \n  for i = 0 to n append mp[make_pair of x[i] and y[i]] to v\n  sort v\n  if last element of v is 0\n    print \"1\"\n  else\n    print last element of v\n  \n\n",
        "int main() {\n  int n, i, x[100010], y[100010], c = 0;\n  vector<int> v;\n  cin >> n;\n  map<pair<int, int>, int> mp;\n  for (i = 0; i < n; i++) {\n    cin >> x[i] >> y[i];\n    mp[make_pair(x[i], y[i])]++;\n  }\n  for (i = 0; i < n; i++) { v.push_back(mp[make_pair(x[i], y[i])]); }\n  sort(v.begin(), v.end());\n  if (v[v.size() - 1] == 0)\n    cout << \"1\" << endl;\n  else\n    cout << v[v.size() - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b, c , d , co, m = integers with c = -1, d = -1, co = 0, m = 0\n  read n\n  for i = 0 to n exclusive\n    read a and b\n    if a is c and b is d\n      increment co\n      m = max of m and co\n    else\n      co = 1\n    c = a\n    d = b\n  \n  if m is 0\n    print 1\n  else\n    print m\n  \n\n",
        "int main() {\n  int n, a, b, c = -1, d = -1, co = 0, m = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a >> b;\n    if (a == c && b == d) {\n      co++;\n      m = max(m, co);\n    } else\n      co = 1;\n    c = a;\n    d = b;\n  }\n  if (m == 0)\n    cout << 1 << endl;\n  else\n    cout << m << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, h, m, a = two dimensional array of int with lengths 100, 100\n  while reading new values for n\n    let maxa = int = 0\n    for i = 0 to n exclusive\n      read h, m\n      increment a[h][m]\n      if a[h][m] > maxa, maxa = a[h][m]\n    \n    print maxa\n  \n  \n\n",
        "int main() {\n  int n, h, m, a[100][100];\n  while (cin >> n) {\n    int maxa = 0;\n    for (int i = 0; i < n; i++) {\n      cin >> h >> m;\n      a[h][m]++;\n      if (a[h][m] > maxa) maxa = a[h][m];\n    }\n    cout << maxa << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, i\n  read n\n  create integer arrays a, b, with a size n + 2, b size n + 2\n  create integer m with m = 0\n  create 2d integer array c with size 24 by 60, with c = {0}\n  for i = 0 to n exclusive\n    read a[i] read b[i]\n    increment c[a[i]][b[i]]\n  \n  for i = 0 to n exclusive, set m to maximum of m and c[a[i]][b[i]]\n  print m print \"\\n\"\n  \n\n",
        "int main() {\n  int n, i;\n  cin >> n;\n  int a[n + 2], b[n + 2];\n  int m = 0;\n  int c[24][60] = {0};\n  for (i = 0; i < n; i++) {\n    cin >> a[i] >> b[i];\n    c[a[i]][b[i]]++;\n  }\n  for (i = 0; i < n; i++) { m = max(m, c[a[i]][b[i]]); }\n  cout << m << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n, hh, mm, h, m, res, k = integers with hh and mm value of -1, res value of 0 and k value of 1\n  read n\n  for i = 0 to n exclusive\n    read h and m\n    if h equals hh and m equals mm\n      add 1 to k\n    else\n      set hh to h\n      set mm to m\n      if res is greater than k then set res to res otherwise set res to k\n      set k to 1\n    \n  \n  if res is greater than k then print res otherwise print k\n  \n\n",
        "int main() {\n  int n, hh = -1, mm = -1, h, m, res = 0, k = 1;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> h >> m;\n    if (h == hh && m == mm) {\n      k++;\n    } else {\n      hh = h;\n      mm = m;\n      res = res > k ? res : k;\n      k = 1;\n    }\n  }\n  cout << (res > k ? res : k) << endl;\n  return 0;\n}\n"
    ],
    [
        "declare const int N = 1e5 + 5\nlet n, res and Max be ints with res and Max = 1\ncreate an array of int/int pairs called a with N elements\nfunction Input\n  read n\n  loop i from 1 to n inclusive, read a[i].first and a[i].second\n  sort a from index 1 to n + 1\n\nvoid function Solve\n  declare int variable curr = 1\n  for i = 2 to n inclusive\n    if a[i].first = a[i - 1].first and a[i].second = a[i - 1].second\n      increment curr by one and set res to max of res and curr\n    else\n      assign 1 to curr\n  \n  print res and '\\n'\n\n\n  call function Input\n  call function Solve\n  \n\n",
        "const int N = 1e5 + 5;\nint n, res = 1, Max = 1;\npair<int, int> a[N];\nvoid Input() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i].first >> a[i].second;\n  sort(a + 1, a + n + 1);\n}\nvoid Solve() {\n  int curr = 1;\n  for (int i = 2; i <= n; i++) {\n    if (a[i].first == a[i - 1].first && a[i].second == a[i - 1].second)\n      curr++, res = max(res, curr);\n    else\n      curr = 1;\n  }\n  cout << res << '\\n';\n}\nint main() {\n  Input();\n  Solve();\n  return 0;\n}\n"
    ],
    [
        "\n  n, ele1, ele2 = integers\n  read n\n  arr = integer array of size[24 * 60] with arr[24 * 60] = {}\n  while decrement n\n    read ele1 and ele2\n    increment arr[ele1 * 60 + ele2]\n  \n  max = integer with max = 0\n  for i = 0 to 24 * 60 exclusive\n    if arr[i] > max, max = arr[i]\n  \n  print max\n\n",
        "int main() {\n  int n, ele1, ele2;\n  cin >> n;\n  int arr[24 * 60] = {};\n  while (n--) {\n    cin >> ele1 >> ele2;\n    arr[ele1 * 60 + ele2]++;\n  }\n  int max = 0;\n  for (int i = 0; i < 24 * 60; i++) {\n    if (arr[i] > max) { max = arr[i]; }\n  }\n  cout << max << \"\\n\";\n}\n"
    ],
    [
        "\n  integers = t\n  read t\n  integers array = arr[t][2]\n  read arr[i][0],arr[i][1]\n  set int count to 0, temp to 1\n  for i = 1 to less than t do the following\n    set if (temp > count) count equals temp\n    if arr[i - 1][0] is arr[i][0] && arr[i - 1][1] equals arr[i][1] then do next\n      add one to temp\n    else\n      set temp to 1\n  \n  set if (temp > count) count equals temp\n  output count\n\n",
        "int main() {\n  int t;\n  cin >> t;\n  int arr[t][2];\n  for (int i = 0; i < t; i++) cin >> arr[i][0] >> arr[i][1];\n  int count = 0, temp = 1;\n  for (int i = 1; i < t; i++) {\n    if (temp > count) count = temp;\n    if (arr[i - 1][0] == arr[i][0] && arr[i - 1][1] == arr[i][1])\n      temp++;\n    else\n      temp = 1;\n  }\n  if (temp > count) count = temp;\n  cout << count << endl;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integers ans, cnt, ph, pm, with ans = 1, cnt = 1, ph = 99, pm = 99\n  for i = 0 to n exclusive\n    create integers h, m\n    read h read m\n    if h is ph and m is pm\n      increment cnt\n      if ans is less than cnt, set ans to cnt\n    else\n      set cnt to 1\n    \n    set ph to h\n    set pm to m\n  \n  print ans print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int ans = 1, cnt = 1, ph = 99, pm = 99;\n  for (int i = 0; i < n; ++i) {\n    int h, m;\n    cin >> h >> m;\n    if (h == ph && m == pm) {\n      ++cnt;\n      if (ans < cnt) ans = cnt;\n    } else {\n      cnt = 1;\n    }\n    ph = h;\n    pm = m;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be a long integer\n  read n\n  let Arr , Sum be long integers with Sum = 0, Arr = array of long integers of length n + 2\n  for i = 1 to n inclusive , read Arr[i] , increment Sum by Arr[i]\n  let s, t be long integers\n  read s, t\n  let Cnt be a long integer with Cnt = 0\n  if s is greater than t , swap s, t\n  for i = s to t exclusive , increment Cnt by Arr[i]\n  print minimum of Cnt, Sum - Cnt and newline\n  \n\n",
        "int main() {\n  long long int n;\n  cin >> n;\n  long long int Arr[n + 2], Sum = 0;\n  for (int i = 1; i <= n; i++) cin >> Arr[i], Sum += Arr[i];\n  long long int s, t;\n  cin >> s >> t;\n  long long int Cnt = 0;\n  if (s > t) swap(s, t);\n  for (int i = s; i < t; i++) Cnt += Arr[i];\n  cout << min(Cnt, Sum - Cnt) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  a,i,s,t,n=int, b,c,l1,l2=0, arr=array of 105 int\n  read n\n  for a=1 to n inclusive read arr[a]\n  read s\n  read t\n  if s>t\n    b=t\n    c=s\n  else\n    b=s\n    c=t\n  \n  for a=b to c exclusive add arr[a] to l1\n  increment a from c while a is not b\n    add arr[a] to l2\n    if a is n a=0\n  \n  if l1 <= l2\n    print l1\n  else\n    print l2\n  \n\n",
        "int main() {\n  int a, i, b = 0, c = 0, s, t, n, l1 = 0, l2 = 0, arr[105];\n  cin >> n;\n  for (a = 1; a <= n; a++) { cin >> arr[a]; }\n  cin >> s;\n  cin >> t;\n  if (s > t) {\n    b = t;\n    c = s;\n  } else {\n    b = s;\n    c = t;\n  }\n  for (a = b; a < c; a++) { l1 = l1 + arr[a]; }\n  for (a = c; a != b; a++) {\n    l2 = l2 + arr[a];\n    if (a == n) a = 0;\n  }\n  if (l1 <= l2)\n    cout << l1 << endl;\n  else\n    cout << l2 << endl;\n  return 0;\n}\n"
    ],
    [
        "let d, n, x be integers with d = 2d array of integers with 107 rows and 107 columns respectively\n\n  read n\n  for i = 1 to n inclusive\n    for j = 1 to n inclusive , d[i][j] is equal to INT_MAX / 10\n  for i = 1 to n inclusive , d[i][i] is equal to 0\n  for i = 1 to n inclusive\n    read x\n    let j be a integer with j = i + 1\n    if j is greater than n ,decrement j by n\n    d[i][j] is equal to x\n    d[j][i] is equal to x\n  \n  for k = 1 to n inclusive\n    for i = 1 to n inclusive\n      for j = 1 to n inclusive\n        if d[i][k] + d[k][j] is less than d[i][j] , d[i][j] is equal to d[i][k] + d[k][j]\n  let s, t be integers\n  read s, t\n  print d[s][t] and newline\n\n",
        "int d[100 + 7][100 + 7], n, x;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++) d[i][j] = INT_MAX / 10;\n  for (int i = 1; i <= n; i++) d[i][i] = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> x;\n    int j = i + 1;\n    if (j > n) j -= n;\n    d[i][j] = x;\n    d[j][i] = x;\n  }\n  for (int k = 1; k <= n; k++)\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        if (d[i][k] + d[k][j] < d[i][j]) d[i][j] = d[i][k] + d[k][j];\n  int s, t;\n  cin >> s >> t;\n  cout << d[s][t] << endl;\n}\n"
    ],
    [
        "create ints K, X, Y, M, and N and int array A of size 105\n\n  read K\n  for i = 1 to K\n    read A[i]\n    set N to N + A[i]\n  \n  read X and Y\n  for i = min(X, Y) to max(X, Y), set M to M + A[i]\n  print the min of M and N - M\n\n",
        "int K, A[105], X, Y, M, N;\nint main() {\n  cin >> K;\n  for (int i = 1; i <= K; i++) {\n    cin >> A[i];\n    N += A[i];\n  }\n  cin >> X >> Y;\n  for (int i = min(X, Y); i < max(X, Y); i++) { M += A[i]; }\n  cout << min(M, N - M) << '\\n';\n}\n"
    ],
    [
        "let int array arr of size 1000\n\n  let int n\n  while cin >> n is truthy\n    let int total = 0\n    set every index of arr to 0\n    for i = 0 to n exclusive\n      read arr[i]\n      set total to total + arr[i]\n    \n    let ints s and t\n    read s and t\n    create int tmp\n    if s is greater than t\n      set tmp to s\n      set s to t\n      set t to tmp\n    \n    decrease s by 1\n    reduce t by 1\n    let ints a1 = 0 and a2 = 0\n    for i = s to t exclusive, set a1 to a1 + arr[i]\n    set a2 to total - a1\n    print the min of a2 and a1\n  \n\n",
        "int arr[1000];\nint main() {\n  int n;\n  while (cin >> n) {\n    int total = 0;\n    memset(arr, 0, sizeof(arr));\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n      total += arr[i];\n    }\n    int s, t;\n    cin >> s >> t;\n    int tmp;\n    if (s > t) {\n      tmp = s;\n      s = t;\n      t = tmp;\n    }\n    s--;\n    t--;\n    int a1 = 0, a2 = 0;\n    for (int i = s; i < t; i++) { a1 += arr[i]; }\n    a2 = total - a1;\n    cout << min(a2, a1) << endl;\n  }\n}\n"
    ],
    [
        "\n  n, sum, sum1, a, b = int with sum = 0 and sum1 = 0\n  read n\n  x = int array of size n\n  read n values into x\n  read a then b\n  for i = min of a - 1, b - 1 to max of b - 1, a- 1 increment sum by x[i]\n  for i = min of a - 1, b - 1 to 0 inclusive decrementing i increment sum1 by x[i]\n  for i = n - 1 to max of b - 1, a - 1 decrementing i increment sum1 by x[i]\n  print min of sum, sum1\n\n",
        "int main() {\n  int n, sum = 0, sum1 = 0, a, b;\n  cin >> n;\n  int x[n];\n  for (int i = 0; i < n; i++) { cin >> x[i]; }\n  cin >> a >> b;\n  for (int i = min(a - 1, b - 1); i < max(b - 1, a - 1); i++) { sum += x[i]; }\n  for (int i = min(a - 1, b - 1) - 1; i >= 0; i--) sum1 += x[i];\n  for (int i = n - 1; i >= max(b - 1, a - 1); i--) sum1 += x[i];\n  cout << min(sum, sum1) << endl;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integer array d with size n + 10\n  set d[0] to 0\n  for i = 1 to n inclusive, read d[i]\n  create integer array s with size n + 15\n  set s[0] to 0\n  for i = 1 to n + 1 inclusive, set s[i] to s[i-1] + d[i-1]\n  create integers sr, t\n  read sr read t\n  if sr is greater than t, swap values between sr and t\n  create integer ans with ans = s[t] - s[sr]\n  set ans to minimum of ( ans and s[sr] + s[n + 1] - s[t] )\n  print ans print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int d[n + 10];\n  d[0] = 0;\n  for (int i = 1; i <= n; i++) { cin >> d[i]; }\n  int s[n + 15];\n  s[0] = 0;\n  for (int i = 1; i <= n + 1; i++) { s[i] = s[i - 1] + d[i - 1]; }\n  int sr, t;\n  cin >> sr >> t;\n  if (sr > t) swap(sr, t);\n  int ans = s[t] - s[sr];\n  ans = min(ans, s[sr] + s[n + 1] - s[t]);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers n, m, x, y, ans, ans1, create integer arrays dist, prefs with dist size 100015, prefs size 100015\n\n  read n\n  for i = 0 to n exclusive, read dist[i]\n  set prefs[0] to dist[0]\n  for i = 1 to n exclusive, set prefs[i] to dist[i] + prefs[i - 1]\n  read x read y\n  decrement x\n  decrement y\n  if x is greater than y, swap values between x and y\n  set ans to prefs[y-1]\n  decrement ans by prefs[x-1]\n  set ans1 to prefs[n-1] - ans\n  print minimum of ans and ans1 print newline\n  \n\n",
        "int n, m, dist[100015], x, y, prefs[100015], ans, ans1;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> dist[i]; }\n  prefs[0] = dist[0];\n  for (int i = 1; i < n; i++) { prefs[i] = dist[i] + prefs[i - 1]; }\n  cin >> x >> y;\n  x--;\n  y--;\n  if (x > y) { swap(x, y); }\n  ans = prefs[y - 1];\n  ans -= prefs[x - 1];\n  ans1 = prefs[n - 1] - ans;\n  cout << min(ans, ans1) << endl;\n  return 0;\n}\n"
    ],
    [
        "declare n, s, t, ans = 0, tmp = 0 as integers, declare line as integer array with size 101 = {}\n\n  declare integer i\n  read n\n  for i = 1 to n inclusive, read line[i]\n  read s read t\n  let i be s\n  while i is not t\n    increment tmp by line[i]\n    increment i\n    if i is greater than n, let i be 1\n  \n  while i is not s\n    increment ans by line[i]\n    increment i\n    if i is greater than n, let i be 1\n  \n  if tmp is less than ans, let ans be tmp\n  print ans and newline\n  \n\n",
        "int n, s, t, line[101] = {}, ans = 0, tmp = 0;\nint main() {\n  int i;\n  cin >> n;\n  for (i = 1; i <= n; ++i) cin >> line[i];\n  cin >> s >> t;\n  i = s;\n  while (i != t) {\n    tmp += line[i];\n    ++i;\n    if (i > n) i = 1;\n  }\n  while (i != s) {\n    ans += line[i];\n    ++i;\n    if (i > n) i = 1;\n  }\n  if (tmp < ans) ans = tmp;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "n, i, s1, s2, s, t, a = integers with a = array of size 105\n\n  read n\n  for i = 1 to n, read a[i]\n  read s, t\n  if s > t, swap s and t\n  for i = s to t exclusive, s1 = s1 + a[i]\n  for i = 1 to s exclusive, s2 = s2 + a[i]\n  for i = n to t, s2 = s2 + a[i]\n  print min of s1 and s2\n  \n\n",
        "int n, i, s1, s2, s, t, a[105];\nint main() {\n  cin >> n;\n  for (i = 1; i <= n; i++) cin >> a[i];\n  cin >> s >> t;\n  if (s > t) swap(s, t);\n  for (i = s; i < t; i++) s1 += a[i];\n  for (i = 1; i < s; i++) s2 += a[i];\n  for (i = n; i >= t; i--) s2 += a[i];\n  cout << min(s1, s2) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  arr = int array of size n\n  read n values into arr\n  a, b = int\n  read a then b\n  x = int with x = max of a and b\n  y = int with y = min of a and b\n  d1 = int with d1 = 0\n  for i = x - 1 to n + y - 1 increment d1 by arr[i mod n]\n  d2 = int with d2 = 0\n  for i = x - 2 to y - 1 inclusive decrementing i increment d2 by arr[i mod n]\n  print min of d1 and d2\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; ++i) cin >> arr[i];\n  int a, b;\n  cin >> a >> b;\n  int x = max(a, b);\n  int y = min(a, b);\n  int d1 = 0;\n  for (int i = x - 1; i < n + (y - 1); i++) { d1 += arr[i % n]; }\n  int d2 = 0;\n  for (int i = x - 2; i >= y - 1; i--) { d2 += arr[i % n]; }\n  cout << min(d1, d2) << endl;\n}\n"
    ],
    [
        "\n  declare NumberOfStations as integer\n  declare integers From, To\n  declare integer SumOfDistance = 0\n  read NumberOfStations\n  declare integer vector StationsDistance initialized with NumberOfStations\n  for Index = 0 to NumberOfStations exclusive\n    read StationsDistance[Index]\n    increment SumOfDistance by StationsDistance[Index]\n  \n  read From and To\n  declare integers Start, End\n  if From is less than To\n    let Start be From\n    let End be To\n  else\n    let Start be To\n    let End be From\n  \n  declare TheOtherDestance as integer = 0\n  for Start is less than End, incrementing Start, increment TheOtherDestance by StaionsDistance[Start - 1]\n  print minimum of TheOtherDestance and ( SumOfDistance - TheOtherDestance), newline\n  \n\n",
        "int main() {\n  int NumberOfStations;\n  int From, To;\n  int SumOfDistance = 0;\n  cin >> NumberOfStations;\n  vector<int> StaionsDistance(NumberOfStations);\n  for (int Index = 0; Index < NumberOfStations; Index++) {\n    cin >> StaionsDistance[Index];\n    SumOfDistance += StaionsDistance[Index];\n  }\n  cin >> From >> To;\n  int Start, End;\n  if (From < To) {\n    Start = From;\n    End = To;\n  } else {\n    Start = To;\n    End = From;\n  }\n  int TheOtherDestance = 0;\n  for (; Start < End; Start++) TheOtherDestance += StaionsDistance[Start - 1];\n  cout << min(TheOtherDestance, (SumOfDistance - TheOtherDestance)) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = long long int\n  read n\n  d = long long int array of size n\n  read n values into d\n  s, t = long long int\n  read s then t\n  if s is greater than t\n    temp = long long int with temp = s\n    set s to t\n    set t to temp\n  \n  dist1, dist2 = long long int with dist1 = 0 and dist2 = 0\n  for i = s - 1 to t - 1 increment dist1 by d[i]\n  flag = bool with flag = true\n  for i = t - 1 to s - 1\n    if i is a multiple of n and flag is true\n      set i to -1\n      set flag to false\n      continue\n    \n    increment dist2 by d[i]\n  \n  if dist2 > dist1\n    print dist1\n  else\n    print dist2\n  \n\n",
        "int main() {\n  long long int n;\n  cin >> n;\n  long long int d[n];\n  for (int i = 0; i < n; i++) { cin >> d[i]; }\n  long long int s, t;\n  cin >> s >> t;\n  if (s > t) {\n    long long int temp = s;\n    s = t;\n    t = temp;\n  }\n  long long int dist1 = 0, dist2 = 0;\n  for (int i = s - 1; i < t - 1; i++) { dist1 += d[i]; }\n  bool flag = true;\n  for (int i = t - 1; i != s - 1; i++) {\n    if (i % n == 0 && flag) {\n      i = -1;\n      flag = false;\n      continue;\n    }\n    dist2 += d[i];\n  }\n  if (dist2 > dist1)\n    cout << dist1 << endl;\n  else\n    cout << dist2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, d with 255 elements, s, and t be integers\n  let res1 and res2 be integers with value 0\n  read n\n  read n values into array i\n  iterate and set 2 * n values into array d with element i - n\n  read s and t\n  if s is more than t, swap s and t\n  for i from s to t exclusive, add d at element i to res1\n  for i from t to n + s exclusive, add d at element i to res2\n  print min of res1 and res2\n\n",
        "int main() {\n  int n, d[255], s, t;\n  int res1 = 0, res2 = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) { cin >> d[i]; }\n  for (int i = n + 1; i <= 2 * n; i++) { d[i] = d[i - n]; }\n  cin >> s >> t;\n  if (s > t) swap(s, t);\n  for (int i = s; i < t; i++) { res1 += d[i]; }\n  for (int i = t; i < n + s; i++) { res2 += d[i]; }\n  cout << min(res1, res2) << endl;\n}\n"
    ],
    [
        "\n  n, s, t, sum, m1 = int with sum = 0 and m1 = 0\n  read n\n  arr = int array of size n\n  for i = 0 to n\n    read arr[i]\n    increment sum by arr[i]\n  \n  read s then t\n  decrement s\n  decrement t\n  l = int with l = min of s and t\n  h = int with h = max of s and t\n  for i = l to j increment m1 by arr[i]\n  print min of m1 and sum - m1\n\n",
        "int main() {\n  int n, s, t, sum = 0, m1 = 0;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    sum += arr[i];\n  }\n  cin >> s >> t;\n  s--;\n  t--;\n  int l = min(s, t);\n  int h = max(s, t);\n  for (int i = l; i < h; i++) { m1 += arr[i]; }\n  cout << min(m1, sum - m1) << \"\\n\";\n}\n"
    ],
    [
        "\n  declare integer variables n, m, u, v, x and y\n  read user input to n\n  a is a new array of integers with size 105\n  start for loop from i = 1 to n inclusive, reading user input to a[i] on each loop\n  read u and v from the user input\n  if u is greater than v, swap u and v\n  declare int variables m1 and m2 = 0\n  for integer i = u to v exclusive, change m1 to m1 + a[i]\n  start for loop from i = 1 to n inclusive\n    if i < u or i >= v, add a[i] to m2\n  \n  if u = v\n    print 0\n  else\n    print min of m1 and m2 to the standard output\n  \n  \n\n",
        "int main() {\n  int n, m, u, v, x, y;\n  cin >> n;\n  int a[105] = {0};\n  for (int i = 1; i <= n; i++) { cin >> a[i]; }\n  cin >> u >> v;\n  if (u > v) { swap(u, v); }\n  int m1 = 0, m2 = 0;\n  for (int i = u; i < v; i++) { m1 += a[i]; }\n  for (int i = 1; i <= n; i++) {\n    if (i < u || i >= v) { m2 += a[i]; }\n  }\n  if (u == v) {\n    cout << 0 << endl;\n  } else {\n    cout << min(m1, m2) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, s, t, len1, len2 = int with len1 = 0 and len2 = 0 and arr = int array of size 103\n  read n\n  read n values into arr\n  read s then t\n  if s is greater then t then swap s and t\n  for i = s - 1 to t - 1 increment len1 by arr[i]\n  f = int with f = n - t + s\n  tt = int with tt = t - 1\n  loop f times\n    if tt is even set tt to 0\n    increment len2 by arr[tt]\n    increment tt\n  \n  print min of len1 and len2\n  \n\n",
        "int main() {\n  int n, arr[103], s, t, len1 = 0, len2 = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  cin >> s >> t;\n  if (s > t) swap(s, t);\n  for (int i = s - 1; i < t - 1; i++) len1 += arr[i];\n  int f = n - t + s;\n  int tt = t - 1;\n  while (f--) {\n    if (tt % n == 0) tt = 0;\n    len2 += arr[tt];\n    tt++;\n  }\n  cout << min(len1, len2) << endl;\n  return 0;\n}\n"
    ],
    [
        "in function choose with arguments of long long integer n and long long integer m and returns a long long integer\n  ans = long long integer = 0\n  num = long long integer = 1\n  den = long long integer = 1\n  for i = 0 to m exclusive\n    num = num * (n - i)\n    num = num / (i + 1)\n  \n  return num\n\nin function isPrime with argument integer n and returns a boolean\n  if n <= 1, then return false\n  if n <= 3, then return true\n  if n is even and n modulo 3 is 0, then return false\n  for i = 5, where i is squared to n inclusive and i = i + 6\n    if n modulo i is 0 or n modulo the result of i + 2 is 0, then return false\n  \n  return true\n\nin function gcd with arguments of long long integer a and long long integer b and returns a long long integer\n  if a is 0\n    return b\n  else\n    return the result of calling gcd with arguments of b modulo a and a\n  \n\n\n  i, j, k, n, m, t, c = long long integers\n  read n\n  d = long long integer vector of size n\n  for i = 0 to n exclusive, read d[i]\n  s = long long integer\n  read s, t\n  if s > t\n    m = s\n    s = t\n    t = m\n  \n  ans1 = long long integer = 0, ans2 = long long integer = 0\n  for i = s - 1 to t - 1 exclusive, then ans1 = ans1 + d[i]\n  i = t - 1\n  while i is not s - 1\n    ans2 = ans2 + d[i]\n    increase i by 1\n    if i is n, then i = 0\n  \n  print the lower value between ans1 and ans2\n  \n\n",
        "long long int choose(long long int n, long long int m) {\n  long long int ans = 0;\n  long long int num = 1;\n  long long int den = 1;\n  for (long long int i = 0; i < m; i++) {\n    num *= (n - i);\n    num = num / (i + 1);\n  }\n  return num;\n}\nbool isPrime(int n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n  for (int i = 5; i * i <= n; i = i + 6) {\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  }\n  return true;\n}\nlong long int gcd(long long int a, long long int b) {\n  if (a == 0) {\n    return b;\n  } else {\n    return gcd(b % a, a);\n  }\n}\nint main() {\n  long long int i, j, k, n, m, t, c;\n  cin >> n;\n  vector<long long int> d(n);\n  for (i = 0; i < n; i++) { cin >> d[i]; };\n  long long int s;\n  cin >> s >> t;\n  if (s > t) {\n    m = s;\n    s = t;\n    t = m;\n  }\n  long long int ans1 = 0, ans2 = 0;\n  for (i = s - 1; i < t - 1; i++) { ans1 += d[i]; }\n  i = t - 1;\n  while (i != s - 1) {\n    ans2 += d[i];\n    i++;\n    if (i == n) i = 0;\n  }\n  cout << min(ans1, ans2) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare long longs i, x, j, y, tn = 1, ans = 0, long long array ar size 100000\n  declare n, m as integers\n  declare tc as long long\n  read n\n  declare v, v1 as long long vectors\n  add 0 to end of v\n  for i = 0 to n exclusive\n    read x\n    add x to end of v\n  \n  let v1 be v\n  for i = 1 to size of v exclusive, increment v[i] by v[i-1]\n  read x read y\n  if x is greater than y, swap values between x and y\n  if x is y\n    print 0, newline\n    \n  \n  declare integer t1 = v[y - 1] - v[x - 1]\n  declare integer t2 = v[size of v - 1] - v[y] + v1[y] + v[x - 1]\n  print minimum of t1 and t2, newline\n  \n\n",
        "int main() {\n  long long ar[100000], i, x, j, y, tn = 1, ans = 0;\n  int n, m;\n  long long tc;\n  cin >> n;\n  vector<long long> v, v1;\n  v.push_back(0);\n  for (i = 0; i < n; i++) {\n    cin >> x;\n    v.push_back(x);\n  }\n  v1 = v;\n  for (i = 1; i < v.size(); i++) v[i] += v[i - 1];\n  cin >> x >> y;\n  if (x > y) swap(x, y);\n  if (x == y) {\n    cout << 0 << endl;\n    return 0;\n  }\n  int t1 = v[y - 1] - v[x - 1];\n  int t2 = v[v.size() - 1] - v[y] + v1[y] + v[x - 1];\n  cout << min(t1, t2) << endl;\n  return 0;\n}\n"
    ],
    [
        "let N be int\nlet x, s and t = int\nlet d be vector of int\n\n  read N\n  read x and d.push_back of x N times exclusive\n  read s and t\n  if decremented s is greater than decremented t then swap s and t\n  let d1 be integer set to 0\n  add d of i to d1 i times from s to t exclusive\n  let d2 be integer set to 0\n  add d of i to d2 i times from t to N exclusive\n  add d of i to d2 i times from 0 to s exclusive\n  print min of d1 and d2\n  \n\n",
        "int N;\nint x, s, t;\nvector<int> d;\nint main() {\n  cin >> N;\n  for (int i = 0; i < N; ++i) cin >> x, d.push_back(x);\n  cin >> s >> t;\n  if ((--s) > (--t)) swap(s, t);\n  int d1 = 0;\n  for (int i = s; i < t; ++i) d1 += d[i];\n  int d2 = 0;\n  for (int i = t; i < N; ++i) d2 += d[i];\n  for (int i = 0; i < s; ++i) d2 += d[i];\n  cout << min(d1, d2) << endl;\n  return 0;\n}\n"
    ],
    [
        "create string s\ncreate integers i and j, and an array of integers arr with 10000 elements\n\n  create integers a, b, c, d, t, cnt and cn where cnt and cn = 0\n  read from the input to t\n  in a for loop, change k from 1 to t inclusive, reading variable arr[k] from the input\n  read variables a and b from the input\n  if a is greater than b, swap a and b\n  in the for loop, change i from a to b exclusive, increasing cnt by arr[i]\n  start for loop with i = b, incrementing i by 1\n    if i = a, stop the loop\n    change cn to cn + arr[i]\n    if i = t, set i to 0\n  \n  if cnt is greater than cn\n    print cn to the standard output\n  else\n    print cnt\n  \n  \n\n",
        "string s;\nint i, j, arr[10000];\nint main() {\n  int a, b, c, d, t, cnt = 0, cn = 0;\n  cin >> t;\n  for (int k = 1; k <= t; k++) { cin >> arr[k]; }\n  cin >> a >> b;\n  if (a > b) { swap(a, b); }\n  for (i = a; i < b; i++) { cnt += arr[i]; }\n  for (i = b;; i++) {\n    if (i == a) break;\n    cn += arr[i];\n    if (i == t) { i = 0; }\n  }\n  if (cnt > cn)\n    cout << cn << endl;\n  else {\n    cout << cnt << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, s, t = integers, arr = integer array of size 100\n  read n\n  for i = 0 to n exclusive\n  read s, t\n  m1 = integer = lower value between s, t\n  m2 = integer = bigger value between s, t\n  decrease m1 by 1\n  decrease m2 by 1\n  R1 = integer = 0, R2 = integer = 0\n  for i = m1 to m2, then R1 = R1 + arr[i]\n  for i = m2 to mn, then R2 = R1 + arr[i]\n  for i = 0 to m1, then R2 = R2 + arr[i]\n  R = integer = lower value between R2 and R1\n  print R\n  \n\n",
        "int main() {\n  int n, arr[100], s, t;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  cin >> s >> t;\n  int m1 = min(s, t);\n  int m2 = max(s, t);\n  m1--;\n  m2--;\n  int R1 = 0, R2 = 0;\n  for (int i = m1; i < m2; i++) R1 += arr[i];\n  for (int i = m2; i < n; i++) R2 += arr[i];\n  for (int i = 0; i < m1; i++) R2 += arr[i];\n  int R = min(R2, R1);\n  cout << R << endl;\n  return 0;\n}\n"
    ],
    [
        "declare array of integers arr with size 10005\n\n  create int n\n  read n\n  for i = 0 to i = n - 1 read arr[i + 1]\n  let s and t be integers\n  read s and t\n  if s is greater than t then swap s and t\n  create integer aa and set it to 0\n  for i = s to i = t exclusive set aa to aa + arr[i]\n  create integer bb = 0\n  for i = 1 to i = t exclusive assign bb + arr[i] to bb\n  for i = t to i = n do bb = bb + arr[i]\n  print min of aa and bb\n\n",
        "int arr[10005];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> arr[i + 1]; }\n  int s, t;\n  cin >> s >> t;\n  if (s > t) { swap(s, t); }\n  int aa = 0;\n  for (int i = s; i < t; i++) { aa += arr[i]; }\n  int bb = 0;\n  for (int i = 1; i < s; i++) { bb += arr[i]; }\n  for (int i = t; i <= n; i++) { bb += arr[i]; }\n  cout << min(aa, bb) << endl;\n}\n"
    ],
    [
        "create constant integer maxn with maxn = 105\ncreate integers n, s, t, create integer array d with size maxn\n\n  read n\n  for i = 1 to n inclusive, read d[i]\n  read s read t\n  create integers clock, revert, i with clock = 0, revert = 0\n  create integers front, tail, with front = minimum of s and t, tail = maximum of s and t\n  for i = front to tail exclusive, increment clock by d[i]\n  for i = tail to i is not front, incrementing i\n    if i is greater than n, set i to i % n\n    if i is front, break loop\n    increment revert by d[i]\n  \n  print minimum of clock and revert print newline\n\n",
        "const int maxn = 105;\nint n, d[maxn], s, t;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> d[i];\n  cin >> s >> t;\n  int clock = 0, revert = 0, i;\n  int front = min(s, t), tail = max(s, t);\n  for (i = front; i < tail; i++) { clock += d[i]; }\n  for (i = tail; i != front; i++) {\n    if (i > n) i %= n;\n    if (i == front) break;\n    revert += d[i];\n  }\n  cout << min(clock, revert) << endl;\n}\n"
    ],
    [
        "\n  declare int variables n, s, t, sum, res and mini with sum, res and mini = 0, and an array of integers d with 100 elements\n  read n\n  for integer i = 0 to n exclusive\n    read d[i]\n    increase sum by d[i]\n  \n  read input to s and t\n  for i from min of s - 1 and t - 1 to max of t - 1 and s - 1 exclusive, add d[i] to res\n  change mini to min of res and sum - res\n  print mini\n  \n\n",
        "int main() {\n  int n, d[100], s, t, sum = 0, res = 0, mini = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> d[i];\n    sum += d[i];\n  }\n  cin >> s >> t;\n  for (int i = min(s - 1, t - 1); i < max(t - 1, s - 1); i++) { res += d[i]; }\n  mini = min(res, sum - res);\n  cout << mini << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  create int vector x\n  for i = 0 to n exclusive\n    let int m\n    read m\n    add m to the end of x\n  \n  let ints s and t\n  read s and t\n  create ints count1 = 0 and count2 = 0\n  set s to s + n\n  for i = s - 1 to infinity\n    if i modulo n is equal to t - 1\n      break loop\n    otherwise\n      set count1 to count1 + x[i % n]\n  \n  decrease s by 1\n  for i = s - 1 to infinity decreasing by 1 each time\n    if i modulo n is equal to t - 1\n      set count2 to count2 + x[i % n]\n      break loop\n    otherwise do\n      set count2 to count2 + x[i % n]\n  \n  if count1 is less than or equal to count2\n    print count1\n  otherwise do\n    print count2\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<int> x;\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    x.push_back(m);\n  }\n  int s, t;\n  cin >> s >> t;\n  int count1 = 0, count2 = 0;\n  s = s + n;\n  for (int i = s - 1;; i++) {\n    if (i % n == t - 1)\n      break;\n    else\n      count1 = count1 + x[i % n];\n  }\n  s--;\n  for (int i = s - 1;; i--) {\n    if (i % n == t - 1) {\n      count2 = count2 + x[i % n];\n      break;\n    } else\n      count2 = count2 + x[i % n];\n  }\n  if (count1 <= count2) {\n    cout << count1 << endl;\n  } else\n    cout << count2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints n, ans1 = 0, ans2 = 0, f, t, and tot = 0 and int array d of size 105\n  read n\n  for i = 1 to n\n    read d[i]\n    set tot to tot + d[i]\n  \n  read f and t\n  if f is greater than t, swap the values of f and t\n  for i = f to t exclusive, set ans1 to ans1 + d[i]\n  set ans2 to tot - ans1\n  print the min of ans1 and ans2\n\n",
        "int main() {\n  int n, ans1 = 0, ans2 = 0, d[105], f, t, tot = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> d[i];\n    tot += d[i];\n  }\n  cin >> f >> t;\n  if (f > t) swap(f, t);\n  for (int i = f; i < t; i++) ans1 += d[i];\n  ans2 = tot - ans1;\n  cout << min(ans1, ans2) << '\\n';\n}\n"
    ],
    [
        "mod = long long = 1000000007\nN, M, K, H, W, L, R = long long integer\n\n  read N\n  v = integer vector of size N + 1\n  for i = 1 to N inclusive, then read v[i]\n  M = sum of all values of v\n  for i = 1 to N inclusive, v[i] = v[i] + v[i - 1]\n  read L, R\n  if L > R swap the values of L, R\n  print the result of the lower value between v[R - 1] - v[L - 1] and M in integer form - v[R - 1] + v[L - 1]\n  \n\n",
        "const long long int MOD = 1000000007;\nlong long int N, M, K, H, W, L, R;\nint main() {\n  cin >> N;\n  vector<int> v(N + 1);\n  for (int i = 1; i <= N; i++) cin >> v[i];\n  M = accumulate(v.begin(), v.end(), 0);\n  for (int i = 1; i <= N; i++) v[i] += v[i - 1];\n  cin >> L >> R;\n  if (L > R) swap(L, R);\n  cout << min(v[R - 1] - v[L - 1], (int)M - v[R - 1] + v[L - 1]) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create character array c with size 4 by 4\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive read c[i][j]\n  \n  declare integers x, y, z and v = 0\n  in the infinite loop\n    for j = z to z + 2 exclusive\n      if c[v][j] = '#' increment x\n      if c[v][j] = '.' increment y\n      if c[v + 1][j] = '#' increment x\n      if c[v + 1][j] = '.' increment y\n    \n    if x > y or y is greater than x\n      print \"YES\"\n      \n    \n    set x to 0\n    set y to 0\n    increase z by one\n    if z = 3\n      increase v by one\n      set z to 0\n    \n    if v = 3, break the loop\n  \n  print \"NO\"\n\n",
        "int main() {\n  char c[4][4];\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) { cin >> c[i][j]; }\n  }\n  int x = 0, y = 0, z = 0, v = 0;\n  while (true) {\n    for (int j = z; j < z + 2; j++) {\n      if (c[v][j] == '#') x++;\n      if (c[v][j] == '.') y++;\n      if (c[v + 1][j] == '#') x++;\n      if (c[v + 1][j] == '.') y++;\n    }\n    if (x > y || y > x) {\n      cout << \"YES\" << endl;\n      return 0;\n    }\n    x = 0;\n    y = 0;\n    z++;\n    if (z == 3) {\n      v++;\n      z = 0;\n    }\n    if (v == 3) { break; }\n  }\n  cout << \"NO\" << endl;\n}\n"
    ],
    [
        "create 2d boolean array a with size 4 by 4\ndeclare f with no arguments, returning boolean\n  for i = 0 to 3 exclusive\n    for j = 0 to 3 exclusive\n      create boolean bol with bol = a[i][j]\n      if a[i+1][j] is bol and a[i+1][j+1] is bol and a[i][j+1] is bol, return true from function\n    \n  \n  return false from function\n\n\n  create character h\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive\n      set h to read character\n      if h is '#'\n        set a[i][j] to true\n      else\n        set a[i][j] to false\n    \n    set h to read character\n  \n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive\n      set a[i][j] to false if a[i][j] is true, else true\n      if result of run f is true\n        print \"YES\" print newline\n        \n      \n      set a[i][j] to false if a[i][j] is true, else true\n    \n  \n  print \"NO\" print newline\n  \n\n",
        "bool a[4][4];\nbool f() {\n  for (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n      bool bol = a[i][j];\n      if (a[i + 1][j] == bol && a[i + 1][j + 1] == bol && a[i][j + 1] == bol) { return true; }\n    }\n  }\n  return false;\n}\nint main() {\n  char h;\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) {\n      h = getchar();\n      if (h == '#')\n        a[i][j] = true;\n      else\n        a[i][j] = false;\n    }\n    h = getchar();\n  }\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) {\n      a[i][j] = (a[i][j] == true ? false : true);\n      if (f() == true) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n      a[i][j] = (a[i][j] == true ? false : true);\n    }\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string vector vs initialized with 4\n  for i = 0 to 4 exclusive, read vs[i]\n  create boolean pass with pass = false\n  for top = 0 to top is less than or equal to 2 and not pass, incrementing top\n    for left = 0 to 2 inclusive\n      create integer dot with dot = 0\n      for r = 0 to 2 exclusive\n        for c = 0 to 2 exclusive\n          if vs[top+r][left+c] is '.', increment dot by 1\n        \n      \n      if dot is not 2\n        set pass to true\n        break loop\n      \n    \n  \n  print \"YES\" if pass is true, else \"NO\", print newline\n  \n\n",
        "int main() {\n  vector<string> vs(4);\n  for (size_t i = 0; i < 4; ++i) { cin >> vs[i]; }\n  bool pass = false;\n  for (size_t top = 0; top <= 2 && !pass; ++top) {\n    for (size_t left = 0; left <= 2; ++left) {\n      int dot = 0;\n      for (size_t r = 0; r < 2; ++r) {\n        for (size_t c = 0; c < 2; ++c) {\n          if (vs[top + r][left + c] == '.') { dot += 1; }\n        }\n      }\n      if (dot != 2) {\n        pass = true;\n        break;\n      }\n    }\n  }\n  cout << (pass ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
    ],
    [
        "declare compute\n  create 2d character array a with size 4 by 4\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive, read a[i][j]\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive\n      if j is less than or equal to 2 and i is less than or equal to 2\n        create integers hutch, dots with hutch = 0, dots = 0\n        for k = 0 to 2 exclusive\n          for l = 0 to 2 exclusive\n            if a[i + k][j + l] is '#'\n              increment hutch\n            else\n              increment dots\n        \n        if hutch is greater than or equal to 3 or dots is greater than or equal to 3\n          print \"YES\\n\"\n          return from function\n        \n      \n    \n  \n  print \"NO\\n\"\n\n\n  run compute\n  \n\n",
        "void compute() {\n  char a[4][4];\n  for (int i = 0; i < 4; i++)\n    for (int j = 0; j < 4; j++) cin >> a[i][j];\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) {\n      if (j <= 2 && i <= 2) {\n        int hutch = 0, dots = 0;\n        for (int k = 0; k < 2; k++) {\n          for (int l = 0; l < 2; l++)\n            if (a[i + k][j + l] == '#')\n              ++hutch;\n            else\n              ++dots;\n        }\n        if (hutch >= 3 || dots >= 3) {\n          cout << \"YES\\n\";\n          return;\n        }\n      }\n    }\n  }\n  cout << \"NO\\n\";\n}\nint main() {\n  compute();\n  return 0;\n}\n"
    ],
    [
        "\n  let s = array of strings of length 5\n  for (i = 0 to 4 exclusive), read ith element of array s\n  for ( x = 1 to 4 exclusive )\n    for ( y = 1 to 4 exclusive )\n      let cnt be a integer with value assigned as 0\n      for i=0 to 2 (exclusive)\n        for j=0 to 2 (exclusive)\n          if (s[x - i][y - j] is not equal to s[x][y]), increase cnt value by 1\n      check if (cnt power 2), then return print YES and newline\n    \n  print NO and newline\n  \n\n",
        "int main() {\n  string s[5];\n  for (int i = 0; i < 4; i++) cin >> s[i];\n  for (int x = 1; x < 4; x++)\n    for (int y = 1; y < 4; y++) {\n      int cnt = 0;\n      for (int i = 0; i < 2; i++)\n        for (int j = 0; j < 2; j++)\n          if (s[x - i][y - j] != s[x][y]) cnt++;\n      if (cnt ^ 2) return cout << \"YES\\n\", 0;\n    }\n  cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "create constant long long mod with mod = 10e9 + 7\ncreate constant double eps with eps = 1e-11\ncreate constant double PI with PI = 2 * acosign of 0.0\n\n  create 2d character array arr of size 4 by 4\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive, read arr[i][j]\n  \n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive\n      if arr[i][j] is '.' or arr[i][j] is '#'\n        if arr[i][j-1] is '#' and j - 1 is greater than or eqaul to 0\n          if arr[i-1][j] is '#' and i - 1 is greater than or equal to 0\n            if arr[i-1][j-1] is '#' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j+1] is '#' and j + 1 is less than 4\n          if arr[i-1][j] is '#' and i - 1 is greater than or equal to 0\n            if arr[i-1][j+1] is '#' and j+1 is less than 4 and i - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j-1] is '#' and j - 1 is greater than or equal to 0\n          if arr[i+1][j] is '#' and i + 1 is less than 4\n            if arr[i+1][j-1] is '#' and i + 1 is less than 4 and j - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j+1] is '#' and j + 1 is less than 4\n          if arr[i+1][j] is '#' and i + 1 is less than 4\n            if arr[i+1][j+1] is '#' and i + 1 is less than 4 and j + 1 is less than 4\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j-1] is '.' and j - 1 is greater than or equal to 0\n          if arr[i-1][j] is '.' and i - 1 is greater than or equal to 0\n            if arr[i-1][j-1] is '.' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j+1] is '.' and j + 1 is less than 4\n          if arr[i-1][j] is '.' and i -1 is greater than or equal to 0\n            if arr[i-1][j+1] is '.' and i - 1 is greater than or equal to 0 and j + 1 is less than 4\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j-1] is '.' and j - 1 is greater than or equal to 0\n          if arr[i+1][j] is '.' and i + 1 is less than 4\n            if arr[i+1][j-1] is '.' and i + 1 is less than 4 and j - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j+1] is '.' and j + 1 is less than 4\n          if arr[i+4][j] is '.' and i + 1 is less than 4\n            if arr[i+1][j+1] is '.' and i + 1 is less than 4 and j + 1 is less than 4\n              print \"YES\"\n              \n            \n          \n        \n      \n    \n  \n  print \"NO\"\n\n",
        "const long long mod = 10e9 + 7;\nconst double eps = 1e-11;\nconst double PI = 2 * acos(0.0);\nint main() {\n  char arr[4][4];\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) { cin >> arr[i][j]; }\n  }\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) {\n      if (arr[i][j] == '.' or arr[i][j] == '#') {\n        if (arr[i][j - 1] == '#' and j - 1 >= 0) {\n          if (arr[i - 1][j] == '#' and i - 1 >= 0) {\n            if (arr[i - 1][j - 1] == '#' and i - 1 >= 0 and j - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j + 1] == '#' and j + 1 < 4) {\n          if (arr[i - 1][j] == '#' and i - 1 >= 0) {\n            if (arr[i - 1][j + 1] == '#' and j + 1 < 4 and i - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j - 1] == '#' and j - 1 >= 0) {\n          if (arr[i + 1][j] == '#' and i + 1 < 4) {\n            if (arr[i + 1][j - 1] == '#' and i + 1 < 4 and j - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j + 1] == '#' and j + 1 < 4) {\n          if (arr[i + 1][j] == '#' and i + 1 < 4) {\n            if (arr[i + 1][j + 1] == '#' and i + 1 < 4 and j + 1 < 4) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j - 1] == '.' and j - 1 >= 0) {\n          if (arr[i - 1][j] == '.' and i - 1 >= 0) {\n            if (arr[i - 1][j - 1] == '.' and i - 1 >= 0 and j - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j + 1] == '.' and j + 1 < 4) {\n          if (arr[i - 1][j] == '.' and i - 1 >= 0) {\n            if (arr[i - 1][j + 1] == '.' and i - 1 >= 0 and j + 1 < 4) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j - 1] == '.' and j - 1 >= 0) {\n          if (arr[i + 1][j] == '.' and i + 1 < 4) {\n            if (arr[i + 1][j - 1] == '.' and i + 1 < 4 and j - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j + 1] == '.' and j + 1 < 4) {\n          if (arr[i + 1][j] == '.' and i + 1 < 4) {\n            if (arr[i + 1][j + 1] == '.' and i + 1 < 4 and j + 1 < 4) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n      }\n    }\n  }\n  puts(\"NO\");\n}\n"
    ],
    [
        "\n  let grid = array of strings of length 4\n  read the 0th element of grid, 1st element of grid,2nd element of grid and 3rd element of grid\n  boolean found is equal to false\n  for i= 0 to 3 exclusive\n    for j= 0 to 3 exclusive\n      let the integers c1, c2 are assigned as c1 is equal to 0 and c2 is equal to 0 respectively\n      for (int i1 = i to i+1 inclusive)\n        for (int j1 = j to j+1 inclusive)\n          if ( the 2d array grid[i1][j1] is equal to .)\n            increase c1 by 1\n          else do the following\n            increase c2 by 1\n        \n      \n      if (c1 is not equal to 2), found is equal to true\n    \n  \n  print YES if found else print NO\n  \n\n",
        "int main() {\n  string grid[4];\n  cin >> grid[0] >> grid[1] >> grid[2] >> grid[3];\n  bool found = false;\n  for (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n      int c1 = 0, c2 = 0;\n      for (int i1 = i; i1 <= i + 1; i1++) {\n        for (int j1 = j; j1 <= j + 1; j1++) {\n          if (grid[i1][j1] == '.')\n            c1++;\n          else\n            c2++;\n        }\n      }\n      if (c1 != 2) { found = true; }\n    }\n  }\n  cout << (found ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
    ],
    [
        "declare character array a with size 6 by 6\nint function nCount with integer arguments x and y and character argument c\n  create integer res = 0\n  increment res if a[x + 1][y] = c\n  increment res if a[x][y + 1] = c\n  increment res if a[x + 1][y + 1] = c\n  return res\n\n\n  declare character z\n  for integer i = 1 to 4 inclusive\n    for integer j = 1 to 4 inclusive\n      read z\n      a[i][j] = z\n    \n  \n  for i = 1 to 4 inclusive\n    for j = 1 to 4 inclusive\n      if a[i][j] = '#'\n        if nCount(i, j, '#') >= 2 || nCount(i, j, '.') >= 3\n          print \"YES\"\n          \n        \n      else\n        if nCount(i, j, '.') >= 2 || nCount(i, j, '#') >= 3\n          print \"YES\"\n          \n        \n      \n    \n  \n  print \"NO\"\n  \n\n",
        "char a[6][6];\nint nCount(int x, int y, char c) {\n  int res = 0;\n  if (a[x + 1][y] == c) { res++; }\n  if (a[x][y + 1] == c) { res++; }\n  if (a[x + 1][y + 1] == c) { res++; }\n  return res;\n}\nint main() {\n  char z;\n  for (int i = 1; i <= 4; i++) {\n    for (int j = 1; j <= 4; j++) {\n      cin >> z;\n      a[i][j] = z;\n    }\n  }\n  for (int i = 1; i <= 4; i++) {\n    for (int j = 1; j <= 4; j++) {\n      if (a[i][j] == '#') {\n        if (nCount(i, j, '#') >= 2 || nCount(i, j, '.') >= 3) {\n          cout << \"YES\" << endl;\n          return 0;\n        }\n      } else {\n        if (nCount(i, j, '.') >= 2 || nCount(i, j, '#') >= 3) {\n          cout << \"YES\" << endl;\n          return 0;\n        }\n      }\n    }\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create character array m with 4 by 4 elements\nfunction check with integer arguments i and j that returns boolean\n  declare integers cnt and cnt2 = 0\n  for k = i to i + 2 exclusive\n    for d = j to j + 2 exclusive\n      if m[k][d] is '#'\n        increment cnt\n      else\n        increment cnt2\n    \n  \n  return true if cnt = 3 || cnt = 4 || cnt2 = 3 || cnt2 = 4\n  return false\n\n\n  for integer i = 0 to 4 exclusive\n    declare string variable s\n    read s\n    for integer j = 0 to 4 exclusive, set m[i][j] to s[j]\n  \n  declare boolean variable sol = false\n  for integer i = 0 to 3 exclusive\n    for j = 0 to 3 exclusive\n      if check(i, j) is true, set sol to true\n    \n  \n  if sol is true\n    print \"YES\\n\"\n  else\n    print \"NO\\n\"\n  \n  \n\n",
        "char m[4][4];\nbool check(int i, int j) {\n  int cnt = 0, cnt2 = 0;\n  for (int k = i; k < i + 2; k++) {\n    for (int d = j; d < j + 2; d++) {\n      if (m[k][d] == '#')\n        ++cnt;\n      else\n        ++cnt2;\n    }\n  }\n  if (cnt == 3 || cnt == 4 || cnt2 == 3 || cnt2 == 4) return true;\n  return false;\n}\nint main() {\n  for (int i = 0; i < 4; i++) {\n    string s;\n    cin >> s;\n    for (int j = 0; j < 4; j++) { m[i][j] = s[j]; }\n  }\n  bool sol = false;\n  for (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n      if (check(i, j)) sol = true;\n    }\n  }\n  if (sol) {\n    cout << \"YES\\n\";\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "num = array of 225 integers\n\n  n, m, i, j, k = integers\n  read n and k\n  set a index of num to k\n  for i = 1 to k exclusive increment num['a' + i]\n  if k > n\n    print -1\n  else if n is 1\n    print a\n  else if k is 1 and n > 1\n    print -1\n  else\n    set f to 1\n    for i = 1 to n - (k - 2) inclusive\n      if i modulo 2\n        print a\n      else\n        print b\n    \n    for i = 1 to k - 2 inclusive print (char)('b' + i)\n    print a new line\n  \n  \n\n",
        "int num[225];\nint main() {\n  int n, m, i, j, k;\n  cin >> n >> k;\n  num['a'] = k;\n  for (i = 1; i < k; i++) num['a' + i]++;\n  if (k > n)\n    cout << -1 << endl;\n  else if (n == 1)\n    cout << 'a' << endl;\n  else if (k == 1 && n > 1) {\n    cout << -1 << endl;\n  } else {\n    int f = 1;\n    for (i = 1; i <= n - (k - 2); i++) {\n      if (i % 2)\n        cout << 'a';\n      else\n        cout << 'b';\n    }\n    for (i = 1; i <= k - 2; i++) { cout << (char)('b' + i); }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, k, sig with sig = 0\n  create string s\n  read n read k\n  if k is 1 and n is greater than 1\n    print \"-1\\n\"\n  else if k is greater than n\n    print \"-1\\n\"\n  else if n is 1 and k is 1\n    print \"a\\n\"\n  else\n    create integers i, j with j = n - k + 1\n    if ( j bitwise and 1 ) is 0, decrement j, set sig to 1\n    for i = 0 to j inclusive, increment i by 2, increment s by \"ab\"\n    if sig is true, increment s by \"a\", set a to j + 2\n    create character c with c = 'b'\n    for i is less than n, incrementing i, increment s by character casted ( c + 1 ), set c to s[i]\n    print s print newline\n  \n  \n\n",
        "int main() {\n  int n, k, sig = 0;\n  string s;\n  cin >> n >> k;\n  if (k == 1 && n > 1)\n    cout << \"-1\\n\";\n  else if (k > n)\n    cout << \"-1\\n\";\n  else if (n == 1 && k == 1)\n    cout << \"a\\n\";\n  else {\n    int i, j = n - k + 1;\n    if ((j & 1) == 0) { j--, sig = 1; }\n    for (i = 0; i <= j; i += 2) s += \"ab\";\n    if (sig) { s += \"a\", i = j + 2; }\n    char c = 'b';\n    for (; i < n; i++) s += (char)(c + 1), c = s[i];\n    cout << s << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n and k\n  read n and k\n  if n < k or (k = 1 and n != 1)\n    print -1\n  else if k = 1 and n = 1\n    print 'a'\n  else\n    for i = 1 to n - (k - 2) inclusive\n      if i & 1\n        print 'a'\n      else\n        print 'b'\n    \n    declare integer variable x = n - (k - 2)\n    declare character ch = 'c'\n    for i = 1 to k - 2 inclusive print ch and increment it\n    print new line\n  \n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  if (n < k || (k == 1 && n != 1))\n    cout << -1 << endl;\n  else if (k == 1 && n == 1)\n    cout << 'a' << endl;\n  else {\n    for (int i = 1; i <= n - (k - 2); i++) {\n      if (i & 1)\n        cout << 'a';\n      else\n        cout << 'b';\n    }\n    int x = n - (k - 2);\n    char ch = 'c';\n    for (int i = 1; i <= k - 2; i++) { cout << ch++; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create n, k and zzz\n  read n, k\n  if n<k or k=1 and n is different from 1\n    print -1\n  else if k=1 and n=1\n    print a and a new line\n  else\n    for i=1 to n - k -2 inclusive\n      if i is odd\n        print a\n      els\n        print b and a new line\n    \n    set x to n - k - 2\n    assign c to ch\n    for i=1 to k inclusive, print increment ch\n    print a new line\n  \n  \n\n",
        "int main() {\n  int n, k, zzz;\n  cin >> n >> k;\n  if (n < k || (k == 1 && n != 1))\n    cout << -1 << endl;\n  else if (k == 1 && n == 1)\n    cout << 'a' << endl;\n  else {\n    for (int i = 1; i <= n - (k - 2); i++) {\n      if (i & 1)\n        cout << 'a';\n      else\n        cout << 'b';\n    }\n    int x = n - (k - 2);\n    char ch = 'c';\n    for (int i = 1; i <= k - 2; i++) { cout << ch++; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare long long variables n and k\n  read n and k\n  if k > n || (k = 1 && n > 1)\n    print -1\n  else if k = 1\n    print 'a'\n  else\n    declare long long x = n - (k - 2)\n    declare string str = \" \"\n    declare long long variable i = 0\n    while i is less than x\n      if i is even\n        append \"a\" to str\n      else\n        append \"b\" to str\n      increase i\n    \n    for long long i = 2 to k exclusive\n      declare character ch = (i + 'a')\n      append ch to str\n    \n    print str\n  \n  \n\n",
        "int main() {\n  long long n, k;\n  cin >> n >> k;\n  if (k > n || (k == 1 && n > 1))\n    cout << -1 << endl;\n  else if (k == 1) {\n    cout << 'a' << endl;\n  } else {\n    long long x = n - (k - 2);\n    string str = \"\";\n    long long i = 0;\n    while (i < x) {\n      if (i % 2 == 0)\n        str += \"a\";\n      else\n        str += \"b\";\n      i++;\n    }\n    for (long long i = 2; i < k; i++) {\n      char ch = (i + 'a');\n      str += ch;\n    }\n    cout << str << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let n, k be ints\n\n  read n, k\n  if k is less than n do the following\n    print -1 and one newline\n    \n  \n  if ke equals 1 do the following\n    if n equals 1 do the following\n      print a and one newline\n    else\n      print -1 and one newline\n    \n  \n  if k equals 2 do the following\n    for int = 0 to n exclusive print char('a' + (i & 1))\n    print one newline\n    \n  \n  for i = 0 to n - k + 2 exclusive print char('a' + (i & 1))\n  for i = 0 to k - 2 exclusive print char('c' + i)\n  print one newline\n\n",
        "int n, k;\nint main() {\n  cin >> n >> k;\n  if (k > n) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (k == 1) {\n    if (n == 1)\n      cout << 'a' << endl;\n    else\n      cout << -1 << endl;\n    return 0;\n  }\n  if (k == 2) {\n    for (int i = 0; i < n; i++) { cout << char('a' + (i & 1)); }\n    cout << endl;\n    return 0;\n  }\n  for (int i = 0; i < n - k + 2; i++) { cout << char('a' + (i & 1)); }\n  for (int i = 0; i < k - 2; i++) { cout << char('c' + i); }\n  cout << endl;\n}\n"
    ],
    [
        "\n  declare integer variables i, j, k, l, n and m\n  read n and m\n  k = m\n  if n < m or (m = 1 and n is greater than 1)\n    print -1\n    \n  \n  create a map from integers to characters called mm\n  create character h = 'a'\n  for i = 0 to 26 exclusive\n    set value of mm[i] to h\n    increase h by one\n  \n  declare string variable st = \" \"\n  if n = m\n    for i = 0 to n exclusive, apped mm[i] to st\n    print st\n    \n  \n  for i = 0 to n - (m - 2) exclusive\n    if i is even\n      append mm[0] to st\n    else\n      append mm[1] to st\n  \n  for i = 0 to m - 2 exclusive, append mm[i + 2] to st\n  print st\n  \n\n",
        "int main() {\n  int i, j, k, l, n, m;\n  cin >> n >> m;\n  k = m;\n  if (n < m || (m == 1 && n > 1)) {\n    cout << -1 << endl;\n    return 0;\n  }\n  map<int, char> mm;\n  char h = 'a';\n  for (i = 0; i < 26; i++) {\n    mm[i] = h;\n    h++;\n  }\n  string st = \"\";\n  if (n == m) {\n    for (i = 0; i < n; i++) { st += mm[i]; }\n    cout << st << endl;\n    return 0;\n  }\n  for (i = 0; i < n - (m - 2); i++) {\n    if (i % 2 == 0)\n      st += mm[0];\n    else\n      st += mm[1];\n  }\n  for (i = 0; i < m - 2; i++) { st += mm[i + 2]; }\n  cout << st << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers a and b\n  while read a and b\n    declare integer i\n    if a = 1\n      if b is greater than 1\n        print \"-1\"\n      else\n        print \"a\"\n      \n    else\n      declare character variable q = 'c'\n      declare integer pl = 0\n      if b > a or (b = 1 and a > 1)\n        print \"-1\"\n      else\n        for i = 0 to a - (b - 2) exclusive\n          if pl is even\n            increase pl by one\n            print 'a'\n          else\n            increment pl\n            print 'b'\n          \n        \n        for i = 0 to b - 2 exclusive\n        print new line\n      \n    \n  \n  \n\n",
        "int main() {\n  int a, b;\n  while (cin >> a >> b) {\n    int i;\n    if (a == 1) {\n      if (b > 1) {\n        cout << \"-1\" << endl;\n      } else {\n        cout << 'a' << endl;\n      }\n    } else {\n      char q = 'c';\n      int pl = 0;\n      if (b > a || (b == 1 && a > 1)) {\n        cout << \"-1\" << endl;\n      } else {\n        for (i = 0; i < a - (b - 2); i++) {\n          if (pl % 2 == 0) {\n            pl++;\n            cout << 'a';\n          } else {\n            pl++;\n            cout << 'b';\n          }\n        }\n        for (i = 0; i < b - 2; i++) { cout << q++; }\n        cout << endl;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let s, s1 be strings\n  let n,k be integers\n  read n,k\n  if (k is greater than n or (k is equal to 1 and n is greater than 1)) , and print -1 and endline , return 0\n  if (k is equal to 1) print a and endline, return 0\n  for( i=1 to k - 2 inclusive), s is equal to s + b + i\n  for( i=1 to n- k +2 inclusive), s1 = s1 + (if i modulus 2 ) ? a else b\n  print s1 and s and newline\n\n",
        "int main() {\n  string s, s1;\n  int n, k;\n  cin >> n >> k;\n  if (k > n || (k == 1 && n > 1)) return cout << \"-1\" << endl, 0;\n  if (k == 1) return cout << \"a\" << endl, 0;\n  for (int i = 1; i <= k - 2; i++) s += 'b' + i;\n  for (int i = 1; i <= n - k + 2; i++) s1 += i % 2 ? 'a' : 'b';\n  cout << s1 << s << endl;\n}\n"
    ],
    [
        "let xx be a char array of length 1000002\n\n  n, k = integers\n  while n and k are read\n    if n is equal to or greater than 2 and k is less than 2, or n is less than k\n      print -1 and a new line\n    otherwise\n      set integer a equal to k - 2\n      set t = 0\n      set all contents of xx to 0\n      for i = 0 to n exclusive\n        if i is less than n - (k - 2)\n          if i modulo 2 equal to 0\n            set xx[i] = a\n          otherwise\n            set xx[i] equal to b\n        otherwise\n          if i is less than n\n            set xx[i] = 99 + t\n            increment t\n          \n        \n      \n      print xx and a new line\n    \n  \n  \n\n",
        "char xx[1000002];\nint main() {\n  int n, k;\n  while (cin >> n >> k) {\n    if (n < k || (n >= 2 && k < 2))\n      cout << \"-1\" << endl;\n    else {\n      int a = k - 2;\n      int t = 0;\n      memset(xx, 0, sizeof(xx));\n      for (int i = 0; i < n; i++) {\n        if (i < n - (k - 2)) {\n          if (i % 2 == 0)\n            xx[i] = 'a';\n          else\n            xx[i] = 'b';\n        } else {\n          if (i < n) {\n            xx[i] = 99 + t;\n            t++;\n          }\n        }\n      }\n      cout << xx << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n and k\n  read n, k\n  if n<k or k equal to 1 and n different from 1\n    print -1\n  otherwise\n    if n equal to or greater than 2\n      for i=1 to n inclusive\n        if 1 modulo 2 equal to 0\n          print b\n        other\n          print a\n      if n-k mod 2 = 0\n        print ab\n        for i=3 to k inclusive, print i + a - 1\n      else\n        print ba\n        for i = 3 to k inclusive, print i + a - 1\n      \n      print a new line\n    otherwise\n      print a and a new line\n  \n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  if (n < k || (k == 1 && n != 1))\n    cout << -1 << endl;\n  else {\n    if (n >= 2) {\n      for (int i = 1; i <= n - k; i++)\n        if (i % 2 == 0)\n          cout << \"b\";\n        else\n          cout << \"a\";\n      if ((n - k) % 2 == 0) {\n        cout << \"ab\";\n        for (int i = 3; i <= k; i++) cout << char(i + 'a' - 1);\n      } else {\n        cout << \"ba\";\n        for (int i = 3; i <= k; i++) cout << char(i + 'a' - 1);\n      }\n      cout << endl;\n    } else\n      cout << \"a\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let b, d, sum, i, n , resh, ans1, ans2, ans3, ans4, j and k be long longs and a be long long array with length 10001\ncreate strings s and s1\ncreate char array c with length 10001\n\n  read n and k\n  if (n is smaller than k) or (k is equal to 1 and n is greater than 1) return 0 and print -1\n  if n is equal to 1 return 0 and print a and newline\n  for i=0 to (n - (k - 2)) / 2 exclusive print \"ab\"\n  if (n - (k - 2) mod 2) print \"a\"\n  for i=0 to k-2 exclusive print char(i + 'c')\n  print newline\n  \n\n",
        "long long a[10001], b, d, sum, i, n, resh, ans1, ans2, ans3, ans4, j, k;\nstring s, s1;\nchar c[10001];\nint main() {\n  cin >> n >> k;\n  if (n < k or (k == 1 and n > 1)) return cout << -1 << \"\\n\", 0;\n  if (n == 1) return cout << \"a\\n\", 0;\n  for (int i = 0; i < (n - (k - 2)) / 2; ++i) cout << \"ab\";\n  if ((n - (k - 2)) % 2) cout << \"a\";\n  for (int i = 0; i < k - 2; ++i) cout << char(i + 'c');\n  cout << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create character array ab with size 2, with ab = {'a', 'b'}\n\n  create integers n, k\n  read n read k\n  if ( k is 1 and n is not 1 ) or ( k is greater than n )\n    print -1 print newline\n    \n  \n  create integer frst with frst = n - k + 2\n  create boolean flag with flag = 0\n  create integer i with i = 0\n  for i is less than frst and i is less than n, incrementing i\n    print ab[flag]\n    set flag to ( not flag bitwise and 1 )\n  \n  create character c with c = 'c'\n  for i is less than n, incrementing i\n    print c\n    increment c\n  \n  print newline\n  \n\n",
        "char ab[2] = {'a', 'b'};\nint main() {\n  int n, k;\n  cin >> n >> k;\n  if ((k == 1 && n != 1) || (k > n)) {\n    cout << -1 << endl;\n    return 0;\n  }\n  int frst = n - k + 2;\n  bool flag = 0;\n  int i = 0;\n  for (; i < frst && i < n; i++) {\n    cout << ab[flag];\n    flag = (!flag & 1);\n  }\n  char c = 'c';\n  for (; i < n; i++) {\n    cout << c;\n    c++;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers n and k\n\n  read n and k\n  if n * (n - 1) / 2 <= k\n    print \"no solution\\n\"\n  else\n    print \"0 \", n and \"\\n\n\n",
        "int n, k;\nint main() {\n  cin >> n >> k;\n  if (n * (n - 1) / 2 <= k) {\n    cout << \"no solution\\n\";\n  } else\n    for (; n--;) cout << \"0 \" << n << \"\\n\";\n}\n"
    ],
    [
        "\n  declare integers n and k\n  while reading n and k\n    create long long temp = 0\n    declare long long variable a\n    declare integer j = 1\n    for i = 1 to n inclusive\n      read a\n      if temp - (i - 1) * (n - i) * a is less than k\n        print j\n        decrease i and n\n      else\n        increase temp by (i - 1) * a\n      increase j\n    \n  \n  \n\n",
        "int main() {\n  int n, k;\n  while (cin >> n >> k) {\n    long long temp = 0;\n    long long a;\n    int j = 1;\n    for (int i = 1; i <= n; i++) {\n      cin >> a;\n      if (temp - (i - 1) * (n - i) * a < k) {\n        cout << j << endl;\n        i--, n--;\n      } else\n        temp += (i - 1) * a;\n      j++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integers n, i, k, x, b, with x = 1 to b = 0\n  read n read k\n  create long long integer array a with size n\n  for i = 0 to n exclusive, read a[i]\n  for i = 1 to n exclusive\n    if b - x * a[i] * ( n - i - 1 ) is less than k\n      print i + 1 print newline\n    else\n      increment by by x * a[i]\n      increment x\n    \n  \n  \n\n",
        "int main() {\n  long long int n, i, k, x = 1, b = 0;\n  cin >> n >> k;\n  long long int a[n];\n  for (i = 0; i < n; i++) cin >> a[i];\n  for (i = 1; i < n; i++) {\n    if (b - x * a[i] * (n - i - 1) < k)\n      cout << i + 1 << endl;\n    else {\n      b += x * a[i];\n      x++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, k\n  read n readk\n  create long long sum with sum = 0\n  create long long pos with pos = 1\n  for i = 1 to n inclusive\n    create long long x\n    read x\n    create long long d with d = sum - ( pos - 1 ) * ( n - i ) * x\n    if d is less than k\n      print i print '\\n'\n    else\n      increment sum by x * (pos-1)\n      increment pos\n    \n  \n  \n\n",
        "int main() {\n  long long n, k;\n  cin >> n >> k;\n  long long sum = 0;\n  long long pos = 1;\n  for (long long i = 1; i <= n; i++) {\n    long long x;\n    cin >> x;\n    long long d = sum - (pos - 1) * (n - i) * x;\n    if (d < k)\n      cout << i << '\\n';\n    else {\n      sum += x * (pos - 1);\n      pos++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, k, sum, cur with sum = 0, cur = 0\n  read n read k\n  for i = 1 to n inclusive\n    create integer a\n    read a\n    if i is greater than 1 and sum - (i-cur-1)*(n-1)*a is less than k\n      print i print newline\n      increment cur\n    else\n      increment sum by a * (i - cur - 1)\n  \n\n",
        "int main() {\n  long long n, k, sum = 0, cur = 0;\n  cin >> n >> k;\n  for (long long i = 1; i <= n; i++) {\n    int a;\n    cin >> a;\n    if (i > 1 && sum - (i - cur - 1) * (n - i) * a < k) {\n      cout << i << endl;\n      cur++;\n    } else\n      sum += a * (i - cur - 1);\n  }\n}\n"
    ],
    [
        "\n  let n,k be integers\n  while ( read the values of n and k )\n    let temp be a long integer with value as 0\n    let a be a long integer\n    let j be a integer with value as 1\n    for integer i = 1 to n inclusive\n      read a\n      if (temp - (i - 1) * (n - i) * a is less than k)\n        print j and newline\n        decrease the value of i by 1, decrease the value of n by 1\n      else do the following\n        temp is equal to temp + (i - 1) * a\n      increase j value by 1\n    \n  \n  \n\n",
        "int main() {\n  int n, k;\n  while (cin >> n >> k) {\n    long long temp = 0;\n    long long a;\n    int j = 1;\n    for (int i = 1; i <= n; i++) {\n      cin >> a;\n      if (temp - (i - 1) * (n - i) * a < k) {\n        cout << j << endl;\n        i--, n--;\n      } else\n        temp += (i - 1) * a;\n      j++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integer T with T = 1\n  while decrement T is true\n    create integers n, k\n    read n read k\n    create long long integer vector arr initialized with n + 1\n    set arr[0] to 0\n    for i = 0 to n exclusive, read arr[i+1]\n    create long long integer c with c = 1\n    create integer p_1 with p_1 = 1\n    create long long integers cur_d, prev_d, di, with cur_d = 0, prev_d = 0, di = 0\n    for i = 2 to n inclusive\n      set cur_d to prev_d + 1LL * arr[p_i] * (c - 1)\n      set di to cur_d - 1LL * (n - i) * (c)*arr[i]\n      if di is less than k\n        print i print '\\n'\n      else\n        increment c\n        set p_i to i\n        set prev_d to cur_d\n      \n    \n  \n  \n\n",
        "int main() {\n  int T = 1;\n  while (T--) {\n    int n, k;\n    cin >> n >> k;\n    vector<long long int> arr(n + 1);\n    arr[0] = 0;\n    for (int i = 0; i < n; i++) { cin >> arr[i + 1]; }\n    long long int c = 1;\n    int p_i = 1;\n    long long int cur_d = 0, prev_d = 0, di = 0;\n    for (int i = 2; i <= n; i++) {\n      cur_d = prev_d + 1LL * arr[p_i] * (c - 1);\n      di = cur_d - 1LL * (n - i) * (c)*arr[i];\n      if (di < k) {\n        cout << i << '\\n';\n      } else {\n        c++;\n        p_i = i;\n        prev_d = cur_d;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create long long vector v\n\n  create long longs n, k, a, s, j, p, i with s = 0, j = 2\n  read n read k\n  create long long m with m = n\n  read a\n  for i = 2 to n inclusive\n    read a\n    set p to s - (j - 1) * (m - j) * a\n    if p is less than k\n      add element i to end of v\n      set m to m - 1\n    else\n      set s to s + ( j - 1 ) * a\n      set j to j + 1\n    \n  \n  for i = 0 to size of v exclusive, print v[i] print newline\n  \n\n",
        "vector<long long> v;\nint main() {\n  long long n, k, a, s = 0, j = 2, p, i;\n  cin >> n >> k;\n  long long m = n;\n  cin >> a;\n  for (i = 2; i <= n; i++) {\n    cin >> a;\n    p = s - (j - 1) * (m - j) * a;\n    if (p < k) {\n      v.push_back(i);\n      m = m - 1;\n    } else {\n      s = s + (j - 1) * a;\n      j = j + 1;\n    }\n  }\n  for (i = 0; i < v.size(); i++) cout << v[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "create long longs n, k, a, sum and l\n\n  read n and k\n  for long long i = 1 to n inclusive\n    read a\n    if i != 1\n      if sum - (n - i) * (i - 1) * a is less than k\n        print i + l\n        decrease i\n        decrease n by one\n        increment l\n      else\n        increase sum by a * (i - 1)\n    \n  \n\n",
        "long long n, k, a, sum, l;\nint main() {\n  cin >> n >> k;\n  for (long long i = 1; i <= n; i++) {\n    cin >> a;\n    if (i != 1) {\n      if (sum - (n - i) * (i - 1) * a < k) {\n        cout << i + l << endl;\n        i--;\n        n--;\n        l++;\n      } else\n        sum += a * (i - 1);\n    }\n  }\n}\n"
    ],
    [
        "declare prn with integer pos as argument, returning void\n  print pos print \"\\n\"\n\n\n  create long longs n, k\n  read n read k\n  create long long sz with sz = n\n  create integer pos with pos = 1\n  create long long ai\n  read ai\n  create long long sum with sum = 0\n  for i = 2 to sz inclusive\n    increment pos\n    read ai\n    create long long d with d = sum - (n - pos) * (pos - 1) * ai\n    if d is less than k\n      run prn with i as argument\n      decrement pos\n      decrement n\n    else\n      increment sum by ai * ( pos - 1 )\n    \n  \n  \n\n",
        "void prn(int pos) {\n  cout << pos << \"\\n\";\n}\nint main() {\n  long long n, k;\n  cin >> n >> k;\n  long long sz = n;\n  int pos = 1;\n  long long ai;\n  cin >> ai;\n  long long sum = 0;\n  for (int i = 2; i <= sz; ++i) {\n    ++pos;\n    cin >> ai;\n    long long d = sum - (n - pos) * (pos - 1) * ai;\n    if (d < k) {\n      prn(i);\n      --pos;\n      --n;\n    } else {\n      sum += ai * (pos - 1);\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create long longs n, k, a, sum, l\n\n  read n read k\n  for i = 1 to n inclusive\n    read a\n    if i is not 1\n      if sum - ( n - 1 ) * ( i - 1 ) * a is less than k\n        print i + l print newline\n        decrement i\n        decrement n\n        increment l\n      else\n        increment sum by a * ( i - 1 )\n    \n  \n\n",
        "long long n, k, a, sum, l;\nint main() {\n  cin >> n >> k;\n  for (long long i = 1; i <= n; i++) {\n    cin >> a;\n    if (i != 1) {\n      if (sum - (n - i) * (i - 1) * a < k) {\n        cout << i + l << endl;\n        i--;\n        n--;\n        l++;\n      } else\n        sum += a * (i - 1);\n    }\n  }\n}\n"
    ],
    [
        "integer function Get\n  declare character c\n  read c from the input, then loop, while c is not a digit or '-'\n    \n  create boolean Flag = true if c = '-', or false otherwise\n  if Flag is true, read c from the input\n  create int X = 0\n  while c >= '0' && c <= '9'\n    set X to X * 10 + c - 48\n    read c from the input\n  \n  return -X if Flag if set, else return X\n\nfunction Output with int argument X\n  if X is less than 0\n    print '-'\n    invert the sign of X\n  \n  declare int Len = 0 and int array Data with size 10\n  while X is not 0\n    set Data[Len] to X % 10 and increment Len\n    divide X by 10\n  \n  if Len is false, change Data[Len] to 0 and increment Len\n  decrement Len and loop further, while Len != 0, printing Data[Len] + 48 on each iteration\n  print '\\n'\n\n\n  declare integer N = Get()\n  create long longs Sum = 0 and K = Get()\n  declare integers Top and Number = 0 and Total = N\n  for integer i = 0 to N exclusive\n    declare long long X = Get()\n    if Sum - X * Number * (Total - Number - 1) < K\n      call Output of i + 1\n      decrement Total\n    else\n      increase Sum by Number * X\n      increment Number\n    \n  \n  \n\n",
        "int Get() {\n  char c;\n  while (c = getchar(), (c < '0' || c > '9') && (c != '-'))\n    ;\n  bool Flag = (c == '-');\n  if (Flag) c = getchar();\n  int X = 0;\n  while (c >= '0' && c <= '9') {\n    X = X * 10 + c - 48;\n    c = getchar();\n  }\n  return Flag ? -X : X;\n}\nvoid Output(int X) {\n  if (X < 0) {\n    putchar('-');\n    X = -X;\n  }\n  int Len = 0, Data[10];\n  while (X) {\n    Data[Len++] = X % 10;\n    X /= 10;\n  }\n  if (!Len) Data[Len++] = 0;\n  while (Len--) putchar(Data[Len] + 48);\n  putchar('\\n');\n}\nint main() {\n  int N = Get();\n  long long K = Get(), Sum = 0;\n  int Top = 0, Total = N, Number = 0;\n  for (int i = 0; i < N; i++) {\n    long long X = Get();\n    if (Sum - X * Number * (Total - Number - 1) < K) {\n      Output(i + 1);\n      Total--;\n    } else {\n      Sum += Number * X;\n      Number++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  integers = n,a,b,c,d,w,h,x1 = 2e9,y1 = 2e9,x2 = 0,y2 = 0,area = 0\n  read n\n  if n is true do the following\n    read a,b,c,d\n    set w to c - a\n    set h to d - b\n    area equals area plus w * h\n    set x1 to min(x1, a)\n    set y1 to min(y1, b)\n    set x2 to max(x2, c)\n    set y2 to max(y2, d)\n  \n  set w to x2 - x1\n  set h to y2 - y1\n  if w= h and area = w*h print YES else NO)\n  \n\n",
        "int main() {\n  int n, a, b, c, d, w, h, x1 = 2e9, y1 = 2e9, x2 = 0, y2 = 0, area = 0;\n  cin >> n;\n  while (n--) {\n    cin >> a >> b >> c >> d;\n    w = c - a;\n    h = d - b;\n    area += w * h;\n    x1 = min(x1, a);\n    y1 = min(y1, b);\n    x2 = max(x2, c);\n    y2 = max(y2, d);\n  }\n  w = x2 - x1;\n  h = y2 - y1;\n  cout << (w == h && area == w * h ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  declare integers x0, y0, x1, y1 and a with a = 0\n  change x0 and y0 to 1e9 + 87\n  change x1 and y1 to -9e8\n  for integer i = 0 to n exclusive\n    declare ints l, b, r and u\n    read l, b, r and u\n    add (r - l) * (u - b) to a\n    change x0 to min of x0 and l\n    change x1 to max of x1 and r\n    change y0 to min of y0 and b\n    change y1 to max of y1 and u\n  \n  subtract x0 from x1\n  decrease y1 by y0\n  print \"YES\\n\" if x1 = y1 and x1 * y1 = a, or \"NO\\n\" otherwise\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x0, y0, x1, y1, a = 0;\n  x0 = y0 = 1e9 + 87;\n  x1 = y1 = -9e8;\n  for (int i = 0; i < n; ++i) {\n    int l, b, r, u;\n    cin >> l >> b >> r >> u;\n    a += (r - l) * (u - b);\n    x0 = min(x0, l);\n    x1 = max(x1, r);\n    y0 = min(y0, b);\n    y1 = max(y1, u);\n  }\n  x1 -= x0;\n  y1 -= y0;\n  cout << (x1 == y1 && x1 * y1 == a ? \"YES\\n\" : \"NO\\n\");\n}\n"
    ],
    [
        "declare integer n\n\n  read n\n  create integers xmin and ymin = 1000000000 and xmax and ymax = - 1\n  create integer act = 0\n  for i = 1 to n inclusive\n    create ints a, b, c and d\n    read a, b, c and d\n    set xmin to min of xmin and a\n    set xmin to min of xmin and c\n    set xmax to min of xmax and a\n    set xmax to max of xmax and a\n    set ymin to min of ymin and b\n    set ymin to min of ymin and d\n    set ymax to max of ymax and b\n    set ymax to max of ymax and d\n    add abs(a - c) * abs(b - d) to act\n  \n  if ymax - ymin = xmax - xmin and act = ((ymax - ymin) * (xmax - xmin))\n    print \"YES\\n\"\n  else\n    print \"NO\\n\"\n  \n\n",
        "int n;\nint main() {\n  cin >> n;\n  int xmin = 1000000000, xmax = -1, ymin = 1000000000, ymax = -1;\n  int act = 0;\n  for (int i = 1; i <= n; i++) {\n    int a, b, c, d;\n    cin >> a >> b >> c >> d;\n    xmin = min(xmin, a);\n    xmin = min(xmin, c);\n    xmax = max(xmax, a);\n    xmax = max(xmax, c);\n    ymin = min(ymin, b);\n    ymin = min(ymin, d);\n    ymax = max(ymax, b);\n    ymax = max(ymax, d);\n    act += (abs(a - c) * abs(b - d));\n  }\n  if (ymax - ymin == xmax - xmin && act == ((ymax - ymin) * (xmax - xmin)))\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  x1, y1, x2, y2 and sum are long long ints where sum = 0\n  declare long long int minmum = INT_MIN, maxmum = INT_MIN, p = INT_MAX and q = INT_MAX\n  for i = 0 to n exclusive\n    read input to x1, y1, x2 and y2\n    change maxmum to max of maxmum and max(x2 and x1)\n    change minmum to max of minmum and max(y2 and y1)\n    assign min of p and min(y2 and y1) to p\n    set q to min of q and min(x2 and x1)\n    add fabs(x2 - x1) * fabs(y2 - y1) to sum\n  \n  if sum = ((minmum - p) * (maxmum - q)) and (maxmum - q) == (minmum - p)\n    print \"YES\"\n  else\n    print \"NO\\n\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long int x1, y1, x2, y2, sum = 0;\n  long long int minmum = INT_MIN, maxmum = INT_MIN, p = INT_MAX, q = INT_MAX;\n  for (int i = 0; i < n; i++) {\n    cin >> x1 >> y1 >> x2 >> y2;\n    maxmum = max(maxmum, max(x2, x1));\n    minmum = max(minmum, max(y2, y1));\n    p = min(p, min(y2, y1));\n    q = min(q, min(x2, x1));\n    sum += fabs(x2 - x1) * fabs(y2 - y1);\n  }\n  if (sum == ((minmum - p) * (maxmum - q)) && (maxmum - q) == (minmum - p))\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  integers = i,n,x1,x2,y1,y2,mx = 99999,my = 99999,Mx = -1,My = -1,R = 0\n  read n\n  for = 0 to less than n do the following\n    read x1,y1,x2,y2\n    R equals R plus (x2 - x1) * (y2 - y1)\n    if Mx is less than x2 then do the following Mx = x2\n    if My is less than y2 then do the following My = y2\n    if mx is greater than x1 then do the following mx = x1\n    if my is greater than y1 then do the following my = y1\n  \n  if is R and Mx - mx equals My -my then do the following\n    output YES\n  else\n    output NO\n  \n\n",
        "int main() {\n  int i, n, x1, x2, y1, y2, mx = 99999, my = 99999, Mx = -1, My = -1, R = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> x1 >> y1 >> x2 >> y2;\n    R += (x2 - x1) * (y2 - y1);\n    if (Mx < x2) Mx = x2;\n    if (My < y2) My = y2;\n    if (mx > x1) mx = x1;\n    if (my > y1) my = y1;\n  }\n  if ((Mx - mx) * (My - my) == R && Mx - mx == My - my)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  S = integer array of size 10\n  while read n\n    set all contents of S to 0\n    maxx, maxy = integers with maxx = 0, maxy = 0\n    minx, miny = integers with minx = 10000000, miny = 10000000\n    C = integer with C = 0\n    x1, x2, y1, y2 = integers\n    for i = 1 to n\n      read x1, x2, y1, y2\n      S[i] = (x2 - x1) * (y2 - y1)\n      C = C + S[i]\n      if x1 < minx, minx = x1\n      if x2 > maxx, maxx = x2\n      if y1 < miny, miny = y1\n      if y2 > maxy, maxy = y2\n    \n    if C is (maxx - minx) * (maxy - miny) and (maxx - minx) is (maxy - miny)\n      print YES\n    else\n      print NO\n  \n  \n\n",
        "int main() {\n  int n;\n  int S[10];\n  while (cin >> n) {\n    memset(S, 0, sizeof(S));\n    int maxx = 0, maxy = 0;\n    int minx = 10000000, miny = 10000000;\n    int C = 0;\n    int x1, x2, y1, y2;\n    for (int i = 1; i <= n; ++i) {\n      cin >> x1 >> y1 >> x2 >> y2;\n      S[i] = (x2 - x1) * (y2 - y1);\n      C += S[i];\n      if (x1 < minx) minx = x1;\n      if (x2 > maxx) maxx = x2;\n      if (y1 < miny) miny = y1;\n      if (y2 > maxy) maxy = y2;\n    }\n    if (C == (maxx - minx) * (maxy - miny) && (maxx - minx) == (maxy - miny))\n      cout << \"YES\" << endl;\n    else\n      cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  change output format flag to ios::fixed\n  change output precision to 20\n  declare ints n, x1, y1, x2 and y2\n  declare int variables xl and yl = 2139062143 and xr and yr = -2139062143\n  read input to n\n  declare long long area = 0\n  loop, decrementing n, while it is not 0\n    read x1, y1, x2 and y2\n    set xl to min of xl and x1\n    change xr to xr if xr > x2, else to x2\n    set yl to min of yl and y1\n    change yr to yr if yr > y2, else to y2\n    add 1LL * (x2 - x1) * (y2 - y1) to area\n  \n  if xr - xl = yr - yl and area = 1LL * (xr - xl) * (yr - yl)\n    print \"YES\" to stdout\n  else\n    print \"NO\" to stdout\n  \n\n",
        "int main() {\n  cout.setf(ios::fixed);\n  cout.precision(20);\n  int n, x1, y1, x2, y2;\n  int xl = 2139062143, xr = -2139062143, yl = 2139062143, yr = -2139062143;\n  cin >> n;\n  long long area = 0;\n  while (n--) {\n    cin >> x1 >> y1 >> x2 >> y2;\n    xl = min(xl, x1);\n    xr = (xr > x2 ? xr : x2);\n    yl = min(yl, y1);\n    yr = (yr > y2 ? yr : y2);\n    area += 1LL * (x2 - x1) * (y2 - y1);\n  }\n  if (xr - xl == yr - yl && area == 1LL * (xr - xl) * (yr - yl))\n    puts(\"YES\");\n  else\n    puts(\"NO\");\n  return 0;\n}\n"
    ],
    [
        "\n  let n be a integer\n  read n\n  create ints x0, y0, x1, y1, a with a = 0\n  set x0 and y0 to 1e9 + 87\n  assign -9e8 to y1 and x1\n  for n iterations\n    create integers l, b, r, u\n    read l, b, r and u\n    add a to (r - l) * (u - b) and assign the result to a\n    set x0 to min(x0, l)\n    assign the greater of x1 and r to x1\n    set y0 to min(y0, b)\n    set y1 to max of y1 and u\n  \n  x1 = x1 - x0\n  set y1 to y1 - y0\n  print (x1 == y1 && x1 * y1 == a ? \"YES\\n\" : \"NO\\n\")\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x0, y0, x1, y1, a = 0;\n  x0 = y0 = 1e9 + 87;\n  x1 = y1 = -9e8;\n  for (int i = 0; i < n; ++i) {\n    int l, b, r, u;\n    cin >> l >> b >> r >> u;\n    a += (r - l) * (u - b);\n    x0 = min(x0, l);\n    x1 = max(x1, r);\n    y0 = min(y0, b);\n    y1 = max(y1, u);\n  }\n  x1 -= x0;\n  y1 -= y0;\n  cout << (x1 == y1 && x1 * y1 == a ? \"YES\\n\" : \"NO\\n\");\n}\n"
    ],
    [
        "\n  mn, mn2 = integers with mn = 50000, mn2 = mn\n  N, mx, mx2, Ar = integers with mx = -1, mx2 = mx, Ar = 0\n  read N\n  for i = 1 to N\n    a, b, x, y = integers\n    read a, b, x, y\n    Ar = Ar + (x - a) * (y - b)\n    mn = min of mn and min(a, x)\n    mn2 = min of mn2 and min(b, y)\n    mx = max of mx and max(a, x)\n    mx2 = max of mx2 and max(b, y)\n  \n  if (mx - mn is mx2 - mn2 and Ar is (mx - mn) * (mx2 - mn2))\n    print YES\n  else\n    print NO\n  \n\n",
        "int main() {\n  int mn = 50000, mn2 = mn;\n  int N, mx = -1, mx2 = mx, Ar = 0;\n  cin >> N;\n  for (int i = 1; i <= N; ++i) {\n    int a, b, x, y;\n    cin >> a >> b >> x >> y;\n    Ar += (x - a) * (y - b);\n    mn = min(mn, min(a, x));\n    mn2 = min(mn2, min(b, y));\n    mx = max(mx, max(a, x));\n    mx2 = max(mx2, max(b, y));\n  }\n  if (mx - mn == mx2 - mn2 && Ar == (mx - mn) * (mx2 - mn2))\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create long long n\n  read n\n  while n % 3 is 0, set n to n / 3\n  print n / 3 + 1 print newline\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  while (n % 3 == 0) n /= 3;\n  cout << n / 3 + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create unsigned long long n, t, coi with coi = 1\n  read n\n  while n % 3 is 0, set n to n / 3\n  print ( n - 1 ) / 3 + 1 print '\\n'\n\n",
        "int main() {\n  unsigned long long n, t, coi = 1;\n  cin >> n;\n  while (n % 3 == 0) n /= 3;\n  cout << (n - 1) / 3 + 1 << '\\n';\n}\n"
    ],
    [
        "n, ans = long long with ans = 0\n\n  read n\n  while n modulo 3 is 0, n = n / 3\n  ans = n / 3 + 1\n  print ans\n  \n\n",
        "long long n, ans = 0;\nint main() {\n  cin >> n;\n  while (n % 3 == 0) n /= 3;\n  ans = n / 3 + 1;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "in function cil taking two long longs x and y and returning a long long\n  if x is a multiple if y\n    return x / y\n  else\n    return x / y + 1\n\n\n  n, i, j = long long with j = 0\n  read n\n  set i to n\n  loop while n is a multiple of 3 and greater than 0\n    increment j\n    set n to n / 3\n  \n  l = long long with l = pow of 3 and j + 1\n  print cil of i and l\n\n",
        "long long cil(long long x, long long y) {\n  if (x % y == 0)\n    return x / y;\n  else\n    return x / y + 1;\n}\nint main() {\n  long long n, i, j = 0;\n  cin >> n;\n  i = n;\n  while (n % 3 == 0 && n > 0) {\n    j++;\n    n /= 3;\n  }\n  long long l = pow(3, j + 1);\n  cout << cil(i, l) << endl;\n}\n"
    ],
    [
        "\n  let n be a long integer\n  read n\n  let sum , x be long integers with x = 3\n  while n modulo x is equal to 0 , x is equal to x * 3\n  n / x + 1 is assigned to sum\n  print sum and newline\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  long long sum, x = 3;\n  while (n % x == 0) { x *= 3; }\n  sum = n / x + 1;\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  define integers i, j, k, and n\n  read n\n  define j and set to 3; for i from 1 to 35, set j to itself * 3\n    if n modulo j isn't 0, then break out\n  \n  print n / j + 1 and a newline\n\n",
        "int main() {\n  long long i, j, k, n;\n  cin >> n;\n  for (i = 1, j = 3; i <= 35; i++, j *= 3) {\n    if (n % j != 0) break;\n  }\n  cout << (n / j) + 1 << endl;\n}\n"
    ],
    [
        "create FILE pointer stream\n\n  create long long n\n  read n\n  create long long x with x = 1\n  while n % x is 0, set x to x * 3\n  print ( n / x ) + 1 print newline\n\n",
        "FILE *stream;\nint main() {\n  long long n;\n  cin >> n;\n  long long x = 1;\n  while (n % x == 0) { x *= 3; }\n  cout << (n / x) + 1 << endl;\n}\n"
    ],
    [
        "\n  n =integer\n  while reading values n\n    while n modulo 3 is 0, then set n to n / 3\n    print n / 3 + 1 and a new line\n  \n  \n\n",
        "int main() {\n  long long n;\n  while (cin >> n) {\n    while (n % 3 == 0) n /= 3;\n    cout << n / 3 + 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "set first 4 elements of dx to 0, 0, -1, 1\nassign 1, -1, 0, 0 to first 4 elements of dy\n\n  create long long int n\n  read n\n  set x and ans to 1\n  while x less than n\n    if n mod x different from 0, set ans = max of ans and n/x +1\n    set x = x*3\n  \n  print ans and a newline\n\n",
        "int dx[4] = {0, 0, -1, 1};\nint dy[4] = {1, -1, 0, 0};\nint main() {\n  long long int n;\n  cin >> n;\n  long long int x = 1, ans = 1;\n  while (x < n) {\n    if (n % x != 0) ans = max(ans, n / x + 1);\n    x = x * 3;\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "\n  create long long n\n  read n and loop further\n    declare long long a\n    declare long long t = 3\n    while n % t = 0, multiply t by 3\n    print n / t + 1\n  \n  \n\n",
        "int main() {\n  long long n;\n  while (cin >> n) {\n    long long a;\n    long long t = 3;\n    while (!(n % t)) t *= 3;\n    cout << n / t + 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n and a\n  read n and keep looping\n    set a to 3\n    while n modulo a is 0\n    print n / a + 1\n  \n  \n\n",
        "int main() {\n  long long n, a;\n  while (cin >> n) {\n    a = 3;\n    while (n % a == 0) a *= 3;\n    cout << n / a + 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "cil is a long long function with long long arguments x and y\n  if x % y is equal to 0\n    return x / y\n  else\n    return x / y + 1\n\n\n  declare long long variables n, i and j with j = 0\n  read input to n\n  change i to n\n  while n % 3 is 0 and n > 0\n    increment j\n    divide n by 3\n  \n  create long long l = 3 raised to power j + 1\n  print cil(i, l)\n\n",
        "long long cil(long long x, long long y) {\n  if (x % y == 0)\n    return x / y;\n  else\n    return x / y + 1;\n}\nint main() {\n  long long n, i, j = 0;\n  cin >> n;\n  i = n;\n  while (n % 3 == 0 && n > 0) {\n    j++;\n    n /= 3;\n  }\n  long long l = pow(3, j + 1);\n  cout << cil(i, l) << endl;\n}\n"
    ],
    [
        "\n  create long longs n, m, i, j, k\n  read n\n  set k to 3\n  while 1 is true\n    if n % k is not 0\n      set m to ( n / k ) + 1\n      break loop\n    \n    set value of k to 3\n  \n  print m print newline\n\n",
        "int main() {\n  long long n, m, i, j, k;\n  cin >> n;\n  k = 3;\n  while (1) {\n    if (n % k != 0) {\n      m = (n / k) + 1;\n      break;\n    }\n    k *= 3;\n  }\n  cout << m << endl;\n}\n"
    ],
    [
        "declare const int maxn = 100001\ndeclare long long n\n\n  read n\n  while n modulo 3 = 0, divide n by 3\n  print n / 3 + 1\n\n",
        "const int maxn = 100001;\nlong long n;\nint main() {\n  cin >> n;\n  while (n % 3 == 0) n /= 3;\n  cout << n / 3 + 1 << endl;\n}\n"
    ],
    [
        "in function power_of_two taking int n and returning bool\n  m = int\n  set m to n - 1\n  if not n bitwise-and m\n    return true\n  else\n    return false\n\n\n  n, m, a, mn = int with mn = 10000\n  read n then m\n  v = int vector\n  for i = 0 to m\n    read a\n    append a to v\n  \n  sort v\n  for i = n - 1 to m set mn to min of mn and v[i] - v[i - n + 1]\n  print mn\n\n",
        "bool power_of_two(int n) {\n  int m;\n  m = n - 1;\n  if (!n & m)\n    return true;\n  else\n    return false;\n}\nint main() {\n  int n, m, a, mn = 10000;\n  cin >> n >> m;\n  vector<int> v;\n  for (int i = 0; i < m; i++) {\n    cin >> a;\n    v.push_back(a);\n  }\n  sort(v.begin(), v.end());\n  for (int i = n - 1; i < m; i++) { mn = min(mn, v[i] - v[i - n + 1]); }\n  cout << mn << endl;\n}\n"
    ],
    [
        "\n  let integers n, m, i, and ans = INT_MAX and int array a of size 1000\n  read n and m\n  for i = 0 to m exclusive, read a[i]\n  sort array a\n  for i = 0 to m - n, set ans to the min of ans and a[i + n - 1] - a[i]\n  print ans\n\n",
        "int main() {\n  int n, m, a[1000], i, ans = INT_MAX;\n  cin >> n >> m;\n  for (i = 0; i < m; i++) cin >> a[i];\n  sort(a, a + m);\n  for (i = 0; i <= m - n; i++) ans = min(ans, a[i + n - 1] - a[i]);\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  let n, m, and f with 1000 indices be int\n  read n and m\n  read f of i i times from 0 to m exclusive\n  sort f and f plus m\n  let least be f[n - 1] - f[0]\n  for i from to 1 m - n inclusive\n    if f[i + n - 1] - f[i] < least set least to least = f[i + n - 1] - f[i]\n  \n  print least\n  \n\n",
        "int main() {\n  int n, m, f[1000];\n  cin >> n >> m;\n  for (int i = 0; i < m; ++i) { cin >> f[i]; }\n  sort(f, f + m);\n  int least = f[n - 1] - f[0];\n  for (int i = 1; i <= m - n; ++i) {\n    if (f[i + n - 1] - f[i] < least) { least = f[i + n - 1] - f[i]; }\n  }\n  cout << least << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers array dx initialized with 1, 0, -1, 0, 1, 1, -1, -1\ncreate integers array dy initialized with 0, 1, 0, -1, 1, -1, 1, -1\nin the function fast\ndeclare const long long md = 1e9 + 7\n\n  call fast()\n  create long longs n and m\n  read n and m\n  declare an array of long longs a with m + 5 elements\n  read a from the input m times\n  sort first m elements of a\n  declare long long variable ans = LLONG_MAX\n  for i from 0 to m - n inclusive, change ans to min of ans and a[i + (n - 1)] - a[i]\n  print ans\n  \n\n",
        "int dx[] = {1, 0, -1, 0, 1, 1, -1, -1};\nint dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\nvoid fast() {}\nconst long long md = 1e9 + 7;\nint main() {\n  fast();\n  long long n, m;\n  cin >> n >> m;\n  long long a[m + 5];\n  for (int i = 0; i < m; i++) cin >> a[i];\n  sort(a, a + m);\n  long long ans = LLONG_MAX;\n  for (int i = 0; i <= m - n; i++) { ans = min(ans, a[i + (n - 1)] - a[i]); }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, m = integers\n  read n, m\n  arr = integer array of size 100000\n  for i = 0 to m exclusive, read arr[i]\n  sort arr and arr + m\n  mindiff = integer with mindiff = INT_MAX\n  for i = 0 to m - (n - 1) exclusive\n    diff = integer with diff = arr[i + n - 1] - arr[i]\n    if diff < mindiff, mindiff = diff\n  \n  print mindiff\n  \n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  int arr[100000];\n  for (int i = 0; i < m; ++i) { cin >> arr[i]; }\n  sort(arr, arr + m);\n  int mindiff = INT_MAX;\n  for (int i = 0; i < m - (n - 1); i++) {\n    int diff = arr[i + n - 1] - arr[i];\n    if (diff < mindiff) { mindiff = diff; }\n  }\n  cout << mindiff << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create new variables n, m, i, j, total, val, diff and mini be ints with total = 0 and mini = 10000\n  declare new vector of integers called v\n  read variables n and m from the input\n  for i = 0 to m exclusive\n    read val\n    push val to the end of v\n  \n  sort v\n  start for loop from i = 0 to m - n inclusive incrementing i\n    change val to abs(v[i] - v[i + n - 1])\n    change mini to min of mini and val\n  \n  print mini\n\n",
        "int main() {\n  int n, m, i, j, total = 0, val, diff, mini = 10000;\n  vector<int> v;\n  cin >> n >> m;\n  for (i = 0; i < m; i++) {\n    cin >> val;\n    v.push_back(val);\n  }\n  sort(v.begin(), v.end());\n  for (i = 0; i <= m - n; i++) {\n    val = abs(v[i] - v[i + n - 1]);\n    mini = min(mini, val);\n  }\n  cout << mini << endl;\n}\n"
    ],
    [
        "\n  create integers n and m, and an array of integers f with size 1000\n  read input to n and m\n  for integer i = 0 to m exclusive, read input to f[i]\n  sort m elements of f\n  create integer least = f[n - 1] - f[0]\n  for i from 1 to m - n inclusive\n    if f[i + n - 1] - f[i] is less than least, assign f[i + n - 1] - f[i] to least\n  \n  print least\n  \n\n",
        "int main() {\n  int n, m, f[1000];\n  cin >> n >> m;\n  for (int i = 0; i < m; ++i) { cin >> f[i]; }\n  sort(f, f + m);\n  int least = f[n - 1] - f[0];\n  for (int i = 1; i <= m - n; ++i) {\n    if (f[i + n - 1] - f[i] < least) { least = f[i + n - 1] - f[i]; }\n  }\n  cout << least << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n,m,mn be integers wtih mn = 1005 and a be an integer array of size 60\n  input n\n  input m\n  input m number of items into a\n  call sort with parameters a, a+m\n  for i = 0 to m-n\n    set integer d to a[i + n - 1] - a[i]\n    if d < mn set mn = d\n  \n  print mn\n  \n\n",
        "int main() {\n  int n, m, a[60], mn = 1005;\n  cin >> n;\n  cin >> m;\n  for (int i = 0; i < m; i++) { cin >> a[i]; }\n  sort(a, a + m);\n  for (int i = 0; i < m - n + 1; i++) {\n    int d = a[i + n - 1] - a[i];\n    if (d < mn) mn = d;\n  }\n  cout << mn << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare x, y as integers\n  read x, y\n  declare integer array m size y\n  declare integer array arr size y\n  for i = 0 to y exclusive, read arr[i]\n  sort elements from arr to arr + y\n  declare integer k with k = 0\n  for i = 0 to y - x + 1 exclusive\n    let m[k] be arr[x-1+i] - arr[i]\n    increment k\n  \n  let integer min be 99999\n  for j = 0 to k exclusive\n    if min is greater than m[j], let min be m[j]\n  \n  print min, newline\n  \n\n",
        "int main() {\n  int x, y;\n  cin >> x >> y;\n  int m[y];\n  int arr[y];\n  for (int i = 0; i < y; i++) { cin >> arr[i]; }\n  sort(arr, arr + y);\n  int k = 0;\n  for (int i = 0; i < y - x + 1; i++) {\n    m[k] = arr[x - 1 + i] - arr[i];\n    k++;\n  }\n  int min = 99999;\n  for (int j = 0; j < k; j++) {\n    if (min > m[j]) min = m[j];\n  }\n  cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let i, a, b, j, s, c, d be integers with c = array of integers of length 1000, d = array of integers of length 1000\n  read a, b\n  for i = 0 to b exclusive , read c[i]\n  sort the values c and c + b\n  for i = 0, j = 0, i is less than b - a + 1, increment i , j by 1, d[j] is equal to c[i + a - 1] - c[i]\n  sort the values d, d + b - a + 1\n  print d[0] and newline\n\n",
        "int main() {\n  int i, a, b, j, s, c[1000], d[1000];\n  cin >> a >> b;\n  for (i = 0; i < b; i++) { cin >> c[i]; }\n  sort(c, c + b);\n  for (i = 0, j = 0; i < b - a + 1; i++, j++) { d[j] = c[i + a - 1] - c[i]; }\n  sort(d, d + b - a + 1);\n  cout << d[0] << endl;\n}\n"
    ],
    [
        "create int array A of size 1000100\n\n  let ints n and m\n  read n and m\n  for i = 0 to m exclusive, read A[i]\n  sort A\n  create ints high = n - 1 and low = 0\n  let int mini = A[high] - A[low]\n  while high is less than m\n    increment low\n    increment high\n    if high is less than m, set mini to the min of mini and A[high] - A[low]\n  \n  print mini\n\n",
        "int A[100010];\nint main() {\n  int n, m;\n  cin >> n >> m;\n  for (int i = 0; i < m; i++) cin >> A[i];\n  sort(A, A + m);\n  int high = n - 1, low = 0;\n  int mini = A[high] - A[low];\n  while (high < m) {\n    low++;\n    high++;\n    if (high < m) mini = min(mini, A[high] - A[low]);\n  }\n  cout << mini << '\\n';\n}\n"
    ],
    [
        "\n  create ints num and buy\n  create int vector v\n  read num and buy\n  for i = 0 to buy exclusive\n    let int x\n    read x\n    append x to vector v\n  \n  sort vector v\n  let ints max = 0, min = 0, and differ = 1000000\n  for i = 0 to size of v exclusive\n    if i + num is greater than the size of v\n      break loop\n    otherwise do\n      set min to the min value in v\n      set max to the max value in v\n      if v.at(max) - v.at(min) is less than differ, set differ to v.at(max) - v.at(min)\n    \n  \n  for i = 0 to size of v exclusive\n    let int total = count(v.begin(), v.end(), v.at(i));\n    if total is greater than or equal to num\n      set differ to 0\n      break loop\n    \n  \n  print differ\n\n",
        "int main() {\n  int num, buy;\n  vector<int> v;\n  cin >> num >> buy;\n  for (int i = 0; i < buy; i++) {\n    int x;\n    cin >> x;\n    v.push_back(x);\n  }\n  sort(v.begin(), v.end());\n  int max = 0, min = 0, differ = 1000000;\n  for (int i = 0; i < v.size(); i++) {\n    if ((i + num) > v.size())\n      break;\n    else {\n      min = min_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n      max = max_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n      if ((v.at(max) - v.at(min)) < differ) { differ = v.at(max) - v.at(min); }\n    }\n  }\n  for (int i = 0; i < v.size(); i++) {\n    int total = count(v.begin(), v.end(), v.at(i));\n    if (total >= num) {\n      differ = 0;\n      break;\n    }\n  }\n  cout << differ << endl;\n}\n"
    ],
    [
        "\n  let n,m be integers\n  read n and m\n  a = array of integers of length m\n  for i = 0 to m exclusive , read a[i]\n  sort the values a and a + m\n  let min be a integer with min = 1000000\n  for i = 0 to m - n + 1 exclusive\n    if a[i + n - 1] - a[i] is less than min , the value of min is equal to a[i + n - 1] - a[i]\n  \n  if min is equal to 1000000\n    print 0 and newline\n  else do the following\n    print min and newline\n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  int a[m];\n  for (int i = 0; i < m; i++) cin >> a[i];\n  sort(a, a + m);\n  int min = 1000000;\n  for (int i = 0; i < m - n + 1; i++) {\n    if ((a[i + n - 1] - a[i]) < min) { min = a[i + n - 1] - a[i]; }\n  }\n  if (min == 1000000)\n    cout << \"0\\n\";\n  else\n    cout << min << \"\\n\";\n}\n"
    ],
    [
        "\n  set precision to 10\n  print fixed\n  n, m = integers\n  read n, m\n  v = vector of integer with v = m\n  for i = 0 to m exclusive, print v[i]\n  sort v.begin() and v.end()\n  diff = vector of integer\n  for i = 0 to m - n + 1 exclusive, append (abs(v[i] - v[n + i - 1])) in diff\n  print pointer min_element(diff.begin(), diff.end())\n\n",
        "int main() {\n  cout.precision(10);\n  cout << fixed;\n  int n, m;\n  cin >> n >> m;\n  vector<int> v(m);\n  for (int i = 0; i < m; i++) cin >> v[i];\n  sort(v.begin(), v.end());\n  vector<int> diff;\n  for (int i = 0; i < m - n + 1; i++) { diff.push_back(abs(v[i] - v[n + i - 1])); }\n  cout << *min_element(diff.begin(), diff.end()) << endl;\n}\n"
    ],
    [
        "\n  declare int variables n and m\n  read n and m from the input\n  arr is a new array ofintegers with m elements\n  in the for loop, change i from 0 to m exclusive, reading variable arr[i] from the input\n  sort arr from index 0 to m exclusive\n  declare integer mn = 1e9\n  for i = 0 to m - n inclusive, change mn to min of mn and arr[i + n - 1] - arr[i]\n  print mn to the standard output\n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  int arr[m];\n  for (int i = 0; i < m; ++i) cin >> arr[i];\n  sort(arr, arr + m);\n  int mn = 1e9;\n  for (int i = 0; i <= m - n; ++i) mn = min(mn, arr[i + n - 1] - arr[i]);\n  cout << mn << endl;\n}\n"
    ],
    [
        "\n  numbuy=int\n  v=vector of int\n  read num,buy\n  for i=0 to buy exclusive\n    x=int\n    read x\n    add x at end of v\n  \n  sort v\n  max,min=0, differ=1000000\n  for i=0 to size of v exclusive\n    if i+num > size of v\n      break\n    else\n      min=min_element(first item of v+i, first item of v+i+num) - first item of v\n      max=max_element(first item of v+i, first item of v+i+num) - first item of v\n      if pos of max in v - pos of min in v < differ differ = pos of max in v - pos of min in v\n    \n  \n  for i=0 to size of v exclusive\n    total=count(occurrences of i in v)\n    if total >= num\n      differ=0\n      break\n    \n  \n  print differ\n\n",
        "int main() {\n  int num, buy;\n  vector<int> v;\n  cin >> num >> buy;\n  for (int i = 0; i < buy; i++) {\n    int x;\n    cin >> x;\n    v.push_back(x);\n  }\n  sort(v.begin(), v.end());\n  int max = 0, min = 0, differ = 1000000;\n  for (int i = 0; i < v.size(); i++) {\n    if ((i + num) > v.size())\n      break;\n    else {\n      min = min_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n      max = max_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n      if ((v.at(max) - v.at(min)) < differ) { differ = v.at(max) - v.at(min); }\n    }\n  }\n  for (int i = 0; i < v.size(); i++) {\n    int total = count(v.begin(), v.end(), v.at(i));\n    if (total >= num) {\n      differ = 0;\n      break;\n    }\n  }\n  cout << differ << endl;\n}\n"
    ],
    [
        "\n  declare integers n, m\n  read n, m\n  declare integer array a size m\n  for i = 0 to m exclusive, read a[i]\n  sort from a to a + m\n  declare integers i = 0, j = n - 1\n  declare psum = a[j]-a[i] as integer\n  while j is less than m\n    declare sum = a[j]-a[i] as integer\n    if sum is less than or equal to psum, let psum = sum\n    increment i\n    increment j\n  \n  print psum, \"\\n\"\n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  int a[m];\n  for (int i = 0; i < m; i++) { cin >> a[i]; }\n  sort(a, a + m);\n  int i = 0, j = n - 1;\n  int psum = a[j] - a[i];\n  while (j < m) {\n    int sum = a[j] - a[i];\n    if (sum <= psum) psum = sum;\n    i++;\n    j++;\n  }\n  cout << psum << \"\\n\";\n}\n"
    ],
    [
        "\n  noOfStudents, noOfprizes, minimum = int with minimum = 100000\n  read noOfStudents then noOfprizes\n  a = int array of size noOfprizes\n  read noOfprizes values into a\n  sort a\n  for i = 0 to noOfprizes - noOfStudents + 1 set minimum to min of a[i + noOfStudents - 1] - a[i], minimum\n  print minimum\n  \n\n",
        "int main() {\n  int noOfStudents, noOfprizes, minimum = 100000;\n  cin >> noOfStudents >> noOfprizes;\n  int a[noOfprizes];\n  for (int i = 0; i < noOfprizes; i++) { cin >> a[i]; }\n  sort(a, a + noOfprizes);\n  for (int i = 0; i + noOfStudents - 1 < noOfprizes; i++) { minimum = min(a[i + noOfStudents - 1] - a[i], minimum); }\n  cout << minimum << endl;\n  return 0;\n}\n"
    ],
    [
        "create long long ans = 1000000\n\n  declare long long int variables n and m\n  read input to n and m\n  declare long long int array a with m + 2 elements\n  for integer i = 0 to m exclusive, read a[i]\n  sort m elements of a\n  declare long long int k = m - n\n  for i from 0 to k inclusive, assign min of ans and a[i + (n - 1)] - a[i] to ans\n  print ans\n  \n\n",
        "long long ans = 1000000;\nint main() {\n  long long int n, m;\n  cin >> n >> m;\n  long long int a[m + 2];\n  for (int i = 0; i < m; i++) cin >> a[i];\n  sort(a, a + m);\n  long long int k = m - n;\n  for (int i = 0; i <= k; i++) { ans = min(ans, a[i + (n - 1)] - a[i]); }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n,m=int\n  while read n, m\n    a=array of 55 int\n    for i=0 to m exclusive read a[i]\n    sort first m items of a\n    min2=999999999, t=int\n    for i=n-1 to m exclusive\n      t=a[i]-a[i-n+1]\n      if min2>t min2=t\n    \n    print min2\n  \n\n",
        "int main() {\n  int n, m;\n  while (cin >> n >> m) {\n    int a[55];\n    for (int i = 0; i < m; i++) cin >> a[i];\n    sort(a, a + m);\n    int min2 = 999999999, t;\n    for (int i = n - 1; i < m; i++) {\n      t = a[i] - a[i - n + 1];\n      if (min2 > t) min2 = t;\n    }\n    cout << min2 << endl;\n  }\n}\n"
    ],
    [
        "\n  create long longs n, m\n  read n read m\n  create long long vector a initialized with ( m, 0 )\n  for i = 0 to m exclusive, read a[i]\n  sort elements from beginning of a to end of a\n  create long longs l, r\n  set l to r to 0\n  set r to n - 1\n  create long long mn with mn = a[m - 1] - a[0]\n  while r is not m\n    set mn to minimum of ( mn and a[r] - a[l] )\n    increment l\n    increment r\n  \n  print mn print newline\n  \n\n",
        "int main() {\n  long long n, m;\n  cin >> n >> m;\n  vector<long long> a(m, 0);\n  for (long long i = 0; i < m; i++) { cin >> a[i]; }\n  sort(a.begin(), a.end());\n  long long l, r;\n  l = r = 0;\n  r = n - 1;\n  long long mn = a[m - 1] - a[0];\n  while (r != m) {\n    mn = min(mn, a[r] - a[l]);\n    l++;\n    r++;\n  }\n  cout << mn << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, m be integers\n  read n and m\n  arr = vector\n  while m is greater than 0\n    let i be int\n    read i\n    push_back i onto r\n    decrement m\n  \n  sort with functions arr.begin and arr.end\n  let distance be integer with value 1e9\n  for i from 0 to arr size minus n + 1 exclusive\n    if arr[i + n - 1] - arr[i] < distance then set distance to arr[i + n - 1] - arr[i]\n  \n  print distance\n  \n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  vector<int> arr;\n  while (m > 0) {\n    int i;\n    cin >> i;\n    arr.push_back(i);\n    m--;\n  }\n  sort(arr.begin(), arr.end());\n  int distance = 1e9;\n  for (int i = 0; i < arr.size() - n + 1; i++) {\n    if (arr[i + n - 1] - arr[i] < distance) { distance = arr[i + n - 1] - arr[i]; }\n  }\n  cout << distance << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers k, d and i\n  read k and d\n  if d = 0\n    if k = 1\n      print 0 and a new line\n    else\n      print \"No solution\\n\"\n    \n  else\n    print d\n    for i = 1 to k exclusive, print 0\n    print new line\n  \n  \n\n",
        "int main() {\n  int k, d, i;\n  cin >> k >> d;\n  if (d == 0) {\n    if (k == 1) {\n      cout << 0 << endl;\n    } else {\n      cout << \"No solution\\n\";\n    }\n  } else {\n    cout << d;\n    for (i = 1; i < k; i++) { cout << 0; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers k, d\n  read k read d\n  if d is 0 and k is greater than 1\n    print \"No solution\\n\"\n    \n  \n  print d\n  decrement k\n  while decrement k is true, print 0\n  print newline\n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\\n\";\n    return 0;\n  }\n  cout << d;\n  k--;\n  while (k--) cout << 0;\n  cout << endl;\n}\n"
    ],
    [
        "\n  k and d = integers\n  read k and d\n  if d = 0\n    if k = 1\n      print \"0\" and a new line\n    else\n      print \"No solution\" and a new line\n  else\n    print d\n    print \"0\" k - 1 times\n    print new line\n  \n  \n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (d == 0) {\n    if (k == 1)\n      cout << \"0\" << endl;\n    else\n      cout << \"No solution\" << endl;\n  } else {\n    cout << d;\n    for (int i = 0; i < k - 1; ++i) { cout << \"0\"; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let k be a integer\n  let d be a character\n  read the values k and d\n  if (d is equal to 0 and k is greater than 1)\n    print No solution and newline\n    \n  \n  let temp be a string\n  push temp vector to back when element d is given( temp.push_back(d))\n  for (int i is equal to 1, i is less than k; increment i value by 1) ,temp.push_back('0')\n  print temp and newline\n  \n\n",
        "int main() {\n  int k;\n  char d;\n  cin >> k >> d;\n  if (d == '0' && k > 1) {\n    cout << \"No solution\" << endl;\n    return 0;\n  }\n  string temp;\n  temp.push_back(d);\n  for (int i = 1; i < k; i++) temp.push_back('0');\n  cout << temp << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers k, d\n  read k read d\n  if k is 1 and d is 0\n    print \"0\" print newline\n  else if k is greater than 1 and d is 0\n    print \"No solution\" print newline\n  else\n    print d\n    for i = 0 to k - 1 exclusive, print \"0\"\n    print newline\n  \n  \n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (k == 1 && d == 0) {\n    cout << \"0\" << endl;\n  } else if (k > 1 && d == 0) {\n    cout << \"No solution\" << endl;\n  } else {\n    cout << d;\n    for (int i = 0; i < k - 1; i++) { cout << \"0\"; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  k, d=integers\n  Read k and d\n  if d is equal to 0 and k is greater than 1\n    print No solution and a new line\n  else do the following\n    print d\n    for i = 1 to k, exclusive, print 0\n    print a new line\n  \n  \n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\" << endl;\n  } else {\n    cout << d;\n    for (int i = 1; i < k; i++) cout << 0;\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  k, d =integers\n  Read k, d\n  if d is equal to 0 and k is greater than 1\n    print No solution and a new line\n    \n  \n  print d\n  for j = 1 to k exclusive, print 0\n  print a new line\n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\" << endl;\n    return 0;\n  }\n  cout << d;\n  for (int i = 1; i < k; i++) { cout << 0; }\n  cout << endl;\n}\n"
    ],
    [
        "\n  k, d, i, j =integers\n  Read k and d\n  if d is equal to 0\n    if k is greater than 1\n      print No solution and a new line\n    else do the following\n      print 0 and a new line\n    \n  \n  print d\n  for i = 0 to k exclusive, print 0\n  print a new line\n\n",
        "int main() {\n  int k, d, i, j;\n  cin >> k >> d;\n  if (d == 0) {\n    if (k > 1)\n      cout << \"No solution\" << endl;\n    else\n      cout << 0 << endl;\n    return 0;\n  }\n  cout << d;\n  for (i = 1; i < k; i++) cout << 0;\n  cout << endl;\n}\n"
    ],
    [
        "\n  k, d = integers\n  read k and d\n  if k is greater than 1 and d is 0\n    print No solution\n    \n  \n  print d\n  for i=1 to k exclusive print 0\n  print new line\n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (k > 1 && d == 0) {\n    cout << \"No solution\\n\";\n    return 0;\n  }\n  cout << d;\n  for (int i = 1; i < k; i++) { cout << 0; }\n  cout << endl;\n}\n"
    ],
    [
        "\n  d = large long\n  read k and d\n  if d = 0 and k > 1\n    print No Solution\n  else\n    print d\n    increment k\n    while k > -\n      print 0\n      decrement k\n    \n    print newline\n  \n  \n\n",
        "int main() {\n  long long k, d;\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\" << endl;\n  } else {\n    cout << d;\n    k--;\n    while (k) {\n      cout << 0;\n      k--;\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare desperate_optimization with integer precision as argument, returning void\n  set cout stream flag ios::fixed\n  set cout stream flag ios::showpoint\n  set cout floating point precision to precision\n\n\n  run desperate_optimization with 10 as argument\n  create integers n, k\n  read n read k\n  if k is 0 and n is not 1\n    print \"No solution\" print '\\n'\n    \n  \n  if k is 0\n    print 0 print '\\n\n  else\n    print k\n    for i = 1 to n exclusive, print 0\n    print '\\n'\n  \n  \n\n",
        "void desperate_optimization(int precision) {\n  cout.setf(ios::fixed);\n  cout.setf(ios::showpoint);\n  cout.precision(precision);\n}\nint main() {\n  desperate_optimization(10);\n  int n, k;\n  cin >> n >> k;\n  if (k == 0 && n != 1) {\n    cout << \"No solution\" << '\\n';\n    return 0;\n  }\n  if (k == 0)\n    cout << 0 << '\\n';\n  else {\n    cout << k;\n    for (int i = 1; i < n; i++) cout << 0;\n    cout << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "create integers k, d\n\n  read k read d\n  if d is 0 and k is greater than 1\n    print \"No solution\" print newline\n    \n  \n  print d\n  decrement k\n  while decrement k is true, print 0\n  print newline\n  \n\n",
        "int k, d;\nint main() {\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\" << endl;\n    return 0;\n  }\n  cout << d;\n  k--;\n  while (k--) cout << 0;\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers k, q, with q = 1\n  create character d\n  create string s with s = \"\"\n  read k read d\n  if d - '0' is 0\n    if k is 1\n      print 0 print newline\n    else\n      print \"No solution\" print newline\n  else\n    increment s by d\n    for i = 1 to k exclusive, increment s by \"0\"\n    print s print newline\n  \n  \n\n",
        "int main() {\n  int k, q = 1;\n  char d;\n  string s = \"\";\n  cin >> k >> d;\n  if (d - '0' == 0) {\n    if (k == 1)\n      cout << 0 << endl;\n    else\n      cout << \"No solution\" << endl;\n  } else {\n    s += d;\n    for (int i = 1; i < k; i++) s += \"0\";\n    cout << s << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers k and d\n  read k and d\n  if k is greater than 1 and d is 0\n    print \"No solution\" and a new line\n    \n  \n  print d\n  decrease k by one\n  print 0 in the loop while decrementing k\n  print new line\n  \n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (k > 1 && !d) {\n    cout << \"No solution\" << endl;\n    return 0;\n  }\n  cout << d;\n  k--;\n  while (k--) cout << 0;\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "Mod = const int with Mod = 1e9 + 7\nn, p = integers\nchoose, ans = long long with choose = 2d array of 30025 rows and 600 columns, ans = 1\nPedy = map from int to int\n\n  read n\n  index 0, 0 of choose = 1\n  for i = 1 to 30024\n    index i and 0 of choose = 1\n    for j = 1 to n index i and j of choose = (choose[i - 1][j - 1] + choose[i - 1][j]) modulo Mod\n  \n  for i = 0 to n exclusive\n    read p\n    for j = 2 to j * j <= p\n      if p modulo j is 0\n        while not(p modulo j)\n          p = p / j\n          increment Pedy[j]\n        \n      \n    if p > 1, increment Pedy[p]\n  \n  for it = Pedy.begin() to it is not Pedy.end()\n    p = second in it\n    ans = (ans * choose[p + n - 1][n - 1]) modulo Mod\n  \n  print ans\n  \n\n",
        "const int Mod = 1e9 + 7;\nint n, p;\nlong long choose[30000 + 25][600], ans = 1;\nmap<int, int> Pedy;\nint main() {\n  cin >> n;\n  choose[0][0] = 1;\n  for (int i = 1; i < 30000 + 25; i++) {\n    choose[i][0] = 1;\n    for (int j = 1; j <= n; j++) choose[i][j] = (choose[i - 1][j - 1] + choose[i - 1][j]) % Mod;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> p;\n    for (int j = 2; j * j <= p; j++)\n      if (p % j == 0) {\n        while (not(p % j)) {\n          p /= j;\n          Pedy[j]++;\n        }\n      }\n    if (p > 1) Pedy[p]++;\n  }\n  for (map<int, int>::iterator it = Pedy.begin(); it != Pedy.end(); it++) {\n    p = it->second;\n    ans = (ans * choose[p + n - 1][n - 1]) % Mod;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "me is a map of long long to long long\ncreate long long array fine with 100000 + 5 elements\npre is a void function\n  for long long i = 2 to 100000 inclusive\n    if fine[i] is equal to 0\n      for j from 2 * i to 100000 inclusive increasing j by i, assign 1 to fine[j]\n    \n  \n\ncreate an arrays of long longs fact and invfact with 100000 elements each\npow is a long long function with long long arguments a, b and m\n  declare long long variable ans = 1\n  while b is not 1\n    if b & 1 is not 0, assign (ans * a) % m to ans\n    divide b by 2\n    change a to (a * a) % m\n  \n  return ans\n\nlong long function modinv with long long argument k\n  return pow(k, 1000000007 - 2, 1000000007)\n\ndefine function precompute\n  set fact[0] to set fact[1] to 1\n  for i from 2 to 100000 exclusive\n    assign fact[i - 1] * i to fact[i]\n    fact[i] %= 1000000007\n  \n  set invfact[100000 - 1] to modinv(fact[100000 - 1])\n  for i from 100000-2 to 0 inclusive decrementing i\n    change invfact[i] to invfact[i + 1] * (i + 1)\n    invfact[i] %= 1000000007\n  \n\nfunction nCr with long long arguments x and y that returns long long\n  if y is greater than x, return 0\n  set long long num to fact[x]\n  multiply num by invfact[y]\n  num % =1000000007\n  multiply num by invfact[x - y]\n  num % =1000000007\n  return num\n\n\n  create long long n\n  read n\n  call precompute()\n  call pre()\n  loop i from 1 to n inclusive\n    create long long temp\n    read temp\n    for j = 2 to 100000 inclusive\n      create long long cur = 0\n      if temp <= 1, stop the loop\n      while temp modulo j = 0 && temp > 1\n        increment cur\n        divide temp by j\n      \n      if cur != 0, increase me[j] by cur\n    \n    if temp != 1, increase me[temp] by 1\n  \n  create map iterator it\n  declare long long ans = 1\n  move it through me in a loop\n    declare long long variable temp = it->second\n    multiply ans by nCr(temp + n - 1, temp)\n    ans % =1000000007\n  \n  print ans\n  \n\n",
        "map<long long, long long> me;\nlong long fine[100000 + 5];\nvoid pre() {\n  for (long long i = 2; i <= 100000; i++) {\n    if (fine[i] == 0) {\n      for (long long j = 2 * i; j <= 100000; j += i) { fine[j] = 1; }\n    }\n  }\n}\nlong long fact[100000], invfact[100000];\nlong long pow(long long a, long long b, long long m) {\n  long long ans = 1;\n  while (b) {\n    if (b & 1) ans = (ans * a) % m;\n    b /= 2;\n    a = (a * a) % m;\n  }\n  return ans;\n}\nlong long modinv(long long k) {\n  return pow(k, 1000000007 - 2, 1000000007);\n}\nvoid precompute() {\n  fact[0] = fact[1] = 1;\n  for (long long i = 2; i < 100000; i++) {\n    fact[i] = fact[i - 1] * i;\n    fact[i] %= 1000000007;\n  }\n  invfact[100000 - 1] = modinv(fact[100000 - 1]);\n  for (long long i = 100000 - 2; i >= 0; i--) {\n    invfact[i] = invfact[i + 1] * (i + 1);\n    invfact[i] %= 1000000007;\n  }\n}\nlong long nCr(long long x, long long y) {\n  if (y > x) return 0;\n  long long num = fact[x];\n  num *= invfact[y];\n  num %= 1000000007;\n  num *= invfact[x - y];\n  num %= 1000000007;\n  return num;\n}\nint main() {\n  long long n;\n  cin >> n;\n  precompute();\n  pre();\n  for (long long i = 1; i <= n; i++) {\n    long long temp;\n    cin >> temp;\n    for (long long j = 2; j <= 100000; j++) {\n      long long cur = 0;\n      if (temp <= 1) break;\n      while (temp % j == 0 && temp > 1) {\n        cur++;\n        temp /= j;\n      }\n      if (cur != 0) me[j] += cur;\n    }\n    if (temp != 1) me[temp] += 1;\n  }\n  map<long long, long long>::iterator it;\n  long long ans = 1;\n  for (it = me.begin(); it != me.end(); it++) {\n    long long temp = it->second;\n    ans *= nCr(temp + n - 1, temp);\n    ans %= 1000000007;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, l, r, a, b, sum = int with sum = 0 and my = int array of size 105 with all values set to 0\n  read n\n  read l then r\n  for i = 0 to n - 1\n    read a then b\n    for j = a + 1 to b inclusive set m[j] to 1\n  \n  for i = l + 1 to r inclusive\n    if m[i] is 0 increment sum\n  print sum\n  \n\n",
        "int main() {\n  int n, my[105] = {0}, l, r, a, b, sum = 0;\n  cin >> n;\n  cin >> l >> r;\n  for (int i = 0; i < n - 1; i++) {\n    cin >> a >> b;\n    for (int j = a + 1; j <= b; j++) my[j] = 1;\n  }\n  for (int i = l + 1; i <= r; i++)\n    if (my[i] == 0) sum++;\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array arrx with size 101\n\n  create integer n\n  read n\n  create integers l, r\n  read l read r\n  for i = 1 to n exclusive\n    create integers a, b\n    read a read b\n    for j = a to b exclusive, set arrx[j] to 1\n  \n  create integer total with total = 0\n  for i = l to r exclusive, increment total by 0 if arrx[i] is true, else 1\n  print total print newline\n\n",
        "int arrx[101];\nint main() {\n  int n;\n  cin >> n;\n  int l, r;\n  cin >> l >> r;\n  for (int i = 1; i < n; i++) {\n    int a, b;\n    cin >> a >> b;\n    for (int j = a; j < b; j++) arrx[j] = 1;\n  }\n  int total = 0;\n  for (int i = l; i < r; i++) { total += arrx[i] ? 0 : 1; }\n  cout << total << endl;\n}\n"
    ],
    [
        "declare constant integer N = 100 + 5\ndeclare boolean array mark with N elements\n\n  declare int variables n, st and en\n  read input to n, st and en\n  for i = 1 to n exclusive\n    create integers l and r\n    read l and r\n    for j from l to r exclusive, set mark[j] to true\n  \n  create int ans = 0\n  for i = st to en exclusive, increase ans by !mark[i]\n  print ans\n  \n\n",
        "const int N = 100 + 5;\nbool mark[N];\nint main() {\n  int n, st, en;\n  cin >> n >> st >> en;\n  for (int i = 1; i < n; i++) {\n    int l, r;\n    cin >> l >> r;\n    for (int j = l; j < r; j++) mark[j] = true;\n  }\n  int ans = 0;\n  for (int i = st; i < en; i++) ans += !mark[i];\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "N=105\nmm = array of N bool\n\n  n=int\n  read n\n  k1,k2=int\n  read k1,k2\n  fill mm with false\n  for i=k1 to k2 exclusive mm[i]=true\n  for i=0 to n-1 exclusive\n    read k1,k2\n    for j=k1 to k2 exclusive mm[j]=false\n  \n  ans=0\n  for i=0 to 101 exclusive\n    if mm[i] increment ans\n  print ans\n  \n\n",
        "const int N = 105;\nbool mm[N];\nint main() {\n  int n;\n  cin >> n;\n  int k1, k2;\n  cin >> k1 >> k2;\n  memset(mm, false, sizeof(mm));\n  for (int i = int(k1); i < int(k2); ++i) mm[i] = true;\n  for (int i = int(0); i < int(n - 1); ++i) {\n    cin >> k1 >> k2;\n    for (int j = int(k1); j < int(k2); ++j) mm[j] = false;\n  }\n  int ans = 0;\n  for (int i = int(0); i < int(101); ++i)\n    if (mm[i]) ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create int arr[1000]\n\n  let n be int\n  read n\n  create int l and r\n  read l, r\n  decrement n\n  while decrement n\n    create integers x and y\n    read x, y\n    for i=x to y exclusive, increment arr[i]\n  \n  assign 0 to ans\n  for i=l to r exclusive\n    if arr[i] =0, add 1 to ans\n  print ans\n  \n\n",
        "int arr[1000];\nint main() {\n  int n;\n  cin >> n;\n  int l, r;\n  cin >> l >> r;\n  n--;\n  while (n--) {\n    int x, y;\n    cin >> x >> y;\n    for (int i = x; i < y; i++) arr[i]++;\n  }\n  int ans = 0;\n  for (int i = l; i < r; i++)\n    if (arr[i] == 0) ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create int n, l, r, a[200], x, y, ans, z, w, set ans to 0\n\n  read n\n  read x and y\n  for i=0 to n-1 exclusive\n    read l and r\n    for j= l to r exclusive, set a[j] to 1\n  \n  for i=x to y exclusive\n    if a[i] is 0, increment ans\n  \n  print ans\n  \n\n",
        "int n, l, r, a[200], x, y, ans = 0, z, w;\nint main() {\n  cin >> n;\n  cin >> x >> y;\n  for (int i = 0; i < n - 1; i++) {\n    cin >> l >> r;\n    for (int j = l; j < r; j++) a[j] = 1;\n  }\n  for (int i = x; i < y; i++) {\n    if (!a[i]) ans++;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n=int\n  l,r=int\n  vis=array of 101 int\n  while read n\n    fill vis with 0\n    read l,r\n    for i=l+1 to r inclusive vis[i]=1\n    x,y=int\n    for i=1 to n-1 inclusive\n      read x,y\n      for j=x+1 to y inclusive vis[j]=0\n    \n    cnt=0\n    for i=l+1 to r inclusive add vis[i] to cnt\n    print cnt\n  \n\n",
        "int main() {\n  int n;\n  int l, r;\n  int vis[101];\n  while (cin >> n) {\n    memset(vis, 0, sizeof(vis));\n    cin >> l >> r;\n    for (int i = l + 1; i <= r; i++) { vis[i] = 1; }\n    int x, y;\n    for (int i = 1; i <= n - 1; i++) {\n      cin >> x >> y;\n      for (int j = x + 1; j <= y; j++) { vis[j] = 0; }\n    }\n    int cnt = 0;\n    for (int i = l + 1; i <= r; i++) { cnt += vis[i]; }\n    cout << cnt << endl;\n  }\n}\n"
    ],
    [
        "in int function miniel which takes an int vecotr v and an int x\n  let l = int = 11111111\n  for i = 0 to x inclusive\n    if v at i < l then set l = v at 1\n  \n  return l\n\n\n  let n, s, e, p be integers\n  read n, s, e\n  let arr be an integer array of length 100, with arr[0] = 0\n  sum = int = 0\n  l = int = -111\n  for i = 1 to n\n    let x, y be int\n    read x and y\n    if e <= y\n      set p to e\n    else\n      set p to y\n    \n    for i = x to p, set arr[i] to arr[i] + 1\n  \n  for i = s to e\n    if arr at i is 0 then increment sum\n  \n  print sum and new line\n  \n\n",
        "int minel(vector<int> v, int x) {\n  int l = 11111111;\n  for (int i = 0; i <= x; i++) {\n    if (v[i] < l) { l = v[i]; }\n  }\n  return l;\n}\nint main() {\n  int n, s, e, p;\n  cin >> n >> s >> e;\n  int arr[100] = {0};\n  int sum = 0;\n  int l = -111;\n  for (int i = 1; i < n; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (e <= y) {\n      p = e;\n    } else {\n      p = y;\n    }\n    for (int i = x; i < p; i++) { arr[i] = arr[i] + 1; }\n  }\n  for (int i = s; i < e; i++) {\n    if (arr[i] == 0) { sum++; }\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "create int n, a, b, c, d, ans\ncreate int array dryer of length 101\n\n  read n, a and b\n  while pre decrement n\n    read c and d\n    for i=c to d exclusive, set dryer[i] to 1\n  \n  for i=a to b exclusive\n    if dryer[i] equal to 0, increment ans\n  \n  print ans\n  \n\n",
        "int n, a, b, c, d, ans;\nint dryer[101];\nint main() {\n  cin >> n >> a >> b;\n  while (--n) {\n    cin >> c >> d;\n    for (int i = c; i < d; i++) { dryer[i] = 1; }\n  }\n  for (int i = a; i < b; i++) {\n    if (dryer[i] == 0) { ans++; }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create const int maxn = 100 + 10\nlet bool array mark size of maxn\n\n  let int n\n  read n\n  make ints L and R\n  for i = 0 to n exclusive\n    let ints l and r\n    read l and r\n    if i is greater than 0\n      for j = l to r exclusive, set mark[j] to true\n    else\n      set L to l and R to r\n  \n  make integer ans = 0\n  for i = 0 to maxn exclusive\n    if !mark[i] is truthy and L is less than or equal to i and i is less than R, increment ans\n  print ans\n  \n\n",
        "const int maxn = 100 + 10;\nbool mark[maxn];\nint main() {\n  int n;\n  cin >> n;\n  int L, R;\n  for (int i = 0; i < n; i++) {\n    int l, r;\n    cin >> l >> r;\n    if (i > 0)\n      for (int j = l; j < r; j++) mark[j] = true;\n    else\n      L = l, R = r;\n  }\n  int ans = 0;\n  for (int i = 0; i < maxn; i++)\n    if (!mark[i] && L <= i && i < R) ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  b, a, n, i, c, d, m, j = integers\n  v = integer array of size 110\n  while read n, c, d\n    m = 0\n    for i = 0 to 100, v[i] = 0\n    for i = 0 to n - 1 exclusive\n      read a, b\n      for j = a + 1 to b, v[j] = -1\n    \n    for i = c + 1 to d\n      if v[i] is 0, increment m\n    print m\n  \n  \n\n",
        "int main() {\n  int b, a, n, i, c, d, m, j;\n  int v[110];\n  while (cin >> n >> c >> d) {\n    m = 0;\n    for (i = 0; i < 101; i++) v[i] = 0;\n    for (i = 0; i < n - 1; i++) {\n      cin >> a >> b;\n      for (j = a + 1; j <= b; j++) v[j] = -1;\n    }\n    for (i = c + 1; i <= d; i++)\n      if (v[i] == 0) m++;\n    cout << m << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "N=100011\nuse=array of N bool\n\n  n=int\n  read n\n  l,r=int\n  read l,r\n  for i=1 to n exclusive\n    l,r=int\n    read l,r\n    for j=l to r exclusive use[j]=1\n  \n  ans=0\n  for i=l to r exclusive\n    if use[i] is 0 increment ans\n  print ans\n\n",
        "const int N = 1e5 + 11;\nbool use[N];\nint main() {\n  int n;\n  cin >> n;\n  int l, r;\n  cin >> l >> r;\n  for (int i = 1; i < n; i++) {\n    int l, r;\n    cin >> l >> r;\n    for (int j = l; j < r; j++) use[j] = 1;\n  }\n  int ans = 0;\n  for (int i = l; i < r; i++)\n    if (use[i] == 0) ans++;\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  i = int\n  x = int vector of size n\n  y = int vector of size n\n  z = int vector of size 101 with all values set to 1\n  read n values into x then y\n  k = int\n  for i = 1 to n\n    for j = x[i] to y[i] set z[k] to 0\n  \n  ct = int with ct = 0\n  for i = x[0] to y[0]\n    if z[i] is 1 increment ct\n  \n  print ct\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int i;\n  vector<int> x(n);\n  vector<int> y(n);\n  vector<int> z(101, 1);\n  for (i = 0; i < n; i++) { cin >> x[i] >> y[i]; }\n  int k;\n  for (i = 1; i < n; i++) {\n    for (k = x[i]; k < y[i]; k++) { z[k] = 0; }\n  }\n  int ct = 0;\n  for (i = x[0]; i < y[0]; i++) {\n    if (z[i] == 1) { ct++; }\n  }\n  cout << ct << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be a integer\n  read n\n  let x, y be integers\n  read x, y\n  let d be a integer with d = y - x\n  a = array of integers of length d\n  for i = 0 to d exclusive , the value of a[i] is equal to 1\n  for i = 0 to n - 1 exclusive\n    let m, n be integers\n    read m, n\n    decrement n by 1\n    for p = m to n inclusive\n      if p >= y or p is less than x, proceed to next\n      the value of a[p - x] is equal to 0\n    \n  \n  let sum be a integer with sum = 0\n  for j = 0 to d exclusive, increment sum by a[j]\n  print sum and newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x, y;\n  cin >> x >> y;\n  int d = y - x;\n  int a[d];\n  for (int i = 0; i < d; i++) a[i] = 1;\n  for (int i = 0; i < n - 1; i++) {\n    int m, n;\n    cin >> m >> n;\n    n--;\n    for (int p = m; p <= n; p++) {\n      if (p >= y || p < x) continue;\n      a[p - x] = 0;\n    }\n  }\n  int sum = 0;\n  for (int j = 0; j < d; j++) sum += a[j];\n  cout << sum << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create int array v[105]\n\n  create long long n and sum, set sum to 0\n  read n\n  let x and y be int\n  read x, y\n  for i=2 to n inclusive\n    create int a and b\n    read a and b\n    for j= a+1 to b inclusive, set v[j] to 1\n  \n  for i=x+1 to y inclusive, assign sum + 1 - v[i] to sum\n  print sum and a newline\n  \n\n",
        "int v[105];\nint main() {\n  long long n, sum = 0;\n  cin >> n;\n  int x, y;\n  cin >> x >> y;\n  for (int i = 2; i <= n; ++i) {\n    int a, b;\n    cin >> a >> b;\n    for (int j = a + 1; j <= b; ++j) v[j] = 1;\n  }\n  for (int i = x + 1; i <= y; ++i) sum += 1 - v[i];\n  cout << sum << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create int array a of length 105\ncreate integers n, x, y, i, l, r\nlet sum and j be integers\n\n  read n\n  read x and y\n  for i=1 to n exclusive\n    read l and r\n    for j=l to r exclusive, set a[j] to 1\n  \n  assign 0 to sum\n  for i=x to y exclusive\n    if a[i] equal to 0, sum = sum +1\n  \n  print sum\n\n",
        "int a[105];\nint n, x, y, i, l, r;\nint sum, j;\nint main() {\n  cin >> n;\n  cin >> x >> y;\n  for (i = 1; i < n; i++) {\n    cin >> l >> r;\n    for (j = l; j < r; j++) { a[j] = 1; }\n  }\n  sum = 0;\n  for (i = x; i < y; i++) {\n    if (a[i] == 0) sum++;\n  }\n  cout << sum << endl;\n}\n"
    ],
    [
        "\n  n, i, j, sum, alexeyI and alexeyJ are integers with sum = 0\n  create int array dryer with size 101\n  call fill_n(dryer, 101, 1)\n  read n\n  read input to alexeyI and alexeyJ\n  for integer l = 0 to n - 1 exclusive\n    read i and j\n    for k from i to j exclusive, set dryer[k] to 0\n  \n  for k from alexeyI to alexeyJ exclusive, add dryer[k] to sum\n  print sum\n  \n\n",
        "int main() {\n  int n, i, j, sum = 0, alexeyI, alexeyJ;\n  int dryer[101];\n  fill_n(dryer, 101, 1);\n  cin >> n;\n  cin >> alexeyI >> alexeyJ;\n  for (int l = 0; l < n - 1; l++) {\n    cin >> i >> j;\n    for (int k = i; k < j; k++) { dryer[k] = 0; }\n  }\n  for (int k = alexeyI; k < alexeyJ; k++) { sum += dryer[k]; }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "create int array arr with size 1000\n\n  declare integer variable n\n  read n\n  create integers l and r\n  read l and r\n  decrement n by one\n  while n != 0, decrement it and continue the loop\n    create ints x and y\n    read input to x and y\n    for i = y to x exclusive counting down, increment arr[i] by one\n  \n  declare int variable ans = 0\n  for i = r to l exclusive counting down\n    if arr[i] is equal to 0, increment ans by one\n  print ans\n  \n\n",
        "int arr[1000];\nint main() {\n  int n;\n  cin >> n;\n  int l, r;\n  cin >> l >> r;\n  n--;\n  while (n--) {\n    int x, y;\n    cin >> x >> y;\n    for (int i = y; i > x; i--) arr[i]++;\n  }\n  int ans = 0;\n  for (int i = r; i > l; i--)\n    if (arr[i] == 0) ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "in function File\n  call freopen of \"output.txt\", \"w\" and stdout\n  call freopen of \"input.txt\", \"r\" and stdin\n\ndefine empty function fast\npi = const double with pi = 2 * acos of 0.0\nnn = const int with nn = 2e5 + 5\noo = const int with oo = 0x3f3f3f3f\n\n  call fast\n  n, b, e, ans = int with ans = 0\n  arr = int array of size nn\n  read n\n  read b then e\n  for i = 0 to n - 1\n    x, y = int\n    read x then y\n    for j = x to y increment arr[j]\n  \n  for i = b to e\n    if arr8i] is 0 increment ans\n  print ans\n  \n\n",
        "void File() {\n  freopen(\"output.txt\", \"w\", stdout);\n  freopen(\"input.txt\", \"r\", stdin);\n}\nvoid fast() {}\nconst double pi = 2 * acos(0.0);\nconst int nn = 2e5 + 5;\nconst int oo = 0x3f3f3f3f;\nint main() {\n  fast();\n  int n, b, e, ans = 0;\n  int arr[nn] = {};\n  cin >> n;\n  cin >> b >> e;\n  for (int i = 0; i < n - 1; i++) {\n    int x, y;\n    cin >> x >> y;\n    for (int j = x; j < y; j++) arr[j]++;\n  }\n  for (int i = b; i < e; i++)\n    if (!arr[i]) ans++;\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create long longs A, B, ans with ans = -0x7fffffff\ncreate long longs bxb, bex, bob, bpb\n\n  read A read B\n  if B is 0\n    print A * A print newline\n    for i = 0 to A exclusive print \"o\"\n    print newline\n    \n  \n  if B is 1\n    print A * A - 1 print newline\n    for i = 0 to A exclusive, print \"o\"\n    print \"x\" print newline\n    \n  \n  if A is 0\n    print -B * B print newline\n    for i = 0 to B exclusive, print \"x'\n    print newline\n    \n  \n  for xb = 2 to minimum of (B and A + 1) inclusive\n    create integer ob with ob = xb - 1\n    create long long score with score = ob - 1\n    increment score by (A - (ob - 1)) * (A - (ob - 1))\n    end statement\n    create long long pb with pb = B / xb\n    create long long ex with ex = B % xb\n    decrement score by ( xb - ex ) * pb * pb\n    decrement score by ex * ( pb + 1 ) * ( pb + 1 )\n    if score is greater than ans\n      set ans to score\n      set bxb to xb\n      set bex to ex\n      set bob to ob\n      set bpb to pb\n    \n  \n  print ans print newline\n  for i = 0 to bxb exclusive\n    for j = 0 to bpb exclusive, print \"x\"\n    if i is less than bex, print \"x\"\n    if i is 0\n      for j = 0 to A - ( bob - 1 ) exclusive, print \"o\"\n    else if i + 1 is less than bxb\n      print \"o\"\n  \n  print newline\n  \n\n",
        "long long A, B, ans = -0x7fffffff;\nlong long bxb, bex, bob, bpb;\nint main() {\n  cin >> A >> B;\n  if (B == 0) {\n    cout << A * A << endl;\n    for (int i = 0; i < A; i++) cout << \"o\";\n    cout << endl;\n    return 0;\n  }\n  if (B == 1) {\n    cout << A * A - 1 << endl;\n    for (int i = 0; i < A; i++) cout << \"o\";\n    cout << \"x\" << endl;\n    return 0;\n  }\n  if (A == 0) {\n    cout << -B * B << endl;\n    for (int i = 0; i < B; i++) cout << \"x\";\n    cout << endl;\n    return 0;\n  }\n  for (int xb = 2; xb <= min(B, A + 1); xb++) {\n    int ob = xb - 1;\n    long long score = ob - 1;\n    score += (A - (ob - 1)) * (A - (ob - 1));\n    ;\n    long long pb = B / xb;\n    long long ex = B % xb;\n    score -= (xb - ex) * pb * pb;\n    score -= ex * (pb + 1) * (pb + 1);\n    if (score > ans) {\n      ans = score;\n      bxb = xb;\n      bex = ex;\n      bob = ob;\n      bpb = pb;\n    }\n  }\n  cout << ans << endl;\n  for (int i = 0; i < bxb; i++) {\n    for (int j = 0; j < bpb; j++) cout << \"x\";\n    if (i < bex) cout << \"x\";\n    if (i == 0)\n      for (int j = 0; j < A - (bob - 1); j++) cout << \"o\";\n    else if (i + 1 < bxb)\n      cout << \"o\";\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "declare integer variables co and cx\ncreate const long long inf = -1e16\ninlined long long function gox with int argument num\n  return inf if num is greater than cx\n  declare int ex = cx % num\n  declare int variable anch = cx / num\n  declare long long variable ans = 1LL * (anch + 1) * (anch + 1) * ex\n  increase ans by 1LL * anch * anch * (num - ex)\n  return -ans\n\ninlined long long function goo with int argument num\n  if num is greater than co\n  declare int variable juntos = co - num + 1\n  create long long ans = 1LL * juntos * juntos\n  increase ans by num - 1\n  return ans\n\ninlined void function build with int arguments x and o\n  create string s\n  declare integer xx = cx / x\n  create bool flag = true if x > o, else false\n  declare bool variable fst = true\n  create integer ex = cx % x\n  declare integer prim = co - o + 1\n  while either x or o is true\n    if flag is true\n      push 'x' into s xx times\n      if ex is greater than 0, push 'x' into s and decrement ex\n      decrement x\n    else\n      if fst is true\n        push 'o' into s prim times\n        set fst to false\n      else\n        push 'o' into s\n      decrement o\n    \n    invert the value of flag\n  \n  print s\n\n\n  read co and cx\n  if co is 0 or cx is 0\n    if co is greater than 0\n      print 1LL * co * co\n      print 'o' co times\n      print a new line\n    \n    if cx is greater than 0\n      print - 1LL * cx * cx\n      print 'x' cx times\n      print\n    \n    \n  \n  declare int lim = min of co and cx\n  create long long ans = LLONG_MIN\n  pos is a pair of integers\n  for integer i = 1 to lim + 1 exclusive\n    if ans is less than gox(i) + goo(i)\n      assign gox(i) + goo(i) to ans\n      pos = {i, i}\n    \n  \n  for i = 2 to cx + 1 exclusive\n    if ans is less than gox(i) + goo(i - 1)\n      change ans to gox(i) + goo(i - 1)\n      pos = {i, i - 1}\n    \n  \n  for i = 2 to co + 1 exclusive\n    if ans is less than gox(i - 1) + goo(i)\n      set ans to gox(i - 1) + goo(i)\n      pos = {i - 1, i}\n    \n  \n  print ans\n  call build with arguments pos.first and pos.second\n  \n\n",
        "int co, cx;\nconst long long inf = -1e16;\ninline long long gox(int num) {\n  if (num > cx) return inf;\n  int ex = cx % num;\n  int anch = cx / num;\n  long long ans = 1LL * (anch + 1) * (anch + 1) * ex;\n  ans += 1LL * anch * anch * (num - ex);\n  return -ans;\n}\ninline long long goo(int num) {\n  if (num > co) return inf;\n  int juntos = co - num + 1;\n  long long ans = 1LL * juntos * juntos;\n  ans += num - 1;\n  return ans;\n}\ninline void build(int x, int o) {\n  string s;\n  int xx = cx / x;\n  bool flag = (x > o);\n  bool fst = true;\n  int ex = cx % x;\n  int prim = co - o + 1;\n  while (x || o) {\n    if (flag) {\n      for (int i = int(0); i < int(xx); ++i) s.push_back('x');\n      if (ex > 0) s.push_back('x'), ex--;\n      x--;\n    } else {\n      if (fst) {\n        for (int i = int(0); i < int(prim); ++i) s.push_back('o');\n        fst = false;\n      } else\n        s.push_back('o');\n      o--;\n    }\n    flag = (!flag);\n  }\n  cout << s << endl;\n}\nint main() {\n  cin >> co >> cx;\n  if (co == 0 || cx == 0) {\n    if (co > 0) {\n      cout << 1LL * co * co << endl;\n      for (int i = int(0); i < int(co); ++i) cout << 'o';\n      cout << endl;\n    }\n    if (cx > 0) {\n      cout << -1LL * cx * cx << endl;\n      for (int i = int(0); i < int(cx); ++i) cout << 'x';\n      cout << endl;\n    }\n    return 0;\n  }\n  int lim = min(co, cx);\n  long long ans = LLONG_MIN;\n  pair<int, int> pos;\n  for (int i = int(1); i < int(lim + 1); ++i) {\n    if (ans < gox(i) + goo(i)) {\n      ans = gox(i) + goo(i);\n      pos = {i, i};\n    }\n  }\n  for (int i = int(2); i < int(cx + 1); ++i) {\n    if (ans < gox(i) + goo(i - 1)) {\n      ans = gox(i) + goo(i - 1);\n      pos = {i, i - 1};\n    }\n  }\n  for (int i = int(2); i < int(co + 1); ++i) {\n    if (ans < gox(i - 1) + goo(i)) {\n      ans = gox(i - 1) + goo(i);\n      pos = {i - 1, i};\n    }\n  }\n  cout << ans << endl;\n  build(pos.first, pos.second);\n  return 0;\n}\n"
    ],
    [
        "\n  create long long a and b\n  read a,b\n  if a equal to 0\n    print -1 * b * b\n    for i=0 to b exclusive, print x\n    print a newline\n  else if b = 0\n    print a * a\n    for i=0 to a exclusive, print o\n    print a newline\n  else if b equal to 1\n    print a*a -1\n    for i=0 to a exclusive, print o\n    print x\n    print a newline\n  else\n    ser ret to LLONG_MIN\n    set foo=0\n    for j=1 to min of b-1 and a\n      assign (a - j + 1) * (a - j + 1) + (j - 1) to pos\n      set q = b / (j + 1) and r to b % (j + 1)\n      set neg = r * (q + 1) * (q + 1) + (j + 1 - r) * q * q\n      if pos - neg greater than ret\n        ret = pos - neg\n        assign j + 1 to foo\n      \n    \n    print ret\n    set q = b / foo, r = b % foo\n    assign (a - (foo - 1) + 1) to g\n    for j=1 to foo + 1 exclusive\n      for i=0 to q exclusive, print x\n      if <= r, print x\n      if j different from foo\n        if j equal to 1\n          for i=0 to g exclusive, print o\n        else\n          print o\n      \n    \n    print a newline\n  \n  \n\n",
        "int main() {\n  long long a, b;\n  cin >> a >> b;\n  if (a == 0) {\n    cout << -1 * b * b << endl;\n    for (int(i) = (0); (i) < (b); ++(i)) cout << 'x';\n    cout << endl;\n  } else if (b == 0) {\n    cout << a * a << endl;\n    for (int(i) = (0); (i) < (a); ++(i)) cout << 'o';\n    cout << endl;\n  } else if (b == 1) {\n    cout << a * a - 1 << endl;\n    for (int(i) = (0); (i) < (a); ++(i)) cout << 'o';\n    cout << 'x';\n    cout << endl;\n  } else {\n    long long ret = LLONG_MIN;\n    long long foo = 0;\n    for (long long j = 1; j <= min(b - 1, a); j++) {\n      long long pos = (a - j + 1) * (a - j + 1) + (j - 1);\n      long long q = b / (j + 1), r = b % (j + 1);\n      long long neg = r * (q + 1) * (q + 1) + (j + 1 - r) * q * q;\n      if (pos - neg > ret) {\n        ret = pos - neg;\n        foo = j + 1;\n      }\n    }\n    cout << ret << endl;\n    long long q = b / foo, r = b % foo;\n    long long g = (a - (foo - 1) + 1);\n    for (int(j) = (1); (j) < (foo + 1); ++(j)) {\n      for (int(i) = (0); (i) < (q); ++(i)) cout << 'x';\n      if (j <= r) cout << 'x';\n      if (j != foo) {\n        if (j == 1)\n          for (int(i) = (0); (i) < (g); ++(i)) cout << 'o';\n        else\n          cout << 'o';\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer vector v\n\n  create integers n, p, k\n  read n read p read k\n  for x = p - k to p + k inclusive\n    if x is less than 1, break current loop iteration\n    if x is greater than n, break current loop iteration\n    add element x to end of v\n  \n  if v[0] is not 1, print \"<< \"\n  for i = 0 to integer casted size of v exclusive\n    if v[i] is p, print \"(\"\n    print v[i]\n    if v[i] is p, print \")\"\n    if i is integer casted size of v - 1\n      if v[i] is less than n\n        print \" >>\" print newline\n      else\n        print newline\n    else\n      print \" \"\n  \n  \n\n",
        "vector<int> v;\nint main() {\n  int n, p, k;\n  cin >> n >> p >> k;\n  for (int x = p - k; x <= p + k; x++) {\n    if (x < 1) continue;\n    if (x > n) continue;\n    v.push_back(x);\n  }\n  if (v[0] != 1) cout << \"<< \";\n  for (int(i) = (0); (i) < (((int)v.size())); ++(i)) {\n    if (v[i] == p) cout << \"(\";\n    cout << v[i];\n    if (v[i] == p) cout << \")\";\n    if (i == ((int)v.size()) - 1) {\n      if (v[i] < n)\n        cout << \" >>\" << endl;\n      else\n        cout << endl;\n    } else\n      cout << \" \";\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer queue q\ncreate boolean array p with size 10000 with p = {}\ncreate integer pe\ndeclare print with integers c, a, b as arguments, returning void\n  if a is less than c or a is greater than b or p[a] or a is greater than pe or a is less than 1, return from function\n  set p[a] to true\n  run print with c, a - 1, b as arguments\n  add element a to end of q\n  run print with c, a + 1, b as arguments\n\n\n  create integers n, k\n  read pe read n read k\n  if n - k is greater than 1, print \"<< \"\n  run print with n - k, n, n + k as arguments\n  while q is not empty\n    if size of q is not 1 and front of q is not n\n      print front of q print \" \"\n    else if front of q is n\n      print \"(\" print front of q\n      if size of q is not 1\n        print \") \"\n      else\n        print \")\"\n    else\n      print front of q\n    remove element from end of q\n  \n  if n + k is less than pe, print \" >>\"\n  print newline\n\n",
        "queue<int> q;\nbool p[10000] = {};\nint pe;\nvoid print(int c, int a, int b) {\n  if (a < c || a > b || p[a] || a > pe || a < 1) return;\n  p[a] = true;\n  print(c, a - 1, b);\n  q.push(a);\n  print(c, a + 1, b);\n}\nint main() {\n  int n, k;\n  cin >> pe >> n >> k;\n  if (n - k > 1) { cout << \"<< \"; }\n  print(n - k, n, n + k);\n  while (!q.empty()) {\n    if (q.size() != 1 && q.front() != n)\n      cout << q.front() << \" \";\n    else if (q.front() == n) {\n      cout << \"(\" << q.front();\n      if (q.size() != 1) {\n        cout << \") \";\n      } else\n        cout << \")\";\n    } else\n      cout << q.front();\n    q.pop();\n  }\n  if (n + k < pe) { cout << \" >>\"; }\n  cout << endl;\n}\n"
    ],
    [
        "in the function desperate_optimization\n  set format flag ios::fixed of the output\n  set format flag ios::showpoint of the output\n  set output precision to precision\n\n\n  call desperate_optimization(10)\n  let n, p and k be integers\n  read n, p and k\n  if p - k is greater than 1\n  for i = max of 1 and p - k to p exclusive, print i and \" \"\n  print \"(\", p and \")\"\n  for i = p + 1 to min of n and p + k inclusive, print \" \" and i\n  if p + k is less than n, print \" >>\"\n  print '\\n'\n  \n\n",
        "void desperate_optimization(int precision) {\n  cout.setf(ios::fixed);\n  cout.setf(ios::showpoint);\n  cout.precision(precision);\n}\nint main() {\n  desperate_optimization(10);\n  int n, p, k;\n  cin >> n >> p >> k;\n  if (p - k > 1) cout << \"<< \";\n  for (int i = max(1, p - k); i < p; i++) { cout << i << \" \"; }\n  cout << \"(\" << p << \")\";\n  for (int i = p + 1; i <= min(n, p + k); i++) { cout << \" \" << i; }\n  if (p + k < n) cout << \" >>\";\n  cout << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, p, k\n  create booleans start, end with start = 1, end = 0\n  read n read p read k\n  for i = p - k to p + k inclusive\n    if start is true\n      if i is less than or equal to 1\n        if p is 1\n          print \"(\" print 1 print \")\"\n        else\n          print 1\n        set i to 1\n      else\n        print \"<< \" print i\n      set start to 0\n      break current loop iteration\n    \n    if i is greater than or equal to n\n      set end to 1\n      if p is n\n        print \" (\" print n print \")\"\n      else\n        print \" \" print n\n      break loop\n    \n    if i is p\n      print \" (\" print i print \")\"\n    else\n      print \" \" print i\n    \n  \n  if not end print \" >>\"\n  print '\\n'\n\n",
        "int main() {\n  int n, p, k;\n  bool start = 1, end = 0;\n  cin >> n >> p >> k;\n  for (int i = p - k; i <= p + k; i++) {\n    if (start) {\n      if (i <= 1) {\n        if (p == 1)\n          cout << \"(\" << 1 << \")\";\n        else\n          cout << 1;\n        i = 1;\n      } else\n        cout << \"<< \" << i;\n      start = 0;\n      continue;\n    }\n    if (i >= n) {\n      end = 1;\n      if (p == n)\n        cout << \" (\" << n << \")\";\n      else\n        cout << \" \" << n;\n      break;\n    }\n    if (i == p)\n      cout << \" (\" << i << \")\";\n    else {\n      cout << \" \" << i;\n    }\n  }\n  if (!end) cout << \" >>\";\n  cout << '\\n';\n}\n"
    ],
    [
        "pi = const double with pi = 3.14159265359\nMOD = const long long with MOD = 1000 * 1000 * 1000 + 7\nN = const int with N = 200 * 1000 + 10\n\n  a, b = int\n  read a then b\n  aa, bb = int with aa = a * a and bb = b * b\n  as = int vector\n  bs = int vector\n  for i = 1 to aa\n    int sq = sqrt of aa - i * -\n    if sq * sq + i * i is aa then append i to as\n  \n  for i = 1 to bb\n    sq = int with sq = sqrt of bb - i * i\n    if sq * sq + i * i is bb then append i to bs\n  \n  for i = 0 to size of as\n    for j = 0 to size of bs\n      xa = int with xa = as[i]\n      ya = int with ya = sqrt of aa - xa * xa\n      xb = int with xb = bs[j]\n      yb = int with yb = sqrt of bb - xb * xb\n      if (xb - xa) * (xb - xa) + (ya + yb) * (ya + yb) is aa + bb and xb is not xa\n        print \"YES\"\n        print xa and ya\n        print xb and -yb\n        print 0 and 0\n        \n      \n    \n  \n  print \"NO\"\n\n",
        "const double pi = 3.14159265359;\nconst long long MOD = 1000 * 1000 * 1000 + 7;\nconst int N = 200 * 1000 + 10;\nint main() {\n  int a, b;\n  cin >> a >> b;\n  int aa = a * a, bb = b * b;\n  vector<int> as;\n  vector<int> bs;\n  for (int i = 1; i < aa; i++) {\n    int sq = sqrt(aa - i * i);\n    if (sq * sq + i * i == aa) as.push_back(i);\n  }\n  for (int i = 1; i < bb; i++) {\n    int sq = sqrt(bb - i * i);\n    if (sq * sq + i * i == bb) bs.push_back(i);\n  }\n  for (int i = 0; i < as.size(); i++) {\n    for (int j = 0; j < bs.size(); j++) {\n      int xa = as[i];\n      int ya = sqrt(aa - xa * xa);\n      int xb = bs[j];\n      int yb = sqrt(bb - xb * xb);\n      if ((xb - xa) * (xb - xa) + (ya + yb) * (ya + yb) == aa + bb && xb != xa) {\n        cout << \"YES\\n\";\n        cout << xa << \" \" << ya << '\\n';\n        cout << xb << \" \" << -yb << '\\n';\n        cout << 0 << \" \" << 0 << '\\n';\n        return 0;\n      }\n    }\n  }\n  cout << \"NO\\n\";\n}\n"
    ],
    [
        "\n  create integers n and v\n  read n and v\n  a is an array of doubles with size n\n  read n elements into array a\n  declare double called minvalue = INT_MAX\n  b is an array of doubles with size n\n  for integer i = 0 to n exclusive\n    read b[i]\n    assign value of min of minvalue and b[i] to the minvalue\n  \n  l is double = 0\n  let r be double = 1e18\n  answer is double = 0\n  for integer i = 1 to 100 inclusive\n    double mid = (l + (r - l) / 2)\n    sum is double = 0\n    flag is integer = 0\n    for i = 0 to n exclusive\n      set double value to a[i] * mid\n      if value is greater than b[i]\n        set flag to 1\n        break the loop\n      else\n        increase sum by (a[i] * mid)\n    \n    if flag = 1\n      set value of r to mid - 1\n      skip the rest of the loop\n    \n    if sum <= v\n      set answer to sum\n      l = mid + 1\n    else\n      r = mid - 1\n    \n  \n  print setprecision(6), fixed, answer and \"\\n\"\n  \n\n",
        "int main() {\n  int n, v;\n  cin >> n >> v;\n  double a[n];\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  double minvalue = INT_MAX;\n  double b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> b[i];\n    minvalue = min(minvalue, b[i]);\n  }\n  double l = 0;\n  double r = 1e18;\n  double answer = 0;\n  for (int i = 1; i <= 100; i++) {\n    double mid = (l + (r - l) / 2);\n    double sum = 0;\n    int flag = 0;\n    for (int i = 0; i < n; i++) {\n      double value = a[i] * mid;\n      if (value > b[i]) {\n        flag = 1;\n        break;\n      } else\n        sum += (a[i] * mid);\n    }\n    if (flag == 1) {\n      r = mid - 1;\n      continue;\n    }\n    if (sum <= v) {\n      answer = sum;\n      l = mid + 1;\n    } else {\n      r = mid - 1;\n    }\n  }\n  cout << setprecision(6) << fixed << answer << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read input to n\n  let A be integer array with size n\n  read n elements into A\n  create integer ansf = 1\n  create integer j = 0\n  create integer ch = 0\n  create integer max1 = 1\n  create integer x = 1\n  declare integer array dp with size n filled with 0\n  for integer i = 1 to n exclusive incrementing i\n    if A[i] is greater than A[i - 1]\n      change dp[i] to dp[i - 1] + 1\n    else\n      assign 0 to dp[i]\n    \n  \n  loop i from 1 to n exclusive\n    if A[i] is greater than A[i - 1]\n      increment ansf by one\n    else\n      if ch is 0\n        assign A[i] to x\n        assign A[i - 1] + 1 to A[i]\n        change j to i\n        assign 1 to ch\n        increment ansf by one\n      else\n        assign i - j to ansf\n        change A[j] to x\n        if ansf = 1\n          if A[i] is greater than A[i - 1]\n            increment ansf by one\n            change x to A[i - 2]\n            increment ansf by one\n            assign i - 2 to j\n            change A[i - 2] to A[i - 1] - 1\n            if i >= 3 and A[i - 2] > A[i - 3], increase ansf by dp[i - 2]\n          else\n            increment ansf\n            assign A[i - 1] to x\n            assign i - 1 to j\n            change A[i - 1] to A[i] - 1\n            if A[i - 1] is greater than A[i - 2], increase ansf by dp[i - 1]\n          \n        else\n          if A[j] is less than A[j + 1], increment ansf\n          change x to A[i]\n          set j to i\n          change A[i] to A[i - 1] + 1\n        \n      \n    \n    change max1 to max of max1 and ansf\n  \n  print max1 and \"\\n\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int A[n];\n  for (int i = 0; i < n; i++) { cin >> A[i]; }\n  int ansf = 1;\n  int j = 0;\n  int ch = 0;\n  int max1 = 1;\n  int x = 0;\n  int dp[n] = {0};\n  for (int i = 1; i < n; i++) {\n    if (A[i] > A[i - 1]) {\n      dp[i] = dp[i - 1] + 1;\n    } else {\n      dp[i] = 0;\n    }\n  }\n  for (int i = 1; i < n; i++) {\n    if (A[i] > A[i - 1]) {\n      ansf++;\n    } else {\n      if (ch == 0) {\n        x = A[i];\n        A[i] = A[i - 1] + 1;\n        j = i;\n        ch = 1;\n        ansf++;\n      } else {\n        ansf = i - j;\n        A[j] = x;\n        if (ansf == 1) {\n          if (A[i] > A[i - 1]) {\n            ansf++;\n            x = A[i - 2];\n            ansf++;\n            j = i - 2;\n            A[i - 2] = A[i - 1] - 1;\n            if (i >= 3 && A[i - 2] > A[i - 3]) ansf = ansf + dp[i - 2];\n          } else {\n            ansf++;\n            x = A[i - 1];\n            j = i - 1;\n            A[i - 1] = A[i] - 1;\n            if (A[i - 1] > A[i - 2]) ansf = ansf + dp[i - 1];\n          }\n        } else {\n          if (A[j] < A[j + 1]) ansf++;\n          x = A[i];\n          j = i;\n          A[i] = A[i - 1] + 1;\n        }\n      }\n    }\n    max1 = max(max1, ansf);\n  }\n  cout << max1 << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "v = vector array of long long of size 100005\nin the function solve\n  n, x, b, y, ans = long long with x = 0, ans = 0\n  read n\n  a = array of long long of size n\n  for i = 0 to n exclusive\n    read a[i]\n    if i is 0\n      append a[i] in v[x]\n      continue iteration\n    \n    if a[i] <= a[i - 1], increment x\n    append a[i] in v[x]\n  \n  if x is 0\n    print v[0].size()\n    return\n  \n  for i = 0 to x + 1\n    if i is x\n      y = v[i].size() + 1\n    else\n      n = long long with n = v[i].size()\n      m = long long with m = v[i + 1].size()\n      if m is 1\n        y = n + 1;\n      else if n is 1\n        y = m + 1\n      else if v[i + 1][1] - v[i][n - 1] > 1\n        y = n + m\n      else if v[i + 1][0] - v[i][n - 2] > 1\n        y = n + m\n      else\n        y = n + 1\n    \n    ans = max of ans and y\n  \n  print ans\n  return\n\n\n  TESTS = long long with TESTS = 1\n  while postfix decrement TESTS, call solve\n  \n\n",
        "vector<long long> v[100005];\nvoid solve() {\n  long long n, x = 0, b, y, ans = 0;\n  cin >> n;\n  long long a[n];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    if (i == 0) {\n      v[x].push_back(a[i]);\n      continue;\n    }\n    if (a[i] <= a[i - 1]) x++;\n    v[x].push_back(a[i]);\n  }\n  if (x == 0) {\n    cout << v[0].size() << '\\n';\n    return;\n  }\n  for (long long i = 0; i < x + 1; i++) {\n    if (i == x) {\n      y = v[i].size() + 1;\n    } else {\n      long long n = v[i].size();\n      long long m = v[i + 1].size();\n      if (m == 1) {\n        y = n + 1;\n      } else if (n == 1) {\n        y = m + 1;\n      } else if (v[i + 1][1] - v[i][n - 1] > 1) {\n        y = n + m;\n      } else if (v[i + 1][0] - v[i][n - 2] > 1) {\n        y = n + m;\n      } else\n        y = n + 1;\n    }\n    ans = max(ans, y);\n  }\n  cout << ans << '\\n';\n  return;\n}\nint main() {\n  long long TESTS = 1;\n  while (TESTS--) { solve(); }\n  return 0;\n}\n"
    ],
    [
        "create constant integer max4 with max4 = 10004\ncreate constant integer maxx with maxx = 200005\ncreate constant integer max6 with max6 = 1000006\ncreate constant integer lg5 with lg5 = 17\ncreate constant integer INF with INF = 1000000007\ncreate constant long long INFLL with INFLL = 4LL * 1000000000 * 1000000000\ndeclare powmod with integers a, b, mod as arguments, returning integer\n  create integer res with res = 1\n  set a to a % mod\n  for b, setting b to b bitshift right 1\n    if b bitwise and 1, set res to 1LL * res * a % mod\n    set a to 1LL * a * a % mod\n  \n  return res from function\n\ndeclare gcd with integers a, b as arguments, returning integer\n  while b is greater than 0\n    create integer t with t = a % b\n    set a to b, set b to t\n  \n  return a from function\n\ndeclare lcm with integers a, b as arguments, returning integer\n  return ( a / ( result of run gcd with a, b as arguments ) ) * b\n\ndeclare is_prime with integer n as argument, returning integer\n  if n is less than or equal to 1 or n is greater than 3 and ( n % 2 is 0 or n % 3 is 0 ), return 0 from function\n  for i = 5, t = 2 to i * i is less than or equal to n, incrementing i by t, setting t to 6 - t\n    if n % i is 0, return 0 from function\n  return 1 from function\n\ncreate integer n, create integer arrays arr, pref, suff, with arr size maxx, pref size maxx, suff size maxx\n\n  read n\n  if n is 1, return print 1 print '\\n', 0 from function\n  for i = 1 to n inclusive, read arr[i]\n  for i = 1 to n inclusive\n    if arr[i] is greater than arr[i-1]\n      set pref[i] to pref[i-1] + 1\n    else\n      set pref[i] to 1\n    \n  \n  for i = n to 1 inclusive, decrementing i\n    if i is n or arr[i] is less than arr[i+1]\n      set suff[i] to suff[i+1] + 1\n    else\n      set suff[i] to 1\n    \n  \n  create integer res with res = 2\n  for i = 2 to n exclusive\n    if arr[i+1] is greater than arr[i-1] + 1, set res to maximum of ( res and pref[i-1] + suff[i+1] + 1 )\n  \n  for i = 2 to n exclusive, set res to maximum of ( res and maximum of ( pref[i] and suff[i] ) + 1 )\n  print res print '\\n'\n  \n\n",
        "const int max4 = 10004;\nconst int maxx = 200005;\nconst int max6 = 1000006;\nconst int lg5 = 17;\nconst int INF = 1000000007;\nconst long long INFLL = 4LL * 1000000000 * 1000000000;\nint powmod(int a, int b, int mod) {\n  int res = 1;\n  a %= mod;\n  for (; b; b >>= 1) {\n    if (b & 1) { res = 1LL * res * a % mod; }\n    a = 1LL * a * a % mod;\n  }\n  return res;\n}\nint gcd(int a, int b) {\n  while (b > 0) {\n    int t = a % b;\n    a = b, b = t;\n  }\n  return a;\n}\nint lcm(int a, int b) {\n  return (a / gcd(a, b)) * b;\n}\nint is_prime(int n) {\n  if (n <= 1 || n > 3 && (n % 2 == 0 || n % 3 == 0)) return 0;\n  for (int i = 5, t = 2; i * i <= n; i += t, t = 6 - t)\n    if (n % i == 0) return 0;\n  return 1;\n}\nint n, arr[maxx], pref[maxx], suff[maxx];\nint main() {\n  cin >> n;\n  if (n == 1) { return cout << 1 << '\\n', 0; }\n  for (int i = 1; i <= n; i++) { cin >> arr[i]; }\n  for (int i = 1; i <= n; i++) {\n    if (arr[i] > arr[i - 1]) {\n      pref[i] = pref[i - 1] + 1;\n    } else {\n      pref[i] = 1;\n    }\n  }\n  for (int i = n; i >= 1; i--) {\n    if (i == n || arr[i] < arr[i + 1]) {\n      suff[i] = suff[i + 1] + 1;\n    } else {\n      suff[i] = 1;\n    }\n  }\n  int res = 2;\n  for (int i = 2; i < n; i++) {\n    if (arr[i + 1] > arr[i - 1] + 1) { res = max(res, pref[i - 1] + suff[i + 1] + 1); }\n  }\n  for (int i = 2; i < n; i++) { res = max(res, max(pref[i], suff[i]) + 1); }\n  cout << res << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create const long long inf = 1e9 + 7\n\n  declare integer n\n  read from the input to n\n  create long long ans = 0 and long long arrays a, left and right with size n + 2\n  change a[0] to - 1\n  assign inf to a[n + 1]\n  loop i from 1 to n inclusive incrementing i\n  set right[0] to 0\n  loop i from 1 to n inclusive, change right[i] to right[i - 1] + 1 if a[i] > a[i - 1], or else 1\n  set left[n + 1] to 0\n  loop i from n to 0 inclusive decrementing i, change left[i] to left[i + 1] + 1 if a[i] < a[i + 1], or else 1\n  loop i from 1 to n inclusive\n    if a[i - 1] + 1 is less than a[i+1]\n      set ans to max of ans and 1 + left[i + 1] + right[i - 1]\n    else\n      set ans to max of ans and (max of left[i] and right[i] + 1)\n  \n  print ans\n\n",
        "const long long inf = 1e9 + 7;\nint main() {\n  int n;\n  cin >> n;\n  long long a[n + 2], left[n + 2], right[n + 2], ans = 0;\n  a[0] = -1;\n  a[n + 1] = inf;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  right[0] = 0;\n  for (int i = 1; i <= n; i++) right[i] = (a[i] > a[i - 1] ? right[i - 1] + 1 : 1);\n  left[n + 1] = 0;\n  for (int i = n; i > 0; i--) left[i] = (a[i] < a[i + 1] ? left[i + 1] + 1 : 1);\n  for (int i = 1; i <= n; i++) {\n    if (a[i - 1] + 1 < a[i + 1])\n      ans = max(ans, 1 + left[i + 1] + right[i - 1]);\n    else\n      ans = max(ans, max(left[i], right[i]) + 1);\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "maxn = const integer with maxn = 100005\nINF = const integer with INF = 0x3fffffff\neps = double with eps = 1e-8\npi = double with pi = acos of -1\nf = integer array of size maxn\ng = integer array of size maxn\na = integer array of size maxn\nn = integer\n\n  read n\n  for i = 1 to n, read a[i]\n  for i = 1 to n\n    if a[i] > a[i - 1]\n      f[i] = f[i - 1] + 1\n    else\n      f[i] = 1\n  \n  for i = n down to 1\n    if a[i] < a[i + 1]\n      g[i] = g[i + 1] + 1\n    else\n      g[i] = 1\n  \n  ans = integer with ans = 0\n  for i = 1 to n\n    if a[i + 1] - a[i - 1] > 1\n      ans = max of ans and f[i - 1] + g[i + 1] + 1\n    else\n      ans = max of ans and max(f[i - 1] + 1, g[i + 1] + 1)\n    \n  \n  print ans\n\n",
        "const int maxn = 100005;\nconst int INF = 0x3fffffff;\ndouble eps = 1e-8;\ndouble pi = acos(-1);\nint f[maxn];\nint g[maxn];\nint a[maxn];\nint n;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = 1; i <= n; i++) {\n    if (a[i] > a[i - 1])\n      f[i] = f[i - 1] + 1;\n    else\n      f[i] = 1;\n  }\n  for (int i = n; i >= 1; i--) {\n    if (a[i] < a[i + 1])\n      g[i] = g[i + 1] + 1;\n    else\n      g[i] = 1;\n  }\n  int ans = 0;\n  for (int i = 1; i <= n; i++) {\n    if (a[i + 1] - a[i - 1] > 1) {\n      ans = max(ans, f[i - 1] + g[i + 1] + 1);\n    } else {\n      ans = max(ans, max(f[i - 1] + 1, g[i + 1] + 1));\n    }\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "a, dp1, dp2 = int array of size 100005 each\n\n  n = int\n  read n\n  for i = 1 to n inclusive read a[i]\n  set a[0] to 0x3f3f3f3f\n  set a[n + 1] to 0x3f3f3f3f\n  ans = int with ans = 0\n  for i = 1 to n inclusive set dp1[i] and dp2[i] to 1\n  for i = 1 to n inclusive\n    if a[i] is greater than a[i - 1] then set dp1[i] to dp1[i - 1] + 1\n    set ans to max of ans and dp1[i]\n  \n  for i = n to 0 decrementing i\n    if a[i] is less than a[i + 1] then set dp2[i] to dp2[i + 1] + 1\n    set ans to max of ans and dp2[i]\n  \n  for i = 2 to n inclusive set ans to max of ans and dp2[i] + 1\n  for i = 1 to n set ans to max of ans and dp1[i] + 1\n  for i = 2 to n\n    if a[i + 1] - a[i - 1] is greater than 1 then set ans to max of ans and dp2[i + 1] + dp1[i - 1] + 1\n  \n  print ans\n  \n\n",
        "int a[100005], dp1[100005], dp2[100005];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) { cin >> a[i]; }\n  a[0] = 0x3f3f3f3f;\n  a[n + 1] = 0x3f3f3f3f;\n  int ans = 0;\n  for (int i = 1; i <= n; i++) { dp1[i] = dp2[i] = 1; }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] > a[i - 1]) { dp1[i] = dp1[i - 1] + 1; }\n    ans = max(ans, dp1[i]);\n  }\n  for (int i = n; i > 0; i--) {\n    if (a[i] < a[i + 1]) { dp2[i] = dp2[i + 1] + 1; }\n    ans = max(ans, dp2[i]);\n  }\n  for (int i = 2; i <= n; i++) { ans = max(ans, dp2[i] + 1); }\n  for (int i = 1; i < n; i++) { ans = max(ans, dp1[i] + 1); }\n  for (int i = 2; i < n; i++) {\n    if (a[i + 1] - a[i - 1] > 1) { ans = max(ans, dp2[i + 1] + dp1[i - 1] + 1); }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a,n,b,c=int\n  s=array of 8 char\n  w=array of 8 char filled with \"jolteon\", q=array of 8 char filled with \"flareon\"\n  v=array of 8 char filled with \"umbreon\", z=array of 8 char filled with \"leafeon\", l=array of 8 char filled with \"glaceeon\", m=array of 8 char filled with \"sylveon\"\n  read n\n  read s\n  if n is 8\n    print \"vaporeon\"\n  else if n is 6\n    print \"espeon\"\n  else\n    a=0\n    b=0\n    c=0\n    d=0\n    e=0\n    f=0\n    for i=0 to 8 exclusive\n      if s[i] is w[i] increment a\n    \n    for i=0 to 8 exclusive\n      if s[i] is q[i] increment b\n    \n    for i=0 to 8 exclusive\n      if s[i] is v[i] increment c\n    \n    for i=0 to 8 exclusive\n      if s[i] is z[i] increment d\n    \n    for i=0 to 8 exclusive\n      if s[i] is l[i] increment e\n    \n    for i=0 to 8 exclusive\n      if s[i] is m[i] increment f\n    \n    if a>b and a>c and a>d and a>e and a>f\n      print \"jolteon\"\n    if b>a and b>c and b>d and b>e and b>f\n      print \"flareon\"\n    if c>a and c>b and c>d and c>e and c>f\n      print \"umbreon\"\n    if d>a and d>b and d>c and d>e and d>f\n      print \"leafeon\"\n    if e>a and e>b and e>c and e>d and e>f\n      print \"glaceon\"\n    if f>a and f>b and f>c and f>d and f>e\n      print \"sylveon\"\n    \n  \n  \n\n",
        "int main() {\n  int a, n, b, c;\n  char s[8];\n  char w[8] = \"jolteon\", q[8] = \"flareon\";\n  char v[8] = \"umbreon\", z[8] = \"leafeon\", l[8] = \"glaceon\", m[8] = \"sylveon\";\n  cin >> n;\n  cin >> s;\n  if (n == 8) {\n    cout << \"vaporeon\" << endl;\n  } else if (n == 6) {\n    cout << \"espeon\" << endl;\n  } else {\n    a = 0;\n    b = 0;\n    c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == w[i]) { a++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == q[i]) { b++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == v[i]) { c++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == z[i]) { d++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == l[i]) { e++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == m[i]) { f++; }\n    }\n    if (a > b && a > c && a > d && a > e && a > f) {\n      cout << \"jolteon\" << endl;\n    } else if (b > a && b > c && b > d && b > e && b > f) {\n      cout << \"flareon\" << endl;\n    } else if (c > a && c > b && c > d && c > e && c > f) {\n      cout << \"umbreon\" << endl;\n    } else if (d > a && d > c && d > b && d > e && d > f) {\n      cout << \"leafeon\" << endl;\n    } else if (e > a && e > c && e > d && e > b && e > f) {\n      cout << \"glaceon\" << endl;\n    } else if (f > a && f > c && f > d && f > e && f > b) {\n      cout << \"sylveon\" << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create pair of integer, integer array par with size 10001\ncreate string set str\n\n  create string s\n  create integers n, i\n  read n read s\n  if n is 8\n    print \"vaporeon\" print newline\n  else if n is 6\n    print \"espeon\" print newline\n  else if n is 7\n    if s[0] is '.'\n      if s[1] is 'o'\n        print \"jolteon\" print newline\n        \n      \n      if s[1] is 'm'\n        print \"umbreon\" print newline\n        \n      \n      if s[1] is 'e'\n        print \"leafeon\" print newline\n        \n      \n      if s[1] is 'y'\n        print \"sylveon\" print newline\n        \n      \n      if s[1] is 'l'\n        if s[3] is 'r'\n          print \"flareon\" print newline\n          \n        else\n          print \"glaceon\" print newline\n          \n        \n      \n      if s[1] is '.'\n        if s[2] is 'b'\n          print \"umbreon\" print newline\n          \n        \n        if s[2] is 'l'\n          if s[3] is 't'\n            print \"jolteon\" print newline\n            \n          else\n            print \"sylveon\" print newline\n            \n          \n        \n        if s[2] is 'a'\n          if s[3] is 'r'\n            print \"flareon\" print newline\n            \n          \n          if s[3] is 'c'\n            print \"glaceon\" print newline\n            \n          else\n            print \"leafeon\" print newline\n            \n          \n        \n        if s[2] is '.'\n          if s[3] is 'r'\n            print \"flareon\" print newline\n            \n          \n          if s[3] is 'c'\n            print \"glaceon\" print newline\n            \n          \n          if s[3] is 'f'\n            print \"leafeon\" print newline\n            \n          \n          if s[3] is 't'\n            print \"jolteon\" print newline\n            \n          \n          if s[3] is 'v'\n            print \"sylveon\" print newline\n            \n          else\n            print \"umbreon\" print newline\n            \n          \n        \n      \n    \n    if s[0] is 'j'\n      print \"jolteon\" print newline\n      \n    \n    if s[0] is 'f'\n      print 'flareon\" print newline\n      \n    \n    if s[0] is 'u'\n      print \"umbreon\" print newline\n      \n    \n    if s[0] is 'l'\n      print \"leafeon\" print newline\n      \n    \n    if s[0] is 'g'\n      print \"glaceon\" print newline\n      \n    \n    if s[0] is 's'\n      print \"sylveon\" print newline\n      \n    \n  \n  \n\n",
        "pair<int, int> par[10001];\nset<string> str;\nint main() {\n  string s;\n  int n, i;\n  cin >> n >> s;\n  if (n == 8)\n    cout << \"vaporeon\" << endl;\n  else if (n == 6)\n    cout << \"espeon\" << endl;\n  else if (n == 7) {\n    if (s[0] == '.') {\n      if (s[1] == 'o') {\n        cout << \"jolteon\" << endl;\n        return 0;\n      }\n      if (s[1] == 'm') {\n        cout << \"umbreon\" << endl;\n        return 0;\n      }\n      if (s[1] == 'e') {\n        cout << \"leafeon\" << endl;\n        return 0;\n      }\n      if (s[1] == 'y') {\n        cout << \"sylveon\" << endl;\n        return 0;\n      }\n      if (s[1] == 'l') {\n        if (s[3] == 'r') {\n          cout << \"flareon\" << endl;\n          return 0;\n        } else {\n          cout << \"glaceon\" << endl;\n          return 0;\n        }\n      }\n      if (s[1] == '.') {\n        if (s[2] == 'b') {\n          cout << \"umbreon\" << endl;\n          return 0;\n        }\n        if (s[2] == 'l') {\n          if (s[3] == 't') {\n            cout << \"jolteon\" << endl;\n            return 0;\n          } else {\n            cout << \"sylveon\" << endl;\n            return 0;\n          }\n        }\n        if (s[2] == 'a') {\n          if (s[3] == 'r') {\n            cout << \"flareon\" << endl;\n            return 0;\n          }\n          if (s[3] == 'c') {\n            cout << \"glaceon\" << endl;\n            return 0;\n          } else {\n            cout << \"leafeon\" << endl;\n            return 0;\n          }\n        }\n        if (s[2] == '.') {\n          if (s[3] == 'r') {\n            cout << \"flareon\" << endl;\n            return 0;\n          }\n          if (s[3] == 'c') {\n            cout << \"glaceon\" << endl;\n            return 0;\n          }\n          if (s[3] == 'f') {\n            cout << \"leafeon\" << endl;\n            return 0;\n          }\n          if (s[3] == 't') {\n            cout << \"jolteon\" << endl;\n            return 0;\n          }\n          if (s[3] == 'v') {\n            cout << \"sylveon\" << endl;\n            return 0;\n          } else {\n            cout << \"umbreon\" << endl;\n            return 0;\n          }\n        }\n      }\n    }\n    if (s[0] == 'j') {\n      cout << \"jolteon\" << endl;\n      return 0;\n    }\n    if (s[0] == 'f') {\n      cout << \"flareon\" << endl;\n      return 0;\n    }\n    if (s[0] == 'u') {\n      cout << \"umbreon\" << endl;\n      return 0;\n    }\n    if (s[0] == 'l') {\n      cout << \"leafeon\" << endl;\n      return 0;\n    }\n    if (s[0] == 'g') {\n      cout << \"glaceon\" << endl;\n      return 0;\n    }\n    if (s[0] == 's') {\n      cout << \"sylveon\" << endl;\n      return 0;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  str = string array of size 12\n  n, i, j, ck = int\n  read n then str[0]\n  set str[1] to \"vaporeon\"\n  set str[2] to \"jolteon\"\n  set str[3] to \"flareon\"\n  set str[4] to \"espeon\"\n  set str[5] to \"umbreon\"\n  set str[6] to \"leafeon\"\n  set str[7] to \"glaceon\"\n  set str[8] to \"sylveon\"\n  for i = 1 to 8 inclusive\n    if size of str[i] is n\n      set ck to 1\n      for j = 0 to n\n        if str[0][j] >= 'a' and str[0][j] <= 'z'\n          if str[0][j] is not str[i][j]\n            set ck to 0\n            break\n          \n        \n      \n      if ck is 1\n        print str[i]\n        \n      \n    \n  \n  print newline\n  \n\n",
        "int main() {\n  string str[12];\n  int n, i, j, ck;\n  cin >> n >> str[0];\n  str[1] = \"vaporeon\";\n  str[2] = \"jolteon\";\n  str[3] = \"flareon\";\n  str[4] = \"espeon\";\n  str[5] = \"umbreon\";\n  str[6] = \"leafeon\";\n  str[7] = \"glaceon\";\n  str[8] = \"sylveon\";\n  for (i = 1; i <= 8; i++) {\n    if (str[i].size() == n) {\n      ck = 1;\n      for (j = 0; j < n; j++) {\n        if (str[0][j] >= 'a' && str[0][j] <= 'z') {\n          if (str[0][j] != str[i][j]) {\n            ck = 0;\n            break;\n          }\n        }\n      }\n      if (ck == 1) {\n        cout << str[i] << endl;\n        return 0;\n      }\n    }\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer N\n  create string jolteon with jolteon = \"jolteaon\"\n  create integer jol with jol = 0\n  create string flareon with flareon = \"flareon\"\n  create integer fla with fla = 0\n  create string umbreon with umbreon = \"umbreon\"\n  create integer umb with umb = 0\n  create string leafeon with leafeon = \"leafeon\"\n  create integer leaf with leaf = 0\n  create string glaceon with glaceon = \"glaceon\"\n  create integer gla with gla = 0\n  create string sylveon with sylveon = \"sylveon\"\n  create integer syl with syl = 0\n  create string eevee\n  read N\n  read eevee\n  if N is 8\n    print \"vaporeon\\n\"\n  else if N is 6\n    print \"espeon\\n\"\n  else\n    for x = 0 to N exclusive\n      if eevee[x] is not '.'\n        iif eevee[x] is flareon[x] and fla is 0\n          if x is not 2, set leaf to 1\n          set jol to 1\n          set syl to 1\n          set umb to 1\n          if x is not 1 and x is not 2, set gla to 1\n        \n        if eevee[x] is glaceon[x] and gla is 0\n          if x is not 2, set leaf to 1\n          set jol to 1\n          set syl to 1\n          set umb to 1\n          if x is not 1 and x is not 2, set fla to 1\n        \n        if eevee[x] is leafeon[x] and leaf is 0\n          if x is not 2\n            set fla to 1\n            set gla to 1\n          \n          set jol to 1\n          set syl to 1\n          set umb to 1\n        \n        if eevee[x] is jolteon[x] and jol is 0\n          set leaf to 1\n          set fla to 1\n          if x is not 2, set syl to 1\n          set umb to 1\n          set gla to 1\n        \n        if eevee[x] is umbreon[x] and umb is 0\n          set leaf to 1\n          set jol to 1\n          set syl to 1\n          set fla to 1\n          set gla to 1\n        \n        if eevee[x] is sylveon[x] and syl is 0\n          set leaf to 1\n          set fla to 1\n          if x is not 2, set jol to 1\n          set umb to 1\n          set gla to 1\n        \n        if syl + leaf + jol + umb + gla + fla is 5\n          if syl is 0, print sylveon print \"\\n\"\n          if gla is 0, print glaceon print \"\\n\"\n          if fla is 0, print flareon print \"\\n\"\n          if jol is 0, print jolteon print \"\\n\"\n          if umb is 0 print umbreon print \"\\n\"\n          if leaf is 0 print leafon print \"\\n\"\n          break loop\n        \n      \n    \n  \n\n",
        "int main() {\n  int N;\n  string jolteon = \"jolteon\";\n  int jol = 0;\n  string flareon = \"flareon\";\n  int fla = 0;\n  string umbreon = \"umbreon\";\n  int umb = 0;\n  string leafeon = \"leafeon\";\n  int leaf = 0;\n  string glaceon = \"glaceon\";\n  int gla = 0;\n  string sylveon = \"sylveon\";\n  int syl = 0;\n  string eevee;\n  cin >> N;\n  cin >> eevee;\n  if (N == 8) {\n    cout << \"vaporeon\\n\";\n  } else if (N == 6) {\n    cout << \"espeon\\n\";\n  } else {\n    for (int x = 0; x < N; x++) {\n      if (eevee[x] != '.') {\n        if (eevee[x] == flareon[x] && fla == 0) {\n          if (x != 2) { leaf = 1; }\n          jol = 1;\n          syl = 1;\n          umb = 1;\n          if (x != 1 && x != 2) { gla = 1; }\n        }\n        if (eevee[x] == glaceon[x] && gla == 0) {\n          if (x != 2) { leaf = 1; }\n          jol = 1;\n          syl = 1;\n          umb = 1;\n          if (x != 1 && x != 2) { fla = 1; }\n        }\n        if (eevee[x] == leafeon[x] && leaf == 0) {\n          if (x != 2) {\n            fla = 1;\n            gla = 1;\n          }\n          jol = 1;\n          syl = 1;\n          umb = 1;\n        }\n        if (eevee[x] == jolteon[x] && jol == 0) {\n          leaf = 1;\n          fla = 1;\n          if (x != 2) { syl = 1; }\n          umb = 1;\n          gla = 1;\n        }\n        if (eevee[x] == umbreon[x] && umb == 0) {\n          leaf = 1;\n          jol = 1;\n          syl = 1;\n          fla = 1;\n          gla = 1;\n        }\n        if (eevee[x] == sylveon[x] && syl == 0) {\n          leaf = 1;\n          fla = 1;\n          if (x != 2) { jol = 1; }\n          umb = 1;\n          gla = 1;\n        }\n        if (syl + leaf + jol + umb + gla + fla == 5) {\n          if (syl == 0) { cout << sylveon << \"\\n\"; }\n          if (gla == 0) { cout << glaceon << \"\\n\"; }\n          if (fla == 0) { cout << flareon << \"\\n\"; }\n          if (jol == 0) { cout << jolteon << \"\\n\"; }\n          if (umb == 0) { cout << umbreon << \"\\n\"; }\n          if (leaf == 0) { cout << leafeon << \"\\n\"; }\n          break;\n        }\n      }\n    }\n  }\n}\n"
    ],
    [
        "\n  let n be an integer\n  read n\n  define n number of pair pr with two integer elements\n  for i= 0 to n exclusive , read\n  sort pr, pr+n\n  for j=0 to n-1 (exclusive)\n    if first element of jth pair is less than j+1 th pair , and second element of jth pair is greater than j+1th pair, do the following\n      print Happy Alex and a new line\n      \n    \n  \n  print Poor Alex and a new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  pair<int, int> pr[n];\n  for (int i = 0; i < n; i++) { cin >> pr[i].first >> pr[i].second; }\n  sort(pr, pr + n);\n  for (int j = 0; j < n - 1; j++) {\n    if (pr[j].first < pr[j + 1].first && pr[j].second > pr[j + 1].second) {\n      cout << \"Happy Alex\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  t, a, b, h, p = int with h = 0 and p = 0\n  read t\n  loop t times\n    read a then b\n    if a is not equal to b increment p\n  \n  if p is not equal 0\n    print \"Happy Alex\"\n  else\n    print \"Poor Alex\"\n  \n\n",
        "int main() {\n  int t, a, b, h = 0, p = 0;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b;\n    if (a != b) p++;\n  }\n  if (p != 0)\n    cout << \"Happy Alex\" << endl;\n  else\n    cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  create doubles x and y\n  create double z\n  double pointer *arr points to new array of doubles with size n\n  for i = 0 to n exclusive\n    read x and y\n    declare double variable q = x + (y / 100000)\n    set value of arr[i] to q\n  \n  sort arr\n  for integer i = 0 to n - 1 exclusive\n    if arr[i] != arr[i + 1]\n      if arr[i + 1] - arr[i] is less than 1\n        print \"Happy Alex\"\n        \n      \n    \n  \n  print \"Poor Alex\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  double x, y;\n  double z;\n  double *arr = new double[n];\n  for (int i = 0; i < n; i++) {\n    cin >> x >> y;\n    double q = x + (y / 100000);\n    arr[i] = q;\n  }\n  sort(arr, arr + n);\n  for (int i = 0; i < n - 1; i++) {\n    if (int(arr[i]) != int(arr[i + 1])) {\n      if (arr[i + 1] - arr[i] < 1) {\n        cout << \"Happy Alex\" << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  count, i, j, n = int with count = 0 and a, b = int array of size 100001 each\n  read n\n  read n values into a then b\n  for j = 0 to n\n    if a[j] is not b[j]\n      print \"Happy Alex\"\n      set count to 1\n      break loop\n    \n  \n  if count is 0 then print \"Poor Alex\"\n  \n\n",
        "int main() {\n  int a[100001], b[100001], count = 0, i, j, n;\n  cin >> n;\n  for (i = 0; i < n; i++) { cin >> a[i] >> b[i]; }\n  for (j = 0; j < n; j++) {\n    if (a[j] != b[j]) {\n      cout << \"Happy Alex\" << endl;\n      count = 1;\n      break;\n    }\n  }\n  if (count == 0) cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create pair array of integer, integer pr with size n\n  for i = 0 to n exclusive, read first element of pr[i] read second element of pr[i]\n  sort elements from pr to pr + n\n  for j = 0 to n - 1 exclusive\n    if first element of pr[j] is less than first element of pr[j+1] and second element of pr[j] is greater than second element of pr[j+1]\n      print \"Happy Alex\" print newline\n      \n    \n  \n  print \"Poor Alex\" print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  pair<int, int> pr[n];\n  for (int i = 0; i < n; i++) { cin >> pr[i].first >> pr[i].second; }\n  sort(pr, pr + n);\n  for (int j = 0; j < n - 1; j++) {\n    if (pr[j].first < pr[j + 1].first && pr[j].second > pr[j + 1].second) {\n      cout << \"Happy Alex\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variables n, a and b\n  read input to n\n  for integer i = 1 to n inclusive\n    read a and b\n    if a != b\n      print \"Happy Alex\"\n      \n    \n  \n  print \"Poor Alex\"\n  \n\n",
        "int main() {\n  int n, a, b;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a >> b;\n    if (a != b) {\n      cout << \"Happy Alex\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAXN with MAXN = 100000 + 10\ncreate constant long double eps with eps = 1e-10\ncreate integer array cnt with size MAXN\ndeclare check with integer n as argument, returning integer\n  for i = 0 to i + 2 is less than n, incrementing i\n    if cnt[i] is 0, break current loop iteration\n    if cnt[i] is greater than or equal to 2 and cnt[i+1] is greater than or equal to 0, return 1 from function\n    if cnt[i] is less than or equal to -2 and cnt[i+1] is less than or equal to 0, return -1 from function\n    increment cnt[i+1] by cnt[i]\n    increment cnt[i+2] by cnt[i]\n  \n  create long double p with p = square root of (long double casted 5) + 1\n  set p to p / 2\n  create long double ret with ret = p * cnt[n - 2] + cnt[n - 1]\n  if absolute value of ret is less than eps, return 0 from function\n  if ret is greater than 0, return 1 from function\n  return -1 from function\n\n\n  create strings s1, s2\n  read s1 read s2\n  create integer n with n = maximum of size of s1 and size of s2\n  if size of s1 is less than n, set s1 to string initialized with ( n - size of s1, '0' ) + s1\n  if size of s2 is less than n, set s2 to string initialized with ( n - size of s2, '0' ) + s2\n  for i = 0 to n exclusive\n    create integer a with a = s1[i] - '0'\n    create integer b with b = s2[i] - '0'\n    set cnt[i] to a - b\n  \n  create integer ret with ret = result of run check with n as argument\n  if ret is 0\n    print \"=\" print newline\n  else if ret is -1\n    print \"<\" print newline\n  else\n    print \">\" print newline\n  \n\n",
        "const int MAXN = 100000 + 10;\nconst long double eps = 1e-10;\nint cnt[MAXN];\nint check(int n) {\n  for (int i = 0; i + 2 < n; i++) {\n    if (cnt[i] == 0) continue;\n    if (cnt[i] >= 2 && cnt[i + 1] >= 0) return 1;\n    if (cnt[i] <= -2 && cnt[i + 1] <= 0) return -1;\n    cnt[i + 1] += cnt[i];\n    cnt[i + 2] += cnt[i];\n  }\n  long double p = sqrt((long double)5) + 1;\n  p /= 2;\n  long double ret = p * cnt[n - 2] + cnt[n - 1];\n  if (fabs(ret) < eps) return 0;\n  if (ret > 0) return 1;\n  return -1;\n}\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  int n = max(s1.size(), s2.size());\n  if (s1.size() < n) s1 = string(n - s1.size(), '0') + s1;\n  if (s2.size() < n) s2 = string(n - s2.size(), '0') + s2;\n  for (int i = 0; i < n; i++) {\n    int a = s1[i] - '0';\n    int b = s2[i] - '0';\n    cnt[i] = a - b;\n  }\n  int ret = check(n);\n  if (ret == 0)\n    cout << \"=\" << endl;\n  else if (ret == -1)\n    cout << \"<\" << endl;\n  else\n    cout << \">\" << endl;\n  return 0;\n}\n"
    ],
    [
        "s1, s2 = string\n\n  read a line into s1 using cin\n  read a line into s2 using cin\n  sz1 = int with sz1 = size of s1\n  sz2 = int with sz2 = size of s2\n  swaped = bool with swaped = false\n  if sz1 is less than sz2\n    call swap on s1 and s2\n    call swap on sz1 and sz2\n    set swaped to true\n  \n  if sz1 is greater than sz2\n    aux = string with aux = \"\"\n    for i = 1 to sz1 - sz2 inclusive append \"0\" to aux\n    prepend aux to s2\n  \n  prepend \"0\" to s1\n  prepend \"0\" to s2\n  increment sz1\n  for i = 1 to sz1 - 1\n    if s1[i] and s1[i + 1] are both '1'\n      set s1[i - 1] to '1'\n      set s1[i] to '0'\n      set s1[i + 1] to '0'\n      j = int with j = i - 2\n      loop while j is greater than 0 and s1[j] is '1'\n        set s1[j - 1] to '1'\n        set s1[j] to '0'\n        set s1[j + 1] to '0'\n        decrement j by 2\n      \n    \n    if s2[i] and s2[i + 1] are both '1'\n      set s2[i - 1] to '1'\n      set s2[i] to '0'\n      set s2[i + 1] to '0'\n      j = int with j = i - 2\n      loop while j is greater than 0 and s2[j] is '1'\n        set s2[j - 1] to '1'\n        set s2[j] to '0'\n        set s2[j + 1] to '0'\n        decrement j by 2\n      \n    \n  \n  for i = 0 to sz1\n    if s1[i] is greater than s2[i]\n      if swaped is false\n        print '>'\n      else\n        print '<'\n      \n      \n    if s18i] is less than s2[i]\n      if swaped is false\n        print '<'\n      else\n        print '>'\n      \n      \n    \n  \n  print '='\n  \n\n",
        "string s1, s2;\nint main() {\n  getline(cin, s1);\n  getline(cin, s2);\n  int sz1 = s1.size();\n  int sz2 = s2.size();\n  bool swaped = 0;\n  if (sz1 < sz2) {\n    swap(s1, s2);\n    swap(sz1, sz2);\n    swaped = 1;\n  }\n  if (sz1 > sz2) {\n    string aux = \"\";\n    for (int i = 1; i + sz2 <= sz1; ++i) { aux += \"0\"; }\n    s2 = aux + s2;\n  }\n  s1 = \"0\" + s1;\n  s2 = \"0\" + s2;\n  sz1++;\n  for (int i = 1; i + 1 < sz1; ++i) {\n    if (s1[i] == '1' and s1[i + 1] == '1') {\n      s1[i - 1] = '1';\n      s1[i] = '0';\n      s1[i + 1] = '0';\n      int j = i - 2;\n      while (j - 1 >= 0 and s1[j] == '1') {\n        s1[j - 1] = '1';\n        s1[j] = '0';\n        s1[j + 1] = '0';\n        j -= 2;\n      }\n    }\n    if (s2[i] == '1' and s2[i + 1] == '1') {\n      s2[i - 1] = '1';\n      s2[i] = '0';\n      s2[i + 1] = '0';\n      int j = i - 2;\n      while (j - 1 >= 0 and s2[j] == '1') {\n        s2[j - 1] = '1';\n        s2[j] = '0';\n        s2[j + 1] = '0';\n        j -= 2;\n      }\n    }\n  }\n  for (int i = 0; i < sz1; ++i) {\n    if (s1[i] > s2[i]) {\n      if (!swaped) {\n        cout << '>' << '\\n';\n      } else {\n        cout << '<' << '\\n';\n      }\n      return 0;\n    } else if (s1[i] < s2[i]) {\n      if (!swaped) {\n        cout << '<' << '\\n';\n      } else {\n        cout << '>' << '\\n';\n      }\n      return 0;\n    }\n  }\n  cout << '=' << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create constant double PI with PI = 3.14159265358979323846264338327\n\n  create strings a, b\n  read a read b\n  create integer vectors a1, b1 with a1 initialized with 100020, b1 initialized with 100020\n  for i = size of a - 1 to 0 inclusive, decrementing i, set a1[size of a - 1 - i ] to a[i] - '0'\n  for i = size of b - 1 to 0 inclusive, decrementing i, set b1[size of b - 1 - i ] to b[i] - '0'\n  for i = 100010 to 0 inclusive, decrementing i\n    for j = i to a1[j] and a1[j+1], incrementing j by 2, set a1[j] to a1[j+1] to 0, set a1[j+2] to 1\n    for j = i to b1[j] and b1[j+1], incrementing j by 2, set b1[j] to b1[j+1] to 0, set b1[j+2] to 1\n  \n  for i = 100010 to 0 inclusive, decrementing i\n    if a1[i] is less than b1[i], return print '<' print newline, 0 from function\n    if a1[i] is greater than b1[i], return print '>' print newline, 0\n  \n  print '=' print newline\n  \n\n",
        "const double PI = 3.14159265358979323846264338327;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  vector<int> a1(100020), b1(100020);\n  for (int i = a.size() - 1; i >= 0; i--) a1[a.size() - 1 - i] = a[i] - '0';\n  for (int i = b.size() - 1; i >= 0; i--) b1[b.size() - 1 - i] = b[i] - '0';\n  for (int i = 100010; i >= 0; i--) {\n    for (int j = i; a1[j] && a1[j + 1]; j += 2) a1[j] = a1[j + 1] = 0, a1[j + 2] = 1;\n    for (int j = i; b1[j] && b1[j + 1]; j += 2) b1[j] = b1[j + 1] = 0, b1[j + 2] = 1;\n  }\n  for (int i = 100010; i >= 0; i--) {\n    if (a1[i] < b1[i]) return cout << '<' << endl, 0;\n    if (a1[i] > b1[i]) return cout << '>' << endl, 0;\n  }\n  cout << '=' << endl;\n  return 0;\n}\n"
    ],
    [
        "create a map from integers to strings with name m\ncreate iterator it for map of int to strings\n\n  s = array of characters of size 20\n  declare integer variable n\n  m[0] = \"January\"\n  m[1] = \"February\"\n  m[2] = \"March\"\n  m[3] = \"April\"\n  m[4] = \"May\"\n  m[5] = \"June\"\n  m[6] = \"July\"\n  m[7] = \"August\"\n  m[8] = \"September\"\n  m[9] = \"October\"\n  m[10] = \"November\"\n  m[11] = \"December\"\n  while cin >> s >> n\n    create integer j with value 0\n    move it through m from the beginning\n      increment j\n      if it->second = s. break\n    \n    print m[(j + n - 1) % 12] and a new line\n  \n  \n\n",
        "map<int, string> m;\nmap<int, string>::iterator it;\nint main() {\n  char s[20];\n  int n;\n  m[0] = \"January\";\n  m[1] = \"February\";\n  m[2] = \"March\";\n  m[3] = \"April\";\n  m[4] = \"May\";\n  m[5] = \"June\";\n  m[6] = \"July\";\n  m[7] = \"August\";\n  m[8] = \"September\";\n  m[9] = \"October\";\n  m[10] = \"November\";\n  m[11] = \"December\";\n  while (cin >> s >> n) {\n    int j = 0;\n    for (it = m.begin(); it != m.end(); it++) {\n      ++j;\n      if (it->second == s) break;\n    }\n    cout << m[(j + n - 1) % 12] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create map m from integer to string\ncreate map iterator it from integer to string\n\n  create character array s with size 20\n  create integer n\n  set m[0] to \"January\"\n  set m[1] to \"February\"\n  set m[2] to \"March\"\n  set m[3] to \"April\"\n  set m[4] to \"May\"\n  set m[5] to \"June\"\n  set m[6] to \"July\"\n  set m[7] to \"August\"\n  set m[8] to \"September\"\n  set m[9] to \"October\"\n  set m[10] to \"November\"\n  set m[11] to \"December\"\n  while read s read n\n    create integer j with j = 0\n    for it = beginning of m to it is not end of m, incrementing it\n      increment j\n      if second element of it is s, break loop\n    \n    print m[(j + n - 1) % 12] print newline\n  \n  \n\n",
        "map<int, string> m;\nmap<int, string>::iterator it;\nint main() {\n  char s[20];\n  int n;\n  m[0] = \"January\";\n  m[1] = \"February\";\n  m[2] = \"March\";\n  m[3] = \"April\";\n  m[4] = \"May\";\n  m[5] = \"June\";\n  m[6] = \"July\";\n  m[7] = \"August\";\n  m[8] = \"September\";\n  m[9] = \"October\";\n  m[10] = \"November\";\n  m[11] = \"December\";\n  while (cin >> s >> n) {\n    int j = 0;\n    for (it = m.begin(); it != m.end(); it++) {\n      ++j;\n      if (it->second == s) break;\n    }\n    cout << m[(j + n - 1) % 12] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let a be string\n  s = integer\n  read a and s\n  declare integer variable d\n  if a is equal to \"January\"\n    set d to 1\n  else if a is equal to \"February\"\n    set value of d to 2\n  else if a is equal to \"March\"\n    set value of d to 3\n  else if a is equal to \"April\"\n    set value of d to 4\n  else if a is equal to \"May\"\n    set d to 5\n  else if a is equal to \"June\"\n    set value of d to 6\n  else if a is equal to \"July\"\n    set value of d to 7\n  else if a is equal to \"August\"\n    set value of d to 8\n  else if a is equal to \"September\"\n    set d to 9\n  else if a is equal to \"October\"\n    set d to 10\n  else if a is equal to \"November\"\n    d = 11\n  else\n    d = 12\n  decrease d by one\n  d = d + s\n  d = d % 12\n  if d is equal to 0\n    a = \"January\"\n  else if d is equal to 1\n    a = \"February\"\n  else if d is equal to 2\n    a = \"March\"\n  else if d is equal to 3\n    a = \"April\"\n  else if d is equal to 4\n    a = \"May\"\n  else if d is equal to 5\n    a = \"June\"\n  else if d is equal to 6\n    a = \"July\"\n  else if d is equal to 7\n    a = \"August\"\n  else if d is equal to 8\n    a = \"September\"\n  else if d is equal to 9\n    a = \"October\"\n  else if d is equal to 10\n    a = \"November\"\n  else\n    a = \"December\"\n  print a and a new line\n\n",
        "int main() {\n  string a;\n  int s;\n  cin >> a >> s;\n  int d;\n  if (a == \"January\")\n    d = 1;\n  else if (a == \"February\")\n    d = 2;\n  else if (a == \"March\")\n    d = 3;\n  else if (a == \"April\")\n    d = 4;\n  else if (a == \"May\")\n    d = 5;\n  else if (a == \"June\")\n    d = 6;\n  else if (a == \"July\")\n    d = 7;\n  else if (a == \"August\")\n    d = 8;\n  else if (a == \"September\")\n    d = 9;\n  else if (a == \"October\")\n    d = 10;\n  else if (a == \"November\")\n    d = 11;\n  else\n    d = 12;\n  d--;\n  d = d + s;\n  d = d % 12;\n  if (d == 0)\n    a = \"January\";\n  else if (d == 1)\n    a = \"February\";\n  else if (d == 2)\n    a = \"March\";\n  else if (d == 3)\n    a = \"April\";\n  else if (d == 4)\n    a = \"May\";\n  else if (d == 5)\n    a = \"June\";\n  else if (d == 6)\n    a = \"July\";\n  else if (d == 7)\n    a = \"August\";\n  else if (d == 8)\n    a = \"September\";\n  else if (d == 9)\n    a = \"October\";\n  else if (d == 10)\n    a = \"November\";\n  else\n    a = \"December\";\n  cout << a << endl;\n}\n"
    ],
    [
        "\n  v is a vector of strings with 120 elements\n  for integer i = 0 to 120 exclusive\n    v[i] = \"January\"\n    v[i + 1] = \"February\"\n    v[i + 2] = \"March\"\n    v[i + 3] = \"April\"\n    v[i + 4] = \"May\"\n    v[i + 5] = \"June\"\n    v[i + 6] = \"July\"\n    v[i + 7] = \"August\"\n    v[i + 8] = \"September\"\n    v[i + 9] = \"October\"\n    v[i + 10] = \"November\"\n    v[i + 11] = \"December\"\n  \n  x = string\n  read x\n  declare integers n and z\n  read n\n  for i = 0 to 120 exclusive\n    if v[i] = x\n      assign value of i to the z\n      break the loop\n    \n  \n  print v[z + n] and a new line\n\n",
        "int main() {\n  vector<string> v(120);\n  for (int i = 0; i < 120; i += 12) {\n    v[i] = \"January\";\n    v[i + 1] = \"February\";\n    v[i + 2] = \"March\";\n    v[i + 3] = \"April\";\n    v[i + 4] = \"May\";\n    v[i + 5] = \"June\";\n    v[i + 6] = \"July\";\n    v[i + 7] = \"August\";\n    v[i + 8] = \"September\";\n    v[i + 9] = \"October\";\n    v[i + 10] = \"November\";\n    v[i + 11] = \"December\";\n  }\n  string x;\n  cin >> x;\n  int n, z;\n  cin >> n;\n  for (int i = 0; i < 120; i++) {\n    if (v[i] == x) {\n      z = i;\n      break;\n    }\n  }\n  cout << v[z + n] << endl;\n}\n"
    ],
    [
        "let num be an array of integers of length 3005\ncreate a map from strings to integers with name ma\nset integer ans to 0\nboolean function is_prime with integer arguments u\n\n  s = string\n  s = \"January\"\n  ma[s] = 1\n  s = \"February\"\n  ma[s] = 2\n  s = \"March\"\n  ma[s] = 3\n  s = \"April\"\n  set value of ma[s] to 4\n  s = \"May\"\n  ma[s] = 5\n  ma[\"June\"] = 6\n  ma[\"July\"] = 7\n  ma[\"August\"] = 8\n  ma[\"September\"] = 9\n  ma[\"October\"] = 10\n  ma[\"November\"] = 11\n  ma[\"December\"] = 12\n  n = integer\n  read s\n  read n\n  if n % 12 = 0\n    print s and a new line\n  else\n    set integer a to ma[s]\n    increase n by a\n    if n % 12 = 1, print \"January\" and a new line\n    if n % 12 = 2, print \"February\" and a new line\n    if n % 12 = 3, print \"March\" and a new line\n    if n % 12 = 4, print \"April\" and a new line\n    if n % 12 = 5, print \"May\" and a new line\n    if n % 12 = 6, print \"June\" and a new line\n    if n % 12 = 7, print \"July\" and a new line\n    if n % 12 = 8, print \"August\" and a new line\n    if n % 12 = 9, print \"September\" and a new line\n    if n % 12 = 10, print \"October\" and a new line\n    if n % 12 = 11, print \"November\" and a new line\n    if n % 12 = 0, print \"December\" and a new line\n  \n\n",
        "int num[3005];\nmap<string, int> ma;\nint ans = 0;\nbool is_prime(int u);\nint main() {\n  string s;\n  s = \"January\";\n  ma[s] = 1;\n  s = \"February\";\n  ma[s] = 2;\n  s = \"March\";\n  ma[s] = 3;\n  s = \"April\";\n  ma[s] = 4;\n  s = \"May\";\n  ma[s] = 5;\n  ma[\"June\"] = 6;\n  ma[\"July\"] = 7;\n  ma[\"August\"] = 8;\n  ma[\"September\"] = 9;\n  ma[\"October\"] = 10;\n  ma[\"November\"] = 11;\n  ma[\"December\"] = 12;\n  int n;\n  cin >> s;\n  cin >> n;\n  if (n % 12 == 0)\n    cout << s << endl;\n  else {\n    int a = ma[s];\n    n += a;\n    if (n % 12 == 1) cout << \"January\" << endl;\n    if (n % 12 == 2) cout << \"February\" << endl;\n    if (n % 12 == 3) cout << \"March\" << endl;\n    if (n % 12 == 4) cout << \"April\" << endl;\n    if (n % 12 == 5) cout << \"May\" << endl;\n    if (n % 12 == 6) cout << \"June\" << endl;\n    if (n % 12 == 7) cout << \"July\" << endl;\n    if (n % 12 == 8) cout << \"August\" << endl;\n    if (n % 12 == 9) cout << \"September\" << endl;\n    if (n % 12 == 10) cout << \"October\" << endl;\n    if (n % 12 == 11) cout << \"November\" << endl;\n    if (n % 12 == 0) cout << \"December\" << endl;\n  }\n}\n"
    ],
    [
        "declare inline nxt with no arguments, returning long long\n  create long longs _x, _tmp with _x = 0, _tmp = 1\n  create character _tc with _tc = read character\n  while _tc is less than '0' or _tc is greater than '9' and _tc is not '-', set _tc to read character\n  if _tc is '-', set _tc to read character, set _tmp to -1\n  while _tc is greater than or equal to '0' and _tc is less than or equal to '9', set _x to _x * 10, increment _x by (_tc - '0'), set _tc to read character\n  return _x * _tmp from function\n\n\n  create string array s with size 170\n  for i = 1 to 160 inclusive\n    if (i % 12 == 1) s[i] = \"January\";\n    if (i % 12 == 2) s[i] = \"February\";\n    if (i % 12 == 3) s[i] = \"March\";\n    if (i % 12 == 4) s[i] = \"April\";\n    if (i % 12 == 5) s[i] = \"May\";\n    if (i % 12 == 6) s[i] = \"June\";\n    if (i % 12 == 7) s[i] = \"July\";\n    if (i % 12 == 8) s[i] = \"August\";\n    if (i % 12 == 9) s[i] = \"September\";\n    if (i % 12 == 10) s[i] = \"October\";\n    if (i % 12 == 11) s[i] = \"November\";\n    if (i % 12 == 0) s[i] = \"December\";\n  \n  create string str\n  create integer n\n  read str read n\n  for i = 1 to 12 inclusive\n    if s[i] is str, print s[i+n] print newline\n  \n\n",
        "inline long long nxt() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-') _tc = getchar();\n  if (_tc == '-') _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9') _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\nint main() {\n  string s[170];\n  for (int i = 1; i <= 160; ++i) {\n    if (i % 12 == 1) s[i] = \"January\";\n    if (i % 12 == 2) s[i] = \"February\";\n    if (i % 12 == 3) s[i] = \"March\";\n    if (i % 12 == 4) s[i] = \"April\";\n    if (i % 12 == 5) s[i] = \"May\";\n    if (i % 12 == 6) s[i] = \"June\";\n    if (i % 12 == 7) s[i] = \"July\";\n    if (i % 12 == 8) s[i] = \"August\";\n    if (i % 12 == 9) s[i] = \"September\";\n    if (i % 12 == 10) s[i] = \"October\";\n    if (i % 12 == 11) s[i] = \"November\";\n    if (i % 12 == 0) s[i] = \"December\";\n  }\n  string str;\n  int n;\n  cin >> str >> n;\n  for (int i = 1; i <= 12; ++i) {\n    if (s[i] == str) { cout << s[i + n] << endl; }\n  }\n}\n"
    ],
    [
        "declare map from integer to string m\ndeclare map iterator from integer to string it\n\n  declare character array s size 20\n  declare integer n\n  let m[0] be \"January\"\n  let m[1] be \"February\"\n  let m[2] be \"March\"\n  let m[3] be \"April\"\n  let m[4] be \"May\"\n  let m[5] be \"June\"\n  let m[6] be \"July\"\n  let m[7] be \"August\"\n  let m[8] be \"September\"\n  let m[9] be \"October\"\n  let m[10] be \"November\"\n  let m[11] be \"December\"\n  while read s, n\n    declare integer j = 0\n    for it = beginning of m to it is not end of m, incrementing it\n      increment j\n      if second element of it is s, end loop\n    \n    print m[(j + n - 1) % 12], newline\n  \n  \n\n",
        "map<int, string> m;\nmap<int, string>::iterator it;\nint main() {\n  char s[20];\n  int n;\n  m[0] = \"January\";\n  m[1] = \"February\";\n  m[2] = \"March\";\n  m[3] = \"April\";\n  m[4] = \"May\";\n  m[5] = \"June\";\n  m[6] = \"July\";\n  m[7] = \"August\";\n  m[8] = \"September\";\n  m[9] = \"October\";\n  m[10] = \"November\";\n  m[11] = \"December\";\n  while (cin >> s >> n) {\n    int j = 0;\n    for (it = m.begin(); it != m.end(); it++) {\n      ++j;\n      if (it->second == s) break;\n    }\n    cout << m[(j + n - 1) % 12] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers n, m, a, b, rub, with rub = 0\n  read n, m, a and b\n  while n is greater than 0\n    if n is less than m\n      set integer flag to n * a\n      if flag is less than b\n        increase rub by flag\n        n = 0\n      else\n        increase rub by b\n        decrease n by m\n      \n    else if (a * m) is greater than b\n      decrease n by m\n      increase rub by b\n    else\n      increase rub by n * a\n      assign value of 0 to the n\n    \n  \n  print rub and \"\\n\"\n\n",
        "int main() {\n  int n, m, a, b, rub = 0;\n  cin >> n >> m >> a >> b;\n  while (n > 0) {\n    if (n < m) {\n      int flag = n * a;\n      if (flag < b) {\n        rub += flag;\n        n = 0;\n      } else {\n        rub += b;\n        n -= m;\n      }\n    } else if ((a * m) > b) {\n      n -= m;\n      rub += b;\n    } else {\n      rub += n * a;\n      n = 0;\n    }\n  }\n  cout << rub << \"\\n\";\n}\n"
    ],
    [
        "\n  create integers n, m, a, b, r, d, cost with cost = 0\n  read n read m read a read b\n  set r to n % m\n  set d to n / m\n  if m is greater than n\n    if b is less than a * b\n      print b print newline\n      \n    else\n      print a * n print newline\n      \n    \n  \n  if d * b is less than a * ( n - r )\n    increment cost by d * b\n    if r * a is less than b\n      increment cost by r * a\n    else\n      increment cost by b\n    \n  else\n    increment cost by a * n\n  \n  print cost print newline\n  \n\n",
        "int main() {\n  int n, m, a, b, r, d, cost = 0;\n  cin >> n >> m >> a >> b;\n  r = n % m;\n  d = n / m;\n  if (m > n) {\n    if (b < a * n) {\n      cout << b << endl;\n      return 0;\n    } else {\n      cout << a * n << endl;\n      return 0;\n    }\n  }\n  if (d * b < a * (n - r)) {\n    cost += (d * b);\n    if (r * a < b) {\n      cost += (r * a);\n    } else {\n      cost += b;\n    }\n  } else {\n    cost += (a * n);\n  }\n  cout << cost << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, m, a, b =integers\n  Read n, m, a, b\n  x = integer, set to (n / m) * b + (n % m) * a\n  y = integer, set to (n / m + 1) * b\n  z = integer, set to n * a\n  print minimum value of x and minimum value of y and z and a new line\n\n",
        "int main() {\n  int n, m, a, b;\n  cin >> n >> m >> a >> b;\n  int x = (n / m) * b + (n % m) * a;\n  int y = (n / m + 1) * b;\n  int z = n * a;\n  cout << min(x, min(y, z)) << endl;\n}\n"
    ],
    [
        "\n  create integer TESTS with TESTS = 1\n  while decrementing TESTS is true\n    create long longs n, m, a, b\n    read n read m read a read b\n    create long long integer vector v\n    if b is greater than or equal to m * a\n      read n * a read '\\n'\n    else\n      create long long c with c = n / m\n      create long long ans with ans = c * b\n      decrement n by c * m\n      increment ans by minimum of b and a * n\n      print ans print '\\n'\n    \n  \n  \n\n",
        "int main() {\n  int TESTS = 1;\n  while (TESTS--) {\n    long long n, m, a, b;\n    cin >> n >> m >> a >> b;\n    vector<long long int> v;\n    if (b >= m * a)\n      cout << n * a << '\\n';\n    else {\n      long long c = n / m;\n      long long ans = c * b;\n      n -= c * m;\n      ans += min(b, a * n);\n      cout << ans << '\\n';\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, m, a, b are long long\n  read n,m,a,b\n  if m*a < b\n    print n*a\n  else\n    price = n/m*b + min(n modulo m * a, b)\n    print price\n  \n  \n\n",
        "int main() {\n  long long n, m, a, b;\n  cin >> n >> m >> a >> b;\n  if (m * a < b) {\n    cout << n * a << endl;\n  } else {\n    long long price = (n / m) * b + min((n % m) * a, b);\n    cout << price << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m, a, b\n  read n read m read a read b\n  if m * a is greater than b\n    print minimum of ( (n / m) * b + (n % m) * a and ((n / m) + 1) * b ) print newline\n    \n  \n  print minimum of n * a and ((n / m) + 1) * b print newline\n  \n\n",
        "int main() {\n  int n, m, a, b;\n  cin >> n >> m >> a >> b;\n  if (m * a > b) {\n    cout << min((n / m) * b + (n % m) * a, ((n / m) + 1) * b) << endl;\n    return 0;\n  }\n  cout << min(n * a, ((n / m) + 1) * b) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m\n  create floats a, b\n  read n read m read a read b\n  create integer sum with sum = 0\n  if ( n % m ) * a is less than or equal to b\n    increment sum by n / m * b + ( n % m ) * a\n  else\n    set sum to ( n / m + 1 ) * b\n  if sum is greater than n * a, set sum to n * a\n  print sum print newline\n\n",
        "int main() {\n  int n, m;\n  float a, b;\n  cin >> n >> m >> a >> b;\n  int sum = 0;\n  if ((n % m) * a <= b) {\n    sum += n / m * b + (n % m) * a;\n  } else\n    sum = (n / m + 1) * b;\n  if (sum > n * a) sum = n * a;\n  cout << sum << endl;\n}\n"
    ],
    [
        "\n  create long long integers n, m, a , b\n  read n read m read a read b\n  if m * a is less than b\n    print n * a print newline\n  else\n    create long long integer price with price = (n/m)*b+minimum of (n % m ) * b and b\n    print price print newline\n  \n  \n\n",
        "int main() {\n  long long int n, m, a, b;\n  cin >> n >> m >> a >> b;\n  if (m * a < b) {\n    cout << n * a << endl;\n  } else {\n    long long int price = (n / m) * b + min((n % m) * a, b);\n    cout << price << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare long longs n, m, a and b\n  read n, m, a and b\n  if m * a is less than b\n    print n * a and a new line\n  else\n    create variable price of type long long = (n / m) * b + min of (n % m) * a and b\n    print price and a new line\n  \n  \n\n",
        "int main() {\n  long long n, m, a, b;\n  cin >> n >> m >> a >> b;\n  if (m * a < b) {\n    cout << n * a << endl;\n  } else {\n    long long price = (n / m) * b + min((n % m) * a, b);\n    cout << price << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers m, n, a, b and cost\n  read n, m, a and b\n  if a is greater than b / m\n    cost = (n / m) * b\n    if a * (n % m) is less than b\n      add a * (n % m) to cost\n    else\n      increase cost by b\n  else\n    cost = n * a\n  print cost and a new line\n  \n\n",
        "int main() {\n  int m, n, a, b, cost;\n  cin >> n >> m >> a >> b;\n  if (a > (b / m)) {\n    cost = (n / m) * b;\n    if (a * (n % m) < b)\n      cost += a * (n % m);\n    else\n      cost += b;\n  } else\n    cost = n * a;\n  cout << cost << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m, a, b\n  read n, m, a, b\n  create integer sum with sum = a * n\n  create integer msum with msum = b\n  create integer rides with rides = m\n  do the following while rides less than or equal to n\n    add b to msum\n    add m to rides\n  \n  subtract b from msum\n  subtract m from rides\n  if sum less than or equal to msum then do the following\n    print sum and a new line\n  else do the following\n    if rides less than n\n      create integer newsum with newsum = msum + (n - rides) * a\n      add b to msum\n      add m to rides\n      create numsum1 with newsum1 = msum\n      if newsum1 less than or equal to newsum then do the following\n        print newsum1 and a new line\n      else do the following\n        print newsum and a new line\n    else if rides greater than n then do the following\n      create integer newsum with newsum = msum + (n - rides) * a\n      add b to msum\n      add m to rides\n      create newsum1 with newsum1 = msum\n      if newsum1 less than or equal to newsum then do the following\n        print newsum1 and a new line\n      else do the following\n        print newsum and a new line\n    else do the following\n      print msum and a new line\n    \n  \n\n",
        "int main() {\n  int n, m, a, b;\n  cin >> n >> m >> a >> b;\n  int sum = a * n;\n  int msum = b;\n  int rides = m;\n  while (rides <= n) {\n    msum += b;\n    rides += m;\n  }\n  msum -= b;\n  rides -= m;\n  if (sum <= msum) {\n    cout << sum << \"\\n\";\n  } else {\n    if (rides < n) {\n      int newsum = msum + (n - rides) * a;\n      msum += b;\n      rides += m;\n      int newsum1 = msum;\n      if (newsum1 <= newsum)\n        cout << newsum1 << endl;\n      else\n        cout << newsum << endl;\n    } else if (rides > n) {\n      int newsum = msum + (n - rides) * a;\n      msum += b;\n      rides += m;\n      int newsum1 = msum;\n      if (newsum1 <= newsum)\n        cout << newsum1 << endl;\n      else\n        cout << newsum << endl;\n    } else {\n      cout << msum << \"\\n\";\n    }\n  }\n}\n"
    ],
    [
        "\n  n and m = integers with m = 2\n  read n\n  print m\n  for i = 1 to n - 1 exclusive\n    increase m by i + 1\n    if m % n is equal to 0\n      print \" \" and n\n    else\n      print \" \" and m % n\n  \n  print new line\n  \n\n",
        "int main() {\n  int n, m = 2;\n  cin >> n;\n  cout << m;\n  for (int i = 1; i < n - 1; i++) {\n    m += (i + 1);\n    if (m % n == 0)\n      cout << \" \" << n;\n    else\n      cout << \" \" << m % n;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m with m = 2\n  read n\n  print m\n  for i = 1 to n - 1 exclusive\n    increment m by i + 1\n    if m % n is 0\n      print \" \" print n\n    else\n      print \" \" print m % n\n  \n  print newline\n  \n\n",
        "int main() {\n  int n, m = 2;\n  cin >> n;\n  cout << m;\n  for (int i = 1; i < n - 1; i++) {\n    m += (i + 1);\n    if (m % n == 0)\n      cout << \" \" << n;\n    else\n      cout << \" \" << m % n;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  set integer cur to 0\n  for integer i = 1 to n exclusive\n    if i is greater than 1 print whitespace\n    increase cur by i\n    set cur to remainder of division of cur by n\n    print cur + 1\n  \n  print new line\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int cur = 0;\n  for (int i = 1; i < n; ++i) {\n    if (i > 1) cout << \" \";\n    cur += i;\n    cur %= n;\n    cout << cur + 1;\n  }\n  cout << endl;\n}\n"
    ],
    [
        "\n  create integers n, i, create integer array a with size 200\n  read n\n  set a[0] to 1\n  for i = 1 to n - 1 inclusive\n    set a[i] to (a[i - 1] + i) % n\n    if a[i] is 0, set a[i] to n\n  \n  for i = 1 to n - 1 exclusive, print a[i] print \" \"\n  print a[n-1] print newline\n  \n\n",
        "int main() {\n  int n, a[200], i;\n  cin >> n;\n  a[0] = 1;\n  for (i = 1; i <= n - 1; i++) {\n    a[i] = (a[i - 1] + i) % n;\n    if (a[i] == 0) a[i] = n;\n  }\n  for (i = 1; i < n - 1; i++) { cout << a[i] << \" \"; }\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  integers n and i, integer array a of size 200\n  read n\n  set value of a[0] to 1\n  for i = 1 to n - 1 inclusive\n    a[i] = (a[i - 1] + i) % n\n    set a[i] to n if a[i] is 0\n  \n  for i = 1 to n - 1 exclusive print a[i] and \" \"\n  print a[n - 1] and a new line\n  \n\n",
        "int main() {\n  int n, a[200], i;\n  cin >> n;\n  a[0] = 1;\n  for (i = 1; i <= n - 1; i++) {\n    a[i] = (a[i - 1] + i) % n;\n    if (a[i] == 0) a[i] = n;\n  }\n  for (i = 1; i < n - 1; i++) { cout << a[i] << \" \"; }\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "mp = map from long long to long long\ndeclare vector of strings called s\ndeclare vector of integers called v\n\n  declare integer variable m\n  read m\n  let k, i and j be integers with k = m, i = 1 and j = 1\n  decrease m by one\n  while m--\n    increase j by i\n    integer ans = j % k\n    if ans is equal to 0 set ans to j\n    print ans\n    if m is equal to 0\n      print new line\n    else\n      print \" \"\n    increase i by one\n    j %= k\n    if j is equal to 0, set j to ans\n  \n  \n\n",
        "map<long long, long long> mp;\nvector<string> s;\nvector<int> v;\nint main() {\n  int m;\n  cin >> m;\n  int k = m, i = 1, j = 1;\n  m--;\n  while (m--) {\n    j += i;\n    int ans = j % k;\n    if (ans == 0) ans = j;\n    cout << ans;\n    if (m == 0)\n      cout << endl;\n    else\n      cout << \" \";\n    i++;\n    j %= k;\n    if (j == 0) j = ans;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer vector v initialized with 6\n  read v[0], v[1], v[2], v[3], [4], v[5]\n  sort from beginning of v to end of v\n  declare integers h, b\n  if v[0] is v[3]\n    let h be 4\n    let b be 5\n  else if v[1] is v[4]\n    let h be 0\n    let b be 5\n  else if v[2] is v[5]\n    let h be 0\n    let b be 1\n  else\n    print \"Alien\\n\"\n    \n  \n  print \"Bear\\n\" if v[h] is less than v[b], else \"Elephant\\n\"\n  \n\n",
        "int main() {\n  vector<int> v(6);\n  cin >> v[0] >> v[1] >> v[2] >> v[3] >> v[4] >> v[5];\n  sort(v.begin(), v.end());\n  int h, b;\n  if (v[0] == v[3]) {\n    h = 4;\n    b = 5;\n  } else if (v[1] == v[4]) {\n    h = 0;\n    b = 5;\n  } else if (v[2] == v[5]) {\n    h = 0;\n    b = 1;\n  } else {\n    cout << \"Alien\\n\";\n    return 0;\n  }\n  cout << (v[h] < v[b] ? \"Bear\\n\" : \"Elephant\\n\");\n  return 0;\n}\n"
    ],
    [
        "declare const int INF = 0x3f3f3f3f\ncreate int array a with size 11\n\n  declare integer variables n, m and t\n  declare integer variables i, j and k\n  for i = 0 to 6 exclusive, read t and increment a[t]\n  for i = 1 to 9 inclusive\n    if a[i] >= 4, break\n  if i is greater than 9\n    print \"Alien\"\n    \n  \n  for i from 1 to 9 inclusive\n    if a[i] = 2 or a[i] = 6, stop the loop\n  if i is greater than 9\n    print \"Bear\"\n    \n  \n  print \"Elephant\"\n  \n\n",
        "const int INF = 0x3f3f3f3f;\nint a[11];\nint main() {\n  int n, m, t;\n  int i, j, k;\n  for (i = 0; i < 6; i++) cin >> t, a[t]++;\n  for (i = 1; i <= 9; i++)\n    if (a[i] >= 4) break;\n  if (i > 9) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  for (i = 1; i <= 9; i++)\n    if (a[i] == 2 || a[i] == 6) break;\n  if (i > 9) {\n    cout << \"Bear\" << endl;\n    return 0;\n  }\n  cout << \"Elephant\" << endl;\n  return 0;\n}\n"
    ],
    [
        "declare new array of integers a with size 10\n\n  create new integer variable x\n  for i from 1 to 6 inclusive incrementing i\n    read variable x from the input\n    increment a[x]\n  \n  declare new ints y and z = -1\n  start for loop from i = 1 to 9 inclusive\n    if a[i] >= 4, assign i to z\n  \n  if z is not -1\n    assign a[z] - 4 to a[z]\n    for i = 1 to 9 inclusive\n      if a[i] is equal to 1 and y = -1, change y to i\n      if a[i] = 1 and y is not -1, set z to i\n      if a[i] is equal to 2, change y to set z to a[i]\n    \n    if y is equal to z\n      print \"Elephant\"\n    else\n      print \"Bear\" to the standard output\n  else\n    print \"Alien\"\n\n",
        "int a[10];\nint main() {\n  int x;\n  for (int i = 1; i <= 6; i++) {\n    cin >> x;\n    a[x]++;\n  }\n  int y = -1, z = -1;\n  for (int i = 1; i <= 9; i++) {\n    if (a[i] >= 4) { z = i; }\n  }\n  if (z != -1) {\n    a[z] = a[z] - 4;\n    for (int i = 1; i <= 9; i++) {\n      if (a[i] == 1 && y == -1) { y = i; }\n      if (a[i] == 1 && y != -1) { z = i; }\n      if (a[i] == 2) { y = z = a[i]; }\n    }\n    if (y == z)\n      cout << \"Elephant\" << endl;\n    else\n      cout << \"Bear\" << endl;\n  } else\n    cout << \"Alien\" << endl;\n}\n"
    ],
    [
        "\n  create integers i, j, n, p, q, flag with p = 0, flag = 0, create integer array a with size 10 with a = {0}\n  for i = 0 to 6 exclusive\n    read n\n    increment a[n]\n  \n  for i = 0 to 9 inclusive\n    if a[i] is greater than or equal to 4\n      decrement a[i] by 4\n      set flag to 1\n    \n  \n  if flag is 0\n    print \"Alien\" print newline\n    \n  \n  for i = 0 to 9 inclusive\n    if a[i] is 2\n      print \"Elephant\" print newline\n      \n    \n  \n  print \"Bear\" print newline\n  \n\n",
        "int main() {\n  int i, j, n, p = 0, q, flag = 0, a[10] = {0};\n  for (i = 0; i < 6; i++) {\n    cin >> n;\n    a[n]++;\n  }\n  for (i = 0; i <= 9; i++) {\n    if (a[i] >= 4) {\n      a[i] -= 4;\n      flag = 1;\n    }\n  }\n  if (flag == 0) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  for (i = 0; i <= 9; i++) {\n    if (a[i] == 2) {\n      cout << \"Elephant\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Bear\" << endl;\n  return 0;\n}\n"
    ],
    [
        "ar = int array of size 12\n\n  a, b, c, d, e, f = int\n  read a then b then c then d then e then f\n  increment ar[a]\n  increment ar[b]\n  increment ar[c]\n  increment ar[d]\n  increment ar[e]\n  increment ar[f]\n  paichi = bool with paichi = false\n  for i = 1 to 9 inclusive\n    if ar[i] >= 4 set paichi to true\n  \n  if not paichi print \"Alien\" and return 0\n  cnt = int with cnt = 0\n  for i = 1 to 9 inclusive\n    if ar[i] is 2 or 6 print \"Elephant\" and return 0\n  \n  print \"Bear\"\n  \n\n",
        "int ar[12];\nint main() {\n  int a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  ar[a]++;\n  ar[b]++;\n  ar[c]++;\n  ar[d]++;\n  ar[e]++;\n  ar[f]++;\n  bool paichi = false;\n  for (int i = 1; i <= 9; i++) {\n    if (ar[i] >= 4) { paichi = true; }\n  }\n  if (!paichi) return cout << \"Alien\\n\", 0;\n  int cnt = 0;\n  for (int i = 1; i <= 9; i++) {\n    if (ar[i] == 2 or ar[i] == 6) return cout << \"Elephant\\n\", 0;\n  }\n  cout << \"Bear\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integer A with size 6\n  for i = 0 to 6 exclusive, read A[i]\n  sort elements from A to A + 6\n  create integers B, C\n  if A[0] is A[3]\n    set B to A[4], set C to A[5]\n  else if A[1] is A[4]\n    set B to A[0], set C to A[5]\n  else if A[2] is A[5]\n    set B to A[0], set C to A[1]\n  else\n    print \"Alien\" print newline\n    \n  \n  if B is C\n    print \"Elephant\" print newline\n    \n  \n  if B is less than C\n    print \"Bear\" print newline\n    \n  \n\n",
        "int main() {\n  int A[6];\n  for (int i = 0; i < 6; ++i) { cin >> A[i]; }\n  sort(A, A + 6);\n  int B, C;\n  if (A[0] == A[3])\n    B = A[4], C = A[5];\n  else if (A[1] == A[4])\n    B = A[0], C = A[5];\n  else if (A[2] == A[5])\n    B = A[0], C = A[1];\n  else {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  if (B == C) {\n    cout << \"Elephant\" << endl;\n    return 0;\n  }\n  if (B < C) {\n    cout << \"Bear\" << endl;\n    return 0;\n  }\n}\n"
    ],
    [
        "dp = two dimensional char array of sizes 10 and 10\nmp = long long and long long map\n\n  n, x = long long\n  a = long long array of size 10\n  for i = 0 to 6\n    read a[i]\n    increment mp[a[i]]\n  \n  ok = bool with ok = false\n  for i = 0 to 6\n    if mp[a[i]] is 6 set ok to true\n  \n  if ok is true\n    print \"Elephant\"\n    \n  \n  for i = 0 to 6\n    if mp[a[i]] is 5 set ok to true\n  \n  if ok is true\n    print \"Bear\"\n    \n  \n  for i = 0 to 6\n    if mp[a[i]] is 4 set ok to true\n  \n  if ok is false\n    print \"Alien\"\n    \n  \n  for i = 0 to 6\n    if mp[a[i]] is 2 set ok to false\n  \n  if ok is true\n    print \"Bear\"\n  else\n    print \"Elephant\"\n  \n\n",
        "char dp[10][10];\nmap<long long, long long> mp;\nint main() {\n  long long n, x;\n  long long a[10];\n  for (int i = 0; i < 6; i++) {\n    cin >> a[i];\n    mp[a[i]]++;\n  }\n  bool ok = false;\n  for (int i = 0; i < 6; i++) {\n    if (mp[a[i]] == 6) ok = true;\n  }\n  if (ok) {\n    cout << \"Elephant\" << endl;\n    return 0;\n  }\n  for (int i = 0; i < 6; i++) {\n    if (mp[a[i]] == 5) ok = true;\n  }\n  if (ok) {\n    cout << \"Bear\" << endl;\n    return 0;\n  }\n  for (int i = 0; i < 6; i++) {\n    if (mp[a[i]] == 4) ok = true;\n  }\n  if (!ok) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  for (int i = 0; i < 6; i++) {\n    if (mp[a[i]] == 2) ok = false;\n  }\n  if (ok)\n    cout << \"Bear\" << endl;\n  else\n    cout << \"Elephant\" << endl;\n  return 0;\n}\n"
    ],
    [
        "declare int arrays b with size 10 and c with size 6\n\n  declare an array of integers a with size 6 and integer variables i, x and j with j = 0\n  for i = 0 to 6 exclusive\n    read a[i]\n    assign a[i] to x\n    increment b[x] by one\n  \n  for i = 1 to 9 inclusive\n    if b[i] != 0\n      set c[j] to b[i]\n      increment j by one\n    \n  \n  sort first 3 elements of c\n  if c[0] = 1 and c[1] = 1 and c[2] = 4\n    print \"Bear\"\n  else if c[0] = 0 and c[1] = 1 and c[2] = 5\n    print \"Bear\"\n  else if c[0] = 0 and c[1] = 2 and c[2] = 4\n    print \"Elephant\"\n  else if c[2] is equal to 6\n    print \"Elephant\"\n  else\n    print \"Alien\"\n  \n  \n\n",
        "int b[10], c[6];\nint main() {\n  int a[6], i, x, j = 0;\n  for (i = 0; i < 6; i++) {\n    cin >> a[i];\n    x = a[i];\n    b[x]++;\n  }\n  for (i = 1; i <= 9; i++) {\n    if (b[i] != 0) {\n      c[j] = b[i];\n      j++;\n    }\n  }\n  sort(c, c + 3);\n  if (c[0] == 1 && c[1] == 1 && c[2] == 4) {\n    cout << \"Bear\" << endl;\n  } else if (c[0] == 0 && c[1] == 1 && c[2] == 5) {\n    cout << \"Bear\" << endl;\n  } else if (c[0] == 0 && c[1] == 2 && c[2] == 4) {\n    cout << \"Elephant\" << endl;\n  } else if (c[2] == 6) {\n    cout << \"Elephant\" << endl;\n  } else {\n    cout << \"Alien\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers i, j, n, p, q, flag, with p = 0, flag = 0, create integer array a with size 10 with a = {0}\n  for i = 0 to 6 exclusive\n    read n\n    increment a[n]\n  \n  for i = 0 to 9 inclusive\n    if a[i] is greater than or equal to 4\n      decrement a[i] by 4\n      set flag to 1\n    \n  \n  if flag is 0\n    print \"Alien\" print newline\n    \n  \n  for i = 0 to 9 inclusive\n    if a[i] is 2\n      print \"Elephant\" print newline\n      \n    \n  \n  print \"Bear\" print newline\n  \n\n",
        "int main() {\n  int i, j, n, p = 0, q, flag = 0, a[10] = {0};\n  for (i = 0; i < 6; i++) {\n    cin >> n;\n    a[n]++;\n  }\n  for (i = 0; i <= 9; i++) {\n    if (a[i] >= 4) {\n      a[i] -= 4;\n      flag = 1;\n    }\n  }\n  if (flag == 0) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  for (i = 0; i <= 9; i++) {\n    if (a[i] == 2) {\n      cout << \"Elephant\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Bear\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer array list size 10\n  set bytes from list to size of list to value 0\n  for i = 0 to 6 exclusive\n    declare temp as integer\n    read temp\n    increment list[temp]\n  \n  for i = 0 to 10 exclusive\n    if list[i] is 4\n      for j = 0 to 10 exclusive\n        if list[j] is 2\n          print \"Elephant\", newline\n          \n        \n      \n      print \"Bear\", newline\n      \n    else if list[i] is 5\n      print \"Bear\", newline\n      \n    else if list[i] is 6\n      print \"Elephant\", newline\n      \n    \n  \n  print \"Alien\", newline\n  \n\n",
        "int main() {\n  int list[10];\n  memset(list, 0, sizeof(list));\n  for (int i = 0; i < 6; i++) {\n    int temp;\n    cin >> temp;\n    list[temp]++;\n  }\n  for (int i = 0; i < 10; i++) {\n    if (list[i] == 4) {\n      for (int j = 0; j < 10; j++) {\n        if (list[j] == 2) {\n          cout << \"Elephant\" << endl;\n          return 0;\n        }\n      }\n      cout << \"Bear\" << endl;\n      return 0;\n    } else if (list[i] == 5) {\n      cout << \"Bear\" << endl;\n      return 0;\n    } else if (list[i] == 6) {\n      cout << \"Elephant\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Alien\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array mp with size 20\n\n  create integer n\n  create integer vector Q\n  set bytes from mp to size of mp to value 0\n  for i = 1 to 6 inclusive\n    create integer p\n    read p\n    increment mp[p]\n    add character p to end of Q\n  \n  create integers flag1, flag2 with flag1 = 0, flag2 = 0\n  for i = 0 to size of Q exclusive\n    if mp[Q[i]] is greater than or equal to 4, set flag1 to 1\n    if mp[Q[i]] is 2, set flag2 to 1\n    if mp[Q[i]] is 6\n      set flag1 to 1\n      set flag2 to 1\n    \n  \n  if flag1 is 1 and flag2 is 0\n    print \"Bear\\n\"\n  else if flag1 is 1 and flag2 is 1\n    print \"Elephant\\n\"\n  else\n    print \"Alien\\n\"\n  \n  \n\n",
        "int mp[20];\nint main() {\n  int n;\n  vector<int> Q;\n  memset(mp, 0, sizeof mp);\n  for (int i = 1; i <= 6; i++) {\n    int p;\n    cin >> p;\n    mp[p]++;\n    Q.push_back(p);\n  }\n  int flag1 = 0, flag2 = 0;\n  for (int i = 0; i < Q.size(); i++) {\n    if (mp[Q[i]] >= 4) { flag1 = 1; }\n    if (mp[Q[i]] == 2) { flag2 = 1; }\n    if (mp[Q[i]] == 6) {\n      flag1 = 1;\n      flag2 = 1;\n    }\n  }\n  if (flag1 == 1 and flag2 == 0) {\n    cout << \"Bear\\n\";\n  } else if (flag1 == 1 and flag2 == 1) {\n    cout << \"Elephant\\n\";\n  } else {\n    cout << \"Alien\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "a, b, n = int and s = int array of size 10\n\n  for i = 0 to 6\n    read n\n    increment s[n]\n  \n  for i = 0 to 10\n    if s[i] is greater or equal to 4 set b to 1\n    if s[i] is 2 or 6 set a to 1\n  \n  if b is 0\n    print \"Alien\"\n  else if a is 1\n    print \"Elephant\"\n  else\n    print \"Bear\"\n  \n\n",
        "int s[10], a, b, n;\nint main() {\n  for (int i = 0; i < 6; i++) {\n    cin >> n;\n    s[n]++;\n  }\n  for (int i = 0; i < 10; i++) {\n    if (s[i] >= 4) { b = 1; }\n    if (s[i] == 2 || s[i] == 6) { a = 1; }\n  }\n  if (b == 0) {\n    cout << \"Alien\" << endl;\n  } else if (a == 1) {\n    cout << \"Elephant\" << endl;\n  } else {\n    cout << \"Bear\" << endl;\n  }\n}\n"
    ],
    [
        "create a map from integers to integers with name mp\n\n  for integer i = 0 to 6 exclusive\n    declare int p\n    read p\n    increment mp[p]\n  \n  if length of mp is greater than 3\n    print \"Alien\"\n    \n  \n  if length of mp is equal to 3\n    create integer f = 0\n    it is a map iterator\n    move it through mp\n      if it->second = 4\n        change f to 1\n        break the loop\n      \n    \n    if f != 0\n      print \"Bear\"\n      \n    else\n      print \"Alien\"\n      \n    \n  \n  if length of mp is equal to 2\n    declare integer variable f = 0\n    it is a map iterator\n    move it through mp\n      if it->second = 2\n        change f to 1\n        break the loop\n      \n      if if it->second = 3\n        print \"Alien\"\n        \n      \n    \n    if f != 0\n      print \"Elephant\"\n      \n    else\n      print \"Bear\"\n      \n    \n  \n  if length of mp = 1\n    print \"Elephant\"\n    \n  \n  \n\n",
        "map<int, int> mp;\nint main() {\n  for (int i = 0; i < 6; i++) {\n    int p;\n    cin >> p;\n    mp[p]++;\n  }\n  if (mp.size() > 3) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  if (mp.size() == 3) {\n    int f = 0;\n    map<int, int>::iterator it;\n    for (it = mp.begin(); it != mp.end(); it++) {\n      if (it->second == 4) {\n        f = 1;\n        break;\n      }\n    }\n    if (f) {\n      cout << \"Bear\" << endl;\n      return 0;\n    } else {\n      cout << \"Alien\" << endl;\n      return 0;\n    }\n  }\n  if (mp.size() == 2) {\n    int f = 0;\n    map<int, int>::iterator it;\n    for (it = mp.begin(); it != mp.end(); it++) {\n      if (it->second == 2) {\n        f = 1;\n        break;\n      }\n      if (it->second == 3) {\n        cout << \"Alien\" << endl;\n        return 0;\n      }\n    }\n    if (f) {\n      cout << \"Elephant\" << endl;\n      return 0;\n    } else {\n      cout << \"Bear\" << endl;\n      return 0;\n    }\n  }\n  if (mp.size() == 1) {\n    cout << \"Elephant\" << endl;\n    return 0;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  l, r = long long\n  read l then r\n  if r - l is greater than 1\n    if l is even\n      print l then ' ' then l + 1 then ' ' then l + 2\n    else\n      if r - l is greater than 2\n        print l + 1 then ' ' then l + 2 then ' ' then l + 3\n      else\n        print -1\n    \n  else\n    print -1\n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l > 1) {\n    if (l % 2 == 0)\n      cout << l << ' ' << l + 1 << ' ' << l + 2 << endl;\n    else {\n      if (r - l > 2)\n        cout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl;\n      else\n        cout << -1 << endl;\n    }\n  } else\n    cout << -1 << endl;\n}\n"
    ],
    [
        "tmp, min1, max1, sum_n, index_max, index_min = int\narr1 = two dimensional int array of sizes 1000 and 1000\narr3 = char array of size 100\narr = int array of size 10000\nin function display_vector taking an int vector v\n  for i = 0 to size of v print v[i] then \" \"\n  print newline\n\ndefine empty function speed\nin function min_max taking an int vector v and an int l\n  set min1 to INT_MAX\n  set max1 to INT_MIN\n  for i = l to size of v\n    if v[i] is less or equal to min1\n      set min1 to v[i]\n      set index_min to i\n    \n    if v[i] is greater or equal to max1\n      set max1 to v[i]\n      set index_max to i\n    \n  \n\nin function sum_v taking an int vector v and returning an int\n  for i = 0 to size of v increment sum_n by v[i]\n  return sum_n\n\nin function is_it_sorted_acs taking an int vector v and returning a bool\n  test1 = bool with test1 = false\n  for i = 0 to size of v - 1\n    if v[i + 1] is less or equal to v[i]\n      set test1 to false\n      return test1\n    \n  set test1 to true\n  return test1\n\nin function is_it_sorted_des taking an int vector v and returning a bool\n  test1 = bool with test1 = false\n  for i = 0 to size of v - 1\n    if v[i + 1] is greater or equal to v[i]\n      set test1 to false\n      return test1\n    \n  set test1 to true\n  return test1\n\n\n  call speed\n  l, r = long long\n  read l then r\n  if l is uneven then increment l\n  if r - l is less than 2 then print -1 and return 0\n  print l and l + 1 and l + 2\n\n",
        "int tmp, min1, max1, sum_n, index_max, index_min;\nint arr1[1000][1000];\nchar arr3[100];\nint arr[10000];\nvoid display_vector(vector<int> v) {\n  for (int i = 0; i < v.size(); i++) cout << v[i] << \" \";\n  cout << endl;\n}\nvoid speed() {}\nvoid min_max(vector<int> v, int l) {\n  min1 = INT_MAX;\n  max1 = INT_MIN;\n  for (int i = l; i < v.size(); i++) {\n    if (v[i] <= min1) {\n      min1 = v[i];\n      index_min = i;\n    }\n    if (v[i] >= max1) {\n      max1 = v[i];\n      index_max = i;\n    }\n  }\n}\nint sum_v(vector<int> v) {\n  for (int i = 0; i < v.size(); i++) sum_n += v[i];\n  return sum_n;\n}\nbool is_it_sorted_acs(vector<int> v) {\n  bool test1 = false;\n  for (int i = 0; i < v.size() - 1; i++)\n    if (v[i + 1] <= v[i]) {\n      test1 = false;\n      return test1;\n    }\n  test1 = true;\n  return test1;\n}\nbool is_it_sorted_des(vector<int> v) {\n  bool test1 = false;\n  for (int i = 0; i < v.size() - 1; i++)\n    if (v[i + 1] >= v[i]) {\n      test1 = false;\n      return test1;\n    }\n  test1 = true;\n  return test1;\n}\nint main() {\n  speed();\n  long long l, r;\n  cin >> l >> r;\n  if (l % 2 != 0) l++;\n  if (r - l < 2) return cout << -1 << endl, 0;\n  cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n}\n"
    ],
    [
        "\n  create long long l and r\n  read l and r\n  if r - l + 1 less than 3\n    print -1\n    \n  \n  if l is odd\n    print l, ' ', l+1, ' ', l+2\n    \n  \n  if r - l + 1 greater than 3\n    print l+1, ' ', l+2, ' ', l+3\n    \n  \n  print -1 and a newline\n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l + 1 < 3) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (l % 2 == 0) {\n    cout << l << ' ' << l + 1 << ' ' << l + 2 << endl;\n    return 0;\n  }\n  if (r - l + 1 > 3) {\n    cout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl;\n    return 0;\n  }\n  cout << -1 << endl;\n}\n"
    ],
    [
        "create long long l and r\n\n  read l, r\n  if r - l + 1 < 3\n    print -1\n    \n  \n  if l is even\n    print l, \" \", l+1, \" \", l+2\n    \n  \n  if r - l + 1 greater than 3\n    print l + 1, \" \", l + 2, \" \", l + 3\n    \n  \n  print -1 and a newline\n  \n  \n\n",
        "long long l, r;\nint main() {\n  cin >> l >> r;\n  if (r - l + 1 < 3) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (l % 2 == 0) {\n    cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n    return 0;\n  }\n  if (r - l + 1 > 3) {\n    cout << l + 1 << \" \" << l + 2 << \" \" << l + 3 << endl;\n    return 0;\n  }\n  cout << -1 << endl;\n  return 0;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer long longs l, r\n  read l read r\n  if l % 2 is not 0, increment l\n  if l + 2 is greater than r\n    print -1 print newline\n  else\n    print l print \" \" print l + 1 print \" \" print l + 2 print newline\n  \n\n",
        "int main() {\n  int long long l, r;\n  cin >> l >> r;\n  if (l % 2 != 0) l++;\n  if (l + 2 > r)\n    cout << -1 << endl;\n  else\n    cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare long long variables k and l\n  read k and l and keep looping\n    if l - k is less than 2\n      print - 1\n    else if k is even\n      print k, \" \", k + 1, \" \" and k + 2\n    else if k is odd && l - k >= 3\n      print k + 1, \" \", k + 2, \" \" and k + 3\n    else\n      print -1\n  \n  \n\n",
        "int main() {\n  long long k, l;\n  while (cin >> k >> l) {\n    if (l - k < 2)\n      cout << -1 << endl;\n    else if (!(k % 2)) {\n      cout << k << \" \" << k + 1 << \" \" << k + 2 << endl;\n    } else if (k % 2 && l - k >= 3) {\n      cout << k + 1 << \" \" << k + 2 << \" \" << k + 3 << endl;\n    } else\n      cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, m\n  read n read m\n  if m - n is less than 2\n    print -1 print newline\n  else\n    if n % 2 is 0\n      print n print \" \" print n + 1 print \" \" print n + 2 print newline\n    else if n % 2 is not 0 and n + 3 is less than or equal to m\n      print n + 1 print \" \" print n + 2 print \" \" print n + 3 print newline\n    else\n      print -1 print newline\n  \n\n",
        "int main() {\n  long long n, m;\n  cin >> n >> m;\n  if (m - n < 2)\n    cout << -1 << endl;\n  else {\n    if (n % 2 == 0)\n      cout << n << \" \" << n + 1 << \" \" << n + 2 << endl;\n    else if (n % 2 != 0 && n + 3 <= m)\n      cout << n + 1 << \" \" << n + 2 << \" \" << n + 3 << endl;\n    else\n      cout << -1 << endl;\n  }\n}\n"
    ],
    [
        "\n  a, b = long long integer\n  read a, b\n  if a modulo 2 is 0 and a + 2 <= b\n    print a,\" \",a + 1,\" \",a + 2\n  else if a modulo 2 is not 0 and a + 3 <= b\n    print a + 1,\" \",a + 2,\" \",a + 3\n  else\n    print -1\n  \n  \n\n",
        "int main() {\n  long long int a, b;\n  cin >> a >> b;\n  if (a % 2 == 0 && a + 2 <= b) {\n    cout << a << \" \" << a + 1 << \" \" << a + 2 << endl;\n  } else if (a % 2 != 0 && a + 3 <= b) {\n    cout << a + 1 << \" \" << a + 2 << \" \" << a + 3 << endl;\n  } else {\n    cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long l and r\n  read l and r\n  if r - l + 1 < 3\n    read -1\n    \n  \n  if r - l + 1 = 3 and r mod 2 different from 0 or l mod 2 different from 0\n    print -1\n    \n  \n  if l is even and l + 2 is even\n    print l, \" \", l + 1, \" \", l + 2\n  else\n    print l + 1, \" \", l + 2, \" \", l + 3\n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l + 1 < 3) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (r - l + 1 == 3 && (r % 2 != 0 || l % 2 != 0)) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (l % 2 == 0 && (l + 2) % 2 == 0)\n    cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n  else\n    cout << l + 1 << \" \" << l + 2 << \" \" << l + 3 << endl;\n}\n"
    ],
    [
        "\n  l, r = long long\n  read l, r\n  if r - l + 1 < 3\n    print -1\n    \n  \n  if l modulo 2 is 0\n    print l,' ',l + 1,' ',l + 2\n    \n  \n  if r - l + 1 > 3\n    print l + 1,' ',l + 2,' ',l + 3\n    \n  \n  print -1\n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l + 1 < 3) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (l % 2 == 0) {\n    cout << l << ' ' << l + 1 << ' ' << l + 2 << endl;\n    return 0;\n  }\n  if (r - l + 1 > 3) {\n    cout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl;\n    return 0;\n  }\n  cout << -1 << endl;\n}\n"
    ],
    [
        "\n  create long long n1 and n2\n  read n1, n2\n  if n1 is odd, increase n1\n  if n2 - n1 less than 2\n    print -1\n  else\n    print n1, \" \", n1+1, \" \", n1+2\n  \n  \n\n",
        "int main() {\n  long long n1, n2;\n  cin >> n1 >> n2;\n  if (n1 % 2 != 0) n1++;\n  if (n2 - n1 < 2) {\n    cout << \"-1\" << endl;\n  } else {\n    cout << n1 << \" \" << n1 + 1 << \" \" << n1 + 2 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let l, r be long integers\n  read l and r\n  if r - l is less than 2\n    print -1 and newline\n  else if r - l is equal to 2\n    if r modulo 2\n      print -1 and newline\n    else do the following\n      print l and space and l + 1 and space and r and newline\n  else do the following\n    if l modulo 2\n      print l + 1 and space and l + 2 and space and l + 3 and newline\n    else do the following\n      print l and space and l + 1 and space and l + 2 and newline\n  \n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l < 2)\n    cout << -1 << '\\n';\n  else if (r - l == 2) {\n    if (r % 2)\n      cout << -1 << '\\n';\n    else\n      cout << l << \" \" << l + 1 << \" \" << r << '\\n';\n  } else {\n    if (l % 2)\n      cout << l + 1 << \" \" << l + 2 << \" \" << l + 3 << '\\n';\n    else\n      cout << l << \" \" << l + 1 << \" \" << l + 2 << '\\n';\n  }\n}\n"
    ],
    [
        "\n  create long long l and r\n  read l and r\n  is l is even and l + 2 <= r\n    print l, \" \", l + 1, \" \", l + 2\n  else\n    l + 3 <= r\n      print l+1, \" \", l + 2, \" \", l + 3\n    else\n      print -1 and a newline\n  \n  \n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (l % 2 == 0 && l + 2 <= r)\n    cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n  else {\n    if (l + 3 <= r)\n      cout << l + 1 << \" \" << l + 2 << \" \" << l + 3 << endl;\n    else\n      cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, res = integer with res = 0\n  read n\n  total = integer with total = 0\n  while total < n\n    increment res\n    total = total + res * (res + 1) / 2\n  \n  if total > n, decrement res\n  print res\n  \n\n",
        "int main() {\n  int n, res = 0;\n  cin >> n;\n  int total = 0;\n  while (total < n) {\n    res++;\n    total += res * (res + 1) / 2;\n  }\n  if (total > n) { res--; }\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints n, i, j, x, and mohi\n  create long long int sum = 0\n  create integer vector v\n  read n\n  for i = 1 to n\n    for j = 1 to i\n      set mohi to (j * (j + 1)) / 2\n      set sum to sum + mohi\n    \n    if sum is less than n\n      set x to i\n      break loop\n    \n    set sum to 0\n  \n  if n is equal to 1\n    print 1\n  otherwise\n    print x - 1\n\n",
        "int main() {\n  int n, i, j, x, mohi;\n  long long int sum = 0;\n  vector<int> v;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= i; j++) {\n      mohi = (j * (j + 1)) / 2;\n      sum += mohi;\n    }\n    if (sum > n) {\n      x = i;\n      break;\n    }\n    sum = 0;\n  }\n  if (n == 1)\n    cout << 1 << endl;\n  else\n    cout << x - 1 << endl;\n}\n"
    ],
    [
        "\n  n,ans,sum,sum2=int\n  while read n\n    ans, sum, sum2=0\n    while true\n      if sum2>n break\n      increment ans\n      add ans to sum\n      add sum to sum2\n    \n    print ans-1\n  \n  \n\n",
        "int main() {\n  int n, ans, sum, sum2;\n  while (cin >> n) {\n    ans = sum = sum2 = 0;\n    while (true) {\n      if (sum2 > n) break;\n      ans++;\n      sum += ans;\n      sum2 += sum;\n    }\n    cout << ans - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "int function Addition with int argument n\n  declare new integer s\n  set s to (n * (1 + n)) / 2\n  return s\n\n\n  a and i are integers with i = 0\n  read input to a\n  if a is greater than 0\n    change a to a - the result of Addition(i)\n    while a > 0\n      increment i\n      assign a - the result of Addition(i + 1) to a\n    \n    print i to the standard output\n  else\n    print \"0\" to the standard output\n\n",
        "int Addition(int n) {\n  int s;\n  s = (n * (1 + n)) / 2;\n  return s;\n}\nint main() {\n  int a, i = 0;\n  cin >> a;\n  if (a > 0) {\n    a = a - Addition(i);\n    while (a > 0) {\n      i++;\n      a = a - Addition(i + 1);\n    }\n    cout << i << endl;\n  } else\n    cout << \"0\" << endl;\n}\n"
    ],
    [
        "\n  n, a, b = integers with a = 0, b = 0\n  read n\n  for i = 1 to n exclusive\n    a = a + i\n    n = n - a\n    if n >= 0, increment b\n  \n  print b\n\n",
        "int main() {\n  int n, a = 0, b = 0;\n  cin >> n;\n  for (int i = 1; a < n; i++) {\n    a += i;\n    n -= a;\n    if (n >= 0) b++;\n  }\n  cout << b << endl;\n}\n"
    ],
    [
        "\n  declare integer array a with size 151; create integers sum and sum1 where sum1 = 0\n  read variable sum from the input\n  in the for loop, change i from 1 to 150 inclusive\n    set a[i] to (1 + i) * i / 2\n    increase sum1 by a[i]\n    set a[i + 1] to (2 + i) * (i + 1) / 2\n    if sum >= sum1 and sum < sum1 + a[i + 1]\n      print i to the standard output\n      break the loop\n    \n  \n  \n\n",
        "int main() {\n  int a[151], sum, sum1 = 0;\n  cin >> sum;\n  for (int i = 1; i <= 150; i++) {\n    a[i] = (1 + i) * i / 2;\n    sum1 += a[i];\n    a[i + 1] = (2 + i) * (i + 1) / 2;\n    if (sum >= sum1 && sum < sum1 + a[i + 1]) {\n      cout << i << endl;\n      break;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer, s = integer = 0\n  read n\n  loop indefinitely for i = 1 and increase i at the end of the loop\n    if s > n\n      print the result of i - 2\n      exit the for loop\n    else\n      s = s + (i * (i + 1)) / 2\n    \n  \n\n",
        "int main() {\n  int n, s = 0;\n  cin >> n;\n  for (int i = 1;; i++) {\n    if (s > n) {\n      cout << i - 2 << \"\\n\";\n      break;\n    } else {\n      s += (i * (i + 1)) / 2;\n    }\n  }\n}\n"
    ],
    [
        "\n  var, n, aux, x = int with var = 1 and aux = 0 and x = 0\n  read n\n  level = int with level = 0\n  loop infinitely\n    increment x by var\n    increment aux by x\n    if aux > n break\n    increment level\n    increment var\n  \n  print level\n\n",
        "int main() {\n  int var = 1, n, aux = 0, x = 0;\n  cin >> n;\n  int level = 0;\n  while (1) {\n    x += var;\n    aux += x;\n    if (aux > n) break;\n    level++;\n    var++;\n  }\n  cout << level << \"\\n\";\n}\n"
    ],
    [
        "create constant int INF = 1e9\nlet const integer N = 1e5\nlet int array arr of size 10001\ndeclare prework\n  set arr[0] to 0\n  for i = 1 to 10000, set arr[i] to arr[i - 1] + i\n\n\n  call prework\n  let ints n and cnt = 0\n  read n\n  for i = 1, loop indefinitely\n    if n is less than arr[i], break loop\n    set n to n - arr[i]\n    increment cnt\n  \n  print cnt\n  \n\n",
        "const int INF = 1e9;\nconst int N = 1e5;\nint arr[10001];\nvoid prework() {\n  arr[0] = 0;\n  for (int i = 1; i <= 10000; i++) { arr[i] = arr[i - 1] + i; }\n}\nint main() {\n  prework();\n  int n, cnt = 0;\n  cin >> n;\n  for (int i = 1;; i++) {\n    if (n < arr[i]) break;\n    n -= arr[i];\n    cnt++;\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints n, c = 0, d, and count = 0\n  read n\n  for i = 1 to n\n    set c to c + 1\n    if n is greater than or equal to c, increment count\n    set n to n - c\n  \n  print count\n  \n\n",
        "int main() {\n  int n, c = 0, d, count = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    c += i;\n    if (n >= c) count++;\n    n -= c;\n  }\n  cout << count << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  h = int with h = 1\n  temp = int with temp = ((h) * (h + 1) * (h + 2)) / 6\n  loop while temp <= n\n    increment h\n    set temp to ((h) * (h + 1) * (h + 2)) / 6\n  \n  print h - 1\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int h = 1;\n  int temp = ((h) * (h + 1) * (h + 2)) / 6;\n  while (temp <= n) {\n    h++;\n    temp = ((h) * (h + 1) * (h + 2)) / 6;\n  }\n  cout << h - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = long long\n  read n\n  val, ans = long long with val = 0 and ans = 0\n  for i = 0 to 10001\n    increment val by i\n    increment ans by val\n    if ans > n\n      print i - 1\n      \n    \n  \n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  long long val = 0, ans = 0;\n  for (long long i = 0; i < 10001; i++) {\n    val += i;\n    ans += val;\n    if (ans > n) {\n      cout << i - 1 << endl;\n      return 0;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "in function sum taking an int n and returning an int\n  s = int with s = (n * (n + 1)) / 2\n  return s\n\n\n  n = int\n  read n\n  i = int with i = 0\n  s = int with s = 0\n  loop infinitely\n    increment s by sum of i\n    if s > n\n      break\n    else\n      increment i\n    \n  \n  print i - 1\n\n",
        "int sum(int n) {\n  int s = (n * (n + 1)) / 2;\n  return s;\n}\nint main() {\n  int n;\n  cin >> n;\n  int i = 0;\n  int s = 0;\n  while (true) {\n    s = s + sum(i);\n    if (s > n) {\n      break;\n    } else {\n      i++;\n    }\n  }\n  cout << (i - 1) << endl;\n}\n"
    ],
    [
        "\n  n, count = int with count = 0\n  read n\n  flag, i, x = int with flag = 0 and i = 2 and x = 1\n  loop while flag <= n\n    increment flag by x\n    increment x by i\n    increment i\n    if flag <= n increment count\n  \n  print count\n  \n\n",
        "int main() {\n  int n, count = 0;\n  cin >> n;\n  int flag = 0, i = 2, x = 1;\n  while (flag <= n) {\n    flag += x;\n    x += i;\n    i++;\n    if (flag <= n) count++;\n  }\n  cout << count << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  tot, ans = int with tot = 0 and ans = 0\n  for i = 1 to n inclusive\n    increment tot by i * (i + 1) / 2\n    if tot > n break\n    set ans to i\n  \n  print ans\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int tot = 0, ans = 0;\n  for (int i = 1; i <= n; i += 1) {\n    tot += i * (i + 1) / 2;\n    if (tot > n) break;\n    ans = i;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n=long long, x, count and boxes=0\n  read n\n  i=1\n  j=1\n  while boxes+i+x <= n\n    add i to x\n    add j to i\n    increment count\n    add x to boxes\n  \n  print count\n\n",
        "int main() {\n  long long n, x = 0, count = 0, boxes = 0;\n  cin >> n;\n  long long i = 1;\n  long long j = 1;\n  while (boxes + i + x <= n) {\n    x += i;\n    i += j;\n    count++;\n    boxes += x;\n  }\n  cout << count << endl;\n}\n"
    ],
    [
        "\n  let i, n, k be integers\n  while read n\n    k is equal to 0\n    for i is equal to 1, n >= 0 , increment i by 1\n      increment k by i\n      decrement n by k\n    \n    print i - 2 and newline\n  \n\n",
        "int main() {\n  int i, n, k;\n  while (cin >> n) {\n    k = 0;\n    for (i = 1; n >= 0; i++) {\n      k += i;\n      n -= k;\n    }\n    cout << (i - 2) << endl;\n  }\n}\n"
    ],
    [
        "a = array of integers of length 10010\n\n  1st element in a is equal to 1\n  let sum, m be long integers\n  for i = 2 to 10000 inclusive , the value of a[i] is equal to a[i - 1] + i\n  while reading m\n    for i = 1 to 10000 inclusive\n      decrement m by a[i]\n      if m is less than a[i + 1]\n        print i and newline\n        stop\n      \n    \n  \n  \n\n",
        "int a[10010];\nint main() {\n  a[1] = 1;\n  long long int sum, m;\n  for (int i = 2; i <= 10000; i++) a[i] = a[i - 1] + i;\n  while (cin >> m) {\n    for (int i = 1; i <= 10000; i++) {\n      m -= a[i];\n      if (m < a[i + 1]) {\n        cout << i << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "declare integer vector sol\n\n  declare integer n\n  read n\n  declare integer sum = 0\n  for i = 1 to 150 inclusive\n    if sum is greater than n\n      print i - 2, newline\n      \n    \n    increment sum by ((i * (i + 1)) / 2)\n  \n\n",
        "vector<int> sol;\nint main() {\n  int n;\n  cin >> n;\n  int sum = 0;\n  for (int i = 1; i <= 150; i++) {\n    if (sum > n) {\n      cout << i - 2 << endl;\n      return 0;\n    }\n    sum += ((i * (i + 1)) / 2);\n  }\n}\n"
    ],
    [
        "create int array a of length 10010\n\n  set a[0] to 0\n  for i=1 to 10000 inclusive set a[i] = a[i - 1] + i\n  create int n\n  while read n\n    ans =0\n    loop over i starting from i=1\n      if n >= a[i]\n        set n to n - a[i], increment ans\n      else\n        break\n    \n    print ans\n  \n  \n\n",
        "int a[10010];\nint main() {\n  a[0] = 0;\n  for (int i = 1; i <= 10000; i++) a[i] = a[i - 1] + i;\n  int n;\n  while (cin >> n) {\n    int ans = 0;\n    for (int i = 1;; i++) {\n      if (n >= a[i])\n        n -= a[i], ans++;\n      else\n        break;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, i, l, s = long long integer with s = 0\n  read n\n  for l = 0\n    s = s + l * (l + 1) / 2\n    if s > n, break loop\n  \n  print l - 1\n  \n\n",
        "int main() {\n  long long int n, i, l, s = 0;\n  cin >> n;\n  for (l = 0;; l++) {\n    s += l * (l + 1) / 2;\n    if (s > n) { break; }\n  }\n  cout << l - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  create int ans, t and q, set ans to 0 and t, q to 1\n  ans = ans + t\n  while n >= ans\n    increment q\n    set t to t + q\n    assign ans + t to ans\n  \n  print q - 1\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int ans = 0, t = 1, q = 1;\n  ans = ans + t;\n  while (n >= ans) {\n    q++;\n    t = t + q;\n    ans = ans + t;\n  }\n  cout << q - 1 << endl;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  create int a, c, b and i, set a, c and b to 0\n  for i=1 to n inclusive\n    set b to (i * (i + 1)) / 2\n    set a to a + b\n    if a > n, break\n    increment c\n  \n  print c\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a = 0, c = 0, b = 0, i;\n  for (int i = 1; i <= n; i++) {\n    b = (i * (i + 1)) / 2;\n    a += b;\n    if (a > n) break;\n    c++;\n  }\n  cout << c << endl;\n  return 0;\n}\n"
    ],
    [
        "create ints n and c\n\n  read n\n  for c = 1, loop as long as c * (c + 1) * (c + 2) / 6 <= n\n    end statement\n  print c - 1\n\n",
        "int n, c;\nint main() {\n  cin >> n;\n  for (c = 1; c * (c + 1) * (c + 2) / 6 <= n; c++)\n    ;\n  cout << c - 1 << '\\n';\n}\n"
    ],
    [
        "\n  let n be an integer\n  get input in n\n  let i = 2 = int\n  while n - i * (i + 1) / 2 is positive\n    decrement n by i * (i + 1) / 2\n    increment i\n  \n  print i-1\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int i = 2;\n  while (n - i * (i + 1) / 2 > 0) {\n    n -= i * (i + 1) / 2;\n    i++;\n  }\n  cout << i - 1 << endl;\n}\n"
    ],
    [
        "a is a new array of integers with size 10010\n\n  set a[1] to 1\n  declare new long long int variables sum and m\n  for i from 2 to 10000 inclusive, change a[i] to a[i - 1] + i\n  read m and loop further\n    start for loop from i = 1 to 10000 inclusive incrementing i\n      decrease m by a[i]\n      if m is less than a[i + 1]\n        print i\n        break the loop\n      \n    \n  \n  \n\n",
        "int a[10010];\nint main() {\n  a[1] = 1;\n  long long int sum, m;\n  for (int i = 2; i <= 10000; i++) a[i] = a[i - 1] + i;\n  while (cin >> m) {\n    for (int i = 1; i <= 10000; i++) {\n      m -= a[i];\n      if (m < a[i + 1]) {\n        cout << i << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  a = int with a = 0\n  b = int with b = 1\n  c = int with c = 0\n  read n\n  loop infinitely\n    for i = 1 to b inclusive increment a by i\n    increment b\n    if a > n break\n    increment c\n  \n  print c\n  \n\n",
        "int main() {\n  int n;\n  int a = 0;\n  int b = 1;\n  int c = 0;\n  cin >> n;\n  while (true) {\n    for (int i = 1; i <= b; i++) { a += i; }\n    b++;\n    if (a > n) { break; }\n    c++;\n  }\n  cout << c << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n, r, t = int with r = 0 and t = 0\n  read n\n  for i = 1\n    increment r by i\n    increment t by r\n    if t > n\n      print i - 1\n      break\n    \n  \n  \n\n",
        "int main() {\n  int n, r = 0, t = 0;\n  cin >> n;\n  for (int i = 1;; ++i) {\n    r += i;\n    t += r;\n    if (t > n) {\n      cout << (i - 1) << endl;\n      break;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let int n\n  read n and while n is truthy\n    let long long int sum = 0\n    let int i\n    for i = 1 loop indefinitely\n      make long long current = 1LL * i * (i + 1) / 2\n      if sum + current is less than or equal to n\n        set n to n - sum + current\n      else do\n        break loop\n    \n    print i - 1\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    long long sum = 0;\n    int i;\n    for (i = 1;; i++) {\n      long long current = 1LL * i * (i + 1) / 2;\n      if (sum + current <= n)\n        n -= sum + current;\n      else\n        break;\n    }\n    cout << i - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "cube = long long\n\n  res = long long\n  read cube\n  for i = 0 loop while i * (i + 1) * ( i + 2) <= 6 * cube set res to i\n  print res\n  \n\n",
        "long long cube;\nint main() {\n  long long res;\n  cin >> cube;\n  for (long long i = 0; i * (i + 1) * (i + 2) <= 6 * cube; ++i) { res = i; }\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "declare need with integer a as argument, returning integer\n  declare b as integer = 0\n  for i = 1 to a inclusive, increment b by i\n  return b from function\n\n\n  declare integer a\n  read a\n  declare integer i with i = 0\n  while a is greater than or equal to result of run need with i as argument\n    decrement a by need(1)\n    increment i\n  \n  print i - 1 print newline\n\n",
        "int need(int a) {\n  int b = 0;\n  for (int i = 1; i <= a; i++) { b += i; }\n  return b;\n}\nint main() {\n  int a;\n  cin >> a;\n  int i = 0;\n  while (a >= need(i)) {\n    a -= need(i);\n    i++;\n  }\n  cout << i - 1 << endl;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  sum, i, b = int\n  set sum, b, i to 1\n  loop infinitely\n    if sum is n\n      print i\n      break\n    else\n      if sum > n\n        print i - 1\n        break\n      else\n        increment i\n        increment b by i\n        increment sum by b\n      \n    \n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int sum, i, b;\n  sum = b = i = 1;\n  for (;;) {\n    if (sum == n) {\n      cout << i << endl;\n      break;\n    } else {\n      if (sum > n) {\n        cout << (i - 1) << endl;\n        break;\n      } else {\n        i++;\n        b += i;\n        sum += b;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n=int\n  read n\n  sum and height=0\n  while sum <= n\n    increment height\n    add height*(height+1)/2 to sum\n  \n  print height-1\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int sum = 0, height = 0;\n  while (sum <= n) {\n    height++;\n    sum += height * (height + 1) / 2;\n  }\n  cout << height - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, sum, level be integers\n  while read n\n    if n is equal to 1\n      print 1 and newline\n      proceed to next\n    \n    sum is equal to 1, level is equal to 1\n    for integer i is equal to 2 , the condition is always true, increment i by 1\n      increment level by i\n      increment sum by level\n      if sum is equal to n\n        print i and newline\n        stop\n      else if sum is greater than n\n        print i - 1 and newline\n        stop\n      \n    \n  \n  \n\n",
        "int main() {\n  int n, sum, level;\n  while (cin >> n) {\n    if (n == 1) {\n      cout << '1' << endl;\n      continue;\n    }\n    sum = 1, level = 1;\n    for (int i = 2;; i++) {\n      level += i;\n      sum += level;\n      if (sum == n) {\n        cout << i << endl;\n        break;\n      } else if (sum > n) {\n        cout << i - 1 << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n=int\n  read n\n  if n<4\n    print 1\n    \n  \n  cnt=0, m=1, i=1, sum=0\n  while sum+i <= n\n    addi to sum\n    increment cnt\n    increment m\n    add m to i\n  \n  print cnt\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  if (n < 4) {\n    cout << 1 << endl;\n    return 0;\n  }\n  int cnt = 0, m = 1, i = 1, sum = 0;\n  while (sum + i <= n) {\n    sum = sum + i;\n    cnt++;\n    m++;\n    i += m;\n  }\n  cout << cnt << endl;\n}\n"
    ],
    [
        "\n  let n be a integer\n  read n\n    the 1000th element of sum1 is equal to 0\n    the 1000th element of sum2 is equal to 1\n    let sum be a integer with sum = 0\n    for i = 1 to 50 exclusive\n      increment sum by i\n      sum1[i - 1] is equal to sum\n      sum1[i] is equal to sum1[i - 1] + i + 1\n      sum2[i] is equal to sum2[i - 1] + sum1[i]\n      if sum2[i - 1] <= n and sum2[i] is greater than n, print i and newline\n    \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int sum1[1000] = {0};\n    int sum2[1000] = {1};\n    int sum = 0;\n    for (int i = 1; i < 50; i++) {\n      sum += i;\n      sum1[i - 1] = sum;\n      sum1[i] = sum1[i - 1] + i + 1;\n      sum2[i] = sum2[i - 1] + sum1[i];\n      if ((sum2[i - 1] <= n) && (sum2[i] > n)) cout << i << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  declare integer n\n  read n\n  declare integer cont = 0\n  declare integer sumador = 1\n  declare i = 1 as integer\n  while n is greater than 0 and n is greater than or equal to sumador\n    let n be n - sumador\n    increment cont\n    increment i\n    let sumador = sumador + 1\n  \n  print cont, \"\\n\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int cont = 0;\n  int sumador = 1;\n  int i = 1;\n  while (n > 0 && n >= sumador) {\n    n = n - sumador;\n    cont++;\n    i++;\n    sumador = sumador + i;\n  }\n  cout << cont << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "declare int variables n and i\n\n  read user input to n\n  for i from 1 to 40 inclusive incrementing i\n    if i * (i + 1) * (i + 2) / 6 is greater than n, stop the loop\n  print i - 1 to the standard output\n\n",
        "int n, i;\nint main() {\n  cin >> n;\n  for (i = 1; i <= 40; i++)\n    if (i * (i + 1) * (i + 2) / 6 > n) break;\n  cout << i - 1 << endl;\n}\n"
    ],
    [
        "\n  declare integers n, tmp = 0, hitung = 0\n  read n\n  for i = 1 to n inclusive\n    increment hitung by ((i * (i + 1)) / 2)\n    if hitung is n\n      set tmp to i\n      break loop\n    else if hitung is greater than n\n      set tmp to i - 1\n      break loop\n    \n  \n  print tmp, newline\n\n",
        "int main() {\n  int n, tmp = 0, hitung = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    hitung += ((i * (i + 1)) / 2);\n    if (hitung == n) {\n      tmp = i;\n      break;\n    } else if (hitung > n) {\n      tmp = i - 1;\n      break;\n    }\n  }\n  cout << tmp << endl;\n}\n"
    ],
    [
        "create integer length = 1e5\n\n  let ints n, i, and sum = 0\n  read n\n  create int vector a of size n + 1\n  set a[0] to 0\n  for i = 1 to n, set a[i] to a[i - 1] + i\n  for i = 1 until sum <= n and i <= n are false, set sum to sum + a[i]\n  if n is equal to 1, increase 1 by 1\n  print the result of i - 2\n  \n\n",
        "int length = 1e5;\nint main() {\n  int n, i, sum = 0;\n  cin >> n;\n  vector<int> a(n + 1);\n  a[0] = 0;\n  for (i = 1; i <= n; i++) { a[i] = a[i - 1] + i; }\n  for (i = 1; (sum <= n) && (i <= n); i++) { sum += a[i]; }\n  if (n == 1) i++;\n  cout << i - 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare new integer variable n\n  read n and keep looping\n    declare new long long variable sum with value 0\n    declare new integer called i\n    set i to 1 and increment it in a for loop\n      declare new long long variable current with value 1LL * i * (i + 1) / 2\n      if sum + current <= n\n        subtract sum + current from n\n      else\n        break the loop\n    \n    print i - 1 to the standard output\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    long long sum = 0;\n    int i;\n    for (i = 1;; i++) {\n      long long current = 1LL * i * (i + 1) / 2;\n      if (sum + current <= n)\n        n -= sum + current;\n      else\n        break;\n    }\n    cout << i - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  while get n do the following till valid input\n    create long long sum, prev, x and set them to 0\n    for integer i=1 to n with increment i\n      add sum to prev\n      add i to sum\n      if sum+prev less than or equal to n\n        increment x\n      else do the following\n        break the loop\n    \n    print x\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    long long sum = 0, prev = 0, x = 0;\n    for (int i = 1; i <= n; i++) {\n      prev += sum;\n      sum += i;\n      if (sum + prev <= n)\n        x++;\n      else\n        break;\n    }\n    cout << x << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in function inum taking pointer to an int a, int k, int i returning int\n  for l = 1 to k\n    if a[l - 1] is not 1\n      set a[l] to a[l - 1] + (l + 1)\n    else\n      set a[l] to (inum of a, l, i) + l + 1\n    \n  \n  return value of (a + (k - 1))\n\nin function isum taking int i returning int\n  arr, a = int array of size i each\n  set arr[i] to -1\n  set a[i] to -1\n  set a[0] to 1\n  set arr[0] to 1\n  if i is 1\n    return i\n  else\n    j = int with j = 1\n    for j to i\n      if arr[j - 1] is not -1\n        set arr[j] to arr[j - 1] + inum of a, j + 1, i\n      else\n        set arr[j] to isnum of j + j + 1\n      \n    \n  \n  return value of arr + (i - 1)\n\n\n  n, i = int with i = 1\n  read n\n  loop while isnum of i <= n increment i\n  print i - 1\n  \n\n",
        "int inum(int *a, int k, int i) {\n  for (int l = 1; l < k; l++) {\n    if (a[l - 1] != -1) {\n      a[l] = a[l - 1] + (l + 1);\n    } else {\n      a[l] = inum(a, l, i) + l + 1;\n    }\n  }\n  return *(a + (k - 1));\n}\nint isum(int i) {\n  int arr[i], a[i];\n  arr[i] = {-1};\n  a[i] = {-1};\n  a[0] = 1;\n  arr[0] = 1;\n  if (i == 1) {\n    return i;\n  } else {\n    int j = 1;\n    for (j; j < i; j++) {\n      if (arr[j - 1] != -1) {\n        arr[j] = arr[j - 1] + inum(a, j + 1, i);\n      } else {\n        arr[j] = isum(j) + (j + 1);\n      }\n    }\n  }\n  return *(arr + (i - 1));\n}\nint main() {\n  int n, i = 1;\n  cin >> n;\n  while (isum(i) <= n) { i++; }\n  cout << (i - 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare n, cnt, sum, ans, i as long long integers\n  read n\n  let cnt be 0, ans be 0, sum be 0\n  for i = 1 to 10000 inclusive\n    increment ans by i\n    increment sum by ans\n    if sum is greater than n, break loop\n    increment cnt\n  \n  print cnt print newline\n  \n\n",
        "int main() {\n  long long int n, cnt, sum, ans, i;\n  cin >> n;\n  cnt = 0, ans = 0, sum = 0;\n  for (i = 1; i <= 10000; i++) {\n    ans += i;\n    sum += ans;\n    if (sum > n) break;\n    cnt++;\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  create integer array a with dimension 100\n  while get n do till valid input\n    create integer i, sum with i=2, sum=0\n    create integer cs with cs=0\n    set a[1] to 1\n    for integer i=2 with increment i till sum less than n\n      set a[i] to i + a[i-1]\n      add a[i] to sum\n      set cs to i-1\n    \n    print cs\n  \n\n",
        "int main() {\n  int n;\n  int a[100];\n  while (cin >> n) {\n    int i = 2, sum = 0;\n    int cs = 0;\n    a[1] = 1;\n    for (i = 2; sum < n; i++) {\n      a[i] = i + a[i - 1];\n      sum += a[i];\n      cs = i - 1;\n    }\n    cout << cs << endl;\n  }\n}\n"
    ],
    [
        "\n  create integer variables n, i and l with i and l = 0\n  read standard input to n\n  while l <= n\n    increment i by one\n    change l to sum of l and (i * (i + 1)) / 2\n  \n  print i - 1\n  \n\n",
        "int main() {\n  int n, i = 0, l = 0;\n  cin >> n;\n  while (l <= n) {\n    i++;\n    l += (i * (i + 1)) / 2;\n  }\n  cout << i - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "cum = long long array of size 102\n\n  for i = 1 to 100 inclusive set cum[i] to i\n  for i = 2 to 100 inclusive increment cum[i] by cum[i - 1]\n  n = int\n  read n\n  sum = long long with sum = 0\n  Count = int with Count = 0\n  i = int\n  iterate i starting at 1 while sum <= n\n    increment sum by cum[i]\n    if sum > n\n      break\n    else\n      increment Count\n  \n  print Count\n\n",
        "long long cum[100 + 2];\nint main() {\n  for (int i = 1; i <= 100; i++) cum[i] = i;\n  for (int i = 2; i <= 100; i++) { cum[i] += cum[i - 1]; }\n  int n;\n  cin >> n;\n  long long sum = 0;\n  int Count = 0;\n  int i;\n  for (i = 1; sum <= n; i++) {\n    sum += cum[i];\n    if (sum > n)\n      break;\n    else\n      Count++;\n  }\n  cout << Count << endl;\n}\n"
    ],
    [
        "\n  create int sum = 1\n  make int levels = 1\n  make integer counter = 0\n  let int n\n  read n\n  for i = 2 to n\n    increment counter\n    set levels to levels + i\n    set sum to sum + levels\n  \n  print counter\n\n",
        "int main() {\n  int sum = 1;\n  int levels = 1;\n  int counter = 0;\n  int n;\n  cin >> n;\n  for (int i = 2; sum <= n; i++) {\n    counter++;\n    levels = levels + i;\n    sum = sum + levels;\n  }\n  cout << counter << endl;\n}\n"
    ],
    [
        "\n  declare long long n\n  while read n is true\n    declare i as integer\n    declare long long t = 0\n    declare long long k = 0\n    declare last as integer\n    for i = 1, incrementing i\n      increment t by i\n      increment k by t\n      if n is greater than or equal to k\n        let last be i\n      else\n        break loop\n      \n    \n    if n is 0, let last be 0\n    print last, newline\n  \n\n",
        "int main() {\n  long long n;\n  while (cin >> n) {\n    int i;\n    long long t = 0;\n    long long k = 0;\n    int last;\n    for (i = 1;; i++) {\n      t += i;\n      k += t;\n      if (n >= k) {\n        last = i;\n      } else {\n        break;\n      }\n    }\n    if (n == 0) { last = 0; }\n    cout << last << endl;\n  }\n}\n"
    ],
    [
        "integer function check with string argument s and integer arguments i and j\n  declare integer variables l = i and r = j\n  while l is less than r\n    if s[l] = s[r]\n      increment l\n      decrease r by one\n      skip the rest of the loop\n    else\n      \n  \n  return 1\n\n\n  declare string variable s\n  read s\n  i, n and j are integers where n = length of s\n  set value of i to 0\n  set j to n - 1\n  while i is less than j\n    if s[i] != s[j]\n      if i + 1 = j\n        insert s[i] at position s.begin() + j + 1 of s\n        print s\n        \n      else\n        if check(s, i + 1, j) is 1\n          insert s[i] at position s.begin() + j + 1 of s\n          print s\n          \n        else if check(s, i, j - 1) is 1\n          insert s[j] at position s.begin() + i of s\n          print s\n          \n        else\n          print \"NA\"\n          \n        \n      \n    else\n      increase i\n      decrease j by one\n    \n  \n  if length of s is even\n    push character 'a' to s at position s.begin() + n / 2\n    print s\n    \n  else\n    push character aat s[n / 2] to s at position s.begin() + n / 2 + 1\n    print s\n    \n  \n\n",
        "int check(string s, int i, int j) {\n  int l = i, r = j;\n  while (l < r) {\n    if (s[l] == s[r]) {\n      l++;\n      r--;\n      continue;\n    } else\n      return 0;\n  }\n  return 1;\n}\nint main() {\n  string s;\n  cin >> s;\n  int i, n = s.length(), j;\n  i = 0;\n  j = n - 1;\n  while (i < j) {\n    if (s[i] != s[j]) {\n      if (i + 1 == j) {\n        s.insert(s.begin() + j + 1, s[i]);\n        cout << s << endl;\n        return 0;\n      } else {\n        if (check(s, i + 1, j)) {\n          s.insert(s.begin() + j + 1, s[i]);\n          cout << s << endl;\n          return 0;\n        } else if (check(s, i, j - 1)) {\n          s.insert(s.begin() + i, s[j]);\n          cout << s << endl;\n          return 0;\n        } else {\n          cout << \"NA\" << endl;\n          return 0;\n        }\n      }\n    } else {\n      i++;\n      j--;\n    }\n  }\n  if (s.length() % 2 == 0) {\n    s.insert(s.begin() + n / 2, 'a');\n    cout << s << endl;\n    return 0;\n  } else {\n    s.insert(s.begin() + n / 2 + 1, s[n / 2]);\n    cout << s << endl;\n    return 0;\n  }\n}\n"
    ],
    [
        "let s1 be character array with size 15\nset s2 be character array with size 15\nset s be character array with size 15\n\n  declare integer variable f = 0\n  read s1\n  declare integer variable n = length of s1\n  create boolean flag = 0\n  for i = 0 to 26 exclusive\n    for j = 0 to n inclusive\n      set f to 0\n      for k = 0 to j exclusive, set s[k] to s1[k]\n      s[j] = char('a' + i)\n      for k = j + 1 to n inclusive, set s[k] to s1[k - 1]\n      for i = 0, j = n while i < j increase i and decrease j\n        if s[i] != s[j]\n          increment f\n          if f >= 1, break\n        \n      \n      if f = 0\n        print n elements of s\n        print new line\n        \n      \n    \n  \n  print \"NA\"\n  \n\n",
        "char s1[15];\nchar s2[15];\nchar s[15];\nint main() {\n  int f = 0;\n  cin >> s1;\n  int n = strlen(s1);\n  bool flag = 0;\n  for (int i = 0; i < 26; i++) {\n    for (int j = 0; j <= n; j++) {\n      f = 0;\n      for (int k = 0; k < j; k++) { s[k] = s1[k]; }\n      s[j] = char('a' + i);\n      for (int k = j + 1; k <= n; k++) { s[k] = s1[k - 1]; }\n      for (int i = 0, j = n; i < j; i++, j--) {\n        if (s[i] != s[j]) {\n          f++;\n          if (f >= 1) { break; }\n        }\n      }\n      if (f == 0) {\n        for (int i = 0; i <= n; i++) { cout << s[i]; }\n        cout << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"NA\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string s\n  read s\n  declare integer variable pntr = length of s - 1\n  declare character c\n  for i = 0 to length of s / 2 exclusive\n    if s[i] != s[pntr]\n      declare boolean b = true\n      declare integer variable pntr2 = pntr\n      for integer j = i + 1 to (length of s + 1) / 2 exclusive\n        if s[j] != s[pntr2]\n          set b to false\n        else\n          decrease pntr2\n      if b is true\n        assign value of s[i] to c\n        for integer j = 0 to length of s exclusive\n          print s[j]\n          if j = pntr print c\n        \n        print new line\n        \n      \n      pntr2 = pntr - 1\n      set value of b to true\n      for integer j = i to (length of s + 1) / 2 exclusive\n        if s[j] != s[pntr2]\n          b = false\n        else\n          decrement pntr2\n      if b\n        assign value of s[pntr] to c\n        for integer j = 0 to length of s exclusive\n          if j = i\n          print s[j]\n        \n        print new line\n        \n      \n      print \"NA\"\n      \n    else\n      decrement pntr\n  \n  if length of s is an even number\n    for i = 0 to length of s exclusive\n      if i = (length of s) / 2\n        print s[i] and s[i]\n      else\n        print s[i]\n    print new line\n  else\n    for integer i = 0 to length of s exclusive\n      if i = (length of s / 2)\n        print \"a\" and s[i]\n      else\n        print s[i]\n    print new line\n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int pntr = s.size() - 1;\n  char c;\n  for (int i = 0; i < s.size() / 2; i++) {\n    if (s[i] != s[pntr]) {\n      bool b = true;\n      int pntr2 = pntr;\n      for (int j = i + 1; j < (s.size() + 1) / 2; j++)\n        if (s[j] != s[pntr2]) {\n          b = false;\n        } else\n          pntr2--;\n      if (b) {\n        c = s[i];\n        for (int j = 0; j < s.size(); j++) {\n          cout << s[j];\n          if (j == pntr) cout << c;\n        }\n        cout << endl;\n        return 0;\n      }\n      pntr2 = pntr - 1;\n      b = true;\n      for (int j = i; j < (s.size() + 1) / 2; j++)\n        if (s[j] != s[pntr2]) {\n          b = false;\n        } else\n          pntr2--;\n      if (b) {\n        c = s[pntr];\n        for (int j = 0; j < s.size(); j++) {\n          if (j == i) cout << c;\n          cout << s[j];\n        }\n        cout << endl;\n        return 0;\n      }\n      cout << \"NA\" << endl;\n      return 0;\n    } else\n      pntr--;\n  }\n  if (s.size() % 2) {\n    for (int i = 0; i < s.size(); i++)\n      if (i == (s.size()) / 2)\n        cout << s[i] << s[i];\n      else\n        cout << s[i];\n    cout << endl;\n  } else {\n    for (int i = 0; i < s.size(); i++)\n      if (i == (s.size() / 2))\n        cout << \"a\" << s[i];\n      else\n        cout << s[i];\n    cout << endl;\n  }\n}\n"
    ],
    [
        "declare string variable s\n\n  read s\n  for char = 'a' to 'z' inclusive going alphabetically\n    for integer i = 0 to length of s inclusive\n      declare string t = s\n      insert character c to the t at position i\n      create string k = t\n      reverse k\n      if k = t\n        print t\n        \n      \n    \n  print \"NA\"\n  \n\n",
        "string s;\nint main() {\n  cin >> s;\n  for (char c = 'a'; c <= 'z'; c++)\n    for (int i = 0; i <= s.size(); i++) {\n      string t = s;\n      t.insert(i, 1, c);\n      string k = t;\n      reverse(k.begin(), k.end());\n      if (k == t) {\n        cout << t << endl;\n        return 0;\n      }\n    }\n  cout << \"NA\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  read s\n  create integer flag with flag = -1\n  create integer sz with sz = size of s\n  for i = 0 to 26 exclusive\n    create string a\n    add element ( 'a' + i ) to end of a\n    increment a by s\n    for j = 0 to sz exclusive\n      create string b with b = 0\n      reverse element order from beginning of b to end of b\n      if a is b\n        print a print newline\n        \n      \n      swap element values from a[j] to a[j+1]\n    \n    create string b with b = a\n    reverse element order from beginning of b to end of b\n    if a is b\n      print a print newline\n      \n    \n  \n  print \"NA\" print newline\n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int flag = -1;\n  int sz = s.size();\n  for (int i = 0; i < 26; i++) {\n    string a;\n    a.push_back('a' + i);\n    a += s;\n    for (int j = 0; j < sz; j++) {\n      string b = a;\n      reverse(b.begin(), b.end());\n      if (a == b) {\n        cout << a << endl;\n        return 0;\n      }\n      swap(a[j], a[j + 1]);\n    }\n    string b = a;\n    reverse(b.begin(), b.end());\n    if (a == b) {\n      cout << a << endl;\n      return 0;\n    }\n  }\n  cout << \"NA\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create 2d integer array mp with size 1010 by 1010\n\n  create integers m, n, k\n  read m read n read k\n  set bytes from m to size of m to value 0\n  create integer flog with flag = 0\n  create integer ans with ans = 0\n  for i = 1 to k inclusive\n    create integers x, y\n    read x read y\n    set mp[x][y] to 1\n    if flag is 0\n      if (mp[x - 1][y] and mp[x - 1][y - 1] and mp[x][y - 1]), set flog to 1\n      if (mp[x + 1][y] and mp[x + 1][y + 1] and mp[x][y + 1]), set flog to 1\n      if (mp[x - 1][y] and mp[x - 1][y + 1] and mp[x][y + 1]), set flog to 1\n      if (mp[x + 1][y] and mp[x + 1][y - 1] and mp[x][y - 1]), set flog to 1\n      if flog is true\n        print i print newline\n        \n      \n    \n  \n  print \"0\" print newline\n\n",
        "int mp[1010][1010];\nint main() {\n  int m, n, k;\n  cin >> m >> n >> k;\n  memset(mp, 0, sizeof(mp));\n  int flog = 0;\n  int ans = 0;\n  for (int i = 1; i <= k; i++) {\n    int x, y;\n    cin >> x >> y;\n    mp[x][y] = 1;\n    if (flog == 0) {\n      if (mp[x - 1][y] && mp[x - 1][y - 1] && mp[x][y - 1]) flog = 1;\n      if (mp[x + 1][y] && mp[x + 1][y + 1] && mp[x][y + 1]) flog = 1;\n      if (mp[x - 1][y] && mp[x - 1][y + 1] && mp[x][y + 1]) flog = 1;\n      if (mp[x + 1][y] && mp[x + 1][y - 1] && mp[x][y - 1]) flog = 1;\n      if (flog) {\n        cout << i << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"0\" << endl;\n}\n"
    ],
    [
        "mp = two dimensional int array of sizes 1010 and 1010\n\n  m, n, k = int\n  read m then n then k\n  set all values of mp to 0\n  flog = int with flog = 0\n  ans = int with ans = 0\n  for i = 1 to k inclusive\n    x, y = int\n    read x then y\n    set mp[x][y] to 1\n    if flog is 0\n      if mp[x - 1][y] is not 0 and mp[x - 1][y - 1] is not 0 and mp[x][y - 1] is not 0 then set flog to 1\n      if mp[x + 1][y] is not 0 and mp[x + 1][y + 1] is not 0 and mp[x][y + 1] is not 0 then set flog to 1\n      if mp[x - 1][y] is not 0 and mp[x - 1][y + 1] is not 0 and mp[x][y + 1] is not 0 then set flog to 1\n      if mp[x + 1][y] is not 0 and mp[x + 1][y - 1] is not 0 and mp[x][y - 1] is not 0 then set flog to 1\n      if flog is not 0\n        print i\n        \n      \n    \n  \n  print \"0\"\n\n",
        "int mp[1010][1010];\nint main() {\n  int m, n, k;\n  cin >> m >> n >> k;\n  memset(mp, 0, sizeof(mp));\n  int flog = 0;\n  int ans = 0;\n  for (int i = 1; i <= k; i++) {\n    int x, y;\n    cin >> x >> y;\n    mp[x][y] = 1;\n    if (flog == 0) {\n      if (mp[x - 1][y] && mp[x - 1][y - 1] && mp[x][y - 1]) flog = 1;\n      if (mp[x + 1][y] && mp[x + 1][y + 1] && mp[x][y + 1]) flog = 1;\n      if (mp[x - 1][y] && mp[x - 1][y + 1] && mp[x][y + 1]) flog = 1;\n      if (mp[x + 1][y] && mp[x + 1][y - 1] && mp[x][y - 1]) flog = 1;\n      if (flog) {\n        cout << i << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"0\" << endl;\n}\n"
    ],
    [
        "let OO, NegOO, N, mod be constant integers with OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 1e3 + 5, mod = 1e9 + 7\nblack = 2d boolean array of N rows and N columns\nboolean check of int x, int z\n  if black[x + 1][z] and black[x + 1][z + 1] and black[x][z + 1], return the value 1\n  if black[x][z - 1] and black[x + 1][z - 1] and black[x + 1][z], return the value 1\n  if black[x][z - 1] and black[x - 1][z] and black[x - 1][z - 1], return the value 1\n  if black[x][z + 1] and black[x - 1][z] and black[x - 1][z + 1], return the value 1\n  \n\n\n  let n, m, k be integers\n  read n, m, k\n  let ans be a integer with ans = 0\n  let x, z be integers\n  for i = 0 to k exclusive\n    read x, z\n    set black[x][z] to 1\n    if not ans\n      if check ( x, z ) , ans is equal to i + 1\n    \n  \n  print ans and newline\n  \n\n",
        "const int OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 1e3 + 5, mod = 1e9 + 7;\nbool black[N][N];\nbool check(int x, int z) {\n  if (black[x + 1][z] && black[x + 1][z + 1] && black[x][z + 1]) return 1;\n  if (black[x][z - 1] && black[x + 1][z - 1] && black[x + 1][z]) return 1;\n  if (black[x][z - 1] && black[x - 1][z] && black[x - 1][z - 1]) return 1;\n  if (black[x][z + 1] && black[x - 1][z] && black[x - 1][z + 1]) return 1;\n  return 0;\n}\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  int ans = 0;\n  int x, z;\n  for (int i = 0; i < k; ++i) {\n    cin >> x >> z;\n    black[x][z] = 1;\n    if (!ans) {\n      if (check(x, z)) ans = i + 1;\n    }\n  }\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "declare long longs n, m, i, k, v1, v2 and f where f = 0, and 2d long long array a with size 1007 by 1007\n\n  read n, m and k\n  for i from 1 to k inclusive\n    read v1 and v2\n    change a[v1][v2] to 1\n    if (a[v1][v2] + a[v1 + 1][v2] + a[v1 + 1][v2 + 1] + a[v1][v2 + 1]) = 4\n      print i\n      assign 1 to f\n      break the loop\n    \n    if a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 + 1] + a[v1 - 1][v2 + 1] = 4\n      print i\n      set f to 1\n      stop the loop\n    \n    if a[v1][v2] + a[v1][v2 - 1] + a[v1 + 1][v2] + a[v1 + 1][v2 - 1] = 4\n      print i\n      set f to 1\n      stop the loop\n    \n    if a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 - 1] + a[v1 - 1][v2 - 1] = 4\n      print i\n      change f to 1\n      break the loop\n    \n  \n  if f is equal to 0, print 0\n  \n\n",
        "long long n, m, i, a[1007][1007], k, v1, v2, f = 0;\nint main() {\n  cin >> n >> m >> k;\n  for (i = 1; i <= k; i++) {\n    cin >> v1 >> v2;\n    a[v1][v2] = 1;\n    if ((a[v1][v2] + a[v1 + 1][v2] + a[v1 + 1][v2 + 1] + a[v1][v2 + 1]) == 4) {\n      cout << i << endl;\n      f = 1;\n      break;\n    }\n    if ((a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 + 1] + a[v1 - 1][v2 + 1]) == 4) {\n      cout << i << endl;\n      f = 1;\n      break;\n    }\n    if ((a[v1][v2] + a[v1][v2 - 1] + a[v1 + 1][v2] + a[v1 + 1][v2 - 1]) == 4) {\n      cout << i << endl;\n      f = 1;\n      break;\n    }\n    if ((a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 - 1] + a[v1 - 1][v2 - 1]) == 4) {\n      cout << i << endl;\n      f = 1;\n      break;\n    }\n  }\n  if (f == 0) cout << 0 << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 1e5 + 5\ncreate integers x, y, create integer array arr with size 1005 by 1005\ndeclare solve with integers st1, st2 as arguments, returning boolean\n  for z = st1 to st1 + 1 inclusive\n    for v = st2 to st2 + 2 inclusive\n      if not arr[x+z][y+v], return false from function\n    \n  \n  return true from function\n\n\n  create integers n, m, k\n  read n read m read k\n  for i = 1 to k inclusive\n    read x read y\n    set arr[x][y] to 1\n    for t = -1 to 0 inclusive\n      for u = -1 to 0 inclusive\n        if result of run solve with t, u as arguments is true, return print i print \"\\n\", 0 from function\n      \n    \n  \n  return print 0 print \"\\n\", 0 from function\n  \n\n",
        "const int N = 1e5 + 5;\nint x, y, arr[1005][1005] = {};\nbool solve(int st1, int st2) {\n  for (int z = st1; z <= st1 + 1; ++z) {\n    for (int v = st2; v <= st2 + 1; ++v) {\n      if (!arr[x + z][y + v]) return false;\n    }\n  }\n  return true;\n}\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 1; i <= k; ++i) {\n    cin >> x >> y;\n    arr[x][y] = 1;\n    for (int t = -1; t <= 0; ++t) {\n      for (int u = -1; u <= 0; ++u) {\n        if (solve(t, u)) return cout << i << \"\\n\", 0;\n      }\n    }\n  }\n  return cout << 0 << \"\\n\", 0;\n  return 0;\n}\n"
    ],
    [
        "create 2d ingeger arrays a, vis, with a size 1005 by 1005, vis size 1005 by 1005\ncreate integer ans\ncreate integers n, m\ncreate 2d integer array fang with size 4 by 2 with fang = {1, 0, -1, 0, 0, 1, 0, -1}\ndeclare dfs with integers x, y as arguments, returning void\n  increment ans\n  for i = 0 to 4 exclusive\n    create integer nx with nx = x + fang[i][0]\n    create integer ny with ny = y + fang[i][1]\n    if nx is greater than 0 and nx is less than or equal to n and ny is greater than 0 and ny is less than or equal to m and a[nx][ny] and not vis[nx][ny]\n      set vis[nx][ny] to 1\n      run dfs with nx, ny as arguments\n    \n  \n\n\n  create integers k, i, j\n  while read n read m read k\n    set ans to 0\n    create integers x, y\n    set bytes from a to size of a to value 0\n    create integer res with res = 0\n    for i = 1 to k inclusive\n      read x read y\n      set a[x][y] to 1\n      if not res\n        increment ans\n        if (a[x][y] and a[x + 1][y] and a[x][y + 1] and a[x + 1][y + 1]),set res to 1\n        if (a[x][y] and a[x + 1][y] and a[x][y - 1] and a[x + 1][y - 1]),set res to 1\n        if (a[x][y] and a[x - 1][y] and a[x][y + 1] and a[x - 1][y + 1]),set res to 1\n        if (a[x][y] and a[x - 1][y] and a[x][y - 1] and a[x - 1][y - 1]),set res to 1\n      \n    \n    if not res, set ans to 0\n    print ans print newline\n  \n\n",
        "int a[1005][1005], vis[1005][1005];\nint ans;\nint n, m;\nint fang[4][2] = {1, 0, -1, 0, 0, 1, 0, -1};\nvoid dfs(int x, int y) {\n  ans++;\n  for (int i = 0; i < 4; ++i) {\n    int nx = x + fang[i][0];\n    int ny = y + fang[i][1];\n    if (nx > 0 && nx <= n && ny > 0 && ny <= m && a[nx][ny] && !vis[nx][ny]) {\n      vis[nx][ny] = 1;\n      dfs(nx, ny);\n    }\n  }\n}\nint main() {\n  int k, i, j;\n  while (cin >> n >> m >> k) {\n    ans = 0;\n    int x, y;\n    memset(a, 0, sizeof(a));\n    int res = 0;\n    for (i = 1; i <= k; ++i) {\n      cin >> x >> y;\n      a[x][y] = 1;\n      if (!res) {\n        ans++;\n        if (a[x][y] && a[x + 1][y] && a[x][y + 1] && a[x + 1][y + 1]) res = 1;\n        if (a[x][y] && a[x + 1][y] && a[x][y - 1] && a[x + 1][y - 1]) res = 1;\n        if (a[x][y] && a[x - 1][y] && a[x][y + 1] && a[x - 1][y + 1]) res = 1;\n        if (a[x][y] && a[x - 1][y] && a[x][y - 1] && a[x - 1][y - 1]) res = 1;\n      }\n    }\n    if (!res) ans = 0;\n    cout << ans << endl;\n  }\n}\n"
    ],
    [
        "create bool a[1005][1005]\n\n  create int n and m\n  read n, m\n  create int k\n  read k\n  for c=1 to k inclusive\n    create int x and y\n    read x, y\n    set a[x][y] = true\n    if a[x][y], a[x + 1][y], a[x][y + 1], a[x + 1][y + 1] are true\n      print c\n      \n    else if a[x][y] and a[x - 1][y] and a[x][y + 1] and a[x - 1][y + 1] are not false\n      print c and a newline\n      \n    else if a[x][y], a[x - 1][y], a[x][y - 1], a[x - 1][y - 1] = true\n      print c\n      \n    else if a[x][y] and a[x + 1][y] and a[x][y - 1] and a[x + 1][y - 1] different from false\n      print c\n      \n    \n  \n  print 0 and a newline\n  \n\n",
        "bool a[1005][1005];\nint main() {\n  int n, m;\n  cin >> n >> m;\n  int k;\n  cin >> k;\n  for (int c = 1; c <= k; c++) {\n    int x, y;\n    cin >> x >> y;\n    a[x][y] = true;\n    if (a[x][y] && a[x + 1][y] && a[x][y + 1] && a[x + 1][y + 1]) {\n      cout << c << endl;\n      return 0;\n    } else if (a[x][y] && a[x - 1][y] && a[x][y + 1] && a[x - 1][y + 1]) {\n      cout << c << endl;\n      return 0;\n    } else if (a[x][y] && a[x - 1][y] && a[x][y - 1] && a[x - 1][y - 1]) {\n      cout << c << endl;\n      return 0;\n    } else if (a[x][y] && a[x + 1][y] && a[x][y - 1] && a[x + 1][y - 1]) {\n      cout << c << endl;\n      return 0;\n    }\n  }\n  cout << 0 << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 1e3 + 5\ncreate 2d boolean array mark with size N by N\n\n  create integers n, m, k\n  read n read m read k\n  for i = 0 to k exclusive\n    create integers x, y\n    read x read y\n    set mark[decrement x][decrement y] to true\n    for a = x - 1 to x inclusive\n      for b = y - 1 to y inclusive\n        if bitwise not minimum of (a and b) and a + 1 is less than n and b + 1 is less than m\n          create boolean bad with bad = true\n          for c = 0 to 4 exclusive, set bad to bad bitwise and mark[ a + ( c bitwise and 1 ) ][ b + ( c bitshift right 1 bitwise and 1) ]\n          if bad, return print i + 1 print newline, 0\n        \n  \n  print \"0\\n\"\n  \n\n",
        "const int N = 1e3 + 5;\nbool mark[N][N];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < k; i++) {\n    int x, y;\n    cin >> x >> y;\n    mark[--x][--y] = true;\n    for (int a = x - 1; a <= x; a++)\n      for (int b = y - 1; b <= y; b++)\n        if (~min(a, b) && a + 1 < n && b + 1 < m) {\n          bool bad = true;\n          for (int c = 0; c < 4; c++) bad &= mark[a + (c & 1)][b + (c >> 1 & 1)];\n          if (bad) return cout << i + 1 << endl, 0;\n        }\n  }\n  cout << \"0\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  create strings str, s, ans, min with min = \"z\"\n  read str read n\n  for i = 0 to n exclusive\n    read s\n    if s is str\n      set min to str\n      break loop\n    \n    if first index of str in s is 0 and s is less than min, set min to s\n  \n  if min is \"z\"\n    print str print newline\n  else\n    print min print newline\n  \n\n",
        "int main() {\n  int n;\n  string str, s, ans, min = \"z\";\n  cin >> str >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (s == str) {\n      min = str;\n      break;\n    }\n    if ((s.find(str) == 0) && (s < min)) min = s;\n  }\n  if (min == \"z\")\n    cout << str << endl;\n  else\n    cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string str, str2, ans, set ans to a\n  create int n and flag, assign 0 to flag\n  read str\n  set len to length of str\n  read n\n  for i=0 to n exclusive\n    read str2\n    set flag to 0\n    for j=0 to len\n      if str[j] different from str2[j]\n        flag =1\n        break\n      \n    \n    if flag=1, continue\n    if ans equal to a\n      set ans to str2\n    else if str2<ans\n      set ans = str2\n    \n  \n  if ans different from a\n    print ans\n  else\n    print str and a newline\n  \n  \n\n",
        "int main() {\n  string str, str2, ans = \"a\";\n  int n, flag = 0;\n  cin >> str;\n  int len = str.length();\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> str2;\n    flag = 0;\n    for (int j = 0; j < len; j++) {\n      if (str[j] != str2[j]) {\n        flag = 1;\n        break;\n      }\n    }\n    if (flag == 1) { continue; }\n    if (ans == \"a\") {\n      ans = str2;\n    } else if (str2 < ans) {\n      ans = str2;\n    }\n  }\n  if (ans != \"a\") {\n    cout << ans << endl;\n  } else {\n    cout << str << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let str, s be strings with s = array of strings of length 105\ncreate a vector of strings s1\nlet n be a integer\n\n  read str\n  read n\n  for i = 0 to n exclusive, read s[i]\n  sort the values s and s + n\n  for i = 0 to n exclusive\n    if s[i].find(str) is equal to 0 , push_back s[i] in s1\n  \n  if length of s1\n    print s1[0] and newline\n  else do the following\n    print str and newline\n  \n\n",
        "string str, s[105];\nvector<string> s1;\nint n;\nint main() {\n  cin >> str;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  sort(s, s + n);\n  for (int i = 0; i < n; i++) {\n    if (s[i].find(str) == 0) s1.push_back(s[i]);\n  }\n  if (s1.size())\n    cout << s1[0] << \"\\n\";\n  else\n    cout << str << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  str = string\n  read str\n  len = int with len = length of str\n  n = int\n  read n\n  vec = string vector\n  for i = 0 to n\n    temp = string\n    read temp\n    pos = int with pos = index of str in temp\n    if pos is 0\n      suffix = string with suffix = substr of len on temp\n      append suffix to vec\n    \n  \n  if size of vec is 0\n    pritn str\n  else\n    sort vec\n    print str + vec[0]\n  \n  \n\n",
        "int main() {\n  string str;\n  cin >> str;\n  int len = str.length();\n  int n;\n  cin >> n;\n  vector<string> vec;\n  for (int i = 0; i < n; i++) {\n    string temp;\n    cin >> temp;\n    int pos = temp.find(str);\n    if (pos == 0) {\n      string suffix = temp.substr(len);\n      vec.push_back(suffix);\n    }\n  }\n  if (vec.size() == 0) {\n    cout << str << endl;\n  } else {\n    sort(vec.begin(), vec.end());\n    cout << (str + vec[0]) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  s = string\n  read s\n  n = integer\n  read n\n  vs = vector string\n  for i = 0 to n exclusive\n    ss = string\n    read ss\n    append ss in vs\n  \n  sort vs.begin() and vs.end()\n  len = integer with len = s.size()\n  for i = 0 to n exclusive\n    if vs[i].substr(0, len) is s\n      print vs[i]\n      \n    \n  print s\n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int n;\n  cin >> n;\n  vector<string> vs;\n  for (int i = 0; i < n; i++) {\n    string ss;\n    cin >> ss;\n    vs.push_back(ss);\n  }\n  sort(vs.begin(), vs.end());\n  int len = s.size();\n  for (int i = 0; i < n; i++)\n    if (vs[i].substr(0, len) == s) {\n      cout << vs[i] << endl;\n      return 0;\n    }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let str be a string , s = array of strings of length 101\n  let n be a integer\n  read str\n  read n\n  for i = 1 to n inclusive, read s[i]\n  sort the values s + 1 and s + n + 1\n  for i = 1 to n inclusive\n    if s[i].substr(0, length of str ) is equal to str\n      print s[i] and newline\n      \n    \n  print str and newline\n  \n\n",
        "int main() {\n  string str, s[101];\n  int n;\n  cin >> str;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> s[i];\n  sort(s + 1, s + n + 1);\n  for (int i = 1; i <= n; i++)\n    if (s[i].substr(0, str.length()) == str) {\n      cout << s[i] << endl;\n      return 0;\n    }\n  cout << str << endl;\n  return 0;\n}\n"
    ],
    [
        "function subset (get strings n1 and n2 and int len, return bool)\n  for i=0 to len exclusive\n    if n1[i] != n2[i] return false\n  \n  return true\n\nfunction small_min(get strings n1 and n2, return string)\n  if length of n1 < length of n2 return n1\n  return n2\n\n\n  s,ans=string\n  read s\n  ara=array of 110 string\n  n=int\n  read n\n  f=0\n  for i=0 to n exclusive\n    read ara[i]\n    j=int\n    for j=0 to size of s exclusive\n      if ara[i][j] != s[j] break\n    \n    if j is size of s\n      if f is 0 ans=ara[i]\n      f=1\n      ans=min(ans, ara[i])\n    \n  \n  if f is 0\n    print s\n  else\n    print ans\n  \n\n",
        "bool subset(string n1, string n2, int len) {\n  for (int i = 0; i < len; i++) {\n    if (n1[i] != n2[i]) return false;\n  }\n  return true;\n}\nstring small_min(string n1, string n2) {\n  if (n1.length() < n2.length()) return n1;\n  return n2;\n}\nint main() {\n  string s, ans;\n  cin >> s;\n  string ara[110];\n  int n;\n  cin >> n;\n  int f = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> ara[i];\n    int j;\n    for (j = 0; j < s.size(); j++) {\n      if (ara[i][j] != s[j]) break;\n    }\n    if (j == s.size()) {\n      if (f == 0) ans = ara[i];\n      f = 1;\n      ans = min(ans, ara[i]);\n    }\n  }\n  if (f == 0)\n    cout << s << endl;\n  else\n    cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "arr = int array of size 1000000 and a = int array of size 1000 and ar = int array of size 100000\nm = char, int map\nmm = char, int map\n\n  s, m, k, n = string with k = \"\" and n = \"\"\n  x = int\n  read s then x\n  for i = 0 to x\n    read m\n    if size of m >= size of s\n      set n to first size of s chars of m\n      if n is s and (m <= k || k is \"\") set k to m\n    \n  \n  if k is not \"\"\n    print k\n  else\n    print s\n  \n\n",
        "int arr[1000000], a[1000], ar[100000];\nmap<char, int> m;\nmap<char, int> mm;\nint main() {\n  string s, m, k = \"\", n = \"\";\n  int x;\n  cin >> s >> x;\n  for (int i = 0; i < x; i++) {\n    cin >> m;\n    if (m.size() >= s.size()) {\n      n = m.substr(0, s.size());\n      if (n == s && (m <= k || k == \"\")) { k = m; }\n    }\n  }\n  if (k != \"\")\n    cout << k << endl;\n  else\n    cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string pointer ch, create string var\n  create integer n\n  read var read n\n  set ch to new string array with size n\n  for i = 0 to n exclusive, read ch[i]\n  sort elements from ch to ch + n\n  for i = 0 to n exclusive\n    if first index of var in ch[i] is 0\n      print ch[i] print newline\n      \n    \n  \n  print var print newline\n  \n\n",
        "int main() {\n  string *ch, var;\n  int n;\n  cin >> var >> n;\n  ch = new string[n];\n  for (int i = 0; i < n; i++) cin >> ch[i];\n  sort(ch, ch + n);\n  for (int i = 0; i < n; i++) {\n    if (ch[i].find(var) == 0) {\n      cout << ch[i] << endl;\n      return 0;\n    }\n  }\n  cout << var << endl;\n  return 0;\n}\n"
    ],
    [
        "create string s and string array s1 with dimension 101\ncreate integer n, ok\n\n  get s,n\n  for integer i=1 to n with increment i do get s1[i]\n  for integer i=n to 1 with decrement i\n    for integer j=1 with increment j till j less than i\n      if s1[j] greater than s1[j+1] then swap s1[j] and s1[j+1]\n  for integer k=1 to n with increment k\n    set ok to 1\n    for integer i=0 to length of s -1 with increment i\n      if s[i] not equal to s1[k][i] then\n        set ok to 0\n        break the loop\n      \n    if ok not equal to 0 then\n      print s1[k]\n      \n    \n  \n  print s\n  \n\n",
        "string s, s1[101];\nint n, ok;\nint main() {\n  cin >> s >> n;\n  for (int i = 1; i <= n; ++i) cin >> s1[i];\n  for (int i = n; i >= 1; --i)\n    for (int j = 1; j < i; ++j)\n      if (s1[j] > s1[j + 1]) swap(s1[j], s1[j + 1]);\n  for (int k = 1; k <= n; ++k) {\n    ok = 1;\n    for (int i = 0; i < s.length(); ++i)\n      if (s[i] != s1[k][i]) {\n        ok = 0;\n        break;\n      }\n    if (ok) {\n      cout << s1[k] << endl;\n      return 0;\n    }\n  }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "M=110\ns=array of M by M char\na=array of M char\nf and t=array of M int\nb=array of M char\n\n  n=int\n  while read a\n    read n\n    c=0\n    fill f with 0\n    fill t with 0\n    len=length of a\n    for i=0 to n exclusive\n      read s[i]\n      len1=length of s[i]\n      if len1<len\n        t[i]=1\n        continue\n      \n      for j=0 to len exclusive\n        if a[j] is not s[i][j]\n          t[i]=1\n          break\n        \n      \n      if t[i] is 0\n        f[i]=1\n        fill b with 0\n        copy from s[i] to b\n        increment c\n      \n    \n    if c is 0\n      print a\n    else\n      for i=0 to n exclusive\n        if f[i] is 1\n          if b > s[i]\n            fill b with 0\n            copy from s[i] to b\n          \n        \n      \n      print b\n    \n  \n  \n\n",
        "const int M = 110;\nchar s[M][M];\nchar a[M];\nint f[M], t[M];\nchar b[M];\nint main() {\n  int n;\n  while (cin >> a) {\n    cin >> n;\n    int c = 0;\n    memset(f, 0, sizeof(f));\n    memset(t, 0, sizeof(t));\n    int len = strlen(a);\n    for (int i = 0; i < n; i++) {\n      cin >> s[i];\n      int len1 = strlen(s[i]);\n      if (len1 < len) {\n        t[i] = 1;\n        continue;\n      }\n      for (int j = 0; j < len; j++) {\n        if (a[j] != s[i][j]) {\n          t[i] = 1;\n          break;\n        }\n      }\n      if (t[i] == 0) {\n        f[i] = 1;\n        memset(b, 0, sizeof(b));\n        strcpy(b, s[i]);\n        c++;\n      }\n    }\n    if (c == 0)\n      cout << a << endl;\n    else {\n      for (int i = 0; i < n; i++) {\n        if (f[i] == 1) {\n          if (strcmp(b, s[i]) > 0) {\n            memset(b, 0, sizeof(b));\n            strcpy(b, s[i]);\n          }\n        }\n      }\n      cout << b << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variable with name ss\n  read standard input to ss\n  create new integer n\n  read variable n from the input\n  read and discard the input data\n  create string res = ss\n  declare new boolean noe with value 0\n  for integer i = 0 to n exclusive incrementing i\n    s is a new string\n    read variable s from the input\n    declare string tmp with value \"\"\n    for j = 0 and ii = 0 while j < length of s, increment j\n      if ss[ii] = s[j]\n        increment ii\n      else\n        assign 0 to ii\n      if ii is equal to length of ss\n        if noe is false\n          set res to the substring of s from index j - ii + 1 to the end; set noe to 1\n        else\n          change tmp to the substring of s from index j - ii + 1 to the end\n          set res to min of res and tmp\n          assign 0 to ii\n        \n      \n    \n  \n  print res and '\\n'\n  \n\n",
        "int main() {\n  string ss;\n  cin >> ss;\n  int n;\n  cin >> n;\n  cin.ignore();\n  string res = ss;\n  bool noe = 0;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    string tmp = \"\";\n    for (int j = 0, ii = 0; j < s.length(); j++) {\n      if (ss[ii] == s[j])\n        ii++;\n      else\n        ii = 0;\n      if (ii == ss.length()) {\n        if (!noe)\n          res = s.substr(j - ii + 1, s.length()), noe = 1;\n        else {\n          tmp = s.substr(j - ii + 1, s.length());\n          res = min(res, tmp);\n          ii = 0;\n        }\n      }\n    }\n  }\n  cout << res << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  read s\n  let int len = s.length()\n  let int n\n  read n\n  let string array array of size n\n  let string array output of size n\n  create integer count = 0\n  for i = 0 to n exclusive\n    read array[i]\n    let int flag = 0\n    if array[i].length() is less than len, continue to next loop iteration\n    for j = 0 to len exclusive\n      if array[i][j] is not equal to s[j]\n        set flag to 1\n        break loop\n      \n    \n    if flag is equal to 0, set output[count++] to array[i]\n  \n  if count is 0\n    print s\n    \n  \n  sort output using argument output + count\n  print output[0]\n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int len = s.length();\n  int n;\n  cin >> n;\n  string array[n];\n  string output[n];\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> array[i];\n    int flag = 0;\n    if (array[i].length() < len) { continue; }\n    for (int j = 0; j < len; j++) {\n      if (array[i][j] != s[j]) {\n        flag = 1;\n        break;\n      }\n    }\n    if (flag == 0) { output[count++] = array[i]; }\n  }\n  if (count == 0) {\n    cout << s << endl;\n    return 0;\n  }\n  sort(output, output + count);\n  cout << output[0] << endl;\n  return 0;\n}\n"
    ],
    [
        "v = string vector\n\n  x = string\n  read x\n  n, i = long long\n  y = string\n  read n\n  while n is not 0 subtract 1 from n and do\n    read y\n    append y to the end of v\n  \n  sort v\n  for i = 0 to size of v exclusive\n    f = long long with value of the position of x within v[i]\n    if f equals 0\n      print v[i]\n      \n    \n  \n  print x\n\n",
        "vector<string> v;\nint main() {\n  string x;\n  cin >> x;\n  long long n, i;\n  string y;\n  cin >> n;\n  while (n--) {\n    cin >> y;\n    v.push_back(y);\n  }\n  sort(v.begin(), v.end());\n  for (i = 0; i < v.size(); i++) {\n    long long f = v[i].find(x);\n    if (f == 0) {\n      cout << v[i] << \"\\n\";\n      return 0;\n    }\n  }\n  cout << x << \"\\n\";\n}\n"
    ],
    [
        "\n  create integer n\n  create string array s with size 110, create string st\n  read st read n\n  for i = 0 to n exclusive, read s[i]\n  sort elements from s to s + n\n  for i = 0 to n exclusive\n    if substring of s[i] from 0 to size of st is st\n      print s[i] print newline\n      \n    \n  print st print newline\n  \n\n",
        "int main() {\n  int n;\n  string s[110], st;\n  cin >> st >> n;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  sort(s, s + n);\n  for (int i = 0; i < n; i++)\n    if (s[i].substr(0, st.size()) == st) {\n      cout << s[i] << endl;\n      return 0;\n    }\n  cout << st << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer INF = 1e9\n\n  let string s\n  create int N\n  create string array A of size 128\n  read S and N\n  for i = 0 to N exclusive, read A[i]\n  sort A\n  let string ans = S\n  for i = 0 to N exclusive\n    let bool check = true\n    for j = 0 to size of S exclusive\n      if S[j] is not equal to A[i][j]\n        set check to false\n        break loop\n      \n    \n    if check is equal to false\n      continue loop\n    else\n      set ans to A[i]\n      break loop\n    \n  \n  print ans\n  \n\n",
        "const int INF = 1e9;\nint main() {\n  string S;\n  int N;\n  string A[128];\n  cin >> S >> N;\n  for (int i = 0; i < N; i++) { cin >> A[i]; }\n  sort(A, A + N);\n  string ans = S;\n  for (int i = 0; i < N; i++) {\n    bool check = true;\n    for (int j = 0; j < S.size(); j++) {\n      if (S[j] != A[i][j]) {\n        check = false;\n        break;\n      }\n    }\n    if (check == false)\n      continue;\n    else {\n      ans = A[i];\n      break;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s=string\n  n=int\n  read s,n\n  trig=0\n  c=0\n  a=string of n char\n  k=0\n  j=0\n  s2=string\n  z=length of s\n  for i=0 to n exclusive\n    read s2\n    a[i]=s2\n  \n  for i=0 to length of s\n    if s[i] != a[j][k]\n      trig=1\n      increment c\n    else\n      increment k\n    \n    if z is k\n      trig=3\n      break\n    \n    if trig is 1\n      increment j\n      i=-1\n      k=0\n      trig=0\n    \n    if c is n\n      trig=5\n      break\n    \n  \n  if trig is 5\n    print s\n    \n  \n  sort first n items of a\n  t=\"\"\n  if trig is 3\n    for i=0 to n\n      t=a[i]\n      for ind=0 to length of s exclusive\n        if s[ind] != t[ind]\n          a[i]='0'\n          break\n        \n      \n      t=\"\"\n    \n  \n  for i=0 to n exclusive\n    if a[i] is not \"0\"\n      print a[i]\n      \n    \n  \n  print s\n  \n\n",
        "int main() {\n  string s;\n  int n;\n  cin >> s >> n;\n  int trig = 0;\n  int c = 0;\n  string *a = new string[n];\n  int k = 0;\n  int j = 0;\n  string s2;\n  int z = s.length();\n  for (int i = 0; i < n; i++) {\n    cin >> s2;\n    a[i] = s2;\n  }\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] != a[j][k]) {\n      trig = 1;\n      c++;\n    } else {\n      k++;\n    }\n    if (z == k) {\n      trig = 3;\n      break;\n    }\n    if (trig == 1) {\n      j++;\n      i = -1;\n      k = 0;\n      trig = 0;\n    }\n    if (c == n) {\n      trig = 5;\n      break;\n    }\n  }\n  if (trig == 5) {\n    cout << s << endl;\n    return 0;\n  }\n  sort(a, a + n);\n  string t = \"\";\n  if (trig == 3) {\n    for (int i = 0; i < n; i++) {\n      t = a[i];\n      for (int ind = 0; ind < s.length(); ind++) {\n        if (s[ind] != t[ind]) {\n          a[i] = '0';\n          break;\n        }\n      }\n      t = \"\";\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (a[i] != \"0\") {\n      cout << a[i] << endl;\n      return 0;\n    }\n  }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "p, s, ans = string\nn = int\n\n  read p then n\n  set ans to \"\"\n  loop n times\n    read s\n    if size of s as int is greater or equal to size of p as int\n      aux = string with aux = substr of 0 and size of p as int on s\n      if aux is p and (s is less than ans or ans is \"\") set ans to s\n    \n  \n  print p if ans is \"\" else print ans\n\n",
        "string p, s, ans;\nint n;\nint main() {\n  cin >> p >> n;\n  ans = \"\";\n  while (n--) {\n    cin >> s;\n    if ((int)s.size() >= (int)p.size()) {\n      string aux = s.substr(0, (int)p.size());\n      if (aux == p && (s < ans || ans == \"\")) { ans = s; }\n    }\n  }\n  cout << (ans == \"\" ? p : ans) << \"\\n\";\n}\n"
    ],
    [
        "\n  s, t = string\n  n, j = int with j = 0\n  read s then n\n  ar = string array of size n\n  slength = int with slength = length of s\n  for i = 1 to n inclusive\n    read t\n    if t starts with s\n      set ar[j] to t\n      increment j\n    \n  \n  if j is 0\n    print s\n  else\n    sort ar from position 0 to j\n    print ar[0]\n  \n  \n\n",
        "int main() {\n  string s, t;\n  int n, j = 0;\n  cin >> s >> n;\n  string ar[n];\n  int slength = s.size();\n  for (int i = 1; i <= n; i++) {\n    cin >> t;\n    if (t.substr(0, slength) == s) {\n      ar[j] = t;\n      j++;\n    }\n  }\n  if (j == 0)\n    cout << s << '\\n';\n  else {\n    sort(ar, ar + j);\n    cout << ar[0] << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer constants OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 2e5 + 5 and mod = 1e9 + 7\n\n  create new string variable x\n  read variable x from the input\n  create integer n\n  read input to n\n  arr is a new array of strings with size n\n  for c from 0 to n exclusive, read standard input to arr[c]\n  sort arr from 0 to n\n  start for loop from c = 0 to n exclusive incrementing c\n    declare boolean flag = 1\n    for integer i = 0 to the size of x exclusive\n      change flag to 0 if i is less than size of arr[c] and x[i] != arr[c][i]\n    \n    if flag is not 0, return cout << arr[c] << \"\\n\", 0\n  \n  print x and \"\\n\" to the standard output\n  \n\n",
        "const int OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 2e5 + 5, mod = 1e9 + 7;\nint main() {\n  string x;\n  cin >> x;\n  int n;\n  cin >> n;\n  string arr[n];\n  for (int c = 0; c < n; c++) { cin >> arr[c]; }\n  sort(arr, arr + n);\n  for (int c = 0; c < n; c++) {\n    bool flag = 1;\n    for (int i = 0; i < ((int)((x).size())); i++) {\n      if (i < ((int)((arr[c]).size())) && x[i] != arr[c][i]) flag = 0;\n    }\n    if (flag) return cout << arr[c] << \"\\n\", 0;\n  }\n  cout << x << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  read s\n  make integer n\n  read n\n  make string vector a of size n\n  for i = 0 to n exclusive, read a[i]\n  let int opt = -1\n  for i = 0 to n exclusive\n    if (int)(a[i]).size() is less than (int)(s).size(), continue to next loop iteration\n    if a[i]. substr(0, (int)(s).size()) is not equal to s, continue to next loop iteration\n    if opt is equal to -1 or a[i] is less than a[opt], set opt to i\n  \n  if opt is not equal to -1\n    print a[opt]\n  else\n    print s\n  \n  print new line\n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int n;\n  cin >> n;\n  vector<string> a(n);\n  for (int i = 0; i < n; ++i) { cin >> a[i]; }\n  int opt = -1;\n  for (int i = 0; i < n; ++i) {\n    if ((int)(a[i]).size() < (int)(s).size()) { continue; }\n    if (a[i].substr(0, (int)(s).size()) != s) { continue; }\n    if (opt == -1 || a[i] < a[opt]) { opt = i; }\n  }\n  if (opt != -1) {\n    cout << a[opt];\n  } else {\n    cout << s;\n  }\n  cout << \"\\n\";\n}\n"
    ],
    [
        "create new constant integer variable N with value 110\ndeclare new string input and string array hist with size N\ndeclare vector of strings called prefixed\ndeclare new integer n\nboolean function comp with string arguments s1 and s2\n  return true if s1 is less than s2 in lexicographic order, or false otherwise\n\nisPref is a boolean function with string arguments s1 and s2\n  if length of s1 is less than length of s2, return false\n  for integer i = 0 to length of s2 exclusive\n    if s1[i] != s2[i], return false\n  return true\n\n\n  read input and n from the input\n  for integer i = 0 to n exclusive incrementing i\n    read hist[i] from the user input\n    if isPref(hist[i], input) returned true, push hist[i] into prefixed\n  \n  if prefixed is not emptu\n    sort prefixed\n    print first element of prefixed to the standard output\n  else\n    print input\n\n",
        "const int N = 110;\nstring hist[N], input;\nvector<string> prefixed;\nint n;\nbool comp(string s1, string s2) {\n  return strcmp(s1.c_str(), s2.c_str()) < 0;\n}\nbool isPref(string s1, string s2) {\n  if (s1.size() < s2.size()) return false;\n  for (int i = 0; i < s2.size(); i++)\n    if (s1[i] != s2[i]) return false;\n  return true;\n}\nint main() {\n  cin >> input >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> hist[i];\n    if (isPref(hist[i], input)) prefixed.push_back(hist[i]);\n  }\n  if (!prefixed.empty()) {\n    sort(prefixed.begin(), prefixed.end(), comp);\n    cout << prefixed[0] << endl;\n  } else\n    cout << input << endl;\n}\n"
    ],
    [
        "\n  s is a new array of strings with size 101\n  declare integer variable n\n  declare new string t\n  read t from the user input\n  read standard input to n\n  in a for loop, change i from 0 to n exclusive, reading s[i] on each loop\n  sort s\n  in a for loop, change i from 0 to n exclusive\n    if length of s[i] is less than length of t, skip the rest of the loop\n    declare integer j with value 0\n    while j < length of t\n      if s[i][j] != t[j], break\n      increment j by one\n    \n    if j = length of t\n      print s[i] to the standard output\n      \n    \n  \n  print t\n  \n\n",
        "int main() {\n  string s[101];\n  int n;\n  string t;\n  cin >> t;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  sort(s, s + n);\n  for (int i = 0; i < n; i++) {\n    if (s[i].length() < t.length()) continue;\n    int j = 0;\n    while (j < (int)t.length()) {\n      if (s[i][j] != t[j]) break;\n      j++;\n    }\n    if (j == (int)t.length()) {\n      cout << s[i] << endl;\n      return 0;\n    }\n  }\n  cout << t << endl;\n  return 0;\n}\n"
    ],
    [
        "s = string\nn = integer\nin function Run that returns nothing\n  while s can be read as a valid string\n    ans, tmp = string\n    for i = 1 to 110 inclusive and increase i at the start of the loop, then ans = ans + z, tmp = tmp + z\n    read n\n    t = string t\n    for i = 1 to n inclusive\n      read t\n      if size of t < size of s, continue\n      if contents of t from the beginning of t to size of s elements away is s, then ans = lower value between ans and t\n    \n    if ans is tmp, then ans = s\n    print ans\n  \n\n\n  call Run\n  \n\n",
        "string s;\nint n;\ninline void Run() {\n  while (cin >> s) {\n    string ans = \"\", tmp = \"\";\n    for (int i = 1; i <= 110; ++i) ans += 'z', tmp += 'z';\n    cin >> n;\n    string t;\n    for (int i = 1; i <= n; ++i) {\n      cin >> t;\n      if (t.size() < s.size()) continue;\n      if (t.substr(0, s.size()) == s) ans = min(ans, t);\n    }\n    if (ans == tmp) ans = s;\n    cout << ans << endl;\n  }\n}\nint main() {\n  Run();\n  return 0;\n}\n"
    ],
    [
        "in the function lexi_comp that takes const string reference a,b and returns bool\n  n = integer with n = min of a.size() and b.size()\n  for i = 0 to n exclusive\n    if a[i] is not b[i], return a[i] < b[i]\n  \n  return a.size() < b.size()\n\nin the function isPrefix that takes const string reference a, b and returns bool\n  if b.size() < a.size(), return false\n  for i = 0 to a.size() exclusive\n    if a[i] is not b[i], return false\n  \n  return true\n\n\n  a, b, ans = string\n  n = integer\n  read a, n\n  ans = a + string on 100 an z\n  ok = bool with ok = false\n  for i = 0 to n exclusive\n    read b\n    if isPrefix on a and b\n      ok = true\n      if lexi_comp(b, ans), swap b and ans\n    \n  \n  if ok\n    print ans\n  else\n    print a\n  \n  \n\n",
        "bool lexi_comp(const string &a, const string &b) {\n  int n = min(a.size(), b.size());\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) { return a[i] < b[i]; }\n  }\n  return a.size() < b.size();\n}\nbool isPrefix(const string &a, const string &b) {\n  if (b.size() < a.size()) { return false; }\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] != b[i]) { return false; }\n  }\n  return true;\n}\nint main() {\n  string a, b, ans;\n  int n;\n  cin >> a >> n;\n  ans = a + string(100, 'z');\n  bool ok = false;\n  for (int i = 0; i < n; i++) {\n    cin >> b;\n    if (isPrefix(a, b)) {\n      ok = true;\n      if (lexi_comp(b, ans)) { swap(b, ans); }\n    }\n  }\n  if (ok) {\n    cout << ans << endl;\n  } else {\n    cout << a << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create string st and string array st1 of size 102\nlet long long int n\n\n  read st and n\n  for i = 1 to n, read st1[i]\n  sort st1 + 1 using argument st1 + n + 1\n  for i = 1 to n\n    if st[i].find(st) is equal to 0\n      print st1[i]\n      \n    \n  print st\n  \n\n",
        "string st, st1[102];\nlong long n;\nint main() {\n  cin >> st >> n;\n  for (int i = 1; i <= n; i++) cin >> st1[i];\n  sort(st1 + 1, st1 + n + 1);\n  for (int i = 1; i <= n; i++)\n    if (st1[i].find(st) == 0) {\n      cout << st1[i] << endl;\n      return 0;\n    }\n  cout << st << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a=pointer to string, s=string\n  n=int\n  read s\n  a=array of n string\n  for i=0 to n exclusive read a[i]\n  sort first n items of a\n  for i=0 to n exclusive\n    if a[i] begins with s\n      print a[i]\n      \n    \n  \n  print s\n  \n\n",
        "int main() {\n  string *a, s;\n  int n;\n  cin >> s >> n;\n  a = new string[n];\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  sort(a, a + n);\n  for (int i = 0; i < n; i++) {\n    if (a[i].find(s) == 0) {\n      cout << a[i] << endl;\n      return 0;\n    }\n  }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s = string\n  n = integer\n  read s, n\n  v = vector of string with v = n + 1\n  for i = 0 to n exclusive, read v[i]\n  v[n] = s\n  sort v.begin() and v.end()\n  for i = 0 to n\n    if v[i] is s\n      if i < n and v[i] is v[i + 1].substring(0, (int)v[i].size())\n        print v[i + 1]\n        break loop\n      else\n        print v[i]\n        break loop\n      \n    \n  \n  \n\n",
        "int main() {\n  string s;\n  int n;\n  cin >> s >> n;\n  vector<string> v(n + 1);\n  for (int i = 0; i < n; i++) { cin >> v[i]; }\n  v[n] = s;\n  sort(v.begin(), v.end());\n  for (int i = 0; i <= n; i++) {\n    if (v[i] == s) {\n      if (i < n && v[i] == v[i + 1].substr(0, (int)v[i].size())) {\n        cout << v[i + 1] << endl;\n        break;\n      } else {\n        cout << v[i] << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "declare check taking in strings s and t and returning bool\n  if length of s is less than length of t, return false\n  if i = 0 to length of t exclusive\n    if s[i] is not equal to t[i], return false\n  return true\n\n\n  let string t\n  read t\n  create integer n\n  read n\n  let string array s of size 1000\n  for i = 1 to n, read s[i]\n  create string min = \"\"\n  for i = 1 to n\n    if check(s[i], t) is true\n      if min is equal to \"\" or s[i] is less than min, set min to s[i]\n  if min is equal to \"\"\n    print t\n  else\n    print min\n  \n\n",
        "bool check(string s, string t) {\n  if (s.length() < t.length()) return false;\n  for (int i = 0; i < t.length(); i++)\n    if (s[i] != t[i]) return false;\n  return true;\n}\nint main() {\n  string t;\n  cin >> t;\n  int n;\n  cin >> n;\n  string s[1000];\n  for (int i = 1; i <= n; i++) cin >> s[i];\n  string min = \"\";\n  for (int i = 1; i <= n; i++)\n    if (check(s[i], t))\n      if (min == \"\" || s[i] < min) min = s[i];\n  if (min == \"\")\n    cout << t << endl;\n  else\n    cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  var = string and str = pointer to a string\n  n = int\n  read var then n\n  set str to new string array of size n\n  read n values into str\n  sort str\n  for i = 0 to n\n    if str[i] starts with var\n      print str[i]\n      \n    \n  \n  print var\n  \n\n",
        "int main() {\n  string *str, var;\n  int n;\n  cin >> var >> n;\n  str = new string[n];\n  for (int i = 0; i < n; i++) cin >> str[i];\n  sort(str, str + n);\n  for (int i = 0; i < n; i++) {\n    if (str[i].find(var) == 0) {\n      cout << str[i] << endl;\n      return 0;\n    }\n  }\n  cout << var << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create vector of booleans called good with n elements filled with 1\n  for i from 0 to n exclusive\n    for j from 0 to n exclusive\n      declare integer x\n      read input to x\n      if x <= 0\n        go to the start of the loop\n      else if x = 1\n        set good[i] to 0\n      else if x = 2\n        set good[j] to 0\n      else\n        set good[i] and good[j] to 0\n    \n  \n  declare vector of integers called sol\n  for i from 0 to n exclusive\n    if good[i] is true, push i + 1 to sol\n  print length of sol\n  if length of sol > 0\n    for integer i = 0 to length of sol exclusive\n      if i != 0, print ' '\n      print sol[i]\n    \n    print new line\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<bool> good(n, 1);\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      int x;\n      cin >> x;\n      if (x <= 0)\n        continue;\n      else if (x == 1)\n        good[i] = 0;\n      else if (x == 2)\n        good[j] = 0;\n      else\n        good[i] = good[j] = 0;\n    }\n  }\n  vector<int> sol;\n  for (int i = 0; i < n; i++)\n    if (good[i]) sol.push_back(i + 1);\n  cout << sol.size() << endl;\n  if (sol.size() > 0) {\n    for (int i = 0; i < sol.size(); i++) {\n      if (i != 0) cout << ' ';\n      cout << sol[i];\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n,i,j,k,flag=int, a=array of 100 by 100 int, b=array of 100 int filled with 0\n  read n\n  for i=0 to n exclusive\n    for j=0 to n exclusive read a[i][j]\n  \n  k=0\n  for i=0 to n exclusive\n    flag=1\n    for j=0 to n exclusive\n      if i != j\n        if a[i][j] is 1 or 3 flag=0\n      \n    \n    if flag b[k] = i+1, increment k\n  \n  if b[0] is 0\n    print \"0\"\n  else\n    print k\n    for i=0 to k-1 excluisve print b[i], space\n    print b[k-1]\n  \n  \n\n",
        "int main() {\n  int n, i, j, a[100][100], b[100] = {0}, k, flag;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) { cin >> a[i][j]; }\n  }\n  k = 0;\n  for (i = 0; i < n; i++) {\n    flag = 1;\n    for (j = 0; j < n; j++) {\n      if (i != j) {\n        if (a[i][j] == 1 || a[i][j] == 3) flag = 0;\n      }\n    }\n    if (flag) b[k++] = i + 1;\n  }\n  if (b[0] == 0)\n    cout << \"0\" << endl;\n  else {\n    cout << k << endl;\n    for (i = 0; i < k - 1; i++) { cout << b[i] << \" \"; }\n    cout << b[k - 1] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "vis=array of 105 int, f=array of 105 by 105 int\n\n  n=int\n  read n\n  for i=1 to n inclusive\n    for j=1 to n inclusive\n      read f[i][j]\n      if f[i][j] is 1\n        vis[i]=1\n      else if f[i][j] is 2\n        vis[j]=1\n      else if f[i][j] is 3\n        vis[i] = vis[j] = 1\n    \n  \n  a=array of 105 int, top=0\n  for i=1 to n inclusive\n    if not vis[i] a[top]=i, increment top\n  \n  print top\n  for i=0 to top exclusive\n    if i is top-1\n      print a[i]\n    else\n      print a[i] and space\n  \n  \n\n",
        "int vis[105], f[105][105];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      cin >> f[i][j];\n      if (f[i][j] == 1)\n        vis[i] = 1;\n      else if (f[i][j] == 2)\n        vis[j] = 1;\n      else if (f[i][j] == 3)\n        vis[i] = vis[j] = 1;\n    }\n  }\n  int a[105], top = 0;\n  for (int i = 1; i <= n; i++) {\n    if (!vis[i]) { a[top++] = i; }\n  }\n  cout << top << endl;\n  for (int i = 0; i < top; i++) {\n    if (i == top - 1)\n      cout << a[i] << endl;\n    else\n      cout << a[i] << \" \";\n  }\n  return 0;\n}\n"
    ],
    [
        "declare vector of integers vec\n\n  declare int variable n\n  read input to n\n  create 2d array of ints arr with size n by n\n  for i from 0 to n exclusive\n    for j from 0 to n exclusive, read input to arr[i][j]\n  \n  declare int cnt = 0\n  for i from 0 to n exclusive\n    create bool t = true\n    for j = 0 to n exclusive\n      if arr[i][j] = 1 or arr[i][j] = 3\n        set t to false\n        stop the loop\n      \n    \n    if t is true\n      increment cnt by one\n      push i + 1 into vec\n    \n  \n  print cnt\n  declare integer len = length of vec\n  print all elements of vec except last with \" \" after each one\n  if cnt is greater than 0, print last element of vec\n\n",
        "vector<int> vec;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n][n];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) { cin >> arr[i][j]; }\n  }\n  int cnt = 0;\n  for (int i = 0; i < n; i++) {\n    bool t = true;\n    for (int j = 0; j < n; j++) {\n      if (arr[i][j] == 1 || arr[i][j] == 3) {\n        t = false;\n        break;\n      }\n    }\n    if (t) {\n      cnt++;\n      vec.push_back(i + 1);\n    }\n  }\n  cout << cnt << endl;\n  int len = vec.size();\n  for (int i = 0; i < len - 1; i++) { cout << vec[i] << \" \"; }\n  if (cnt > 0) cout << vec[vec.size() - 1] << endl;\n}\n"
    ],
    [
        "\n  define ints n, i, j\n  define 2-dimensional int array a to be of 105 x 105 elements, int array f to be of 105 elements, int t, and int array b to be of 105 elements\n  read n\n  assign zero to t\n  for i by 1 from 0 to n (exclusive), set f[i] to 1\n  for i from 0 to n (exclusive) by 1\n    for j from 0 to n (exclusive) by 1\n      read a[i][j]\n      if a[i][j] is 1\n        set f[i] to 0\n      else if a[i][j] is two\n        zero f[j]\n      otherwise if a[i]j] = three\n        zero f[i] and f[j]\n    \n  \n  for i from 0 to n (exclusive) by 1\n    if f[i], then set b[t] to i + 1 and then increment t\n  \n  print t and newline\n  for i from 0 to t (exclusive) by 1\n    if i isn't t - 1\n      print b[i] and \" \"\n    else\n      print b[i] and newline\n  \n  \n\n",
        "int main() {\n  int n, i, j;\n  int a[105][105], f[105], t, b[105];\n  cin >> n;\n  t = 0;\n  for (i = 0; i < n; i++) f[i] = 1;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      cin >> a[i][j];\n      if (a[i][j] == 1)\n        f[i] = 0;\n      else if (a[i][j] == 2)\n        f[j] = 0;\n      else if (a[i][j] == 3)\n        f[i] = f[j] = 0;\n    }\n  }\n  for (i = 0; i < n; i++) {\n    if (f[i]) b[t++] = i + 1;\n  }\n  cout << t << endl;\n  for (i = 0; i < t; i++) {\n    if (i != t - 1)\n      cout << b[i] << \" \";\n    else\n      cout << b[i] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n,d,s=int, dist=array of 105 int\n  read n\n  s=n\n  fill dist with 0\n  for i=1 to n inclusive\n    for j=1 to n inclusive\n      read d\n      if d is 1 increment dist[i]\n      if d is 2 increment dist[j]\n      if d is 3\n        increment dist[i]\n        increment dist[j]\n      \n    \n  \n  for i=0 to n inclusive\n    if dist[i] != 0 decrement s\n  \n  print s\n  flot=1\n  for i=1 to n inclusive\n    if dist[i] is 0 and flot\n      print i\n      flot=0\n    else if dist[i] is 0 and not flot\n      print space, i\n  \n  if s print newline\n  \n\n",
        "int main() {\n  int n, d, dist[105], s;\n  cin >> n;\n  s = n;\n  memset(dist, 0, sizeof(dist));\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      cin >> d;\n      if (d == 1) dist[i]++;\n      if (d == 2) dist[j]++;\n      if (d == 3) {\n        dist[i]++;\n        dist[j]++;\n      }\n    }\n  }\n  for (int i = 0; i <= n; i++) {\n    if (dist[i] != 0) s--;\n  }\n  cout << s << endl;\n  int flot = 1;\n  for (int i = 1; i <= n; i++) {\n    if (dist[i] == 0 && flot) {\n      cout << i;\n      flot = 0;\n    } else if (dist[i] == 0 && !flot)\n      cout << \" \" << i;\n  }\n  if (s) cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  define 2D int array r to be 200 x 200, and define ints a, b, c, d, and e\n  while read into a\n    define int dynamic array v2\n    define 200-elt. array v\n    for b from 1 to a by 1\n      set v[b] to 1\n      for c by 1 from 1 to a, read into r[b][c]\n    \n    for b by 1 from 1 to a\n      for c from 1 to a by 1\n        if b is c, then continue\n        if r[b][c] is one, then zero v[b]\n        if r[b][c] is two, then set v[c] to zero\n        if r[b][c] is three,then set v[b] and v[c] to zero\n      \n    \n    assign zero to c\n    for b from 1 to a by 1\n      if v[b] is one\n        increment c\n        append b onto v2\n      \n    \n    if c\n      print c and newline\n      for d from 1 to c by 1\n        if d is one\n          print v2[d - 1]\n        otherwise\n          print \" \" and v2[d - 1]\n        \n      \n      print newline\n    else\n      print c followed by newline\n    \n    clear out v2\n  \n  \n\n",
        "int main() {\n  int r[200][200], a, b, c, d, e;\n  while (cin >> a) {\n    vector<int> v2;\n    int v[200];\n    for (b = 1; b <= a; b++) {\n      v[b] = 1;\n      for (c = 1; c <= a; c++) { cin >> r[b][c]; }\n    }\n    for (b = 1; b <= a; b++) {\n      for (c = 1; c <= a; c++) {\n        if (b == c) continue;\n        if (r[b][c] == 1) v[b] = 0;\n        if (r[b][c] == 2) v[c] = 0;\n        if (r[b][c] == 3) v[b] = 0, v[c] = 0;\n      }\n    }\n    c = 0;\n    for (b = 1; b <= a; b++) {\n      if (v[b] == 1) {\n        c++;\n        v2.push_back(b);\n      }\n    }\n    if (c) {\n      cout << c << endl;\n      for (d = 1; d <= c; d++) {\n        if (d == 1) {\n          cout << v2[d - 1];\n        } else {\n          cout << \" \" << v2[d - 1];\n        }\n      }\n      cout << endl;\n    } else {\n      cout << c << endl;\n    }\n    v2.clear();\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n and a and int array ans of size 105\n  while cin >> n is truthy\n    set all contents of ans to 0\n    for i = 1 to n\n      for j = 1 to n\n        read a\n        if a is equal to 1 or a is equal to 3, set ans[i] to 1\n      \n    let int cnt = 0 and int array b of size 105\n    for i = 1 to n\n      if ans[i] is equal to 0, set b[cnt++] to i\n    \n    if cnt is truthy\n      print cnt\n      for i = 0 to cnt - 1 exclusive, print b[i] and ' '\n      print b[cnt - 1]\n    else\n      print 0\n  \n  \n\n",
        "int main() {\n  int n, a, ans[105];\n  while (cin >> n) {\n    memset(ans, 0, sizeof(ans));\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        cin >> a;\n        if (a == 1 || a == 3) ans[i] = 1;\n      }\n    int cnt = 0, b[105];\n    for (int i = 1; i <= n; i++) {\n      if (ans[i] == 0) b[cnt++] = i;\n    }\n    if (cnt) {\n      cout << cnt << endl;\n      for (int i = 0; i < cnt - 1; i++) cout << b[i] << ' ';\n      cout << b[cnt - 1] << endl;\n    } else\n      cout << 0 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare 2d boolean array good with size 200\n\n  declare integer variable n\n  declare 2d integer array a with size 300 by 300\n  read input to n\n  for i = 1 to n inclusive\n    for j = 1 to n inclusive, read a[i][j]\n  \n  set sizeof(good) bytes at the pointer good to true\n  declare integer variable sum = 0\n  for i from 1 to n inclusive\n    for j from 1 to n inclusive\n      if a[i][j] = 1 or a[i][j] = 3\n        assign false to good[i]\n        stop the loop\n      \n    \n    if good[i] is false, go to the start of the loop\n    for j from 1 to n inclusive\n      if a[j][i] is equal to 2 or a[j][i] is equal to 3\n        change good[i] to false\n        break the loop\n      \n    \n    if good[i] is true, increment sum\n  \n  print sum\n  for i from 1 to n inclusive\n    if good[i] is true\n      if sum is equal to 1\n        print i\n      else\n        print i and ' '\n      decrement sum\n    \n  \n  \n\n",
        "bool good[200];\nint main() {\n  int n;\n  int a[300][300];\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) { cin >> a[i][j]; }\n  }\n  memset(good, true, sizeof(good));\n  int sum = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      if (a[i][j] == 1 || a[i][j] == 3) {\n        good[i] = false;\n        break;\n      }\n    }\n    if (!good[i]) continue;\n    for (int j = 1; j <= n; j++) {\n      if (a[j][i] == 2 || a[j][i] == 3) {\n        good[i] = false;\n        break;\n      }\n    }\n    if (good[i]) sum++;\n  }\n  cout << sum << endl;\n  for (int i = 1; i <= n; i++) {\n    if (good[i]) {\n      if (sum == 1)\n        cout << i << endl;\n      else\n        cout << i << ' ';\n      sum--;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  v is a vector of 6 integers\n  for integer i = 0 to 6 exclusive read v[i]\n  declare integer suma = 0\n  create integer minA with value min of v[1] and v[5]\n  create integer maxA with value max of v[1] and v[5]\n  declare integer inicial = v[0] * 2 + 1\n  for i = 0 to minA exclusive\n    increase suma by inicial\n    increase inicial by 2\n  \n  decrement inicial if maxA != minA\n  for i = minA to maxA exclusive, increase suma by inicial\n  assign value of min of v[2] and v[4] to minA\n  assign value of max of v[2] and v[4] to maxA\n  inicial = v[3] * 2 + 1\n  for i = 0 to minA exclusive\n    increase suma by inicial\n    increase inicial by 2\n  \n  decrement inicial if maxA != minA\n  if v[1] = v[5]\n    for integer i = minA to maxA exclusive, increase suma by inicial\n  \n  print suma\n  \n\n",
        "int main() {\n  vector<int> v(6);\n  for (int i = 0; i < 6; i++) cin >> v[i];\n  int suma = 0;\n  int minA = min(v[1], v[5]);\n  int maxA = max(v[1], v[5]);\n  int inicial = v[0] * 2 + 1;\n  for (int i = 0; i < minA; i++) {\n    suma += inicial;\n    inicial += 2;\n  }\n  if (maxA != minA) inicial--;\n  for (int i = minA; i < maxA; i++) { suma += inicial; }\n  minA = min(v[2], v[4]);\n  maxA = max(v[2], v[4]);\n  inicial = v[3] * 2 + 1;\n  for (int i = 0; i < minA; i++) {\n    suma += inicial;\n    inicial += 2;\n  }\n  if (maxA != minA) inicial--;\n  if (v[1] == v[5]) {\n    for (int i = minA; i < maxA; i++) { suma += inicial; }\n  }\n  cout << suma << endl;\n  return 0;\n}\n"
    ],
    [
        "sq is a function that returns an integer and receive integer x\n  return square of x\n\n\n  a = array of integers of length 11\n  for ( integer i=0 to 6 exclusive),read i th element of array a\n  ans is an integer and equals square of (a[0] + a[1] + a[2])\n  decrement ans by square of a[0]) + sq(a[2]) + sq(a[4]\n  print ans and a new line\n  \n\n",
        "inline int sq(int x) {\n  return x * x;\n}\nint main() {\n  int a[11];\n  for (int i = 0; i < 6; i++) cin >> a[i];\n  int ans = sq(a[0] + a[1] + a[2]);\n  ans -= sq(a[0]) + sq(a[2]) + sq(a[4]);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long long array a with size 6\n\n  read 6 elements into array a\n  create long longs ans = 0 and c = 2 * a[0] - 1\n  for i = 0 to a[1] + a[2] exclusive\n    if i <= a[1] && i <= a[5]\n      increase c by 2\n    else if i > a[1] && i is greater than a[5]\n      decrease c by 2\n    if a[1] = a[5] && i = a[1] decrease c by 2\n    if i != a[1] && i = a[5] decrease c by 1\n    if i = a[1] && i != a[5] decrease c by 1\n    increase ans by c\n  \n  print ans\n  \n\n",
        "long long a[6];\nint main() {\n  for (long long i = 0; i < 6; i++) cin >> a[i];\n  long long c = 2 * a[0] - 1, ans = 0;\n  for (long long i = 0; i < a[1] + a[2]; i++) {\n    if (i <= a[1] && i <= a[5])\n      c += 2;\n    else if (i > a[1] && i > a[5])\n      c -= 2;\n    if (a[1] == a[5] && i == a[1]) c -= 2;\n    if (i != a[1] && i == a[5]) c--;\n    if (i == a[1] && i != a[5]) c--;\n    ans += c;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a1, a2, a3, a4, a5, a6 =integers\n  Read a1, a2, a3, a4, a5, a6\n  print (a1 + a2 + a3) * (a1 + a2 + a3) - a1 * a1 - a3 * a3 - a5 * a5 and a new line\n  \n\n",
        "int main() {\n  int a1, a2, a3, a4, a5, a6;\n  cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6;\n  cout << (a1 + a2 + a3) * (a1 + a2 + a3) - a1 * a1 - a3 * a3 - a5 * a5 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c, d, e, f, maxlevel = long\n  read a, b, c, d, e, f\n  maxlevel = b + c\n  curr = long with curr = a * 2 - 1\n  sum = long with sum = 0\n  for i = 0 to maxlevel exclusive\n    if b > 0\n      increment curr\n    else if b < 0\n      decrement curr\n    decrement b\n    if f > 0\n      increment curr\n    else if f < 0\n      decrement curr\n    decrement f\n    sum = sum + curr\n  \n  print sum\n  \n\n",
        "int main() {\n  long a, b, c, d, e, f, maxlevel;\n  cin >> a >> b >> c >> d >> e >> f;\n  maxlevel = b + c;\n  long curr = a * 2 - 1;\n  long sum = 0;\n  for (int i = 0; i < maxlevel; i++) {\n    if (b > 0)\n      curr++;\n    else if (b < 0)\n      curr--;\n    b--;\n    if (f > 0)\n      curr++;\n    else if (f < 0)\n      curr--;\n    f--;\n    sum += curr;\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer array a with 6 elements\n  read 6 elements into a\n  create integer n = a[0] + a[1]\n  declare integer arrays l and r with size n\n  for i = 0 to a[1] exclusive, set l[i] to 1\n  for integer i = a[1] + 1 to n exclusive, set l[i] to -1\n  for i = 0 to a[3] exclusive, set r[i] to 1\n  for i = a[3] + 1 to n exclusive, set r[i] to -1\n  declare integers ans = 0 and step = 2 * a[2] - 1\n  for integer i = 0 to n exclusive\n    increase step by l[i] + r[i]\n    increase ans by step\n  \n  print ans\n  \n\n",
        "int main() {\n  int a[6];\n  for (int i = 0; i < 6; ++i) cin >> a[i];\n  int n = a[0] + a[1];\n  int l[n] = {}, r[n] = {};\n  for (int i = 0; i < a[1]; ++i) l[i] = 1;\n  for (int i = a[1] + 1; i < n; ++i) l[i] = -1;\n  for (int i = 0; i < a[3]; ++i) r[i] = 1;\n  for (int i = a[3] + 1; i < n; ++i) r[i] = -1;\n  int ans = 0, step = 2 * a[2] - 1;\n  for (int i = 0; i < n; ++i) {\n    step += l[i] + r[i];\n    ans += step;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer arrays a, b, with a size 10, b size 5005\n\n  set b[0] to 0\n  set b[1] to 1\n  for i = 2 to 5005 exclusive, set b[i] to i * i\n  create integer len with len = 0\n  for i = 1 to 6 inclusive, read a[i]\n  create integer m with m = a[1] + a[2] + a[3]\n  set len to b[m] - (b[a[1]] + b[a[3]] + b[a[5]])\n  print len print newline\n  \n\n",
        "int a[10], b[5005];\nint main() {\n  b[0] = 0;\n  b[1] = 1;\n  for (int i = 2; i < 5005; i++) { b[i] = i * i; }\n  int len = 0;\n  for (int i = 1; i <= 6; i++) { cin >> a[i]; }\n  int m = a[1] + a[2] + a[3];\n  len = b[m] - (b[a[1]] + b[a[3]] + b[a[5]]);\n  cout << len << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare long long variables a, b, c, d, e and f\n  read a, b, c, d, e and f\n  print (c + d + e) * (c + d + e) - (a * a) - (c * c) - (e * e) and \"\\n\"\n  \n\n",
        "int main() {\n  long long a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  cout << (c + d + e) * (c + d + e) - (a * a) - (c * c) - (e * e) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, c, d, e, and f\n  print a b c d e and f\n  set integer x equal to a + b + c\n  let res be an integer equal to (x * x) - (a * a) - (c * c) - (e * e)\n  print res and a new line\n  \n\n",
        "int main() {\n  int a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  int x = a + b + c;\n  int res = (x * x) - (a * a) - (c * c) - (e * e);\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "let a, b, c, d, e, f be ints\n\n  read a, b, c, d, e, f\n  print (a + b + c) * (a + b + c) - a * a - c * c - e * e and one newline\n\n",
        "int a, b, c, d, e, f;\nint main() {\n  cin >> a >> b >> c >> d >> e >> f;\n  cout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl;\n}\n"
    ],
    [
        "maxn = const int with maxn = 1e6\ninf = const double with inf = 0x3f3f3f3f3f3f3f3f\na, b, c, d, e, f = int\n\n  while reading a then b then c then d then e then f print (a + b + c) * (a + b + c) - a * a - c * c - e * e\n  \n\n",
        "const int maxn = 1e6;\nconst double inf = 0x3f3f3f3f3f3f3f3f;\nint a, b, c, d, e, f;\nint main() {\n  while (cin >> a >> b >> c >> d >> e >> f) { cout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl; }\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c, d, e, f, ans, x, y and z are integers where ans, x, y and z = 0\n  read a, b, c, d, e and f\n  if b is greater than f\n    increase ans by 2 * a * f + f * (f + 1) - f\n    set value of x to a + f\n  else\n    increase ans by 2 * a * b + b * (b + 1) - b\n    set value of x to a + b\n  \n  if c is greater than e\n    increase ans by 2 * d * e + e * (e + 1) - e\n    assign value of c - e to y\n  else\n    increase ans by 2 * d * c + c * (c + 1) - c\n    y = e - c\n  \n  increase ans by 2 * x * y\n  print ans and '\\n'\n  \n\n",
        "int main() {\n  int a, b, c, d, e, f, ans = 0, x = 0, y = 0, z = 0;\n  cin >> a >> b >> c >> d >> e >> f;\n  if (b > f) {\n    ans += 2 * a * f + f * (f + 1) - f;\n    x = a + f;\n  } else {\n    ans += 2 * a * b + b * (b + 1) - b;\n    x = a + b;\n  }\n  if (c > e) {\n    ans += 2 * d * e + e * (e + 1) - e;\n    y = c - e;\n  } else {\n    ans += 2 * d * c + c * (c + 1) - c;\n    y = e - c;\n  }\n  ans += 2 * x * y;\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "declare integers n and res where n = 6 and array of integers a with 10 elements\n\n  for i = 1 to n inclusive read a[i]\n  declare integers root = a[1] * 2 + 1 and curr = root\n  create integers first_layer, second_layer and third_layer = 0\n  if a[2] >= a[n]\n    set first_layer = a[n] and second_layer = a[2] - a[n]\n  else\n    set first_layer = a[2] and second_layer = a[n] - a[2]\n  for i = 1 to first_layer inclusive\n    set value of res to res + curr\n    curr = curr + 2\n  \n  if first_layer = a[2]\n    second_layer = min of second_layer and a[3]\n  else\n    second_layer = min of second_layer and a[5]\n  for i = 1 to second_layer inclusive, increase res by curr - 1\n  set root = a[4] * 2 + 1 and curr = root\n  for integer i = 1 to min of a[3] and a[5] inclusive\n    res = res + curr\n    set curr to curr + 2\n  \n  print res and '\\n'\n  \n\n",
        "int n = 6, res, a[10];\nint main() {\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  int root = a[1] * 2 + 1, curr = root;\n  int first_layer = 0, second_layer = 0, third_layer = 0;\n  if (a[2] >= a[n])\n    first_layer = a[n], second_layer = a[2] - a[n];\n  else\n    first_layer = a[2], second_layer = a[n] - a[2];\n  for (int i = 1; i <= first_layer; i++) {\n    res = res + curr;\n    curr = curr + 2;\n  }\n  if (first_layer == a[2])\n    second_layer = min(second_layer, a[3]);\n  else\n    second_layer = min(second_layer, a[5]);\n  for (int i = 1; i <= second_layer; i++) res = res + curr - 1;\n  root = a[4] * 2 + 1, curr = root;\n  for (int i = 1; i <= min(a[3], a[5]); i++) {\n    res = res + curr;\n    curr = curr + 2;\n  }\n  cout << res << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  set ee and acc = 0\n  for i=0 to 6 exclusive\n    create int e\n    read e\n    if i is even, assign acc + e * e to acc\n    if i is less than 3, ee= ee +e\n  \n  set ans equal to ee * ee - acc\n  print ans\n\n",
        "int main() {\n  int ee = 0, acc = 0;\n  for (int i = 0; i < 6; i++) {\n    int e;\n    cin >> e;\n    if (i % 2 == 0) acc += e * e;\n    if (i < 3) ee += e;\n  }\n  int ans = ee * ee - acc;\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  a1, a2, a3, a4, a5, a6, result =integers with result = 0\n  Read a1, a2, a3, a4, a5, a6\n  set result to ((a1 + a2 + a3) * (a1 + a2 + a3)) - (a1 * a1) - (a3 * a3) - (a5 * a5)\n  print result and a new line\n  \n\n",
        "int main() {\n  int a1, a2, a3, a4, a5, a6, result = 0;\n  cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6;\n  result = ((a1 + a2 + a3) * (a1 + a2 + a3)) - (a1 * a1) - (a3 * a3) - (a5 * a5);\n  cout << result << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, c, d, e and f\n  read a, b, c, d, e and f\n  if e > c then swap e and c and swap f and b\n  print 2 * c * (d + e) - e * e + 2 * a * b + b * b\n\n",
        "int main() {\n  int a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  if (e > c) swap(e, c), swap(f, b);\n  cout << 2 * c * (d + e) - e * e + 2 * a * b + b * b << endl;\n}\n"
    ],
    [
        "\n  create int a, b, c, d, e, f\n  read a, b, c, d, e and f\n  print (a + b + c) * (a + b + c) - a * a - c * c - e * e\n  \n\n",
        "int main() {\n  long long a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  cout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl;\n  return 0;\n}\n"
    ],
    [
        "maxn = constant integer with value of 105\n\n  a, b, c, d, e, f = integers\n  read a, b, c, d, e, and f\n  print (a + b + c) * (a + b + c) - a * a - c * c - e * e\n\n",
        "const int maxn = 105;\nint main() {\n  int a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  cout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl;\n}\n"
    ],
    [
        "declare int array side with size 7\n\n  for integer i = 1 to 6 inclusive read side[i]\n  create integer h1 = min of side[2] and side[6]\n  create integer h2 = min of side[3] and side[5]\n  declare int h3 = side[2] + side[3] - h1 - h2\n  create int ans = 0\n  for integer i = side[1] + 1 to side[1] + h1 inclusive, increase ans by 2 * i - 1\n  for integer i = side[4] + 1 to side[4] + h2 inclusive, increase ans by 2 * i - 1\n  for i = 1 to h3 inclusive, increase ans by (side[1] + h1) * 2\n  print ans\n  \n\n",
        "int side[7];\nint main() {\n  for (int i = 1; i <= 6; ++i) cin >> side[i];\n  int h1 = min(side[2], side[6]);\n  int h2 = min(side[3], side[5]);\n  int h3 = side[2] + side[3] - h1 - h2;\n  int ans = 0;\n  for (int i = side[1] + 1; i <= side[1] + h1; ++i) ans += 2 * i - 1;\n  for (int i = side[4] + 1; i <= side[4] + h2; ++i) ans += 2 * i - 1;\n  for (int i = 1; i <= h3; ++i) ans += (side[1] + h1) * 2;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs a, b, c, d, e, f\n  read a read b read c read d read e read f\n  create long long ans with ans = (a + b + c) * (a + b + c) - a * a - c * c - e * e\n  print ans print newline\n  \n\n",
        "int main() {\n  long long a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  long long ans = (a + b + c) * (a + b + c) - a * a - c * c - e * e;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "in function sq taking an int a and returning an int\n  return a * a\n\n\n  i, j, k, a, b, c = int and A = int array of size 6\n  read 6 values into A\n  set a to A[0] + A[1] + A[2]\n  set b to sq of a\n  set c to sq of A[0] + sq of A[2] + sq of A[4]\n  set j to b - c\n  print j\n  \n\n",
        "int sq(int a) {\n  return a * a;\n}\nint main() {\n  int A[6], i, j, k, a, b, c;\n  for (i = 0; i < 6; i++) { cin >> A[i]; }\n  a = A[0] + A[1] + A[2];\n  b = sq(a);\n  c = sq(A[0]) + sq(A[2]) + sq(A[4]);\n  j = b - c;\n  cout << j << endl;\n  return 0;\n}\n"
    ],
    [
        "a = integer array of size 7\nin the function p that takes integer x and returns integer\n  return x * x\n\n\n  for i = 1 to 6, read a[i]\n  ans = integer with ans = p(a[1] + a[2] + a[3]) - p(a[1]) - p(a[3]) - p(a[5])\n  print ans\n  \n\n",
        "int a[7];\nint p(int x) {\n  return x * x;\n}\nint main() {\n  for (int i = 1; i <= 6; i++) { cin >> a[i]; }\n  int ans = p(a[1] + a[2] + a[3]) - p(a[1]) - p(a[3]) - p(a[5]);\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  declare ints i, j, l, test, ans and len with test = 0\n  declare character ch and array of characters str with 1003 elements\n  declare doubles maps and k where maps = 0\n  read l\n  for i from 0 to l exclusive\n    read input to str\n    if str is \"ABSINTH\"\n      increment test\n    if str is \"BEER\"\n      increment test by one\n    if str is \"BRANDY\"\n      increment test by one\n    if str is \"CHAMPAGNE\"\n      increment test by one\n    if str is \"GIN\"\n      increment test by one\n    if str is \"RUM\"\n      increment test\n    if str is \"SAKE\"\n      increment test by one\n    if str is \"TEQUILA\"\n      increment test by one\n    if str is \"VODKA\"\n      increment test by one\n    if str is \"WHISKEY\"\n      increment test\n    if str is \"WINE\"\n      increment test by one\n    else if str[0] >= 48 and str[0] <= 57\n      assign length of str to len\n      set k to 0\n      set maps to 0\n      for j = len - 1 to 0 inclusive counting down\n        change str[j] to str[j] - '0'\n        assign maps + (str[j] * pow(10.0, k)) to maps\n        increment k\n      \n      change ans to maps\n      if ans is less than 18, increment test\n    \n  \n  print test\n\n",
        "int main() {\n  int i, j, l, test = 0, ans, len;\n  char str[1003], ch;\n  double maps = 0, k;\n  cin >> l;\n  for (i = 0; i < l; i++) {\n    cin >> str;\n    if (strcmp(str, \"ABSINTH\") == 0) {\n      test++;\n    } else if (strcmp(str, \"BEER\") == 0) {\n      test++;\n    } else if (strcmp(str, \"BRANDY\") == 0) {\n      test++;\n    } else if (strcmp(str, \"CHAMPAGNE\") == 0) {\n      test++;\n    } else if (strcmp(str, \"GIN\") == 0) {\n      test++;\n    } else if (strcmp(str, \"RUM\") == 0) {\n      test++;\n    } else if (strcmp(str, \"SAKE\") == 0) {\n      test++;\n    } else if (strcmp(str, \"TEQUILA\") == 0) {\n      test++;\n    } else if (strcmp(str, \"VODKA\") == 0) {\n      test++;\n    } else if (strcmp(str, \"WHISKEY\") == 0) {\n      test++;\n    } else if (strcmp(str, \"WINE\") == 0) {\n      test++;\n    } else if (str[0] >= 48 && str[0] <= 57) {\n      len = strlen(str);\n      k = 0;\n      maps = 0;\n      for (j = len - 1; j >= 0; j--) {\n        str[j] = str[j] - '0';\n        maps = maps + (str[j] * pow(10.0, k));\n        k++;\n      }\n      ans = (int)maps;\n      if (ans < 18) { test++; }\n    }\n  }\n  cout << test << endl;\n}\n"
    ],
    [
        "\n  mp = map of string and int\n  set mp[\"ABSINTH\"] and mp[\"BEER\"] and mp[\"BRANDY\"] and mp[\"CHAMPAGNE\"] to 1\n  set mp[\"GIN\"] and mp[\"RUM\"] and mp[\"SAKE\"] and mp[\"TEQUILA\"] and mp[\"VODKA\"] to 1\n  set mp[\"WHISKEY\"] and mp[\"WINE\"] to 1\n  n = int\n  read n\n  cnt = int with cnt = 0\n  loop n times\n    s = string\n    read s\n    if mp[s] is not 0\n      increment cnt\n    else if s[0] is numeric char\n      geek = stringstream initialized with s\n      x = int with x = 0\n      read into x from geek\n      if x is less than 18 then increment cnt\n    \n  \n  print cnt\n  \n\n",
        "int main() {\n  map<string, int> mp;\n  mp[\"ABSINTH\"] = mp[\"BEER\"] = mp[\"BRANDY\"] = mp[\"CHAMPAGNE\"] = 1;\n  mp[\"GIN\"] = mp[\"RUM\"] = mp[\"SAKE\"] = mp[\"TEQUILA\"] = mp[\"VODKA\"] = 1;\n  mp[\"WHISKEY\"] = mp[\"WINE\"] = 1;\n  int n;\n  cin >> n;\n  int cnt = 0;\n  while (n--) {\n    string s;\n    cin >> s;\n    if (mp[s])\n      cnt++;\n    else if (s[0] >= '0' && s[0] <= '9') {\n      stringstream geek(s);\n      int x = 0;\n      geek >> x;\n      if (x < 18) cnt++;\n    }\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "s = string\nans = integer with ans = 0\nin the function make\n  len = integer with len = s.length()\n  if s[0] <= 9 and s[0] >= 0\n    year = integer with year = 0\n    for i = 0 to len exclusive, year = year * 10 + s[i] - 0\n    if year < 18, increment ans\n  else\n    if s is BRANDY\n      increment ans\n    else if s is BEER\n      increment ans\n    else if s is ABSINTH\n      increment ans\n    else if s is CHAMPAGNE\n      increment ans\n    else if s is GIN\n      increment ans\n    else if s is RUM\n      increment ans\n    else if s is SAKE\n      increment ans\n    else if s is TEQUILA\n      increment ans\n    else if s is VODKA\n      increment ans\n    else if s is WHISKEY\n      increment ans\n    else if s is WINE\n      increment ans\n    \n  \n\n\n  n = integer\n  read n\n  for i = 1 to n\n    read s\n    call make\n  \n  print ans\n  \n\n",
        "string s;\nint ans = 0;\nvoid make() {\n  int len = s.length();\n  if (s[0] <= '9' && s[0] >= '0') {\n    int year = 0;\n    for (int i = 0; i < len; i++) { year = year * 10 + s[i] - '0'; }\n    if (year < 18) { ans++; }\n  } else {\n    if (s == \"BRANDY\") {\n      ans++;\n    } else if (s == \"BEER\") {\n      ans++;\n    } else if (s == \"ABSINTH\") {\n      ans++;\n    } else if (s == \"CHAMPAGNE\") {\n      ans++;\n    } else if (s == \"GIN\") {\n      ans++;\n    } else if (s == \"RUM\") {\n      ans++;\n    } else if (s == \"SAKE\") {\n      ans++;\n    } else if (s == \"TEQUILA\") {\n      ans++;\n    } else if (s == \"VODKA\") {\n      ans++;\n    } else if (s == \"WHISKEY\") {\n      ans++;\n    } else if (s == \"WINE\") {\n      ans++;\n    }\n  }\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    make();\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers i, j, l, test, ans and len where test = 0\n  declare character array str with size 1003 and a character variable ch\n  declare double variables maps = 0 and k\n  read input to l\n  loop i from 0 to l exclusive\n    read str\n    if str is \"ABSINTH\"\n      increment test\n    else if str is \"BEER\"\n      increment test\n    else if str is \"BRANDY\"\n      increment test by one\n    else if str is \"CHAMPAGNE\"\n      increment test by one\n    else if str is \"GIN\"\n      increment test by one\n    else if str is \"RUM\"\n      increment test\n    else if str is \"SAKE\"\n      increment test\n    else if str is \"TEQUILA\"\n      increment test\n    else if str is \"VODKA\"\n      increment test\n    else if str is \"WHISKEY\"\n      increment test by one\n    else if str is \"WINE\"\n      increment test\n    else if str[0] >= 48 and str[0] <= 57\n      change len to length of str\n      change k to 0\n      change maps to 0\n      loop j from len - 1 to 0 inclusive counting down\n        assign str[j] - '0' to str[j]\n        change maps to maps + (str[j] * (10.0 in power k))\n        increment k by one\n      \n      change ans to maps\n      if ans is less than 18, increment test by one\n    \n  \n  print test\n\n",
        "int main() {\n  int i, j, l, test = 0, ans, len;\n  char str[1003], ch;\n  double maps = 0, k;\n  cin >> l;\n  for (i = 0; i < l; i++) {\n    cin >> str;\n    if (strcmp(str, \"ABSINTH\") == 0) {\n      test++;\n    } else if (strcmp(str, \"BEER\") == 0) {\n      test++;\n    } else if (strcmp(str, \"BRANDY\") == 0) {\n      test++;\n    } else if (strcmp(str, \"CHAMPAGNE\") == 0) {\n      test++;\n    } else if (strcmp(str, \"GIN\") == 0) {\n      test++;\n    } else if (strcmp(str, \"RUM\") == 0) {\n      test++;\n    } else if (strcmp(str, \"SAKE\") == 0) {\n      test++;\n    } else if (strcmp(str, \"TEQUILA\") == 0) {\n      test++;\n    } else if (strcmp(str, \"VODKA\") == 0) {\n      test++;\n    } else if (strcmp(str, \"WHISKEY\") == 0) {\n      test++;\n    } else if (strcmp(str, \"WINE\") == 0) {\n      test++;\n    } else if (str[0] >= 48 && str[0] <= 57) {\n      len = strlen(str);\n      k = 0;\n      maps = 0;\n      for (j = len - 1; j >= 0; j--) {\n        str[j] = str[j] - '0';\n        maps = maps + (str[j] * pow(10.0, k));\n        k++;\n      }\n      ans = (int)maps;\n      if (ans < 18) { test++; }\n    }\n  }\n  cout << test << endl;\n}\n"
    ],
    [
        "declare const int maxn = 1e6\ncreate an array of integers prime with maxn + 1 elements\nfunction getPrime\n  set first sizeof(prime) bytes at the pointer prime to 0\n  for i from 2 to maxn inclusive\n    if prime[i] is 0, increment prime[0] and set prime[prime[0]] to i\n    for j from 1 to prime[0] inclusive while prime[j] <= maxn / i, incrementing j\n      prime[prime[j] * i] = 1\n      if i % prime[j] is equal to 0, break the loop\n    \n  \n\n\n  call getPrime()\n  declare int variable n\n  loop, reading n from the input\n    declare vector of integers v\n    clear v\n    declare integer variables key = prime[1] and id=1\n    loop i from 1 to n inclusive\n      create int key = prime[i]\n      while key <= n\n        push key into v\n        multiply key by prime[i]\n      \n    \n    print length of v\n    for integer i = 0 to length of v exclusive, print v[i] and \"\\n\" if i = length of v - 1 or \" \" if it is not\n  \n\n",
        "const int maxn = 1e6;\nint prime[maxn + 1];\nvoid getPrime() {\n  memset(prime, 0, sizeof(prime));\n  for (int i = 2; i <= maxn; i++) {\n    if (!prime[i]) prime[++prime[0]] = i;\n    for (int j = 1; j <= prime[0] && prime[j] <= maxn / i; j++) {\n      prime[prime[j] * i] = 1;\n      if (i % prime[j] == 0) break;\n    }\n  }\n}\nint main() {\n  getPrime();\n  int n;\n  while (cin >> n) {\n    vector<int> v;\n    v.clear();\n    int key = prime[1], id = 1;\n    for (int i = 1; prime[i] <= n; i++) {\n      int key = prime[i];\n      while (key <= n) {\n        v.push_back(key);\n        key *= prime[i];\n      }\n    }\n    cout << v.size() << endl;\n    for (int i = 0; i < v.size(); i++) cout << v[i] << (i == v.size() - 1 ? \"\\n\" : \" \");\n  }\n}\n"
    ],
    [
        "maxn = const integer with maxn = 1010\nv = vector of integer\nis_prime = bool array of size maxn\nprime = integer array of size maxn\nk = integer\nin the function Euler that takes integer n\n  i, j = integers\n  k = 0\n  for i = 2 to n exclusive\n    if is_prime[i] is false, prime[increment k] = i\n    for j < k and i * prime[j] < n\n      is_prime[i * prime[j]] = true\n      if i modulo prime[j] is 0, break loop\n    \n  \n\n\n  n, x = integer\n  Euler of maxn\n  ans = integer with ans = (0)\n  read n\n  for i = 0 to k exclusive\n    if prime[i] <= n\n      p = integer with p = prime[i]\n      while p <= n\n        append p in v\n        p = p * prime[i]\n      \n    \n  \n  print v.size()\n  if v.size() > 0\n    for i = 0 to v.size() - 1 exclusive, print v[i]\n    print v[v.size() - 1]\n  \n  \n\n",
        "const int maxn = 1010;\nvector<int> v;\nbool is_prime[maxn];\nint prime[maxn];\nint k;\nvoid Euler(int n) {\n  int i, j;\n  k = 0;\n  for (i = 2; i < n; i++) {\n    if (is_prime[i] == false) prime[k++] = i;\n    for (j = 0; j < k && i * prime[j] < n; j++) {\n      is_prime[i * prime[j]] = true;\n      if (i % prime[j] == 0) break;\n    }\n  }\n}\nint main() {\n  int n, x;\n  Euler(maxn);\n  int ans(0);\n  cin >> n;\n  for (int i = 0; i < k; i++) {\n    if (prime[i] <= n) {\n      int p = prime[i];\n      while (p <= n) {\n        v.push_back(p);\n        p *= prime[i];\n      }\n    }\n  }\n  cout << v.size() << endl;\n  if (v.size() > 0) {\n    for (int i = 0; i < v.size() - 1; i++) cout << v[i] << ' ';\n    cout << v[v.size() - 1] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer array a with size 1005\ndeclare zhi with integer n as argument, returning boolean\n  for i = 2 to n exclusive\n    if n % i is 0, return false from function\n  \n  return true from function\n\n\n  create integer n\n  while read n\n    if n is 1\n      print 0 print newline\n      break current loop iteration\n    \n    set bytes from a to size of a to value 0\n    create integer j with j = 0\n    for i = 2 to n inclusive\n      if result of run zhi with i as argument is true\n        set a[j] to i\n        increment j\n        create integer t with t = i\n        set t to t * i\n        while t is less than or equal to n\n          set a[j] to t\n          increment j\n          set t to t * i\n        \n      \n    \n    print j print newline\n    for i = 0 to j - 1 exclusive, print a[i] print \" \"\n    print a[j-1] print newline\n  \n\n",
        "int a[1005];\nbool zhi(int n) {\n  for (int i = 2; i < n; i++) {\n    if (n % i == 0) return false;\n  }\n  return true;\n}\nint main() {\n  int n;\n  while (cin >> n) {\n    if (n == 1) {\n      cout << 0 << endl;\n      continue;\n    }\n    memset(a, 0, sizeof(a));\n    int j = 0;\n    for (int i = 2; i <= n; i++) {\n      if (zhi(i)) {\n        a[j] = i;\n        j++;\n        int t = i;\n        t *= i;\n        while (t <= n) {\n          a[j] = t;\n          j++;\n          t *= i;\n        }\n      }\n    }\n    cout << j << endl;\n    for (int i = 0; i < j - 1; i++) { cout << a[i] << \" \"; }\n    cout << a[j - 1] << endl;\n  }\n}\n"
    ],
    [
        "\n  declare double variables a, b and c\n  read a, b and c\n  print b / (b + c) * a\n  \n\n",
        "int main() {\n  double a, b, c;\n  cin >> a >> b >> c;\n  cout << b / (b + c) * a << endl;\n  return 0;\n}\n"
    ],
    [
        "a, b, r = integers\n\n  Read l, p, q\n  print l / (q + p) * p and a new line\n  \n\n",
        "double l, p, q;\nint main() {\n  cin >> l >> p >> q;\n  cout << l / (q + p) * p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  double integers = l,p,q\n  read l,p,q\n  output l / (p + q) * p\n  \n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  cout << l / (p + q) * p << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create constant integer maxn with maxn = integer casted 1e5 + 5\ncreate constant long long mod with mod = 1e9 + 7\n\n  create doubles l, p, q\n  read l read p read q\n  create double t1 with t1 = ((2 * l) / (p + q))\n  create double t2 with t2 = l / (p + q)\n  create double ans with ans = p * (t1 - t2)\n  print ans print newline\n  \n\n",
        "const int maxn = (int)1e5 + 5;\nconst long long mod = 1e9 + 7;\nint main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  double t1 = ((2 * l) / (p + q));\n  double t2 = l / (p + q);\n  double ans = p * (t1 - t2);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  define floating point numbers m, a, s\n  define doubles i, j\n  while read m, i, j\n    set a to i + j\n    assign m / a to s\n    print s * i and a newline\n  \n  \n\n",
        "int main() {\n  double m, a, s;\n  double i, j;\n  while (cin >> m >> i >> j) {\n    a = i + j;\n    s = m / a;\n    cout << s * i << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int l, p and q\n  read l, p and q\n  print l * p / (p + q)\n  \n\n",
        "int main() {\n  int l, p, q;\n  cin >> l >> p >> q;\n  cout << l * p / (double)(p + q) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  double integers = d,n,m\n  read d,n,m\n  output (d * n) / (n + m)\n\n",
        "int main() {\n  double d, n, m;\n  cin >> d >> n >> m;\n  cout << (d * n) / (n + m) << endl;\n}\n"
    ],
    [
        "inf = const integer with inf = 0x3f3f3f3f\nmod1 = const integer with mod1 = 1e9 + 7\nmod = const long long with mod = 1e16\nmaxn = const integer with maxn = 1000\ndx, dy = integer array of size 5 with dx = {0, 1, 0, -1, 0}, dy = {1, 0, -1, 0, 0}\ndir = integer array of size [4][2] with dir = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}}\n\n  n, x, y = double\n  read n, x, y\n  d = double with d = n / (x + y)\n  e = double with e = d * x\n  print e\n  \n\n",
        "const int inf = 0x3f3f3f3f;\nconst int mod1 = 1e9 + 7;\nconst long long mod = 1e16;\nconst int maxn = 1000;\nint dx[5] = {0, 1, 0, -1, 0}, dy[5] = {1, 0, -1, 0, 0};\nint dir[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nint main() {\n  double n, x, y;\n  cin >> n >> x >> y;\n  double d = n / (x + y);\n  double e = d * x;\n  cout << e << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array h with size 3\n\n  create long long doubles a, b, c\n  read a read b read c\n  create long long double f with f = b + c\n  create long long double t with t = a / f\n  print b * t print '\\n'\n  \n\n",
        "int h[3];\nint main() {\n  long double a, b, c;\n  cin >> a >> b >> c;\n  long double f = b + c;\n  long double t = a / f;\n  cout << b * t << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create doubles l, p and q\n  read input to l, p and q\n  declare double variable t_total = 3 * l / (p + q)\n  declare double t1 = l / (p + q)\n  print (t_total - 2 * t1) * p\n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  double t_total = 3 * l / (p + q);\n  double t1 = l / (p + q);\n  cout << (t_total - 2 * t1) * p << endl;\n}\n"
    ],
    [
        "\n  l, x, y = double\n  read l\n  read x, y\n  if y > x\n    print l - ((l / (x + y)) * the greatest value between x and y)\n  else\n    print ((l / (x + y)) * the greatest value between x and y)\n  \n  \n\n",
        "int main() {\n  double l, x, y;\n  cin >> l;\n  cin >> x >> y;\n  if (y > x) {\n    cout << l - ((l / (x + y)) * max(x, y)) << endl;\n  } else {\n    cout << (l / (x + y)) * max(x, y) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "N = const long long with N = 1e5\nl, p, q = flaot\n\n  read l then p then q\n  print l / (p + q) * p\n  print newline\n  \n\n",
        "const long long N = 1e5;\nfloat l, p, q;\nint main() {\n  cin >> l >> p >> q;\n  cout << l / (p + q) * p;\n  cout << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  set a, b and c to 0\n  print a, b and c\n  if b equal to c\n    print 0.5*a\n    \n  \n  print b / (c+b)*a and a newline\n\n",
        "int main() {\n  double a = 0, b = 0, c = 0;\n  cin >> a >> b >> c;\n  if (b == c) {\n    cout << 0.5 * a << endl;\n    return 0;\n  }\n  cout << b / (c + b) * a << endl;\n}\n"
    ],
    [
        "create constant integer N with N = 5000 + 100\n\n  create doubles l, q, p, t, ans\n  while read l is true\n    read p read q\n    set t to l / ( p + q )\n    set ans to p * t\n    print ans print newline\n  \n  \n\n",
        "const int N = 5000 + 100;\nint main() {\n  double l, q, p, t, ans;\n  while (cin >> l) {\n    cin >> p >> q;\n    t = l / (p + q);\n    ans = p * t;\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  l, p, q = double\n  read l, p, q\n  print result of p * l / (p + q)\n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  cout << p * l / (p + q) << endl;\n}\n"
    ],
    [
        "\n  let l, p, q be double values\n  read l, p, q\n  print (l * p) / (p + q) and newline\n  \n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  cout << (l * p) / (p + q) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  set float a,s,c,d,e all to 0 and set float for i,j,k,l,f\n  read k,l,f\n  set s to (l + f) / 2\n  set s to k / s\n  set s to s / 2\n  set a to l * s\n  output a\n  \n\n",
        "int main() {\n  float a = 0, s = 0, c = 0, d = 0, e = 0, i, j, k, l, f;\n  cin >> k >> l >> f;\n  s = (l + f) / 2;\n  s = k / s;\n  s = s / 2;\n  a = l * s;\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create doubles l, p and q\n  read l, p and q\n  print (l / (p + q)) * p and \"\\n\"\n  \n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  cout << (l / (p + q)) * p << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "a,b,c,tt = long long integers\n\n  read a,b,c\n  output (float)a / (b + c) * b\n\n",
        "long long int a, b, c, tt;\nint main() {\n  cin >> a >> b >> c;\n  cout << (float)a / (b + c) * b << endl;\n}\n"
    ],
    [
        "MOD = const long long integer with MOD = 1000000007\nN, M, K, H, W, L, R = long long integer\n\n  a, b, c = long double\n  read a, b, c\n  a = a / (b + c)\n  a = a * b\n  print a\n  \n\n",
        "const long long int MOD = 1000000007;\nlong long int N, M, K, H, W, L, R;\nint main() {\n  long double a, b, c;\n  cin >> a >> b >> c;\n  a /= (b + c);\n  a *= b;\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare int variables l, p and q\n  create doubles sum and su\n  read l, p and q and keep looping\n    change sum to l / (2 * (p + q))\n    assign l - sum * q * 2 to su\n    print su\n  \n\n",
        "int main() {\n  int l, p, q;\n  double sum, su;\n  while (cin >> l >> p >> q) {\n    sum = (double)l / (2 * (p + q));\n    su = (double)l - sum * q * 2;\n    cout << su << endl;\n  }\n}\n"
    ],
    [
        "\n  create doubles l, a, b\n  read l read a read b\n  print l / ( a + b ) * a print newline\n  \n\n",
        "int main() {\n  double l, a, b;\n  cin >> l >> a >> b;\n  cout << l / (a + b) * a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare doubles d, a and b\n  read d, a and b\n  create double t = d / (a + b)\n  print t * a\n\n",
        "int main() {\n  double d, a, b;\n  cin >> d >> a >> b;\n  double t = d / (a + b);\n  cout << t * a << endl;\n}\n"
    ],
    [
        "\n  let a double\n  let l, p, q doubles\n  read l, p, and q\n  set a to l * p / (p + q)\n  print a\n  \n\n",
        "int main() {\n  double a;\n  double l, p, q;\n  cin >> l >> p >> q;\n  a = l * p / (p + q);\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare floats l, p and q\n  read input to l, p and q\n  print l / (p + q) * p\n  \n\n",
        "int main() {\n  float l, p, q;\n  cin >> l >> p >> q;\n  cout << l / (p + q) * p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare constant double PI with PI = acosign of -1.0\ndeclare fast_in_out with no arguments, returning void\ndeclare pause with no arguments, returning void\n\n  run fast_in_out\n  declare ar as integer array = {2, 4, 8, 16, 32, 64, 128, 256, 512}\n  declare integers n, b, q\n  read n and b and q\n  declare integers x = 0, y = n * q\n  for i = 8 to 0 inclusive, decrementing i\n    if n is less than ar[i], break current loop iteration\n    declare integer k with k = ar[i]\n    let n be n - k\n    increment n by k / 2\n    increment i\n    let k = k * b + (k / 2)\n    increment x by k\n  \n  print x, \" \", y, '\\n'\n  run pause\n  \n\n",
        "const double PI = acos(-1.0);\nvoid fast_in_out() {}\nvoid pause() {}\nint main() {\n  fast_in_out();\n  int ar[] = {2, 4, 8, 16, 32, 64, 128, 256, 512};\n  int n, b, q;\n  cin >> n >> b >> q;\n  int x = 0, y = n * q;\n  for (int i = 8; i >= 0; i--) {\n    if (n < ar[i]) continue;\n    int k = ar[i];\n    n = n - k;\n    n += k / 2;\n    i++;\n    k = k * b + (k / 2);\n    x += k;\n  }\n  cout << x << \" \" << y << '\\n';\n  pause();\n  return 0;\n}\n"
    ],
    [
        "create ints n, b, p, x = 0, and y\n\n  read n, b, and p\n  set b to 2 * b + 1\n  set y to n * p\n  while n is greater than 1\n    create integer k = 1\n    while 2 * k is less than or equal to n, set k to k * 2\n    set x to x + b * k / 2\n    set n to n - k / 2\n  \n  print x, \" \", and y\n  \n\n",
        "int n, b, p, x = 0, y;\nint main() {\n  cin >> n >> b >> p;\n  b = 2 * b + 1;\n  y = n * p;\n  while (n > 1) {\n    int k = 1;\n    while (2 * k <= n) k *= 2;\n    x += b * k / 2;\n    n -= k / 2;\n  }\n  cout << x << \" \" << y << '\\n';\n  return 0;\n}\n"
    ],
    [
        "INF = const long long int with INF = (1LL bitshift left by 60) - 1\nMAX = const long long int with MAX = 2000001\nin function fast_exp taking three long long ints base, exp and m and returning a long long int\n  res = long long int with res = 1\n  loop while exp is greater than 0\n    if exp is uneven set res to (res * base) mod m\n    set base to (base * base) mod m\n    set exp to exp / 2\n  \n  return res mod m\n\n\n  n, b, p = int\n  read n then b then p\n  bottle, towel = int with bottle = 0 and towel = 0\n  set towel to p * n\n  loop while n is greater than 1\n    k = int with k = 1\n    loop while k is less or equal to n set k to k * 2\n    set k to k / 2\n    set n to (n - k) + k / 2\n    increment bottle by (k / 2) * (2 * b + 1)\n  \n  print bottle and towel\n  \n\n",
        "const long long int INF = (1LL << 60) - 1;\nconst long long int MAX = 2000001;\nlong long int fast_exp(long long int base, long long int exp, long long int m) {\n  long long int res = 1;\n  while (exp > 0) {\n    if (exp % 2 == 1) { res = (res * base) % m; }\n    base = (base * base) % m;\n    exp /= 2;\n  }\n  return res % m;\n}\nint main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int bottle = 0, towel = 0;\n  towel = p * n;\n  while (n > 1) {\n    int k = 1;\n    while (k <= n) { k *= 2; }\n    k /= 2;\n    n = (n - k) + k / 2;\n    bottle += (k / 2) * (2 * b + 1);\n  }\n  cout << bottle << \" \" << towel << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n,m,p=int\n  read n,m,p\n  ans=0\n  c=n\n  while n is not 1\n    add n/2 to ans\n    subtract n/2 from n\n  \n  print ans*(m*2+1), space, c*p\n\n",
        "int main() {\n  int n, m, p;\n  cin >> n >> m >> p;\n  int ans = 0;\n  int c = n;\n  while (n != 1) {\n    ans += n / 2;\n    n -= n / 2;\n  }\n  cout << ans * (m * 2 + 1) << \" \" << c * p << endl;\n}\n"
    ],
    [
        "create const ints N = 1e6 + 5, MAX = 3e7 and MOD = 1e9 + 7\ndeclare ints n, p, b, x and y\n\n  read n, p and b\n  set y to b * n\n  while n is not 0\n    if n / 2 is true\n      increase x by (n - n % 2) * p + n / 2\n    else\n      break the loop\n    assign n / 2 + n % 2 to n\n  \n  print x, \" \", y and \"\\n\"\n\n",
        "const int N = 1e6 + 5, MAX = 3e7, MOD = 1e9 + 7;\nint n, p, b, x, y;\nint main() {\n  cin >> n >> p >> b;\n  y = b * n;\n  while (n) {\n    if (n / 2)\n      x += ((n - n % 2) * p + n / 2);\n    else\n      break;\n    n = n / 2 + n % 2;\n  }\n  cout << x << \" \" << y << \"\\n\";\n}\n"
    ],
    [
        "\n  create integers m, b, p, total and total_p where total = 0\n  read variables m, b and p from the input\n  assign m * p to total_p\n  start infinite loop\n    declare integer variable k = [](int n)->int\n      declare ints i = 1 and res = pow(2, 0)\n      looping infinitely\n        declare new integer variable temp = 2 in the power of i\n        if temp is greater than n, break\n        set res to temp\n        increment i by one\n      \n      return res\n    (m)\n    create integer variable with name matches and value = k / 2\n    change total to sum of total and matches * (2 * b)\n    increase total by matches\n    assign (k / 2) + (m - k) to m\n    if matches = 0, break the loop\n  \n  print total, \" \" and total_p\n  \n\n",
        "int main() {\n  int m, b, p, total = 0, total_p;\n  cin >> m >> b >> p;\n  total_p = m * p;\n  while (1) {\n    int k = [](int n) -> int {\n      int i = 1, res = pow(2, 0);\n      while (1) {\n        int temp = pow(2, i);\n        if (temp > n) break;\n        res = temp;\n        i++;\n      }\n      return res;\n    }(m);\n    int matches = k / 2;\n    total += matches * (2 * b);\n    total += matches;\n    m = (k / 2) + (m - k);\n    if (matches == 0) break;\n  }\n  cout << total << \" \" << total_p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, agua, toalha = int with toalha = 0\n  read n then agua then toalha\n  nrod, tagua, ttoalha = int with ttoalha = 0\n  set nrod to n - 1\n  set tagua to nrod + nrod * agua * 2\n  set ttoalha to toalha * n\n  print tagua and ttoalha\n  \n\n",
        "int main() {\n  int n, agua, toalha = 0;\n  cin >> n >> agua >> toalha;\n  int nrod, tagua, ttoalha = 0;\n  nrod = n - 1;\n  tagua = nrod + nrod * agua * 2;\n  ttoalha = toalha * n;\n  cout << tagua << \" \" << ttoalha << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, b, p be integers\n  read n, b, p\n  let bottles, towels be integers with bottles = 0, towels = n * p\n  while n is greater than 1\n    let matches be a integer with matches = (1 << (int)log2(n)) / 2\n    increment bottles by matches * (2 * b + 1)\n    decrement n by matches\n  \n  print bottles and space and towels and newline\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int bottles = 0, towels = n * p;\n  while (n > 1) {\n    int matches = (1 << (int)log2(n)) / 2;\n    bottles += matches * (2 * b + 1);\n    n -= matches;\n  }\n  cout << bottles << \" \" << towels << endl;\n  return 0;\n}\n"
    ],
    [
        "create ints n, b, and p\n\n  read n, b, and p\n  set b to b * 2 + 1\n  create integer now = 1\n  while now is less than or equal to n, shift the bits of now one place to the left\n  shift the bits of now one place to the right\n  create int t = n\n  let long long integer ans = 0\n  while t is greater than 1\n    set ans to ans + 1LL * now / 2 * b\n    set t to t - now / 2\n    while now is truthy and now > t is true, shift the bits of now one place to the right\n  \n  print ans, \" \", and n * p\n  \n\n",
        "int n, b, p;\nint main() {\n  cin >> n >> b >> p;\n  b = b * 2 + 1;\n  int now = 1;\n  while (now <= n) { now <<= 1; }\n  now >>= 1;\n  int t = n;\n  long long ans = 0;\n  while (t > 1) {\n    ans += 1LL * now / 2 * b;\n    t -= now / 2;\n    while (now && now > t) { now >>= 1; }\n  }\n  cout << ans << \" \" << n * p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare g taking in int n and returning integer\n  while _builtin_popcount(n) is greater than 1, set n to n & (n - 1)\n  return n\n\n\n  let ints n, b, p, r = 0, and m\n  read n, b, and p\n  set m to n\n  while n is greater than 1\n    create int x = g(n)\n    set r to r + x * (b)\n    set r to r + x / 2\n    set n to n - x / 2\n  \n  print r, \" \", and p * m\n  \n\n",
        "int g(int n) {\n  while (__builtin_popcount(n) > 1) n = n & (n - 1);\n  return n;\n}\nint main() {\n  int n, b, p, r = 0, m;\n  cin >> n >> b >> p;\n  m = n;\n  while (n > 1) {\n    int x = g(n);\n    r += x * (b);\n    r += x / 2;\n    n -= x / 2;\n  }\n  cout << r << \" \" << p * m << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints participants, bottles, and towels\n  let ints total_b = 0, total_t = 0, and matches\n  read participants, bottles, and towels\n  set total_t to the result of participants * towels\n  while participants is not 1\n    set matches to participants / 2\n    if participants modulo 2 is equal to 1\n      set total_ b to total_b + (participants - 1) * bottles + matches\n      set participants to participants / 2 + 1\n    otherwise do\n      set total_b to total_b + participants * bottles + matches\n      set participants to the result of participants / 2\n    \n  \n  print total_b, \" \", and total_t\n  \n\n",
        "int main() {\n  int participants, bottles, towels;\n  int total_b = 0, total_t = 0, matches;\n  cin >> participants >> bottles >> towels;\n  total_t = participants * towels;\n  while (participants != 1) {\n    matches = participants / 2;\n    if (participants % 2 == 1) {\n      total_b += (participants - 1) * bottles + matches;\n      participants = participants / 2 + 1;\n    } else {\n      total_b += participants * bottles + matches;\n      participants = participants / 2;\n    }\n  }\n  cout << total_b << \" \" << total_t << endl;\n  return 0;\n}\n"
    ],
    [
        "create map m1 from long long ints to long long ints\ncreate map iterator itr from long long ints to long long ints\n\n  create long long int n, b, and p\n  read n, b, and p\n  make long long int ans2 = n * p\n  make long long int ans1 = 0\n  while n is greater than 1\n    let long long int i\n    for i = 0, loop indefinitely\n      if pow(2, i) is greater than n, break loop\n    \n    decrease i\n    create long long integer z = pow(2, i)\n    set ans1 to ans1 + (z / 2) * (2 * b + 1)\n    set n to n - z / 2\n  \n  print ans1, \" \", and ans2\n  \n\n",
        "map<long long int, long long int> m1;\nmap<long long int, long long int>::iterator itr;\nint main() {\n  long long int n, b, p;\n  cin >> n >> b >> p;\n  long long int ans2 = n * p;\n  long long int ans1 = 0;\n  while (n > 1) {\n    long long int i;\n    for (i = 0;; i++) {\n      if (pow(2, i) > n) break;\n    }\n    i--;\n    long long int z = pow(2, i);\n    ans1 += (z / 2) * (2 * b + 1);\n    n = n - z / 2;\n  }\n  cout << ans1 << \" \" << ans2 << endl;\n  return 0;\n}\n"
    ],
    [
        "N = int\nA = int\nT = int\nvalues = two dimensional int array of sizes 1001 and 1001\npagamento = int array of size 1001\naguinha = int\nin function strlen taking char array of size 1001 t and returning int\n  ret = int with ret = 0\n  loop while t[ret] is not '\\0' increment ret\n  return ret\n\nin function maxfunc taking int t1, int t2 and returning int\n  ret = int with ret = t1\n  if t2 > t1 set ret to t2\n  return ret\n\nin function minfunc taking int t1, int t2 and returning int\n  ret = int with ret = t1\n  if t2 < t1 set ret to t2\n  return ret\n\nin function epar taking int x and returning int\n  ret = int with ret = 0\n  if x is even set ret to 1\n  return ret\n\nin function atoifunc taking char x and returning int\n  return x - '0'\n\n\n  result = int with result = =\n  size = int\n  set N to 0\n  N = int\n  A = int\n  T = int\n  read N then A then T\n  set aguinha to A * 2 + 1\n  njogos = int with njogos = 0\n  resta = int with resta = N\n  loop while resta is not 1\n    increment njogos by resta / 2\n    if epar of resta\n      set resta to resta / a\n    else\n      set resta to resta / 2 + 1\n    \n  \n  print njogos * aguinha and N * T\n  \n\n",
        "int N;\nint A;\nint T;\nint values[1001][1001];\nint pagamento[1001];\nint aguinha;\nint strlen(char t[1001]) {\n  int ret = 0;\n  while (t[ret] != '\\0') { ret++; }\n  return ret;\n}\nint maxfunc(int t1, int t2) {\n  int ret = t1;\n  if (t2 > t1) { ret = t2; }\n  return ret;\n}\nint minfunc(int t1, int t2) {\n  int ret = t1;\n  if (t2 < t1) { ret = t2; }\n  return ret;\n}\nint epar(int x) {\n  int ret = 0;\n  if ((x % 2) == 0) { ret = 1; }\n  return ret;\n}\nint atoifunc(char x) {\n  return x - '0';\n}\nint main() {\n  int result = 0;\n  int size;\n  N = 0;\n  int N;\n  int A;\n  int T;\n  cin >> N >> A >> T;\n  aguinha = A * 2 + 1;\n  int njogos = 0;\n  int resta = N;\n  while (resta != 1) {\n    njogos += resta / 2;\n    if (epar(resta)) {\n      resta = (resta / 2);\n    } else {\n      resta = (resta / 2) + 1;\n    }\n  }\n  cout << njogos * aguinha << ' ' << N * T << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, b, p = int\n  read n then b then p\n  fp = int with fp = n * p\n  m = int with m = 0\n  loop while n > 1\n    po = int with po = floor of log2 of n\n    compete = int with compete = pow of 2, po\n    diff = int with diff = n - pow of 2, po\n    increment m by compete / 2\n    set n to compete / 2 + diff\n  \n  fb = int with fb = m * 2 * b + m\n  print fb and fp\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int fp = n * p;\n  int m = 0;\n  while (n > 1) {\n    int po = floor(log2(n));\n    int compete = pow(2, po);\n    int diff = n - pow(2, po);\n    m += compete / 2;\n    n = compete / 2 + diff;\n  }\n  int fb = m * 2 * b + m;\n  cout << fb << \" \" << fp << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, b, p be integers\n  read n, b, p\n  let ats1 , ats2 be integers with ats1 = 0, ats2 = p * n\n  while n is not equal to 1\n    let k be a integer with k = 1\n    while 2 * k <= n , k is equal to k * 2\n    increment ats1 by k * b + k / 2\n    decrement n by k / 2\n  \n  print ats1 and space and ats2 and newline\n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int ats1 = 0, ats2 = p * n;\n  while (n != 1) {\n    int k = 1;\n    while (2 * k <= n) k *= 2;\n    ats1 += k * b + k / 2;\n    n -= k / 2;\n  }\n  cout << ats1 << \" \" << ats2 << \"\\n\";\n}\n"
    ],
    [
        "\n  create integer variables p, b, t and x\n  read input to p, b and t\n  create new integer match with value 0\n  change x to p\n  while p != 1\n    change match to match + (p / 2)\n    set p to (p / 2) + (p % 2)\n  \n  print match + (2 * match * b), \" \" and x * t to the standard output\n\n",
        "int main() {\n  int p, b, t, x;\n  cin >> p >> b >> t;\n  int match = 0;\n  x = p;\n  while (p != 1) {\n    match += (p / 2);\n    p = (p / 2) + (p % 2);\n  }\n  cout << match + (2 * match * b) << \" \" << x * t << endl;\n}\n"
    ],
    [
        "\n  n, p, b = integers\n  read n, p, b\n  print (n - 1) * p * 2 + (n - 1)\n  print b * n\n  \n\n",
        "int main() {\n  int n, p, b;\n  cin >> n >> p >> b;\n  cout << (n - 1) * p * 2 + (n - 1) << \" \";\n  cout << b * n << endl;\n  return 0;\n}\n"
    ],
    [
        "in the function solve\n  n, b, p = integers\n  read n, b, p\n  br = integer with br = 0\n  tr = integer with tr = n * p;\n  while n > 1\n    x = integer with x = 1\n    while 2 * x < n, x = x * 2\n    br = br + x * (2 * b + 1\n    n = n - x\n  \n  print br,\" \",tr\n\n\n  call solve\n\n",
        "void solve() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int br = 0;\n  int tr = n * p;\n  while (n > 1) {\n    int x = 1;\n    while (2 * x < n) { x *= 2; }\n    br += x * (2 * b + 1);\n    n -= x;\n  }\n  cout << br << \" \" << tr << endl;\n}\nint main() {\n  solve();\n}\n"
    ],
    [
        "\n  n, b, p, k, ptot, btot = int\n  read n then b then p\n  set ptot to p * n\n  set btot to 0\n  loop while n is greater than 1\n    set k to 1 bitshift left by (floor of log2 of n) as int\n    decrement n by k / 2\n    increment btot by (k * b) + (k / 2)\n  \n  print btot and ptot\n  \n\n",
        "int main() {\n  int n, b, p, k, ptot, btot;\n  cin >> n >> b >> p;\n  ptot = p * n;\n  btot = 0;\n  while (n > 1) {\n    k = 1 << ((int)floor(log2(n)));\n    n = n - (k / 2);\n    btot += ((k * b) + (k / 2));\n  }\n  cout << btot << \" \" << ptot << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "declare gcd with long longs a, b as arguments, returning long long\n  if b is 0, return a from function\n  return result of gcd(b,a%b)\n\ndeclare long long lcm with long longs a, b as arguments\n  return a * b / gcd(a,b) from function\n\ndeclare long long f with long longs n, b as arguments\n  if n is less than or equal to 1, return 0\n  declare i as long long = 1\n  while i * 2 is less than or equal to n, let i be i * 2\n  return result of run f with (n - i + i / 2, b) as arguments + i / 2 * (2 * b + 1)\n\n\n  declare long longs n, b, p\n  read n read b read p\n  print result of run f(n,b), print \" \", n * p, newline\n\n",
        "long long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long lcm(long long a, long long b) {\n  return a * b / gcd(a, b);\n}\nlong long f(long long n, long long b) {\n  if (n <= 1) return 0;\n  long long i = 1;\n  while (i * 2 <= n) i *= 2;\n  return f(n - i + i / 2, b) + i / 2 * (2 * b + 1);\n}\nint main() {\n  long long n, b, p;\n  cin >> n >> b >> p;\n  cout << f(n, b) << \" \" << n * p << endl;\n}\n"
    ],
    [
        "\n  n, b, p, m = int\n  read n then b then p\n  set p to p * n\n  for m = 0 to n is greater or equal to 2 setting m to m + n / 2 and n to n / 2 + n mod 2\n    noop\n  print (b * 2 + 1) * m and p\n  \n\n",
        "int main() {\n  int n, b, p, m;\n  cin >> n >> b >> p;\n  p = p * n;\n  for (m = 0; n >= 2; m = m + n / 2, n = n / 2 + n % 2)\n    ;\n  cout << (b * 2 + 1) * m << \" \" << p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare integer array p2 = {1, 2, 4, 8, 16, 32, 64, 128, 256}\n\n  declare integers n, b, p, k, m\n  declare integer bn = 0\n  read n, b, p\n  let m be n\n  while m is greater than 1\n    for k = 8 to 0 inclusive, decrementing k\n      if p2[k] is less than or equal to m\n        increment bn by p2[k] / 2 + p2[k] * b\n        end loop\n      \n    \n    let m be p2[k] / 2 + (m - p2[k])\n  \n  print bn and \" \" and n * p and newline\n  \n\n",
        "int p2[] = {1, 2, 4, 8, 16, 32, 64, 128, 256};\nint main() {\n  int n, b, p, k, m;\n  int bn = 0;\n  cin >> n >> b >> p;\n  m = n;\n  while (m > 1) {\n    for (k = 8; k >= 0; k--) {\n      if (p2[k] <= m) {\n        bn += p2[k] / 2 + p2[k] * b;\n        break;\n      }\n    }\n    m = p2[k] / 2 + (m - p2[k]);\n  }\n  cout << bn << \" \" << n * p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare new integer water\ncreate integers s, n, b and p\n\n  read from the input to n, b and p\n  declare new integer called k = n\n  set water to 0\n  while n is not 1\n    change s to n / 2\n    if n is even\n      set n to n divided by 2\n    else\n      change n to n / 2 + 1\n    \n    change water to sum of water and s * (2 * b + 1)\n  \n  print water, \" \" and k * p to the standard output\n\n",
        "int water;\nint s, n, b, p;\nint main() {\n  cin >> n >> b >> p;\n  int k = n;\n  water = 0;\n  while (n != 1) {\n    s = n / 2;\n    if (n % 2 == 0) {\n      n /= 2;\n    } else {\n      n = n / 2 + 1;\n    }\n    water += s * (2 * b + 1);\n  }\n  cout << water << \" \" << k * p << endl;\n}\n"
    ],
    [
        "function read (no args, return long long)\n  c=getchar()\n  while c is not '-' and (c < '0' or c > '9') c=getchar()\n  k=0, kk=1\n  if c is '-' c=getchar(), kk=-1\n  while c >= '0' and c <= '9' k=k*10+c-'0', c=getchar()\n  return kk*k\n\nfunction write (get long long x, return nothing)\n  if x<0 x=-x, putchar('-')\n  if x/10 write(w/10)\n  putchar(x modulo 10+'0')\n\nfunction writlne (get long long x, return nothing)\n  write(x)\n  puts(\"\")\n\nn,b,p=long long\n\n  n=read()\n  b=read()\n  p=read()\n  write((b+b+1)*(n-1))\n  putchar(' ')\n  writeln(p*n)\n\n",
        "inline long long read() {\n  char c = getchar();\n  while (c != '-' && (c < '0' || c > '9')) c = getchar();\n  long long k = 0, kk = 1;\n  if (c == '-') c = getchar(), kk = -1;\n  while (c >= '0' && c <= '9') k = k * 10 + c - '0', c = getchar();\n  return kk * k;\n}\nvoid write(long long x) {\n  if (x < 0) x = -x, putchar('-');\n  if (x / 10) write(x / 10);\n  putchar(x % 10 + '0');\n}\nvoid writeln(long long x) {\n  write(x);\n  puts(\"\");\n}\nlong long n, b, p;\nint main() {\n  n = read();\n  b = read();\n  p = read();\n  write((b + b + 1) * (n - 1));\n  putchar(' ');\n  writeln(p * n);\n}\n"
    ],
    [
        "in function solve that returns nothing\nin function speed_up that returns nothing\n\n  call speed_up\n  call solve\n  \n\nin function solve that returns nothing\n  n, b, p = long long\n  read n, b, p\n  y = long long = n * p\n  sor = long long = 0\n  while n > 1\n    st = long long = 2\n    while st * 2 <= n, then st = st * 2\n    sor = sor + (st / 2) * (b * 2 + 1)\n    n = n - st / 2\n  \n  print sor y\n\n",
        "void solve();\nvoid speed_up() {}\nint main() {\n  speed_up();\n  solve();\n  return 0;\n}\nvoid solve() {\n  long long n, b, p;\n  cin >> n >> b >> p;\n  long long y = n * p;\n  long long sor = 0;\n  while (n > 1) {\n    long long st = 2;\n    while (st * 2 <= n) st *= 2;\n    sor += (st / 2) * (b * 2 + 1);\n    n -= st / 2;\n  }\n  cout << sor << \" \" << y << \"\\n\";\n}\n"
    ],
    [
        "\n  declare ints n, b and p\n  read variables n, b and p from the input\n  create ints bowl = 0 and towl = n * p\n  while n > 1\n    new integer k = pow(2, (log(n) / log(2)))\n    increase bowl by k / 2 * (2 * b + 1)\n    change n to n - k / 2\n  \n  print bowl, ' ' and towl to the standard output\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int bowl = 0, towl = n * p;\n  while (n > 1) {\n    int k = pow(2, (int)(log(n) / log(2)));\n    bowl += k / 2 * (2 * b + 1);\n    n -= k / 2;\n  }\n  cout << bowl << ' ' << towl << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare new integers n, agua and toalha with toalha = 0\n  read user input to n, agua and toalha\n  declare integers nrod, tagua and ttoalha with ttoalha = 0\n  assign n - 1 to nrod\n  change tagua to nrod + nrod * agua * 2\n  assign toalha * n to ttoalha\n  print tagua, \" \" and ttoalha\n  \n\n",
        "int main() {\n  int n, agua, toalha = 0;\n  cin >> n >> agua >> toalha;\n  int nrod, tagua, ttoalha = 0;\n  nrod = n - 1;\n  tagua = nrod + nrod * agua * 2;\n  ttoalha = toalha * n;\n  cout << tagua << \" \" << ttoalha << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, b, p = int\n  read n then b then p\n  bottles = int with bottles = 0\n  towels = int with towels = n * p\n  loop while n is greater than 1\n    k = int with k = 0\n    for i = 32 - 1 to 0 inclusive decrementing i\n      if n bitwise-and (1 bitshift left by i) is 1\n        set k to 1 bitshift left by i\n        break\n      \n    \n    set n to (n - k) + k / 2\n    increment bottles by b * k + k / 2\n  \n  print bottles and towels\n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int bottles = 0;\n  int towels = n * p;\n  while (n > 1) {\n    int k = 0;\n    for (int i = 32 - 1; i >= 0; i--) {\n      if (n & (1 << i)) {\n        k = (1 << i);\n        break;\n      }\n    }\n    n = (n - k) + k / 2;\n    bottles += b * k + k / 2;\n  }\n  cout << bottles << \" \" << towels << \"\\n\";\n}\n"
    ],
    [
        "\n  let m, b, p, total , total_p be integers with total = 0\n  read m, b, p\n  the value of total_p = m * p\n  while 1 is an infinite loop since condition is always true\n    le k be a integer with k = [](int n) -> int\n      let i , res be integers with i = 1, res = 2 ^ 0\n      while 1 is an infinite loop since condition is always true\n        let temp be a integer with temp = 2 ^ i\n        if temp is greater than n, stop\n        the value of res = temp\n        increment i by 1\n      \n      return the value of res\n    m\n    let matches be a integer with matches = k / 2\n    increment total by matches * (2 * b)\n    increment total by matches\n    the value of m = (k / 2) + (m - k)\n    if matches is equal to 0 , stop\n  \n  print total and space and total_p and newline\n  \n\n",
        "int main() {\n  int m, b, p, total = 0, total_p;\n  cin >> m >> b >> p;\n  total_p = m * p;\n  while (1) {\n    int k = [](int n) -> int {\n      int i = 1, res = pow(2, 0);\n      while (1) {\n        int temp = pow(2, i);\n        if (temp > n) break;\n        res = temp;\n        i++;\n      }\n      return res;\n    }(m);\n    int matches = k / 2;\n    total += matches * (2 * b);\n    total += matches;\n    m = (k / 2) + (m - k);\n    if (matches == 0) break;\n  }\n  cout << total << \" \" << total_p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  i, b, p, j, n, m, k = int\n  read n, b, p\n  print (2 * b + 1) * (n - 1) and space and n * p\n\n",
        "int main() {\n  int i, b, p, j, n, m, k;\n  cin >> n >> b >> p;\n  cout << (2 * b + 1) * (n - 1) << \" \" << n * p << endl;\n}\n"
    ],
    [
        "\n  declare new long longs n, b and p\n  read variables n, b and p from the input\n  B is a new long long = 0\n  declare new long long called T = n * p\n  while n > 1\n    create long long variable with name now = 1\n    while now * 2 <= n\n    change B to B + (now / 2) * (2 * b + 1)\n    set n to now / 2 + (n - now)\n  \n  print B, \" \" and T\n  \n\n",
        "int main() {\n  long long n, b, p;\n  cin >> n >> b >> p;\n  long long B = 0;\n  long long T = n * p;\n  while (n > 1) {\n    long long now = 1;\n    while (now * 2 <= n) now *= 2;\n    B += (now / 2) * (2 * b + 1);\n    n = now / 2 + (n - now);\n  }\n  cout << B << \" \" << T << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare new integers N, B and P\n  read from the input to N, B and P\n  Ile is a new integer variable with value 0\n  create new integer variable Reczniki with value N * P\n  while N > 1\n    declare integer variable Potega with value 1\n    while Potega * 2 <= N\n    declare new integer IleMeczy = Potega / 2\n    add IleMeczy * 2 * B + IleMeczy to Ile\n    change N to (N - Potega) + IleMeczy\n  \n  print Ile, \" \", Reczniki and \"\\n\"\n\n",
        "int main() {\n  int N, B, P;\n  cin >> N >> B >> P;\n  int Ile = 0;\n  int Reczniki = N * P;\n  while (N > 1) {\n    int Potega = 1;\n    while (Potega * 2 <= N) { Potega *= 2; }\n    int IleMeczy = Potega / 2;\n    Ile += IleMeczy * 2 * B + IleMeczy;\n    N = (N - Potega) + IleMeczy;\n  }\n  cout << Ile << \" \" << Reczniki << \"\\n\";\n}\n"
    ],
    [
        "\n  create int n, b, p\n  read n, b, p\n  print (n - 1) * (2 * b + 1), \" \", n*p and a newline\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  cout << (n - 1) * (2 * b + 1) << \" \" << n * p << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  P=array of 9 int filled with 1,2,4,8,16,32,64,128,256\n  n,b,p=int\n  read n,b,p\n  B=0\n  N=n\n  while n>1\n    k=int\n    for i=8 down to -1 exclusive\n      if P[i] <= n\n        k=P[i]\n        break\n      \n    \n    add k*(2*b+1)/2 to B\n    subtract k/2 from n\n  \n  print B, space, N*p\n  \n\n",
        "int main() {\n  int P[9] = {1, 2, 4, 8, 16, 32, 64, 128, 256};\n  int n, b, p;\n  cin >> n >> b >> p;\n  int B = 0;\n  int N = n;\n  while (n > 1) {\n    int k;\n    for (int i = 8; i > -1; i--) {\n      if (P[i] <= n) {\n        k = P[i];\n        break;\n      }\n    }\n    B += k * (2 * b + 1) / 2;\n    n -= k / 2;\n  }\n  cout << B << \" \" << N * p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare fast with no arguments, returning void\ndeclare mn = 1e9 as long long\ndeclare lucky with long longs a, c, integer b as arguments, returning void\n  if a is greater than 1e11, return from function\n  if a is greater than or equal to b and c is 0, let mn be minimum of mn and a\n  run lucky with a * 10 + 7, c - 1, b as arguments\n  run lucky with a * 10 + 4, c + 1, b as arguments\n\ndeclare integer n\ndeclare fff with string s, integer c as arguments, returning void\n  if size of s is 2 * n\n    if c is 0, print s and newline\n    return from function\n  \n  run fff with s + \"(\", c + 1 as arguments\n  if c is greater than 0, run fff with s + \")\", c - 1 as arguments\n\ndeclare toint with string s as argument, returning long long\n  declare a = 0, c = 1 as long longs\n  end statement\n  for i = 0 to size of s exclusive\n    increment a by (s[size of s - i - 1] - '0') * c\n    let c be c * 10\n  \n  return a from function\n\n\n  run fast\n  declare a, b = 0, c = 0, d = 1, sum = 0, x = 0 as long longs\n  declare strings s, ss = \"\"\n  read a, b, c\n  let d be a\n  while a is greater than 1\n    let x be a / 2\n    decrement a by x\n    while decrement x is ture, increment sum by ((2 * b) + 1)\n  \n  print sum and \" \" and d * c and \"\\n\"\n  \n\n",
        "void fast() {}\nlong long mn = 1e9;\nvoid lucky(long long a, long long c, int b) {\n  if (a > 1e11) return;\n  if (a >= b && c == 0) mn = min(mn, a);\n  lucky(a * 10 + 7, c - 1, b);\n  lucky(a * 10 + 4, c + 1, b);\n}\nint n;\nvoid fff(string s, int c) {\n  if (s.size() == 2 * n) {\n    if (c == 0) cout << s << endl;\n    return;\n  }\n  fff(s + \"(\", c + 1);\n  if (c > 0) fff(s + \")\", c - 1);\n}\nlong long toint(string s) {\n  long long a = 0, c = 1;\n  ;\n  for (int i = 0; i < s.size(); i++) {\n    a += (s[s.size() - i - 1] - '0') * c;\n    c *= 10;\n  }\n  return a;\n}\nint main() {\n  fast();\n  long long a, b = 0, c = 0, d = 1, sum = 0, x = 0;\n  string s, ss = \"\";\n  cin >> a >> b >> c;\n  d = a;\n  while (a > 1) {\n    x = a / 2;\n    a -= x;\n    while (x--) sum += ((2 * b) + 1);\n  }\n  cout << sum << \" \" << d * c << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "n, b, p = long long int\n\n  read n, b, p\n  bByGame = long long integer with bByGame = b * 2 + 1\n  towels = long long integer with towels = p * n\n  bottles = long long integer with bottles = 0\n  while n > 1\n    num = long long integer with num = log2(n)\n    bottles = bottles + num * bByGame\n    n = n - num\n  \n  print bottles,\" \",towels\n  \n\n",
        "long long int n, b, p;\nint main() {\n  cin >> n >> b >> p;\n  long long int bByGame = b * 2 + 1;\n  long long int towels = p * n;\n  long long int bottles = 0;\n  while (n > 1) {\n    long long int num = log2(n);\n    bottles += num * bByGame;\n    n -= num;\n  }\n  cout << bottles << \" \" << towels << endl;\n  return 0;\n}\n"
    ],
    [
        "function min with int arguments a and b that returns integer\n  return a if a < b, or b otherwise\n\nmax is an integer function with int arguments a and b\n  return a if a > b, or b otherwise\n\n\n  declare integer variables n, b, p and matches with the value of matches = 0\n  create integer variable with name x = 256\n  read n, b and p\n  declare integer N with value n\n  while n != 1\n    if x is greater than n\n      change the value of x to x divided by 2\n      skip the rest of the loop\n    \n    subtract x / 2 from n\n    add x / 2 to matches\n  \n  print matches * (1 + 2 * b), \" \" and N * p to the standard output\n\n",
        "int min(int a, int b) {\n  return a < b ? a : b;\n}\nint max(int a, int b) {\n  return a > b ? a : b;\n}\nint main() {\n  int n, b, p, matches = 0;\n  int x = 256;\n  cin >> n >> b >> p;\n  int N = n;\n  while (n != 1) {\n    if (x > n) {\n      x /= 2;\n      continue;\n    }\n    n -= x / 2;\n    matches += x / 2;\n  }\n  cout << matches * (1 + 2 * b) << \" \" << N * p << endl;\n}\n"
    ],
    [
        "\n  n, b, p = long long\n  read n then b then p\n  s1, s2 = long long with s1 = 0LL and s2 = p * n\n  loop while n > 1\n    k = long long with k = 1\n    loop while k < n set k to k * 2\n    if k > n set k to k / 2\n    increment s1 by (k / 2) * (2 * b + 1)\n    m = long long with m = n - k\n    l = long long with l = k / 2\n    set n to l + m\n  \n  print s1 and s2\n  \n\n",
        "int main() {\n  long long n, b, p;\n  cin >> n >> b >> p;\n  long long s1 = 0LL, s2 = p * n;\n  while (n > 1) {\n    long long k = 1;\n    while (k < n) k *= 2;\n    if (k > n) k /= 2;\n    s1 += (k / 2) * (2 * b + 1);\n    long long m = n - k;\n    long long l = k / 2;\n    n = l + m;\n  }\n  cout << s1 << \" \" << s2 << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create new constant integer maxn with value 1e6+5\ncreate constant integer variable mod = 1e9+7\ncreate long long arrays fac and y with size maxn\ndeclare long long variables n and k\nlong long function qpow with long long arguments a, b and c\n  declare long long variable with name ans with value 1\n  change a to the remainder of a divided by c\n  change b to b modulo c\n  while b > 0\n    if b is even, set ans to (ans * a) modulo c\n    change b to b / 2\n    change a to a squared modulo c\n  \n  return ans\n\ninteger function pow_2 with integer argument m\n  create new integer called res with value 1\n  declare new integer variable left = 1\n  looping infinitely\n    if res << left <= m and res << (left + 1) > m, return res\n    increment left\n  \n\n\n  create ints n, b and p\n  declare new integer called ans with value 0\n  read standard input to n, b and p\n  declare integer tow with value n * p\n  declare new integer called left with value 0\n  while n > 1\n    create integer k with value pow_2 of n\n    set left to n - k\n    add b * k + k / 2 to ans\n    change n to k / 2 + left\n  \n  print ans, ' ', tow and '\\n' to standard output\n  \n\n",
        "const int maxn = 1e6 + 5;\nconst int mod = 1e9 + 7;\nlong long fac[maxn], y[maxn];\nlong long n, k;\nlong long qpow(long long a, long long b, long long c) {\n  long long ans = 1;\n  a %= c;\n  b %= c;\n  while (b > 0) {\n    if (b % 2 == 1) ans = (ans * a) % c;\n    b = b / 2;\n    a = (a * a) % c;\n  }\n  return ans;\n}\nint pow_2(int m) {\n  int res = 1;\n  int left = 1;\n  while (true) {\n    if (res << left <= m && res << (left + 1) > m) return res << left;\n    left++;\n  }\n}\nint main() {\n  int n, b, p;\n  int ans = 0;\n  cin >> n >> b >> p;\n  int tow = n * p;\n  int left = 0;\n  while (n > 1) {\n    int k = pow_2(n);\n    left = n - k;\n    ans += b * k + k / 2;\n    n = k / 2 + left;\n  }\n  cout << ans << ' ' << tow << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  let participants, bottles, towels be integers\n  let total_b , total_t , matches be integers with total_b = 0, total_t = 0\n  read participants, bottles, towels\n  the value of total_t = participants * towels\n  while participants is not equal to 1\n    the value of matches = participants / 2\n    if participants modulo 2 is equal to 1\n      total_b is equal to total_b + (participants - 1) * bottles + matches\n      the value of participants = participants / 2 + 1\n    else do the following\n      total_b is equal to total_b + participants * bottles + matches\n      the value of participants = participants / 2\n    \n  \n  print total_b and space and total_t and newline\n  \n\n",
        "int main() {\n  int participants, bottles, towels;\n  int total_b = 0, total_t = 0, matches;\n  cin >> participants >> bottles >> towels;\n  total_t = participants * towels;\n  while (participants != 1) {\n    matches = participants / 2;\n    if (participants % 2 == 1) {\n      total_b += (participants - 1) * bottles + matches;\n      participants = participants / 2 + 1;\n    } else {\n      total_b += participants * bottles + matches;\n      participants = participants / 2;\n    }\n  }\n  cout << total_b << \" \" << total_t << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, b, p = int\n  read n then b then p\n  print (n - 1) * (b * 2 + 1) and p * n\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  cout << (n - 1) * (b * 2 + 1) << \" \" << p * n << '\\n';\n  return 0;\n}\n"
    ],
    [
        "N, B, P = int\nqplays = int\nqplayers = int\nqoutplayers = int\ntplays = int\ntplayers = int\nin function calc taking int n\n  k = int with k = 1\n  loop while k < n set k to k bithsift left by 1\n  if k > n set k to k bitshift right by 1\n  set qplays to k - 1\n  set qoutplayers to n - k\n  set qplayers to 0\n  loop while k >= 1\n    increment qplayers by k\n    set k to k bitshift right by 1\n  \n  decrement qplayers\n\n\n  read N then B then P\n  set tplays to 0\n  set tplayers to 0\n  set qoutplayers to 0\n  n = int with n = N\n  do\n    call calc of n\n    increment tplayers by qplayers\n    increment tplays by qplays\n    set n to 1 + qoutplayers\n  while qoutplayers > 0\n  print ((tplayers * B) + tplays) and N * P\n  \n\n",
        "int N, B, P;\nint qplays;\nint qplayers;\nint qoutplayers;\nint tplays;\nint tplayers;\nvoid calc(int n) {\n  int k = 1;\n  while (k < n) k <<= 1;\n  if (k > n) k >>= 1;\n  qplays = k - 1;\n  qoutplayers = n - k;\n  qplayers = 0;\n  while (k >= 1) {\n    qplayers += k;\n    k >>= 1;\n  }\n  --qplayers;\n}\nint main() {\n  cin >> N >> B >> P;\n  tplays = 0;\n  tplayers = 0;\n  qoutplayers = 0;\n  int n = N;\n  do {\n    calc(n);\n    tplayers += qplayers;\n    tplays += qplays;\n    n = 1 + qoutplayers;\n  } while (qoutplayers > 0);\n  cout << ((tplayers * B) + tplays) << \" \" << (N * P) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "n, b, p, x, ans = long long\nl = bool with l = true\n\n  read n, b, p\n  x = n\n  while n > 1\n    ans = ans + (n / 2) * (b * 2 + 1)\n    n = ceil(n / 2.0)\n  \n  print ans,\" \",x * p\n  \n\n",
        "long long n, b, p, x, ans;\nbool l = true;\nint main() {\n  cin >> n >> b >> p;\n  x = n;\n  while (n > 1) {\n    ans += (n / 2) * (b * 2 + 1);\n    n = ceil(n / 2.0);\n  }\n  cout << ans << \" \" << x * p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m, p\n  get n, m, p\n  create integer ans with ans=0\n  create integer c with c=n\n  while n not equal to 1 do the following\n    add n/2 to ans\n    subtract n/2 from n\n  \n  compute and print two expressions ans*(m*2+1) and c*p with a blank space between\n\n",
        "int main() {\n  int n, m, p;\n  cin >> n >> m >> p;\n  int ans = 0;\n  int c = n;\n  while (n != 1) {\n    ans += n / 2;\n    n -= n / 2;\n  }\n  cout << ans * (m * 2 + 1) << \" \" << c * p << endl;\n}\n"
    ],
    [
        "p2 = int array with the values 1, 2, 4, 8, 16, 32, 64, 128, 256\n\n  n, b, p, k, m = int\n  bn = int with bn = 0\n  read n then b then p\n  set m to n\n  loop while m is greater than 1\n    for k = 8 to 0 inclusive decrementing k\n      if p2[k] is less or equal to m\n        increment bn by p2[k] / 2 + p2[k] * b\n        break\n      \n    \n    set m to p2[k] / 2 + (m - p2[k])\n  \n  print bn and n * p\n  \n\n",
        "int p2[] = {1, 2, 4, 8, 16, 32, 64, 128, 256};\nint main() {\n  int n, b, p, k, m;\n  int bn = 0;\n  cin >> n >> b >> p;\n  m = n;\n  while (m > 1) {\n    for (k = 8; k >= 0; k--) {\n      if (p2[k] <= m) {\n        bn += p2[k] / 2 + p2[k] * b;\n        break;\n      }\n    }\n    m = p2[k] / 2 + (m - p2[k]);\n  }\n  cout << bn << \" \" << n * p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, p = int\n  str = string array of size 45\n  sum, now = long long\n  read n then p\n  set sum and now to 0\n  for i = n - 1 to 0 inclusive decrementing i read str[i]\n  for i = 0 to n - 1 inclusive\n    if str[i] is \"half\"\n      increment sum by now * p\n      set now to now * 2\n    else\n      increment sum by now * p + p / 2\n      set now to now * 2 + 1\n    \n  \n  print sum\n  \n\n",
        "int main() {\n  int n, p;\n  string str[45];\n  long long sum, now;\n  cin >> n >> p;\n  sum = 0, now = 0;\n  for (int i = n - 1; i >= 0; i--) cin >> str[i];\n  for (int i = 0; i <= n - 1; i++) {\n    if (str[i] == \"half\") {\n      sum += now * p;\n      now = now * 2;\n    } else {\n      sum += now * p + p / 2;\n      now = now * 2 + 1;\n    }\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, p\n  read n read p\n  create string array str with size n\n  create long long i\n  create long longs ans, fans with fans = 0\n  for i = 0 to n exclusive, read str[i]\n  reverse sort elements from str to str + n\n  if str[0] is \"half\"\n    set ans to 2\n  else\n    set ans to 1\n  increment fans by ans * p / 2\n  for i = 1 to n exclusive\n    if str[i] is \"half\"\n      set ans to ans * 2\n    else\n      set ans to ans * 2 + 1\n    increment fans by ans * p / 2\n  \n  print fans print newline\n\n",
        "int main() {\n  long long n, p;\n  cin >> n >> p;\n  string str[n];\n  long long i;\n  long long ans, fans = 0;\n  for (i = 0; i < n; i++) cin >> str[i];\n  reverse(str, str + n);\n  if (str[0] == \"half\")\n    ans = 2;\n  else\n    ans = 1;\n  fans += ans * p / 2;\n  for (i = 1; i < n; i++) {\n    if (str[i] == \"half\")\n      ans *= 2;\n    else\n      ans = ans * 2 + 1;\n    fans += ans * p / 2;\n  }\n  cout << fans << endl;\n}\n"
    ],
    [
        "declare solve\n  create ints n and p\n  read n and p\n  let long double ans = 0\n  let int cnt = 0\n  create string vector v\n  for i = 0 to n exclusive\n    let string s\n    read s\n    append s to vector v\n  \n  reverse order of contents of vector v\n  for i = 0 to n exclusive\n    if v[i] is equal to \"halfplus\"\n      set ans to ans + 0.5\n      set ans to ans * 2\n      increment cnt\n    otherwise do:\n      set ans to ans * 2\n    \n  \n  print the result of (long long)(ans)*p - cnt * (p / 2)\n\n\n  call solve()\n  \n\n",
        "void solve() {\n  int n, p;\n  cin >> n >> p;\n  long double ans = 0;\n  int cnt = 0;\n  vector<string> v;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    v.push_back(s);\n  }\n  reverse(v.begin(), v.end());\n  for (int i = 0; i < n; i++) {\n    if (v[i] == \"halfplus\") {\n      ans += 0.5;\n      ans *= 2;\n      cnt++;\n    } else {\n      ans *= 2;\n    }\n  }\n  cout << (long long)(ans)*p - cnt * (p / 2) << endl;\n}\nint main() {\n  solve();\n  return 0;\n}\n"
    ],
    [
        "\n  str = string array of size 41\n  n, p, i, flag = int with flag = 0\n  a = long long with a = 0\n  read n then p\n  for i = 1 to n inclusive read str[i]\n  if str[i - 1] is \"halfplus\"\n    increment a by p / 2\n    increment flag\n  \n  for j = i - 2 to 0 decrementing j\n    if str[j] is \"halfplus\"\n      set a to a + (a + flag * p / 2 + p / 2)\n      increment flag\n    \n    if str[j] is \"half\" increment a by a + flag * p / 2\n  \n  print a\n\n",
        "int main() {\n  string str[41];\n  int n, p, i, flag = 0;\n  long long a = 0;\n  cin >> n >> p;\n  for (i = 1; i <= n; i++) { cin >> str[i]; }\n  if (str[i - 1] == \"halfplus\") {\n    a += p / 2;\n    flag++;\n  }\n  for (int j = i - 2; j > 0; j--) {\n    if (str[j] == \"halfplus\") {\n      a = a + (a + flag * p / 2 + p / 2);\n      flag++;\n    }\n    if (str[j] == \"half\") { a = a + (a + flag * p / 2); }\n  }\n  cout << a << endl;\n}\n"
    ],
    [
        "op = array of strings 444\n\n  let n, p be long integers\n  read n and p\n  the value of p = p / 2\n  for i = 1 to n inclusive, read op[i]\n  let ans, send be long integers with ans = 0, send = 0\n  for i is equal to n , i >= 1, decrement i by 1\n    send = send * 2\n    if op[i] is equal to halfplus , increment send by 1\n    increment ans by send\n  \n  print ans * p and newline\n  \n\n",
        "string op[444];\nint main() {\n  long long n, p;\n  cin >> n >> p;\n  p /= 2;\n  for (int i = 1; i <= n; i++) { cin >> op[i]; }\n  long long ans = 0, send = 0;\n  for (int i = n; i >= 1; i--) {\n    send *= 2;\n    if (op[i] == \"halfplus\") { send++; }\n    ans += send;\n  }\n  cout << ans * p << endl;\n  return 0;\n}\n"
    ],
    [
        "in the function GCD that takes integer a, b\n  if a < b, swap a and b\n  a = a modulo b\n  if a is 0\n    return b\n  else\n    return GCD of a and b\n\nINF = const integer with INF = 1000000000\nINF64 = const long long with INF64 = 1e18;\nN = const integer with N = 2020\nM = const integer with M = 2000\nMOD = const integer with MOD = 1000000007\n\n  n, p = long long\n  read n, p\n  a = vector of integer with a = n\n  for i = 0 to cast to int(n)\n    s = string\n    read s\n    if s is half\n      a[i] = 0\n    else\n      a[i] = 1\n  \n  k = long long with k = 0\n  half = long long with half = 0\n  for i = n - 1 down to 0\n    k = k * 2 + a[i]\n    half = half + a[i]\n  \n  res = long long with res = k * p - half * (p / 2)\n  print res\n\n",
        "int GCD(int a, int b) {\n  if (a < b) swap(a, b);\n  a %= b;\n  if (a == 0)\n    return b;\n  else\n    return GCD(a, b);\n}\nconst int INF = 1000000000;\nconst long long INF64 = 1e18;\nconst int N = 2020;\nconst int M = 2000;\nconst int MOD = 1000000007;\nint main() {\n  long long n, p;\n  cin >> n >> p;\n  vector<int> a(n);\n  for (int i = 0; i < int(n); i++) {\n    string s;\n    cin >> s;\n    if (s == \"half\")\n      a[i] = 0;\n    else\n      a[i] = 1;\n  }\n  long long k = 0;\n  long long half = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    k = k * 2 + a[i];\n    half += a[i];\n  }\n  long long res = k * p - half * (p / 2);\n  cout << res << endl;\n}\n"
    ],
    [
        "set maxn to 5005\nassign 0x3f3f3f3f to inf\n\n  create int a and b\n  read a, b\n  create string s of size 50\n  for i=1 to a inclusive, read s[i]\n  set ans to b/2 and num to 1\n  for i=a-1 to 1 inclusive\n    if s[i] = halfplus\n      set ans to ans + (num + 0.5) * b\n      assign num*2 + 1 to num\n    else\n      set ans to ans + bum*b\n      num= num*2\n    \n  \n  print ans\n  \n\n",
        "const int maxn = 5005;\nconst int inf = 0x3f3f3f3f;\nint main() {\n  int a, b;\n  cin >> a >> b;\n  string s[50];\n  for (int i = 1; i <= a; i++) { cin >> s[i]; }\n  long long ans = b / 2, num = 1;\n  for (int i = a - 1; i >= 1; i--) {\n    if (s[i] == \"halfplus\") {\n      ans += (num + 0.5) * b;\n      num = num * 2 + 1;\n    } else {\n      ans += num * b;\n      num *= 2;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create string array s with size 2525\n\n  create long longs n, p, m, l, with m = 0, l = 0\n  read n read p\n  for i = 1 to n inclusive, read s[i]\n  for i = n to 1 inclusive, decrementing i\n    set m to m * 2\n    if s[i] is \"halfplus\" increment m\n    increment l by m\n  \n  print l * p / 2 print newline\n  \n\n",
        "string s[2525];\nint main() {\n  long long n, p, m = 0, l = 0;\n  cin >> n >> p;\n  for (int i = 1; i <= n; i++) cin >> s[i];\n  for (int i = n; i >= 1; i--) {\n    m *= 2;\n    if (s[i] == \"halfplus\") m++;\n    l += m;\n  }\n  cout << l * p / 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers n, p and halfs where halfs = 0\n  create long long current = 0\n  read n and p from the user input\n  create new stack of strings s\n  create string variable temp\n  for i from 0 to n exclusive\n    read standard input to temp\n    push temp to the stack s\n    if temp is equal to \"halfplus\", increment halfs\n  \n  if top element of s is equal to \"halfplus\"\n    assign 1 to current\n    remove top element from s\n  \n  loop while s is not empty\n    change the value of current to current multiplied by 2\n    if value of the top element of s is \"halfplus\", increment current by one\n    remove top element from s\n  \n  change current to current * p - (0.5 * p * halfs)\n  print current\n  \n\n",
        "int main() {\n  int n, p, halfs = 0;\n  long long current = 0;\n  cin >> n >> p;\n  stack<string> s;\n  string temp;\n  for (int i = 0; i < n; i++) {\n    cin >> temp;\n    s.push(temp);\n    if (temp == \"halfplus\") halfs++;\n  }\n  if (s.top() == \"halfplus\") {\n    current = 1;\n    s.pop();\n  }\n  while (!s.empty()) {\n    current *= 2;\n    if (s.top() == \"halfplus\") current++;\n    s.pop();\n  }\n  current = current * p - (0.5 * p * halfs);\n  cout << current << endl;\n  return 0;\n}\n"
    ],
    [
        "let ret an array of long longs of length 50\n\n  let n, p ints\n  read n and p\n  let ans, temp be long longs with ans = 1, tmp = 0\n  for i = 0 to n exclusive\n    let s a string\n    read s\n    if s is half\n      set ret[i] to 1\n    otherwise\n      set ret[i] to 2 and increment tmp\n  \n  for i = n-2 down to 0 inclusive\n    if ret[i] is 1\n      multiply ans by 2\n    otherwise\n      set ans to ans * 2 + 1\n  \n  set ans to ans * p - tmp * (p / 2)\n  print ans\n  \n\n",
        "long long ret[50];\nint main() {\n  int n, p;\n  cin >> n >> p;\n  long long ans = 1, tmp = 0;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s == \"half\")\n      ret[i] = 1;\n    else\n      ret[i] = 2, tmp++;\n  }\n  for (int i = n - 2; i >= 0; i--) {\n    if (ret[i] == 1)\n      ans = ans * 2;\n    else\n      ans = ans * 2 + 1;\n  }\n  ans = ans * p - tmp * (p / 2);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long ints n, p, count = 0, and y = 0\n  let string x\n  read n and p\n  make string vector a\n  for i = 0 to n exclusive\n    read x\n    append x to vector a\n  \n  for i = n - 1 to 0\n    if a[i] is equal to \"halfplus\"\n      set count to count * 2 + 1\n      increment y\n    \n    if a[i] is equal to \"half\", set count to 2 * count\n  \n  let long long int ans = p * count - (p * y) / 2\n  print ans\n  \n\n",
        "int main() {\n  long long n, p, count = 0, y = 0;\n  string x;\n  cin >> n >> p;\n  vector<string> a;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    a.push_back(x);\n  }\n  for (int i = n - 1; i >= 0; i--) {\n    if (a[i] == \"halfplus\") {\n      count = count * 2 + 1;\n      y++;\n    }\n    if (a[i] == \"half\") { count = 2 * count; }\n  }\n  long long ans = p * count - (p * y) / 2;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long longs p, he and shu\ndeclare integer n\ndeclare an array of strings s with 50 elements\n\n  read input to n and p\n  divide p by 2\n  for i = 1 to n inclusive, read s[i]\n  for integer i = n to 1 inclusive counting down\n    set shu to shu * 2\n    if s[i] != \"half\", increase shu by 1\n    add shu to he\n  \n  print he * p\n  \n\n",
        "long long p, he, shu;\nint n;\nstring s[50];\nint main() {\n  cin >> n >> p;\n  p /= 2;\n  for (int i = 1; i <= n; i++) cin >> s[i];\n  for (int i = n; i >= 1; i--) {\n    shu = shu * 2;\n    if (s[i] != \"half\") shu += 1;\n    he += shu;\n  }\n  cout << he * p << endl;\n  return 0;\n}\n"
    ],
    [
        "set N to 1e6 + 5, MAX to 3e7 and MOD = 1e9 + 7\ncreate int n and p\ncreate string a[N]\nlet ans be ans ans\n\n  read n and p\n  for i=0 to n exclusive, read a[i]\n  curr = 0\n  for i= n-1 to 0 inclusive\n    if a[i] = half\n      set ans to ans + curr*p\n      assign curr*2 to curr\n    else\n      assign ans + curr * p to ans\n      set ans to ans + p/2\n      set curr= curr*2\n      increment curr\n    \n  \n  print ans and a newline\n\n",
        "const int N = 1e6 + 5, MAX = 3e7, MOD = 1e9 + 7;\nint n, p;\nstring a[N];\nlong long ans;\nint main() {\n  cin >> n >> p;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  long long curr = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    if (a[i] == \"half\") {\n      ans += curr * p;\n      curr *= 2;\n    } else {\n      ans += curr * p;\n      ans += p / 2;\n      curr *= 2;\n      curr++;\n    }\n  }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "\n  let n and p be long long integers\n  read n and p\n  let cost be a long long in with value 0\n  arr with n elements = string\n  read i long long elements into arr from 0 to n exclusive\n  let num = long long int with value 0\n  for i from n - 1 to 0 inclusive decreasing\n    if arr at element i equals halfplus\n      num equals num times 2 plus 1\n    else\n      num equals itself times 2\n  \n  for i from 0 to n exclusive\n    if arr at i equals halfplus\n      cost equals cost plus (num / 2) * p + (p / 2)\n      num equals num minus half of num minus 1\n    else\n      cost equals cost plus (num / 2) * p\n      num equals num minus half of num\n    \n  \n  print cost\n\n",
        "int main() {\n  long long int n, p;\n  cin >> n >> p;\n  long long int cost = 0;\n  string arr[n];\n  for (long long int i = 0; i < n; i++) { cin >> arr[i]; }\n  long long int num = 0;\n  for (long long int i = n - 1; i >= 0; i--) {\n    if (arr[i] == \"halfplus\")\n      num = (num * 2) + 1;\n    else\n      num = (num * 2);\n  }\n  for (long long int i = 0; i < n; i++) {\n    if (arr[i] == \"halfplus\") {\n      cost += (num / 2) * p + (p / 2);\n      num = num - (num / 2) - 1;\n    } else {\n      cost += (num / 2) * p;\n      num = num - (num / 2);\n    }\n  }\n  cout << cost << endl;\n}\n"
    ],
    [
        "create constant long long mod with mod = 1e9 + 7\ncreate constant double esp with esp = 1e-5\n\n  create long longs n, p\n  create string array a with size 50\n  while read n read p is true\n    for i = 1 to n inclusive, read a[i]\n    create long longs num, t, with num = 1, t = 1\n    for i = n - 1 to 1 inclusive, decrementing i\n      if a[i] is \"halfplus\"\n        set num to ( num + 0.5 ) * 2\n        increment t\n      else\n        set num to num * 2\n      \n    \n    create long long ans with ans = 0\n    set ans to num * p - t * (p / 2)\n    print ans print newline\n  \n\n",
        "const long long mod = 1e9 + 7;\nconst double esp = 1e-5;\nint main() {\n  long long n, p;\n  string a[50];\n  while (cin >> n >> p) {\n    for (long long i = 1; i <= n; i++) cin >> a[i];\n    long long num = 1, t = 1;\n    for (int i = n - 1; i >= 1; i--) {\n      if (a[i] == \"halfplus\") {\n        num = (num + 0.5) * 2;\n        t++;\n      } else {\n        num = num * 2;\n      }\n    }\n    long long ans = 0;\n    ans = num * p - t * (p / 2);\n    cout << ans << endl;\n  }\n}\n"
    ],
    [
        "create string array s with size 41\ncreate long longs n, p, sum\ncreate double curr\n\n  read n read p\n  for i = 0 to n exclusive, read s[i]\n  for i = n - 1 to 0 inclusive, decrementing i\n    if s[i] is \"halfplus\", increment curr by 0.5\n    increment sum by curr * p\n    set curr to curr * 2\n  \n  print sum print newline\n  \n\n",
        "string s[41];\nlong long n, p, sum;\ndouble curr;\nint main() {\n  cin >> n >> p;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  for (int i = n - 1; i >= 0; i--) {\n    if (s[i] == \"halfplus\") curr += 0.5;\n    sum += curr * p;\n    curr *= 2;\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "declare constant int N = 1e6\ncreate integer array aa with size N + 2\n\n  declare integers n and p\n  read n and p\n  for i from 1 to n inclusive\n    declare string s\n    read input to s\n    if s is equal to \"half\"\n      set aa[i] to 0\n    else\n      set aa[i] to 1\n  \n  declare long longs app and ans where ans = 0\n  for integer i = n to 1 inclusive decrementing i\n    if i = n\n      set app to 1\n    else\n      set app to app * 2 + aa[i]\n    add ((app / 2) * 1LL) * p to ans\n    if app is odd, increase ans by p / 2\n  \n  print ans\n  \n\n",
        "const int N = 1e6;\nint aa[N + 2];\nint main() {\n  int n, p;\n  cin >> n >> p;\n  for (int i = 1; i <= n; i++) {\n    string s;\n    cin >> s;\n    if (s == \"half\")\n      aa[i] = 0;\n    else\n      aa[i] = 1;\n  }\n  long long app, ans = 0;\n  for (int i = n; i >= 1; i--) {\n    if (i == n)\n      app = 1;\n    else\n      app = app * 2 + aa[i];\n    ans += ((app / 2) * 1LL) * p;\n    if (app % 2) ans += (p / 2);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints n and p\n  read n\n  read p\n  create long double apples = 0\n  let long long answer = 0\n  create string vector data\n  for i = 0 to n exclusive\n    create string temp\n    read temp\n    append temp to data\n  \n  for i = n - 1 to 0\n    if data[i] is equal to \"halfplus\"\n      set apples to apples + 0.5\n      set apples to apples * 2\n      set answer to answer + (apples / 2.0) * p\n    else\n      set apples to apples * 2\n      set answer to answer + (apples / 2.0) * p\n    \n  \n  print answer\n  read n\n\n",
        "int main() {\n  int n, p;\n  cin >> n;\n  cin >> p;\n  long double apples = 0;\n  long long answer = 0;\n  vector<string> data;\n  for (int i = 0; i < n; i++) {\n    string temp;\n    cin >> temp;\n    data.push_back(temp);\n  }\n  for (int i = n - 1; i >= 0; i--) {\n    if (data[i] == \"halfplus\") {\n      apples += 0.5;\n      apples *= 2;\n      answer += (apples / 2.0) * p;\n    } else {\n      apples *= 2;\n      answer += (apples / 2.0) * p;\n    }\n  }\n  cout << answer << endl;\n  cin >> n;\n}\n"
    ],
    [
        "declare string array op size 444\n\n  declare long longs n, p\n  read n, p\n  let p be p / 2\n  for i = 1 to n inclusive, read op[i]\n  declare long longs ans = 0, send = 0\n  for i = n to 1 inclusive, decrementing i\n    let send be send * 2\n    if op[i] is \"halfplus\", increment send\n    increment ans by send\n  \n  print ans * p, newline\n  \n\n",
        "string op[444];\nint main() {\n  long long n, p;\n  cin >> n >> p;\n  p /= 2;\n  for (int i = 1; i <= n; i++) { cin >> op[i]; }\n  long long ans = 0, send = 0;\n  for (int i = n; i >= 1; i--) {\n    send *= 2;\n    if (op[i] == \"halfplus\") { send++; }\n    ans += send;\n  }\n  cout << ans * p << endl;\n  return 0;\n}\n"
    ],
    [
        "create long longs n, p, k with k = 0\n\n  read n read p\n  create boolean vector a initialized with n\n  for i = 0 to n exclusive\n    create string t\n    read t\n    set a[i] to length of t is greater than 4\n    increment k by a[i]\n  \n  create double ans with ans = 0\n  create long long sum with sum = 0\n  reverse sort elements from beginning of a to end of a\n  for i = 0 to n exclusive\n    if a[i] is true\n      set ans to ans * 2 + 0.5\n      increment sum by ans * p\n    else\n      set ans to ans * 2\n      increment sum by ans * p\n    \n  \n  print sum print newline\n  \n\n",
        "long long n, p, k = 0;\nint main() {\n  cin >> n >> p;\n  vector<bool> a(n);\n  for (int i = 0; i < n; ++i) {\n    string t;\n    cin >> t;\n    a[i] = t.length() > 4;\n    k += a[i];\n  }\n  double ans = 0;\n  long long sum = 0;\n  reverse(a.begin(), a.end());\n  for (int i = 0; i < n; ++i) {\n    if (a[i]) {\n      ans = ans * 2 + 0.5;\n      sum += ans * p;\n    } else {\n      ans *= 2;\n      sum += ans * p;\n    }\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "N=int\nP=long long\nS=array of 2000010 string\n\n  read N,P\n  for i=1 to N inclusive read S[i]\n  fans=0\n  for i=N down to 1 inclusive\n    if S[i] is \"halfplus\"\n      add 0.5 to fans\n      multiply fans by 2\n    else\n      multiply fans by 2\n    \n  \n  cost=0\n  for i=1 to N inclusive\n    add (fans/2)*P to cost\n    if S[i] is \"half\"\n      divide fans by 2\n    else\n      divide fans by 2\n      subtract 0.5 from fans\n    \n  \n  print cost with 0 decimal digits\n  \n\n",
        "int N;\nlong long P;\nstring S[2000010];\nint main() {\n  cin >> N >> P;\n  for (int i = 1; i <= N; i++) { cin >> S[i]; }\n  long double fans = 0;\n  for (int i = N; i >= 1; i--) {\n    if (S[i] == \"halfplus\") {\n      fans += 0.5;\n      fans *= 2.00000000;\n    } else {\n      fans *= 2.00000000;\n    }\n  }\n  long double cost = 0;\n  for (int i = 1; i <= N; i++) {\n    cost += (fans / 2.00000) * (P);\n    if (S[i] == \"half\") {\n      fans /= 2.000;\n    } else {\n      fans /= 2.000;\n      fans -= 0.500;\n    }\n  }\n  cout << fixed << setprecision(0) << cost << endl;\n  return 0;\n}\n"
    ],
    [
        "c array of size 500005],s,bit array size of 100, origin array size of 100 = long long integers\n\n  integers = n\n  read n\n  for i = 0 to less than n do the following\n    ong a,b = long long integers\n    read a,b\n    set s ^= a, c[i] to a ^ b\n  \n  set integer cnt to 0\n  for i = 0 to less than n do the following\n    for j = 0 to less than cnt do the following\n      if c[i] & bit[j] is true\n    set if (c[i]) is true then origin[cnt] equals c[i], bit[cnt] equals c[i] and -c[i], and add 1 to cnt\n  \n  for j = 0 to less than cnt do the following\n    if s & bit[j] is true\n  if s is true\n    output 1/1\n  else\n    output (1ll,cnt) - 1,/,(1ll << cnt)\n  \n\n",
        "long long c[500005], s, bit[100], origin[100];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    long long a, b;\n    cin >> a >> b;\n    s ^= a, c[i] = a ^ b;\n  }\n  int cnt = 0;\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < cnt; ++j)\n      if (c[i] & bit[j]) c[i] ^= origin[j];\n    if (c[i]) origin[cnt] = c[i], bit[cnt] = c[i] & -c[i], ++cnt;\n  }\n  for (int j = 0; j < cnt; ++j)\n    if (s & bit[j]) s ^= origin[j];\n  if (s)\n    cout << \"1/1\" << endl;\n  else\n    cout << (1ll << cnt) - 1 << '/' << (1ll << cnt) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  create vector of integers T with 1001 element filled with 1\n  create vector of chararcters rla\n  read n\n  for i = 0 to n - 1 exclusive\n    create character c\n    read c\n    push c to rla\n  \n  for integer i = 0 to n - 1 exclusive\n    if rla[i] is 'R'\n      T[i + 1] = max(T[i + 1], T[i] + 1)\n    else if rla[i] is '='\n      T[i + 1] = T[i]\n    \n  \n  for i = n - 2 to 0\n    if rla[i] is 'L'\n      assign value of max of T[i] and T[i + 1] + 1 to T[i]\n    else if rla[i] is '='\n      set T[i] to T[i + 1]\n    \n  \n  for i = 0 to n exclusive print T[i], \" \\n\" and [i == n - 1]\n  print flush\n  \n\n",
        "int main() {\n  int n;\n  vector<int> T(1001, 1);\n  vector<char> rla;\n  cin >> n;\n  for (int i = 0; i < n - 1; i++) {\n    char c;\n    cin >> c;\n    rla.push_back(c);\n  }\n  for (int i = 0; i < n - 1; i++) {\n    if (rla[i] == 'R') {\n      T[i + 1] = max(T[i + 1], T[i] + 1);\n    } else if (rla[i] == '=') {\n      T[i + 1] = T[i];\n    }\n  }\n  for (int i = n - 2; i >= 0; i--) {\n    if (rla[i] == 'L') {\n      T[i] = max(T[i], T[i + 1] + 1);\n    } else if (rla[i] == '=') {\n      T[i] = T[i + 1];\n    }\n  }\n  for (int i = 0; i < n; i++) { cout << T[i] << \" \\n\"[i == n - 1]; }\n  cout << flush;\n  return 0;\n}\n"
    ],
    [
        "vector_in is a int vector function with int argument n\n  create vector of integers v with n elements\n  loop i from 0 to n exclusive, reading v[i]\n  return v\n\nfunction vector_out with vector of ints argument v\n  for i from 0 to length of v exclusive, print v[i] and \" \"\n  print new line\n\nfunction vector_sum with vector of ints argument v that returns integer\n  create integer sum\n  for i = 0 to length of v exclusive, increase sum by v[i]\n  return sum\n\n\n  declare int n\n  create vector of integers T with 1001 element filled with 1\n  create characters vector rla\n  read input to n\n  loop i from 0 to n - 1 exclusive\n    declare character variable c\n    read c\n    push c into rla\n  \n  for i from 0 to n-1 exclusive\n    if rla[i] = 'R'\n      set T[i + 1] to max of T[i + 1] and T[i] + 1\n    else if rla[i] is '='\n      change T[i + 1] to T[i]\n    \n  \n  for integer i = n - 2 to 0 inclusive counting down\n    if rla[i] is equal to 'L'\n      assign max of T[i] and T[i + 1] + 1 to T[i]\n    else if rla[i] is '='\n      set T[i] to T[i + 1]\n    \n  \n  for i from 0 to n exclusive, print T[i] and \" \\n\"[i=n - 1]\n  print flush\n  \n\n",
        "vector<int> vector_in(int n) {\n  vector<int> v(n);\n  for (int i = 0; i < n; i++) cin >> v[i];\n  return v;\n}\nvoid vector_out(vector<int> v) {\n  for (int i = 0; i < v.size(); i++) cout << v[i] << \" \";\n  cout << endl;\n}\nint vector_sum(vector<int> v) {\n  int sum;\n  for (int i = 0; i < v.size(); i++) sum += v[i];\n  return sum;\n}\nint main() {\n  int n;\n  vector<int> T(1001, 1);\n  vector<char> rla;\n  cin >> n;\n  for (int i = 0; i < n - 1; i++) {\n    char c;\n    cin >> c;\n    rla.push_back(c);\n  }\n  for (int i = 0; i < n - 1; i++) {\n    if (rla[i] == 'R') {\n      T[i + 1] = max(T[i + 1], T[i] + 1);\n    } else if (rla[i] == '=') {\n      T[i + 1] = T[i];\n    }\n  }\n  for (int i = n - 2; i >= 0; i--) {\n    if (rla[i] == 'L') {\n      T[i] = max(T[i], T[i + 1] + 1);\n    } else if (rla[i] == '=') {\n      T[i] = T[i + 1];\n    }\n  }\n  for (int i = 0; i < n; i++) { cout << T[i] << \" \\n\"[i == n - 1]; }\n  cout << flush;\n  return 0;\n}\n"
    ],
    [
        "n = long long integers\nintegers = answer array with size of 2000\n\n  read n\n  set integer small to 1\n  create character variable s\n  read n values into array s\n  make n values of array answer = 1\n  for i = n - 2 to greater than or equal to 0 then do\n    if s[i] is L then do the following\n      set answer[i] to answer[i + 1] + 1\n    else if s[i] is = then do the following\n      set answer[i] to answer[i + 1]\n  \n  for i = 0 to less than n - 1 do the following\n    if s[i] = R and answer[i] is greater than or equal to answer[i + 1] then do the following\n      set answer[i + 1] to answer[i] + 1\n    else if s[i] is = then do the following\n      set answer[i + 1] to answer[i]\n  \n  output n values from array answer\n\n",
        "long long int n;\nint answer[2000];\nint main() {\n  cin >> n;\n  int small = 1;\n  char s[n];\n  for (int i = 0; i < n - 1; i++) cin >> s[i];\n  for (int i = 0; i < n; i++) answer[i] = 1;\n  for (int i = n - 2; i >= 0; i--) {\n    if (s[i] == 'L')\n      answer[i] = answer[i + 1] + 1;\n    else if (s[i] == '=')\n      answer[i] = answer[i + 1];\n  }\n  for (int i = 0; i < n - 1; i++) {\n    if (s[i] == 'R' && answer[i] >= answer[i + 1])\n      answer[i + 1] = answer[i] + 1;\n    else if (s[i] == '=')\n      answer[i + 1] = answer[i];\n  }\n  for (int i = 0; i < n; i++) cout << answer[i] << \" \\n\"[i == n - 1];\n}\n"
    ],
    [
        "mod = const long long with mod = 1000000007\nin function powmod taking two long longs a and b and returning a long long\n  res = long long with res = 1\n  set a to a mod mod\n  call assert on b is greater or equal to 0\n  loop while b is not 0 setting b to b bitwise rightshift 1 each time\n    if b bitwise and 1 is 1 then set re to res * a modulo mod\n    set a to a * a modulo mod\n  \n  return res\n\nin = ifstream of \"txt.in\"\nout = ofstream of \"txt.out\"\n\n  call fixed and setprecision of 12 on cout\n  a, b = long long\n  read a then b\n  n = long long\n  read n\n  mx = double with mx = 2e9\n  for i = 1 to n inclusive\n    x, y, k = long long\n    read x then y then k\n    dis = double with dis = result of sqrt of (x - a) * (x - a) + (y - b) * (y - b) / k\n    mx = min of mx and dis\n  \n  print mx\n  \n\n",
        "long long const mod = 1000000007;\nlong long powmod(long long a, long long b) {\n  long long res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nifstream in(\"txt.in\");\nofstream out(\"txt.out\");\nint main() {\n  cout << fixed << setprecision(12);\n  long long a, b;\n  cin >> a >> b;\n  long long n;\n  cin >> n;\n  double mx = 2e9;\n  for (int i = 1; i <= n; ++i) {\n    long long x, y, k;\n    cin >> x >> y >> k;\n    double dis = sqrt((x - a) * (x - a) + (y - b) * (y - b)) / k;\n    mx = min(mx, dis);\n  }\n  cout << mx << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n and i and an arrays of integers a and b with size 100000\n  read n\n  read n elements into a\n  for i = 0 to n - 1 exclusive, set value of b[i] to a[i] + a[i + 1]\n  set value of b[n - 1] to a[n - 1]\n  for i = 0 to n - 1 exclusive print b[i] and \" \"\n  print b[n - 1]\n  \n\n",
        "int main() {\n  int n, i, a[100000], b[100000];\n  cin >> n;\n  for (i = 0; i < n; i++) { cin >> a[i]; }\n  for (i = 0; i < n - 1; i++) { b[i] = a[i] + a[i + 1]; }\n  b[n - 1] = a[n - 1];\n  for (i = 0; i < n - 1; i++) { cout << b[i] << \" \"; }\n  cout << b[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "declare integers n, z and a\n\n  read n\n  for integer i = 1 to n inclusive\n    read a\n    if i != 1, print a + z and \" \"\n    set z to a\n  \n  print a\n  \n\n",
        "int n, z, a;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a;\n    if (i != 1) { cout << a + z << \" \"; }\n    z = a;\n  }\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  create long long array a with 100050 elements\n  for integer i = 0 to n exclusive, read a[i]\n  for integer i = 1 to n exclusive, print a[i] + a[i - 1] and \" \"\n  print a[n - 1]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long a[100050];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 1; i < n; i++) cout << a[i] + a[i - 1] << \" \";\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integers n, i\n  read n\n  create long long integer array arr of size n\n  for i = 0 to n exclusive, read arr[i]\n  for i = 0 to n exclusive\n    if i is n - 1\n      print arr[n-1] print newline\n    else\n      print arr[i] + arr[i+1] print \" \"\n    \n  \n\n",
        "int main() {\n  long long int n, i;\n  cin >> n;\n  long long int arr[n];\n  for (i = 0; i < n; i++) { cin >> arr[i]; }\n  for (i = 0; i < n; i++) {\n    if (i == n - 1) {\n      cout << arr[n - 1] << endl;\n    } else {\n      cout << arr[i] + arr[i + 1] << \" \";\n    }\n  }\n}\n"
    ],
    [
        "a = int array of size 100005\n\n  n = int\n  while reading n\n    for i = i to n inclusive rad a[i]\n    for i = 1 to n print a[i] + a[i + 1]\n    print a[n]\n  \n\n",
        "int a[100005];\nint main() {\n  int n;\n  while (cin >> n) {\n    for (int i = 1; i <= n; i++) { cin >> a[i]; }\n    for (int i = 1; i < n; i++) { cout << a[i] + a[i + 1] << ' '; }\n    cout << a[n] << endl;\n  }\n}\n"
    ],
    [
        "\n  n =integer\n  x, k = integers with k = 0\n  Read n\n  for i = 0 to n exclusive\n    Read x\n    if i is not equal to 1, then print NO and a new line\n    set k to x\n  \n  print x and a new line\n  \n\n",
        "int main() {\n  int n;\n  int k = 0, x;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> x;\n    if (i != 1) cout << x + k << \" \";\n    k = x;\n  }\n  cout << x << endl;\n  return 0;\n}\n"
    ],
    [
        "x, y = long long arrays of size 100005 each\n\n  a, b = long long\n  read a\n  set x to all 0\n  set y to all 0\n  for b = 0 to a read x[b]\n  for b = 0 to a set y[b] to x[b] + x[b + 1]\n  for b = 0 to a - 1 print y[b] and ' '\n  print y[a - 1]\n  \n\n",
        "long long x[100005], y[100005];\nint main() {\n  long long a, b;\n  cin >> a;\n  memset(x, 0, sizeof(x));\n  memset(y, 0, sizeof(y));\n  for (b = 0; b < a; b++) cin >> x[b];\n  for (b = 0; b < a; b++) y[b] = x[b] + x[b + 1];\n  for (b = 0; b < a - 1; b++) cout << y[b] << ' ';\n  cout << y[a - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  arr = integer array of size n\n  for i = 0 to n exclusive read arr[i]\n  for i = 0 to n-1 exclusive\n    increase arr[i] by arr[i+1]\n    print arr[i] followed by a space\n  \n  print arr[n-1]\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) { cin >> arr[i]; }\n  for (int i = 0; i < n - 1; i++) {\n    arr[i] += arr[i + 1];\n    cout << arr[i] << \" \";\n  }\n  cout << arr[n - 1] << \"\\n\";\n}\n"
    ],
    [
        "\n  create integer n, create integer array arr with size 100010\n  read n\n  for i = 0 to n exclusive, read arr[i1]\n  for i = 1 to n exclusive, print arr[i]+arr[i-1] print \" \"\n  print arr[n-1] print newline\n  \n\n",
        "int main() {\n  int n, arr[100010];\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> arr[i]; }\n  for (int i = 1; i < n; i++) { cout << arr[i] + arr[i - 1] << \" \"; }\n  cout << arr[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n create integer array ara with size 100000\n  read n\n  for i = 0 to n exclusive, read ara[i]\n  for i = 0 to n - 1 exclusive, print ara[i]+ara[i+1] print ' '\n  print ara[n-1] print newline\n\n",
        "int main() {\n  int n, ara[100000];\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> ara[i]; }\n  for (int i = 0; i < n - 1; i++) { cout << ara[i] + ara[i + 1] << ' '; }\n  cout << ara[n - 1] << endl;\n}\n"
    ],
    [
        "\n  create integers n, k1, k2, i\n  read n\n  read k1\n  for i = 1 to n exclusive\n    read k2\n    print k2 + k1 print \" \"\n    set k1 to k2\n  \n  print k1 print newline\n  \n\n",
        "int main() {\n  int n, k1, k2, i;\n  cin >> n;\n  cin >> k1;\n  for (i = 1; i < n; i++) {\n    cin >> k2;\n    cout << k2 + k1 << \" \";\n    k1 = k2;\n  }\n  cout << k1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, r, s i, j and arrays a and b of length 100001\n  read n\n  for i=1 to n inclusive, read a[i]\n  increment j\n  b[j] = a[n]\n  for i=n to 1 exclusive\n    set r = a[i] + a[i - 1]\n    add 1 to j\n    assign r to b[j]\n  \n  for i=j to 0 exclusive\n    print b[i]\n    if i different fro 1, print \" \"\n  \n  print a newline\n  \n\n",
        "int main() {\n  int n, a[100001], r, s, b[100001], i, j = 0;\n  cin >> n;\n  for (i = 1; i <= n; i++) cin >> a[i];\n  j++;\n  b[j] = a[n];\n  for (i = n; i > 1; i--) {\n    r = a[i] + a[i - 1];\n    j++;\n    b[j] = r;\n  }\n  for (i = j; i > 0; i--) {\n    cout << b[i];\n    if (i != 1) cout << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  x, k = integers with k = 0\n  Read n\n  for i = 1 to n exclusive\n    Read x\n    if i is not 1, then print x + k and a new line\n    set k to x\n  \n  print x and a new line\n  \n\n",
        "int main() {\n  int n;\n  int k = 0, x;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> x;\n    if (i != 1) cout << x + k << \" \";\n    k = x;\n  }\n  cout << x << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int number, i, temp, flag, index and result, set index, result to 0\n  create string str\n  read number\n  read str\n  set arr[number] to 0\n  for i=0 to number exclusive\n    assign 0 to flag\n    set temp to 0\n    while str[i] = B\n      increment i\n      assign 1 to flag\n      increment temp\n    \n    if flag = 1\n      decrement i\n      add 1 to result\n      assign temp to arr[index]\n      increment index\n    \n  \n  print result\n  for i=0 to result exclusive\n    if i = result - 1\n      print arr[i]\n      break\n    \n    print arr[i], \" \"\n  \n  \n\n",
        "int main() {\n  int number, i, temp, flag, index = 0, result = 0;\n  string str;\n  cin >> number;\n  cin >> str;\n  int arr[number] = {0};\n  for (i = 0; i < number; i++) {\n    flag = 0;\n    temp = 0;\n    while (str[i] == 'B') {\n      i++;\n      flag = 1;\n      temp++;\n    }\n    if (flag == 1) {\n      i--;\n      result++;\n      arr[index] = temp;\n      index++;\n    }\n  }\n  cout << result << endl;\n  for (i = 0; i < result; i++) {\n    if (i == result - 1) {\n      cout << arr[i] << endl;\n      break;\n    }\n    cout << arr[i] << \" \";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  create string s\n  read n and s\n  declare integer variable cnt = -1 and an array of integers ans with 100 elements filled with 0\n  create character p = 'W'\n  loop i from 0 to n exclusive\n    declare character variable c = s[i]\n    if c = 'B'\n      if p = 'W'\n      increase ans[cnt]\n    \n    set p to c\n  \n  print cnt + 1\n  if cnt + 1 is greater than 0\n    declare boolean first = true\n    loop i from 0 to cnt inclusive\n      if first is true\n        set first to false\n      else\n        print \" \"\n      print ans[i]\n    \n    print new line\n  \n  \n\n",
        "int main() {\n  int n;\n  string s;\n  cin >> n >> s;\n  int cnt = -1, ans[100] = {0};\n  char p = 'W';\n  for (int i = 0; i < n; ++i) {\n    char c = s[i];\n    if (c == 'B') {\n      if (p == 'W') { ++cnt; }\n      ++ans[cnt];\n    }\n    p = c;\n  }\n  cout << cnt + 1 << endl;\n  if (cnt + 1 > 0) {\n    bool first = true;\n    for (int i = 0; i <= cnt; ++i) {\n      if (first)\n        first = false;\n      else\n        cout << \" \";\n      cout << ans[i];\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  a = char array of size 100005\n  b = int array of size 100005\n  loop while reading n\n    set all values of a to 0\n    set all values of b to 0\n    read a\n    j, count = int with j = 1 and count = 0\n    for i = 0 to n\n      if a[i] is 'B'\n        increment b[j]\n      else if a[i] is 'W' and a[i + 1] is 'B'\n        increment j\n    \n    for i = 1 to j inclusive\n      if b[i] is not 0 then increment count\n    print count\n    if count is not 0\n      for i = 1 to j\n        if b[i] is not 0 print b[i] and \" \"\n      print b[j]\n    \n  \n  \n\n",
        "int main() {\n  int n;\n  char a[100005];\n  int b[100005];\n  while (cin >> n) {\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    cin >> a;\n    int j = 1, count = 0;\n    for (int i = 0; i < n; i++) {\n      if (a[i] == 'B')\n        b[j]++;\n      else if (a[i] == 'W' && a[i + 1] == 'B')\n        j++;\n    }\n    for (int i = 1; i <= j; i++)\n      if (b[i] != 0) count++;\n    cout << count << endl;\n    if (count != 0) {\n      for (int i = 1; i < j; i++)\n        if (b[i] != 0) cout << b[i] << \" \";\n      cout << b[j] << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "let a, b be long integers\nans = array of long integers of length 100\nlet flag be a integer with flag = 0\nlet k be a integer\nlet void dfs(long long a, int i) be a dfs function\n  if flag or a greater than b , return the value\n  the value of ans[i] = a\n  if a is equal to b\n    flag is equal to 1\n    k value is assigned to i\n    return\n  \n  depth first search of a * 2, i + 1\n  depth first search of a * 10 + 1, i + 1\n\n\n  read a, b\n  depth first search of a, 0\n  if flag is equal to 0\n    print NO and newline\n  else do the following\n    print YES and newline\n    print k + 1 and newline\n    print ans[0]\n    for i = 1 to k inclusive , print space and ans[i]\n    print newline\n  \n  \n\n",
        "long long a, b;\nlong long ans[100];\nint flag = 0;\nint k;\nvoid dfs(long long a, int i) {\n  if (flag || a > b) { return; }\n  ans[i] = a;\n  if (a == b) {\n    flag = 1;\n    k = i;\n    return;\n  }\n  dfs(a * 2, i + 1);\n  dfs(a * 10 + 1, i + 1);\n}\nint main() {\n  cin >> a >> b;\n  dfs(a, 0);\n  if (flag == 0) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n    cout << k + 1 << endl;\n    cout << ans[0];\n    for (int i = 1; i <= k; i++) { cout << ' ' << ans[i]; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let a, b integers\n\n  read a and b\n  let v be a vector of ints\n  let ok be an int with value 1\n  while b > a\n    append b to v\n    if b & 1 is 0\n      set b to b / 2\n    else if b mod 10 is 1\n      set b to b / 10\n    else\n      set ok to 0\n      break\n    \n  \n  if b is different from a\n    set ok to 0\n  else\n    append a to v\n  if not ok\n    print NO\n  else\n    print YES\n    print the size of v\n    for i = size of v -1 to 0 exclusive, print v[i]\n    print v[0]\n  \n  \n\n",
        "int a, b;\nint main() {\n  cin >> a >> b;\n  vector<int> v;\n  int ok = 1;\n  while (b > a) {\n    v.push_back(b);\n    if ((b & 1) == 0) {\n      b = b / 2;\n    } else if (b % 10 == 1) {\n      b = b / 10;\n    } else {\n      ok = 0;\n      break;\n    }\n  }\n  if (b != a)\n    ok = 0;\n  else\n    v.push_back(a);\n  if (!ok)\n    cout << \"NO\" << endl;\n  else {\n    cout << \"YES\" << endl;\n    cout << v.size() << endl;\n    for (int i = v.size() - 1; i > 0; i--) cout << v[i] << \" \";\n    cout << v[0] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare long long variables a, b and n\ndeclare long long array ans with size 1010\ndeclare boolean flag\nfunction dfs with long long arguments x, y and step\n  change ans[step] to x\n  if flag is true or x > y, return\n  if x = y\n    assign step to n\n    set flag to true\n    return\n  \n  call dfs(x * 2, y, step + 1)\n  if flag is false, call dfs(x * 10 + 1, y, step + 1)\n\n\n  loop, reading a and b from the input\n    change flag to false\n    call dfs(a, b, 1)\n    if flag is true\n      print \"YES\"\n      print n\n      loop i from 1 to n inclusive, print ans[i] and '\\n' if i = n, or ' '\n    else\n      print \"NO\"\n    \n  \n  \n\n",
        "long long a, b, n;\nlong long ans[1010];\nbool flag;\nvoid dfs(long long x, long long y, long long step) {\n  ans[step] = x;\n  if (flag || x > y) return;\n  if (x == y) {\n    n = step;\n    flag = true;\n    return;\n  }\n  dfs(x * 2, y, step + 1);\n  if (!flag) dfs(x * 10 + 1, y, step + 1);\n}\nint main() {\n  while (cin >> a >> b) {\n    flag = false;\n    dfs(a, b, 1);\n    if (flag) {\n      cout << \"YES\" << endl;\n      cout << n << endl;\n      for (int i = 1; i <= n; i++) cout << ans[i] << (i == n ? '\\n' : ' ');\n    } else {\n      cout << \"NO\" << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer stack S\ndeclare funcion with long longs a, b as arguments, returning integer\n  create integer\n  if a is b, return 1 from function\n  if a is less than b\n    set r to result of run funcion with 2 * a, b as arguments\n    if r is 1\n      add element 1 to end of S\n      return 1 from function\n    \n    set r to result of run funcion with (10 * a) + 1, b as arguments\n    if r is 1\n      add element 2 to end of S\n      return 1 from function\n    \n  else\n    \n\n\n  create long longs a, b\n  create integers op, ans\n  read a read b\n  set ans to result of run funcion with a, b as arguments\n  if ans is 0\n    print \"NO\" print '\\n'\n  else\n    print \"YES\" print '\\n'\n    print size of S + 1 print '\\n'\n    print a\n    while S is not empty\n      set op to top of S\n      remove element from top of S\n      if op is 1\n        set a to a * 2\n      else\n        set a to a * 10\n        increment a\n      \n      print \" \" print a\n    \n    print '\\n'\n  \n\n",
        "stack<int> S;\nint funcion(long long a, long long b) {\n  int r;\n  if (a == b) return 1;\n  if (a < b) {\n    r = funcion(2 * a, b);\n    if (r == 1) {\n      S.push(1);\n      return 1;\n    }\n    r = funcion((10 * a) + 1, b);\n    if (r == 1) {\n      S.push(2);\n      return 1;\n    }\n  } else\n    return 0;\n}\nint main() {\n  long long a, b;\n  int op, ans;\n  cin >> a >> b;\n  ans = funcion(a, b);\n  if (ans == 0)\n    cout << \"NO\" << '\\n';\n  else {\n    cout << \"YES\" << '\\n';\n    cout << S.size() + 1 << '\\n';\n    cout << a;\n    while (!S.empty()) {\n      op = S.top();\n      S.pop();\n      if (op == 1) {\n        a *= 2;\n      } else {\n        a *= 10;\n        a++;\n      }\n      cout << \" \" << a;\n    }\n    cout << '\\n';\n  }\n}\n"
    ],
    [
        "ASS = array of integers of length 50\nlet sum be a integer\nlet flag be a boolean value\nlet int digui(int a, int b) accepts integer values\n  if a is less than b\n    set the value of flag to 1\n    \n  \n  if a is equal to b , return 0\n  if a modulo 2 is equal to 0\n    increase sum by 1\n    let ASS[sum - 1] is equal to a / 2\n    return digui of a / 2, b\n  else if a modulo 10 is equal to 1\n    increase sum by 1\n    let ASS[sum - 1] is equal to (a - 1) / 10\n    return digui of (a - 1) / 10, b\n  else do the following\n    set the value of flag to 1\n\n\n  let m , n be integers\n  read m and n\n  digui of n , m\n  if flag is equal to 0\n    print YES and newline and sum + 1 and newline\n    for integer i = sum - 1 , i >= 0, decrease i by 1 , print ASS[i] and space\n    print n and new line\n  else do the following\n    print NO and newline\n  \n\n",
        "int ASS[50];\nint sum;\nbool flag;\nint digui(int a, int b) {\n  if (a < b) {\n    flag = 1;\n    return 0;\n  }\n  if (a == b) return 0;\n  if (a % 2 == 0) {\n    sum++;\n    ASS[sum - 1] = a / 2;\n    return digui(a / 2, b);\n  } else if (a % 10 == 1) {\n    sum++;\n    ASS[sum - 1] = (a - 1) / 10;\n    return digui((a - 1) / 10, b);\n  } else\n    flag = 1;\n}\nint main() {\n  int m, n;\n  cin >> m >> n;\n  digui(n, m);\n  if (flag == 0) {\n    cout << \"YES\" << endl << sum + 1 << endl;\n    for (int i = sum - 1; i >= 0; i--) cout << ASS[i] << \" \";\n    cout << n << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "let k and flag be long ints with flag = 0\ndeclare vector of long long integers ans\nfunction dfs with long long int arguments n and level\n  if n is equal to k, assign 1 to flag\n  if 2 * n <= k and flag = 0, call dfs(2 * n, level + 1)\n  if 10 * n + 1 <= k and flag = 0, call dfs(10 * n + 1, level + 1)\n  if flag = 1, push n to ans\n  return\n\n\n  create long long int n\n  read n and k\n  call dfs(n, 1)\n  if flag is 1\n    print \"YES\"\n    declare int sz = length of ans\n    print sz\n    for i = sz - 1 to 1 inclusive decrementing i, print ans[i] and \" \"\n    if sz >= 1, print ans[0]\n    \n  else\n    print \"NO\"\n  \n  \n\n",
        "long int k, flag = 0;\nvector<long long int> ans;\nvoid dfs(long long int n, long long int level) {\n  if (n == k) { flag = 1; }\n  if (2 * n <= k && flag == 0) { dfs(2 * n, level + 1); }\n  if (10 * n + 1 <= k && flag == 0) { dfs(10 * n + 1, level + 1); }\n  if (flag == 1) { ans.push_back(n); }\n  return;\n}\nint main() {\n  long long int n;\n  cin >> n >> k;\n  dfs(n, 1);\n  if (flag == 1) {\n    cout << \"YES\" << endl;\n    int sz = ans.size();\n    cout << sz << endl;\n    for (long long int i = sz - 1; i >= 1; i--) { cout << ans[i] << \" \"; }\n    if (sz >= 1) cout << ans[0] << endl;\n    return 0;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "N = const integer with N = 1e5 + 50\na, b, cnt = long long\nans = long long array of size N\ni, j, k, t, m, n = integers\nin the function dfs that takes long long st, step\n  if st > b, return\n  ans[step] = st\n  if st is b\n    cnt = step\n    print YES\n    print cnt + 1\n    print ans[0]\n    for i = 1 to cnt exclusive, print \" \",ans[i]\n    print new line\n    return\n  \n  if st * 2 <= b, dfs on st * 2 and step + 1\n  if st * 10 + 1 <= b, dfs on st * 10 + 1 and step + 1\n\n\n  read a and b\n  cnt = 0\n  dfs on a and 0\n  if not cnt, print NO\n  \n\n",
        "const int N = 1e5 + 50;\nlong long a, b, cnt;\nlong long ans[N];\nint i, j, k, t, m, n;\nvoid dfs(long long st, long long step) {\n  if (st > b) return;\n  ans[step] = st;\n  if (st == b) {\n    cnt = step;\n    cout << \"YES\" << '\\n';\n    cout << cnt + 1 << '\\n';\n    cout << ans[0];\n    for (i = 1; i < cnt + 1; i++) cout << \" \" << ans[i];\n    cout << '\\n';\n    return;\n  }\n  if (st * 2 <= b) dfs(st * 2, step + 1);\n  if (st * 10 + 1 <= b) dfs(st * 10 + 1, step + 1);\n}\nint main() {\n  cin >> a >> b;\n  cnt = 0;\n  dfs(a, 0);\n  if (!cnt) cout << \"NO\" << '\\n';\n  return 0;\n}\n"
    ],
    [
        "a, b, jum = long long\nv = long long vector\n\n  read a then b\n  loop while b is greater than 0\n    increment jum\n    append b to v\n    if a is b then break loop\n    if a b is less than a\n      print \"NO\"\n      \n    else if b is even\n      set b to b / 2\n    else if b is uneven\n      decrement b\n      if b is a multiple of 10\n        set b to b / 10\n      else\n        print \"NO\"\n        \n      \n    \n  \n  sort v\n  print \"YES\" and jum\n  for i = 0 to jum\n    print v[i]\n    if i is less than jum - 1\n      print \" \"\n    else\n      print newline\n  \n\n",
        "long long a, b, jum;\nvector<long long> v;\nint main() {\n  cin >> a >> b;\n  while (b >= 1) {\n    jum++;\n    v.push_back(b);\n    if (a == b) { break; }\n    if (b < a) {\n      cout << \"NO\" << endl;\n      return 0;\n    } else if (b % 2 == 0) {\n      b = b / 2;\n    } else if (b % 2 == 1) {\n      b--;\n      if (b % 10 == 0)\n        b = b / 10;\n      else {\n        cout << \"NO\" << endl;\n        return 0;\n      }\n    }\n  }\n  sort(v.begin(), v.end());\n  cout << \"YES\" << endl << jum << endl;\n  for (int i = 0; i < jum; i++) {\n    cout << v[i];\n    if (i < jum - 1)\n      cout << \" \";\n    else\n      cout << endl;\n  }\n}\n"
    ],
    [
        "declare long integer array perm with size 2 * 100000 + 5\n\n  declare long integer variables n, x, cycle, v, k and xo where cycle = 0 and xo = 1\n  read n\n  for integer i = 1 to n inclusive, read perm[i]\n  for i = 0 to n exclusive\n    read x\n    xo ^= x\n  \n  for integer i = 1 to n inclusive\n    continue loop from the start if if perm[i] is false\n    increase cycle\n    assign value of i to v\n    while perm[v] is true\n      assign value of perm[v] to k\n      set perm[v] to 0\n      set v to k\n    \n  \n  if cycle = 1, change cycle to 0\n  print cycle + xo\n  \n\n",
        "long int perm[2 * 100000 + 5];\nint main() {\n  long int n, x, cycle = 0, v, k, xo = 1;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> perm[i];\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    xo ^= x;\n  }\n  for (int i = 1; i <= n; i++) {\n    if (!perm[i]) continue;\n    cycle++;\n    v = i;\n    while (perm[v]) {\n      k = perm[v];\n      perm[v] = 0;\n      v = k;\n    }\n  }\n  if (cycle == 1) cycle = 0;\n  cout << cycle + xo << endl;\n  return 0;\n}\n"
    ],
    [
        "let n be a integer\np = array of integers of length 200100\nb = array of integers of length 200100\nvis = array of integers of length 200200\nlet dfs be a function which accepts integer x value\n  the xth element of array vis is equal to 1\n  if (not vis[ xth element of array p], dfs( xth element of array p)\n\n\n  read n\n  for (i = 1 to n inclusive), read ith element of array p\n  let cnt be a integer with cnt value as 0\n  for (i = 1 to n inclusive)\n    read ith element of array b\n    if (ith element of array b is equal to 1), increase cnt by 1\n  \n  let ans be a integer with ans value is equal to 0\n  if (cnt modulus 2 is equal to 0), increase ans by 1\n  let the value of cnt is equal to 0\n  for (i = 1 to n inclusive)\n    if (not ith element of array vis )\n      increase cnt value by 1\n      dfs of i\n    \n  \n  if (cnt is equal to 1), cnt is equal to 0\n  print ans + cnt and newline\n  \n\n",
        "int n;\nint p[200100];\nint b[200100];\nint vis[200200];\nvoid dfs(int x) {\n  vis[x] = 1;\n  if (!vis[p[x]]) dfs(p[x]);\n}\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> p[i];\n  int cnt = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> b[i];\n    if (b[i] == 1) cnt++;\n  }\n  int ans = 0;\n  if (cnt % 2 == 0) ans++;\n  cnt = 0;\n  for (int i = 1; i <= n; i++) {\n    if (!vis[i]) {\n      cnt++;\n      dfs(i);\n    }\n  }\n  if (cnt == 1) cnt = 0;\n  cout << ans + cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 6e5 + 10\ncreate integer arrays v, A, B with v size N, A size N, B size N\ncreate integer n\ndeclare dfs with integer x as argument\n  if v[x] is true, return from function\n  set v[x] to 1\n  run dfs with A[x] as argument\n\n\n  read n\n  create integer ans with ans = 0\n  for i = 1 to n inclusive, read A[i]\n  for i = 1 to n inclusive, read B[i]\n  for i = 1 to n inclusive\n    if v[i] is 0, run dfs with i as argument, increment ans\n  \n  create integer t with t = 1\n  for i = 1 to n inclusive\n    if B[i] is true, set t to t ^ 1\n  \n  if ans is 1, decrement ans\n  print ans + t print newline\n\n",
        "const int N = 6e5 + 10;\nint v[N], A[N], B[N];\nint n;\nvoid dfs(int x) {\n  if (v[x]) return;\n  v[x] = 1;\n  dfs(A[x]);\n}\nint main() {\n  cin >> n;\n  int ans = 0;\n  for (int i = 1; i <= n; ++i) cin >> A[i];\n  for (int i = 1; i <= n; ++i) cin >> B[i];\n  for (int i = 1; i <= n; ++i) {\n    if (v[i] == 0) dfs(i), ++ans;\n  }\n  int t = 1;\n  for (int i = 1; i <= n; ++i) {\n    if (B[i]) t ^= 1;\n  }\n  if (ans == 1) --ans;\n  cout << ans + t << endl;\n}\n"
    ],
    [
        "declare constant integer N = 2e5 + 5\ncreate integer arrays Prv and vis with N elements\ndfs is a void function with integer argument u\n  if vis[u] is not 0, return\n  set value of vis[u] to true\n  call function dfs with arguments Prv[u]\n\n\n  declare integer variable n\n  read n\n  for integer i = 1 to n inclusive read Prv[i]\n  create integer now = 1\n  for integer i = 1 to n inclusive\n    create integer x\n    read x\n    increase now by x\n  \n  declare integer Res = 0\n  for integer i = 1 to n inclusive\n    if vis[i] is 0\n      call function dfs with argument i\n      increment Res\n    \n  \n  decrement Res if Res = 1\n  print Res + (now % 2) and \"\\n\"\n  \n\n",
        "const int N = 2e5 + 5;\nint Prv[N], vis[N];\nvoid dfs(int u) {\n  if (vis[u]) return;\n  vis[u] = true;\n  dfs(Prv[u]);\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> Prv[i];\n  int now = 1;\n  for (int i = 1; i <= n; i++) {\n    int x;\n    cin >> x;\n    now += x;\n  }\n  int Res = 0;\n  for (int i = 1; i <= n; i++) {\n    if (!vis[i]) {\n      dfs(i);\n      Res++;\n    }\n  }\n  if (Res == 1) Res--;\n  cout << (Res + (now % 2)) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create int i, j and n\n  set int arrays p, b and status of length 200000 to all 0\n  set count and result to 0\n  read n\n  for i=0 to n exclusive\n    read p[i]\n    decrement p[i]\n  \n  for i=0 to n exclusive\n    read b[i]\n    if b[i] = 1, increment count\n  \n  if count is even, increment result\n  count = 0\n  if i=0 to n exclusive\n    if status[i] equal to 0\n      assign 1 to status[i]\n      set t to p[i]\n      while t different from 1\n        status[t] = 1\n        t = p[t]\n      \n      add 1 to count\n    \n  \n  if count greater than 1, set result to result + count\n  print result\n  \n\n",
        "int main() {\n  int i, j, n;\n  int p[200000], b[200000], status[200000] = {0};\n  int count = 0, result = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> p[i];\n    p[i]--;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> b[i];\n    if (b[i] == 1) count++;\n  }\n  if (count % 2 == 0) result++;\n  count = 0;\n  for (i = 0; i < n; i++) {\n    if (status[i] == 0) {\n      status[i] = 1;\n      int t = p[i];\n      while (t != i) {\n        status[t] = 1;\n        t = p[t];\n      }\n      count++;\n    }\n  }\n  if (count > 1) result += count;\n  cout << result << endl;\n  return 0;\n}\n"
    ],
    [
        "n,m,k=static long long\n\n  n=int\n  read n\n  p=vector of n int\n  for i=0 to n exclusive read p[i]\n  res=0\n  for i=0 to n exclusive\n    x=int\n    read x\n    add x to res\n  \n  res = (res+1) modulo 2\n  visited = vector of n bool\n  count=-1\n  for i=0 to n exclusive\n    if visited[i] continue\n    increment count\n    j=i\n    while not visited[j]\n      visited[j] = true\n      j=p[j]-1\n    \n  \n  if count > 0 increment res\n  add count to res\n  print res\n\n",
        "static long long n, m, k;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> p(n);\n  for (int i = 0; i < n; i++) cin >> p[i];\n  int res = 0;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    res += x;\n  }\n  res = (res + 1) % 2;\n  vector<bool> visited(n);\n  int count = -1;\n  for (int i = 0; i < n; i++) {\n    if (visited[i]) continue;\n    count++;\n    int j = i;\n    while (!visited[j]) {\n      visited[j] = true;\n      j = p[j] - 1;\n    }\n  }\n  if (count > 0) res++;\n  res += count;\n  cout << res << endl;\n}\n"
    ],
    [
        "create integer n\ncreate constant integer MAXN with MAXN = 200005\ncreate integer array p with size MAXN\ncreate boolean array vis with size MAXN\ndeclare dfs with integer idx as argument, returning void\n  set vis[idx] to true\n  if not vis[p[idx]], run dfs with p[idx] as argument\n\n\n  read n\n  for i = 1 to n inclusive, read p[i]\n  create integer counter with counter = 0\n  for i = 1 to n inclusive\n    create integer b\n    read b\n    if b is 1, increment counter\n  \n  create integer cycle with cycle = 0\n  for i = 1 to n inclusive\n    if not vis[i]\n      run dfs with i as argument\n      increment cycle\n    \n  if cycle is 1\n    print 1 - counter % 2 print \"\\n\"\n  else\n    print cycle + 1 - counter % 2 print \"\\n\"\n  \n\n",
        "int n;\nconst int MAXN = 200005;\nint p[MAXN];\nbool vis[MAXN];\nvoid dfs(int idx) {\n  vis[idx] = true;\n  if (!vis[p[idx]]) dfs(p[idx]);\n}\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> p[i];\n  int counter = 0;\n  for (int i = 1; i <= n; i++) {\n    int b;\n    cin >> b;\n    if (b == 1) counter++;\n  }\n  int cycle = 0;\n  for (int i = 1; i <= n; i++)\n    if (!vis[i]) {\n      dfs(i);\n      cycle++;\n    }\n  if (cycle == 1)\n    cout << 1 - counter % 2 << \"\\n\";\n  else\n    cout << cycle + 1 - counter % 2 << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create strings s1 and s2\n  read s1 and s2\n  if s1 is equal to s2\n    print \"-1\\n\"\n  else\n    print the max of s1.size() and s2.size()\n  \n  \n\n",
        "int main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  if (s1 == s2) {\n    cout << \"-1\\n\";\n  } else {\n    cout << max(s1.size(), s2.size()) << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "dx = int array with the values 0, 1, 0, -1, 1, 1, -1, -1\ndy = int array with the values 1, 0, -1, 0, 1, -1, 1, -1\ndefine empty function fast\n\n  call fast\n  s, t = string\n  read s then t\n  print -1 if s is t else print max of size of s and size of t\n\n",
        "int dx[] = {0, 1, 0, -1, 1, 1, -1, -1};\nint dy[] = {1, 0, -1, 0, 1, -1, 1, -1};\nvoid fast() {}\nint main() {\n  fast();\n  string s, t;\n  cin >> s >> t;\n  cout << (s == t ? -1 : (int)max(s.size(), t.size())) << \"\\n\";\n}\n"
    ],
    [
        "\n  create strings a and b\n  read standard input to a and b\n  if a = b, print -1 to the standard output and exit the program\n  print max of length of a and length of b\n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a == b) cout << -1 << endl, exit(0);\n  cout << max(a.size(), b.size()) << endl;\n}\n"
    ],
    [
        "declare constant long long N = 1e8 + 3\ndeclare constant long long MN = 1e9 + 7\ndeclare constant long long MX = -1e9-7\ndeclare long longs n, m, cnt, mx = MX\ndeclare a, b as strings\ndeclare pair of long long, long long pr\ndeclare string vector v\ndeclare map from string to long long mp\ndeclare long long set st\ndeclare long long set iterator it\n\n  read a, b\n  if maximum of ( size of a and size of b ) is greater than minimum of ( size of a and size of b )\n    print maximum of ( size of a and size of b )\n  else\n    while true\n      if a is not b\n        print size of a\n        end loop\n      \n      let a be substring of a from 0 to size of a - 1\n      let b be substring of b from 0 to size of b - 1\n      if size of a is 0\n        print -1\n        end loop\n      \n    \n  \n  print \"\\n\"\n  \n\n",
        "const long long N = 1e8 + 3;\nconst long long MN = 1e9 + 7;\nconst long long MX = -1e9 - 7;\nlong long n, m, cnt, mx = MX;\nstring a, b;\npair<long long, long long> pr;\nvector<string> v;\nmap<string, long long> mp;\nset<long long> st;\nset<long long>::iterator it;\nint main() {\n  cin >> a >> b;\n  if (max(a.size(), b.size()) > min(a.size(), b.size())) {\n    cout << max(a.size(), b.size());\n  } else {\n    while (true) {\n      if (a != b) {\n        cout << a.size();\n        break;\n      }\n      a = a.substr(0, a.size() - 1);\n      b = b.substr(0, b.size() - 1);\n      if (a.size() == 0) {\n        cout << -1;\n        break;\n      }\n    }\n  }\n  cout << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  declare character array s1 with size 100006 s2 with size 100003\n  while read s1, s2\n    declare p as integer = string comparison between s1 and s2\n    declare len1 as integer = string length of s1\n    declare len2 as integer = string length of s2\n    if p is 0\n      print \"-1\" print newline\n      \n    \n    if len1 is greater than len2\n      print len1, newline\n    else\n      print len2, newline\n  \n\n",
        "int main() {\n  char s1[100006], s2[100003];\n  while (cin >> s1 >> s2) {\n    int p = strcmp(s1, s2);\n    int len1 = strlen(s1);\n    int len2 = strlen(s2);\n    if (p == 0) {\n      cout << \"-1\" << endl;\n      return 0;\n    }\n    if (len1 > len2)\n      cout << len1 << endl;\n    else\n      cout << len2 << endl;\n  }\n}\n"
    ],
    [
        "\n  s, ss = string\n  read s then ss\n  if s is ss\n    print -1\n  else\n    print max of length of ss and length of s\n  \n\n",
        "int main() {\n  string s, ss;\n  cin >> s >> ss;\n  if (s == ss)\n    cout << -1 << \"\\n\";\n  else\n    cout << max(ss.length(), s.length()) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  i,res=0\n  s1,s2=string\n  read s1,s2\n  if s1 == s2\n    res=-1\n  else\n    res=max(size of s1, size of s2)\n  print res\n  \n\n",
        "int main() {\n  long long i = 0, res = 0;\n  string s1, s2;\n  cin >> s1 >> s2;\n  if (s1 == s2)\n    res = -1;\n  else\n    res = max(s1.size(), s2.size());\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare strings a and b\n  read standard input to a and b\n  declare integer variables l = length of a, and ll =length of b\n  if l != ll\n    print max of l and ll to the standard output\n  else if a = b\n    print -1 to the standard output\n  else\n    print length of a to the standard output\n  \n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  int l = a.size(), ll = b.size();\n  if (l != ll) {\n    cout << max(l, ll) << endl;\n  } else if (a == b) {\n    cout << -1 << endl;\n  } else {\n    cout << a.size() << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "a, b = string\n\n  read a then b\n  if a is not b\n    print max of size of a, size of b\n    \n  else\n    print \"-1\"\n    \n  \n\n",
        "string a, b;\nint main() {\n  cin >> a >> b;\n  if (a != b) {\n    cout << max(a.size(), b.size()) << endl;\n    return 0;\n  } else {\n    cout << \"-1\" << endl;\n    return 0;\n  }\n}\n"
    ],
    [
        "\n  create string A\n  read A\n  let string B\n  read B\n  if A is equal to B\n    print -1\n    \n  \n  print max of A.size() and B.size()\n  \n\n",
        "int main() {\n  string A;\n  cin >> A;\n  string B;\n  cin >> B;\n  if (A == B) {\n    cout << -1 << \"\\n\";\n    return 0;\n  }\n  cout << max(A.size(), B.size()) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create new constant long long integer INF with value 8e18\ncreate new constant long long integer called MOD = 998244353\n\n  declare string variables a and b\n  read input to a and b\n  if length of a != length of b\n    print max of length of a and length of b and '\\n'\n  else if a != b\n    print length of a and '\\n'\n  else\n    print -1 and '\\n'\n  \n\n",
        "const long long int INF = (long long int)(8e18);\nconst long long int MOD = 998244353;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  if (a.length() != b.length())\n    cout << max(a.length(), b.length()) << '\\n';\n  else if (a != b)\n    cout << a.length() << '\\n';\n  else\n    cout << -1 << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  let a, b be strings\n  let c be a integer with c = 0\n  read a, b\n  let len1 be a integer with len1 is equal to length of a\n  let len2 be a integer with len2 is equal to length of b\n  if a is equal to b\n    print -1 and newline\n  else do the following\n    print maximum of len1, len2 and newline\n  \n  \n\n",
        "int main() {\n  string a, b;\n  int c = 0;\n  cin >> a >> b;\n  int len1 = a.size();\n  int len2 = b.size();\n  if (a == b)\n    cout << -1 << endl;\n  else {\n    cout << max(len1, len2) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "INF is a new constant integer = 0x3f3f3f3f\ncreate new constant integer mod with value 998244353\ndeclare character arrays a and b with 100005 elements\n\n  read input to a and b\n  if content of a and b matches\n    return puts(\"-1\")\n  else\n    print max of length of a and length of b to the standard output\n  \n\n",
        "const int INF = 0x3f3f3f3f;\nconst int mod = 998244353;\nchar a[100005], b[100005];\nint main() {\n  cin >> a >> b;\n  if (strcmp(a, b) == 0)\n    return puts(\"-1\"), 0;\n  else\n    cout << max(strlen(a), strlen(b)) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s, s1 = string\n  read s then s1\n  if s is s1\n    print -1\n  else\n    print max of size of s, size of s1\n\n",
        "int main() {\n  string s, s1;\n  cin >> s >> s1;\n  if (s == s1)\n    cout << -1 << endl;\n  else\n    cout << max(s.size(), s1.size()) << endl;\n}\n"
    ],
    [
        "declare strings n, n2\ndeclare compare with strings s1, s2, integer length as arguments, returning boolean\n  for i = 0 to length exclusive\n    if s1[i] is not s2[i], return false from function\n  \n  return true from function\n\n\n  read n, n2\n  declare l1, l2, greater as integers\n  let l1 be greater = length of n\n  let l2 be length of n2\n  if l2 is greater than l1, let greater be l2\n  if l1 is l2\n    declare x as boolean = result of run compare with n, n2, l1 as arguments\n    if x is true\n      print -1 and newline\n      \n    else\n      print l1 print newline\n      \n    \n  \n  print greater print newline\n  \n\n",
        "string n, n2;\nbool compare(string s1, string s2, int length) {\n  for (int i = 0; i < length; i++) {\n    if (s1[i] != s2[i]) { return false; }\n  }\n  return true;\n}\nint main() {\n  cin >> n >> n2;\n  int l1, l2, greater;\n  l1 = greater = n.length();\n  l2 = n2.length();\n  if (l2 > l1) { greater = l2; }\n  if (l1 == l2) {\n    bool x = compare(n, n2, l1);\n    if (x) {\n      cout << -1 << endl;\n      return 0;\n    } else {\n      cout << l1 << endl;\n      return 0;\n    }\n  }\n  cout << greater << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b = string\n  read a then b\n  sz1, sz2 = int with sz1 = size of a and sz2 = size of b\n  if a is b\n    print -1\n  else\n    print max of sz1, sz2\n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  int sz1 = a.size(), sz2 = b.size();\n  if (a == b) {\n    cout << -1 << endl;\n  } else\n    cout << max(sz1, sz2) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variables s1 and s2\n  read from the input to s1 and s2\n  if s1 is equal to s2\n    print -1 and a new line\n  else\n    print max of length of s1 and length of s2 to the standard output\n\n",
        "int main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  if (s1 == s2)\n    cout << -1 << endl;\n  else\n    cout << max(s1.length(), s2.length()) << endl;\n}\n"
    ],
    [
        "\n  let a, b strings\n  read in a and b\n  if a same as b\n    print -1 to stdout\n  otherwise\n    print max(length of a, length of b)\n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a == b)\n    puts(\"-1\");\n  else\n    cout << max(a.length(), b.length()) << endl;\n  return 0;\n}\n"
    ],
    [
        "N, INF = const int with N = 1e5 + 10 and INF = 1e9 + 7\na, b = string\n\n  read a then b\n  if a is b\n    print -1\n  else\n    print max of size of a and size of b\n  \n\n",
        "const int N = 1e5 + 10, INF = 1e9 + 7;\nstring a, b;\nint main() {\n  cin >> a >> b;\n  if (a == b)\n    cout << -1 << '\\n';\n  else\n    cout << max((int)a.size(), (int)b.size()) << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  a, b = string\n  read a then b\n  if a is not b\n    print max of length of a and length of b\n  else\n    print \"-1\"\n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a != b) {\n    cout << max(a.length(), b.length()) << endl;\n  } else\n    cout << \"-1\\n\";\n}\n"
    ],
    [
        "E=exp(1)\nmaxn=1000010\nch=array of maxn char\nch1=array of maxn char\n\n  read ch\n  read ch1\n  l1=length of ch\n  l2=length of ch1\n  if ch and ch1 are equal\n    print -1\n  else\n    print max(l1,l2)\n  \n\n",
        "const double E = exp(1);\nconst int maxn = 1e6 + 10;\nchar ch[maxn];\nchar ch1[maxn];\nint main() {\n  cin >> ch;\n  cin >> ch1;\n  int l1 = strlen(ch);\n  int l2 = strlen(ch1);\n  if (strcmp(ch, ch1) == 0)\n    cout << -1 << endl;\n  else\n    cout << max(l1, l2) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create strings s and second\n  read user input to s and second\n  declare long long variables p and q = 0\n  create new long long called xx with value 0\n  create new long long variable cnt = 0\n  if s = second\n    print \"-1\" to the standard output\n    \n  \n  if length of s is greater than length of second\n    print length of s to the standard output\n  else\n    print length of second\n  \n\n",
        "int main() {\n  string s, second;\n  cin >> s >> second;\n  long long p = 0, q = 0;\n  long long xx = 0;\n  long long cnt = 0;\n  if (s == second) {\n    cout << \"-1\" << endl;\n    return 0;\n  }\n  if (s.size() > second.size())\n    cout << s.size() << endl;\n  else\n    cout << second.size() << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s1, s2 = string\n  Read s1 and s2\n  if s1 = s2\n    print -1\n  else\n    print max of s1 and s2\n  \n  \n\n",
        "int main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  if (s1 == s2) {\n    cout << -1 << endl;\n  } else {\n    cout << max(s1.size(), s2.size()) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create strings a and b\n  read a and b\n  let ints l = a.size() and ll = b.size()\n  if l is not equal to ll\n    print max(l, ll)\n  else if a is equal to b\n    print -1\n  else\n    print a.size()\n  \n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  int l = a.size(), ll = b.size();\n  if (l != ll) {\n    cout << max(l, ll) << endl;\n  } else if (a == b) {\n    cout << -1 << endl;\n  } else {\n    cout << a.size() << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  a, b = string\n  read a then b\n  if size of a is not size of b\n    print max of size of a and size of b\n  else if compare of b on a is 0\n    print \"-1\"\n  else\n    s = int with s = size of a\n    mp = string and int map\n    x = int with x = s\n    loop while x is greater than 0\n      for i = 0 to s and i + x is less or equal to s\n        st = string with st = substring of a starting at i and a length of x\n        set mp[st] to 1\n      \n      for i = 0 to s and i + x is less or equal to s\n        st = string with st = substring of b starting at i and a length of x\n        if mp[st] is 0\n          print size of st\n          \n        \n      \n      decrement x\n    \n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a.size() != b.size()) {\n    cout << max(a.size(), b.size()) << endl;\n  } else if (a.compare(b) == 0) {\n    cout << \"-1\" << endl;\n  } else {\n    int s = a.size();\n    map<string, int> mp;\n    int x = s;\n    while (x > 0) {\n      for (int i = 0; i < s && i + x <= s; i++) {\n        string st(a, i, x);\n        mp[st] = 1;\n      }\n      for (int i = 0; i < s && i + x <= s; i++) {\n        string st(b, i, x);\n        if (mp[st] == 0) {\n          cout << st.size() << endl;\n          return 0;\n        }\n      }\n      x--;\n    }\n  }\n}\n"
    ],
    [
        "\n  create strings a and b\n  read a and b\n  if the length of a is not equal to the length of b\n    print the max of length of a and length of b\n  else\n    if a is equal to b\n      print -1\n    else\n      print the length of a\n    \n  \n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a.length() != b.length()) {\n    cout << max(a.length(), b.length()) << endl;\n  } else {\n    if (a == b) {\n      cout << -1 << endl;\n    } else {\n      cout << a.length() << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "dx = int array with the values 0, 1, 0, -1, 1, 1, -1, -1\ndy = int array with the values 1, 0, -1, 0, 1, -1, 1, -1\ndefine empty function fast\n\n  call fast\n  s, t = string\n  read s then t\n  print -1 if s is t else print max of size of s, size of t\n\n",
        "int dx[] = {0, 1, 0, -1, 1, 1, -1, -1};\nint dy[] = {1, 0, -1, 0, 1, -1, 1, -1};\nvoid fast() {}\nint main() {\n  fast();\n  string s, t;\n  cin >> s >> t;\n  cout << (s == t ? -1 : (int)max(s.size(), t.size())) << \"\\n\";\n}\n"
    ],
    [
        "let n, c1, c2 be long integers\nlet solve accepts long integer g\n  t1, t2, left, res be long integers with t1 = ceiling of(double)n / g , t2 = n / g, left = n, res = 0\n  for t2 * g is not equal to left and left is greater than 0, decrement left by t1, decrement g by 1, res = res + (c1 + c2 * (t1 - 1) * (t1 - 1))\n  for g is greater than 0, decrement left by t2, decrement g by 1, the value of res = res + (c1 + c2 * (t2 - 1) * (t2 - 1))\n  return the value of res\n\n\n  let t be a character\n  read n, c1, c2\n  let p , r , i be long integers with p = 0, r = 0\n  for i = 0 to n exclusive\n    read t\n    if t is equal to 1 increment p by 1 else increment r by 1\n  \n  let lo, hi be long integers with lo = 1, hi = p\n  while lo is less than hi\n    let diff be a long integer with diff = hi - lo\n    let p1, p2 be long integers with p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3\n    let s1, s2 be a long integers with s1 = solve(p1), s2 = solve(p2)\n    if s1 is equal to s2\n      lo is equal to p1 + 1, hi is equal to p2 - 1\n    else if s1 is greater than s2\n      the value of lo = p1 + 1\n    else do the following\n      the value of hi = p2 - 1\n  \n  print solve(lo) and newline\n\n",
        "long long n, c1, c2;\nlong long solve(long long g) {\n  long long t1 = ceil((double)n / g), t2 = n / g, left = n, res = 0;\n  for (; t2 * g != left && left > 0; left -= t1, g--) res += (c1 + c2 * (t1 - 1) * (t1 - 1));\n  for (; g > 0; left -= t2, g--) res += (c1 + c2 * (t2 - 1) * (t2 - 1));\n  return res;\n}\nint main() {\n  char t;\n  cin >> n >> c1 >> c2;\n  long long p = 0, r = 0, i;\n  for (i = 0; i < n; i++) {\n    cin >> t;\n    (t == '1') ? p++ : r++;\n  }\n  long long lo = 1, hi = p;\n  while (lo < hi) {\n    long long diff = hi - lo;\n    long long p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3;\n    long long s1 = solve(p1), s2 = solve(p2);\n    if (s1 == s2)\n      lo = p1 + 1, hi = p2 - 1;\n    else if (s1 > s2)\n      lo = p1 + 1;\n    else\n      hi = p2 - 1;\n  }\n  cout << solve(lo) << endl;\n}\n"
    ],
    [
        "declare long longs n, c1, c2\ndeclare solve with long long g as argument, returning long long\n  declare long longs t1 = round up( double casted(n) / g), t2 = n / g, left = n, res = 0\n  for t2 * g is not left and left is greater than 0, decrementing left by t1, decrementing g, increment res by (c1 + c2 * (t1 - 1) * (t1 - 1))\n  for g is greater than 0, decrementing left by t2, decrementing g, increment res by (c1 + c2 * (t2 - 1) * (t2 - 1))\n  return res from function\n\n\n  declare t as character\n  read n, c1, c2\n  declare long longs p = 0, r = 0, i\n  for i = 0 to n exclusive\n    read t\n    increment p if t is '1', else increment r\n  \n  declare long long lo = 1, hi = p\n  while lo is less than hi\n    declare long long diff = hi - lo\n    declare long longs p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3\n    declare long longs s1 = result of run solve with p1 as argument, s2 = result of run solve(p2)\n    if s1 is s2\n      let lo be p1 + 1, hi be p2 - 1\n    else if s1 is greater than s2\n      let lo be p1 + 1\n    else\n      let hi be p2 - 1\n  \n  print result of run solve with lo as argument, newline\n\n",
        "long long n, c1, c2;\nlong long solve(long long g) {\n  long long t1 = ceil((double)n / g), t2 = n / g, left = n, res = 0;\n  for (; t2 * g != left && left > 0; left -= t1, g--) res += (c1 + c2 * (t1 - 1) * (t1 - 1));\n  for (; g > 0; left -= t2, g--) res += (c1 + c2 * (t2 - 1) * (t2 - 1));\n  return res;\n}\nint main() {\n  char t;\n  cin >> n >> c1 >> c2;\n  long long p = 0, r = 0, i;\n  for (i = 0; i < n; i++) {\n    cin >> t;\n    (t == '1') ? p++ : r++;\n  }\n  long long lo = 1, hi = p;\n  while (lo < hi) {\n    long long diff = hi - lo;\n    long long p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3;\n    long long s1 = solve(p1), s2 = solve(p2);\n    if (s1 == s2)\n      lo = p1 + 1, hi = p2 - 1;\n    else if (s1 > s2)\n      lo = p1 + 1;\n    else\n      hi = p2 - 1;\n  }\n  cout << solve(lo) << endl;\n}\n"
    ],
    [
        "\n  create integer n\n  create long longs c1, c2\n  read n read c1 read c2\n  create integer cnt with cnt = 0\n  for i = 1 to n inclusive\n    create character c\n    read c\n    if c is '1' increment cnt\n  \n  create long long ans with ans = 1e18\n  for i = 1 to cnt inclusive\n    create long longs p, mod with p = n / i, mod = n % i\n    create long long now with now = (p - 1) * (p - 1) * c2 * (i - mod) + c1 * i + p * p * mod * c2\n    set ans to minimum of ans and now\n  \n  print ans print newline\n  \n\n",
        "int main() {\n  int n;\n  long long c1, c2;\n  cin >> n >> c1 >> c2;\n  int cnt = 0;\n  for (int i = 1; i <= n; i++) {\n    char c;\n    cin >> c;\n    if (c == '1') cnt++;\n  }\n  long long ans = 1e18;\n  for (int i = 1; i <= cnt; i++) {\n    long long p = n / i, mod = n % i;\n    long long now = (p - 1) * (p - 1) * c2 * (i - mod) + c1 * i + p * p * mod * c2;\n    ans = min(ans, now);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, m, i, j, p, q, cnt, c1, c2, x, y, mn\n  create string s\n  while read n read c1 read c2 is true\n    read charaacter\n    read s\n    set cnt to 0\n    set mn to LONG_LONG_MAX\n    for i = 0 to size of s exclusive\n      if s[i] is '1', increment cnt\n    \n    for i = 1 to cnt inclusive\n      set x to n / i\n      set y to n % i\n      set p to (c1 + c2 * (x - 1) * (x - 1)) * (i - y)\n      set q to (c1 + (c2 * x * x)) * y\n      set m to p + q\n      set mn to minimum of mn and m\n    \n    print mn print newline\n  \n\n",
        "int main() {\n  long long n, m, i, j, p, q, cnt, c1, c2, x, y, mn;\n  string s;\n  while (cin >> n >> c1 >> c2) {\n    getchar();\n    cin >> s;\n    cnt = 0;\n    mn = LONG_LONG_MAX;\n    for (i = 0; i < s.size(); i++) {\n      if (s[i] == '1') cnt++;\n    }\n    for (i = 1; i <= cnt; i++) {\n      x = n / i;\n      y = n % i;\n      p = (c1 + c2 * (x - 1) * (x - 1)) * (i - y);\n      q = (c1 + (c2 * x * x)) * y;\n      m = p + q;\n      mn = min(mn, m);\n    }\n    cout << mn << endl;\n  }\n}\n"
    ],
    [
        "declare constant int MAX_N = 2e5 + 10\ndeclare constant int MAX_LOG = 62\ndeclare constant long long INF = 1e18 + 1\ndeclare constant long long MOD = 1e9 + 7\ndeclare long long variables n, c1, c2 and ans with ans = INF\ncreate string s\ndeclare integer variable m\n\n  read input to n, c1 and c2\n  read s\n  for i from 0 to n exclusive\n    if s[i] = '1', increment m\n  for i from 1 to m inclusive\n    create long long k = n / i\n    create long long r = n % i\n    declare long long variable tmp = r * (c1 + c2 * k * k)\n    add (i - r) * (c1 + c2 * (k - 1) * (k - 1)) to tmp\n    set ans to min of ans and tmp\n  \n  print ans\n\n",
        "const int MAX_N = 2e5 + 10;\nconst int MAX_LOG = 62;\nconst long long INF = 1e18 + 1;\nconst long long MOD = 1e9 + 7;\nlong long n, c1, c2, ans = INF;\nstring s;\nint m;\nint main() {\n  cin >> n >> c1 >> c2;\n  cin >> s;\n  for (int i = 0; i < n; i++)\n    if (s[i] == '1') m++;\n  for (int i = 1; i <= m; i++) {\n    long long k = n / i;\n    long long r = n % i;\n    long long tmp = r * (c1 + c2 * (k)*k);\n    tmp += (i - r) * (c1 + c2 * (k - 1) * (k - 1));\n    ans = min(ans, tmp);\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "n = long long\n\n  read n\n  if n is 1 print 4\n  if n is 2 print 22\n  if n is 3 print 27\n  if n is 4 print 58\n  if n is 5 print 85\n  if n is 6 print 94\n  if n is 7 print 121\n  if n is 8 print 166\n  if n is 9 print 202\n  if n is 10 print 265\n  if n is 11 print 274\n  if n is 12 print 319\n  if n is 13 print 346\n  if n is 14 print 355\n  if n is 15 print 378\n  if n is 16 print 382\n  if n is 17 print 391\n  if n is 18 print 438\n  if n is 19 print 454\n  if n is 20 print 483\n  if n is 21 print 517\n  if n is 22 print 526\n  if n is 23 print 535\n  if n is 24 print 562\n  if n is 25 print 576\n  if n is 26 print 588\n  if n is 27 print 627\n  if n is 28 print 634\n  if n is 29 print 636\n  if n is 30 print 645\n  print a new line\n  \n\n",
        "long long n;\nint main() {\n  cin >> n;\n  if (n == 1) cout << 4;\n  if (n == 2) cout << 22;\n  if (n == 3) cout << 27;\n  if (n == 4) cout << 58;\n  if (n == 5) cout << 85;\n  if (n == 6) cout << 94;\n  if (n == 7) cout << 121;\n  if (n == 8) cout << 166;\n  if (n == 9) cout << 202;\n  if (n == 10) cout << 265;\n  if (n == 11) cout << 274;\n  if (n == 12) cout << 319;\n  if (n == 13) cout << 346;\n  if (n == 14) cout << 355;\n  if (n == 15) cout << 378;\n  if (n == 16) cout << 382;\n  if (n == 17) cout << 391;\n  if (n == 18) cout << 438;\n  if (n == 19) cout << 454;\n  if (n == 20) cout << 483;\n  if (n == 21) cout << 517;\n  if (n == 22) cout << 526;\n  if (n == 23) cout << 535;\n  if (n == 24) cout << 562;\n  if (n == 25) cout << 576;\n  if (n == 26) cout << 588;\n  if (n == 27) cout << 627;\n  if (n == 28) cout << 634;\n  if (n == 29) cout << 636;\n  if (n == 30) cout << 645;\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "in the function es_primo that takes integer n and returns bool\n  if n < 4, return true\n  for i = 2 to i * i <= n\n    if n modulo i is 0, return false\n  \n  return true\n\nin the function sum_digitos that takes integer n and returns int\n  sum = integer with sum = 0\n  while n > 0\n    sum = sum + n modulo 10\n    n = n / 10\n  \n  return sum\n\nin the function sum_factores that takes integer n and returns integer\n  sum = integer with sum = 0\n  for i = 2 to i * i <= n\n    while n modulo i is 0\n      sum = sum + sum_digitos(i)\n      n = n / i\n    \n  \n  if n > 1, sum = sum + sum_digitos(n)\n  return sum\n\nin the function busca_sig that takes integer n and returns integer\n  do increment n, while es_primo(n) or sum_digitos(n) is not sum_factores(n)\n  return n\n\n\n  n = integer\n  read n\n  act = integer with act = 0\n  for i = 1 to n, act = busca_sig(act)\n  print act\n  \n\n",
        "bool es_primo(int n) {\n  if (n < 4) return true;\n  for (int i = 2; i * i <= n; i++) {\n    if (n % i == 0) return false;\n  }\n  return true;\n}\nint sum_digitos(int n) {\n  int sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint sum_factores(int n) {\n  int sum = 0;\n  for (int i = 2; i * i <= n; i++) {\n    while (n % i == 0) {\n      sum += sum_digitos(i);\n      n /= i;\n    }\n  }\n  if (n > 1) { sum += sum_digitos(n); }\n  return sum;\n}\nint busca_sig(int n) {\n  do { n++; } while (es_primo(n) || sum_digitos(n) != sum_factores(n));\n  return n;\n}\nint main() {\n  int n;\n  cin >> n;\n  int act = 0;\n  for (int i = 1; i <= n; i++) { act = busca_sig(act); }\n  cout << act << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "declare integer variable n\ndeclare string t\ndeclare int k\ncreate int ans_len\ncreate char array str with 20 * 100010 elements\ncreate int array chars s with size 80 * 100010\nfunction push_up with int argument rt\n  chars[rt] = chars[rt << 1] + chars[rt << 1 | 1]\n\nvoid function update with int arguments L, R, left, right and rt\n  if chars[rt] >= right - left + 1, return\n  if left is equal to right\n    create char array s with rt elements\n    set str[left] to t[left - L]\n    return\n  \n  if L > right or R < left, return\n  int mid = (left + right) >> 1\n  if mid >= R\n    call update with arguments L, R, left, mid and rt << 1\n  else if mid is less than L\n    call update with arguments L, R, mid + 1, right and rt << 1 | 1\n  else\n    call update with arguments L, R, left, mid and rt << 1\n    call update with arguments L, R, mid + 1, right and rt << 1 | 1\n  \n  call push_up(rt)\n\n\n  create int pos\n  declare integer endpos\n  read n and loop further\n    change ans_len to 0\n    for i from 1 to 2000010 exclusive, assign 'a' to str[i]\n    set sizeof(chars) bytes at the pointer chars to 0\n    for i from 1 to n inclusive\n      read input to t and k\n      loop j from 1 to k inclusive\n        read pos\n        set endpos to pos + length of t - 1\n        call update with arguments pos, endpos, 1, 2000010 and 1\n        if j = k\n          change ans_len to endpos if endpos is greater than ans_len\n        \n      \n    \n    for i from 1 to ans_len inclusive, print str[i]\n    print new line\n  \n\n",
        "int n;\nstring t;\nint k;\nint ans_len;\nchar str[20 * 100010];\nint chars[80 * 100010];\nvoid push_up(int rt) {\n  chars[rt] = chars[rt << 1] + chars[rt << 1 | 1];\n}\nvoid update(int L, int R, int left, int right, int rt) {\n  if (chars[rt] >= right - left + 1) return;\n  if (left == right) {\n    chars[rt] = 1;\n    str[left] = t[left - L];\n    return;\n  }\n  if (L > right || R < left) return;\n  int mid = (left + right) >> 1;\n  if (mid >= R)\n    update(L, R, left, mid, rt << 1);\n  else if (mid < L)\n    update(L, R, mid + 1, right, rt << 1 | 1);\n  else {\n    update(L, R, left, mid, rt << 1);\n    update(L, R, mid + 1, right, rt << 1 | 1);\n  }\n  push_up(rt);\n}\nint main() {\n  int pos;\n  int endpos;\n  while (cin >> n) {\n    ans_len = 0;\n    for (int i = 1; i < 2000010; i++) str[i] = 'a';\n    memset(chars, 0, sizeof(chars));\n    for (int i = 1; i <= n; i++) {\n      cin >> t >> k;\n      for (int j = 1; j <= k; j++) {\n        cin >> pos;\n        endpos = pos + t.length() - 1;\n        update(pos, endpos, 1, 2000010, 1);\n        if (j == k) {\n          if (endpos > ans_len) ans_len = endpos;\n        }\n      }\n    }\n    for (int i = 1; i <= ans_len; i++) cout << str[i];\n    cout << endl;\n  }\n}\n"
    ],
    [
        "\n  create long long n, k, p\n  read n read k read p\n  create long long arrays pe, ke, with pe size 1001, ke size 2002\n  for a = 0 to n exclusive, read pe[a]\n  for a = 0 to k exclusive, read ke[a]\n  sort elements from pe to pe+n\n  sort elements from ke to pe+k\n  create long long mins with mins = 99999999999999\n  for a = 0 to k - n + 1 exclusive\n    create long long tmp with tmp = 0\n    for b = 0 to n exclusive, set tmp to maximum of tmp and absolute value of ( pe[b] - ke[a + b] ) + absolute value of ( ke[a + b] - p )\n    set mins to minimum of tmp and mins\n  \n  print mins print newline\n  \n\n",
        "int main() {\n  long long n, k, p;\n  cin >> n >> k >> p;\n  long long pe[1001], ke[2002];\n  for (int a = 0; a < n; a++) cin >> pe[a];\n  for (int a = 0; a < k; a++) cin >> ke[a];\n  sort(pe, pe + n);\n  sort(ke, ke + k);\n  long long mins = 99999999999999;\n  for (int a = 0; a < k - n + 1; a++) {\n    long long tmp = 0;\n    for (int b = 0; b < n; b++) tmp = max(tmp, abs(pe[b] - ke[a + b]) + abs(ke[a + b] - p));\n    mins = min(tmp, mins);\n  }\n  cout << mins << endl;\n  return 0;\n}\n"
    ],
    [
        "mod = const int with mod = 1000000007\ninf = const long long with inf = 1000000000000\n\n  n, k, p = int\n  read n then k then p\n  A, B = vector of long longs\n  for i = 0 to n\n    x = long long\n    read x\n    append x to A\n  \n  for i = 0 to k\n    x = long long\n    read x\n    append x to B\n  \n  sort vector A\n  sort vector B\n  ans = long long with ans = inf\n  for i = 0 to k - n inclusive\n    temp = long long with temp = 0\n    index = int with index = i\n    for j = 0 to n\n      temp2 = long long with temp2 = 0\n      set temp2 to the sum the absolute value of A[j] - B[index] and the absolute value of B[index] - p\n      set temp to max between temp and temp2\n      increment index\n    \n    set ans to min between ans and temp\n  \n  print ans\n  \n\n",
        "const int mod = 1000000007;\nconst long long inf = 1000000000000;\nint main() {\n  int n, k, p;\n  cin >> n >> k >> p;\n  vector<long long> A, B;\n  for (int i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    A.push_back(x);\n  }\n  for (int i = 0; i < k; i++) {\n    long long x;\n    cin >> x;\n    B.push_back(x);\n  }\n  sort(A.begin(), A.end());\n  sort(B.begin(), B.end());\n  long long ans = inf;\n  for (int i = 0; i <= k - n; i++) {\n    long long temp = 0;\n    int index = i;\n    for (int j = 0; j < n; j++) {\n      long long temp2 = 0;\n      temp2 = abs(A[j] - B[index]) + abs(B[index] - p);\n      temp = max(temp, temp2);\n      index++;\n    }\n    ans = min(ans, temp);\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "N = constant integer with value of 2e5 + 50\nM = constant integer with value of 1e6\noo = constant long long with value of 1e18\nmod = constant integer with value of 1e9 + 7\na, b = long long arrays with a length of 1010 and b length of 2010\nn, k, p = long long\nin function can that takes long long variable md and returns a boolean\n  id = long long with value of 0\n  for i = 0 to k exclusive\n    if the absolute value of (a[id] - b[i]) plus the absolute value of (b[i] - p) is greater than md then continue\n    add 1 to id\n    if id equals n return 1\n  \n  \n\n\n  read n, k, and p\n  for i = 0 to n exclusive read a[i]\n  for i = 0 to k exclusive read b[i]\n  sort the first n elements of a\n  sort the first k elements of b\n  md, lo, hi, and ans = long long with lo value of 0 and hi value of 2e9 and ans value of 0\n  while lo is less than or equal to hi\n    set md to half of lo plus hi\n    if call can with argument of md is true\n      set hi to md minus 1\n      set ans to md\n    else\n      set lo to md plus 1\n  \n  print ans\n\n",
        "const int N = 2e5 + 50;\nconst int M = 1e6;\nconst long long oo = 1e18;\nconst int mod = 1e9 + 7;\nlong long a[1010], b[2010];\nlong long n, k, p;\nbool can(long long md) {\n  long long id = 0;\n  for (int i = 0; i < k; i++) {\n    if (abs(a[id] - b[i]) + abs(b[i] - p) > md) continue;\n    id++;\n    if (id == n) return 1;\n  }\n  return 0;\n}\nint main() {\n  cin >> n >> k >> p;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < k; i++) cin >> b[i];\n  sort(a, a + n);\n  sort(b, b + k);\n  long long md, lo = 0, hi = 2e9, ans = 0;\n  while (lo <= hi) {\n    md = (lo + hi) / 2;\n    if (can(md)) {\n      hi = md - 1;\n      ans = md;\n    } else\n      lo = md + 1;\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "N = const long long with N = 1000 + 5\nN = const long long with K = 2000 + 5\nn, m, fi = long long\np = array of N long long\nk = array of K long long\nin the function di that takes long long a and b and returns long long\n  return abs of a - b\n\nin the function ok that takes long long t and returns bool\n  set poz to 1\n  for i = 1 to n inclusive\n    if poz > m return 0\n    while 1\n      tot = long long with tot = di of p[i] and k[poz] + di of k[poz] and fi\n      if tot <= t break loop\n      increment poz\n      if poz > m return 0\n    \n    increment poz\n  \n  return 1\n\n\n  read n, m, fi\n  for i = 1 to n inclusive read p[i]\n  for i = 1 to m inclusive read k[i]\n  sort p + 1 and p + n + 1\n  sort k + 1 and k + m + 1\n  r, pas = long long with r = -1, pas = 1LL << 60\n  while pas\n    if ok(r + pas) is 0 r = r + pas\n    pas = pas >> 1\n  \n  increment r\n  print r\n  \n\n",
        "const long long N = 1000 + 5;\nconst long long K = 2000 + 5;\nlong long n, m, fi;\nlong long p[N];\nlong long k[K];\nlong long di(long long a, long long b) {\n  return abs(a - b);\n}\nbool ok(long long t) {\n  long long poz = 1;\n  for (long long i = 1; i <= n; i++) {\n    if (poz > m) return 0;\n    while (1) {\n      long long tot = di(p[i], k[poz]) + di(k[poz], fi);\n      if (tot <= t) break;\n      poz++;\n      if (poz > m) return 0;\n    }\n    poz++;\n  }\n  return 1;\n}\nint main() {\n  cin >> n >> m >> fi;\n  for (long long i = 1; i <= n; i++) { cin >> p[i]; }\n  for (long long i = 1; i <= m; i++) { cin >> k[i]; }\n  sort(p + 1, p + n + 1);\n  sort(k + 1, k + m + 1);\n  long long r = -1, pas = (1LL << 60);\n  while (pas) {\n    if (ok(r + pas) == 0) { r += pas; }\n    pas >>= 1;\n  }\n  r++;\n  cout << r << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create long longs n, k, p\ncreate long long arrays a, b, with a size 1005, b size 2005\ndeclare moze with long long x as argument, returning boolean\n  create long long h with h = 0\n  for i = 0 to n exclusive\n    if h is k, return false from function\n    create boolean sat with sat = false\n    while h is less than k\n      create long long d with d = absolute value of ( a[i] - b[h] ) + absolute value of (b[h]-p)\n      increment h\n      if d is less than or equal to x\n        set sat to true\n        break loop\n      \n    \n    if not sat, return false from function\n  \n  return true from function\n\n\n  read n read k read p\n  for i = 0 to n exclusive, read a[i]\n  for i = 0 to k exclusive, read b[i]\n  sort elements from a to a + n\n  sort elements from b to b + n\n  create long longs l, r, o, with l = 0, r = 4e9, o = -1\n  while l is less than or equal to r\n    create long long m with m = ( l + r ) bitshift right 1\n    if result of run moze with m as argument is true\n      set o to m\n      set r to m - 1\n    else\n      set l to m + 1\n    \n  \n  print o print '\\n'\n\n",
        "long long n, k, p;\nlong long a[1005], b[2005];\nbool moze(long long x) {\n  long long h = 0;\n  for (long long i = 0; i < n; i++) {\n    if (h == k) return false;\n    bool sat = false;\n    while (h < k) {\n      long long d = abs(a[i] - b[h]) + abs(b[h] - p);\n      h++;\n      if (d <= x) {\n        sat = true;\n        break;\n      }\n    }\n    if (!sat) return false;\n  }\n  return true;\n}\nint main() {\n  cin >> n >> k >> p;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < k; i++) cin >> b[i];\n  sort(a, a + n);\n  sort(b, b + k);\n  long long l = 0, r = 4e9, o = -1;\n  while (l <= r) {\n    long long m = (l + r) >> 1;\n    if (moze(m)) {\n      o = m;\n      r = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  cout << o << '\\n';\n}\n"
    ],
    [
        "MOD = const int with MOD = 1e9 + 7\nINF = const long long int with INF = 1e18\nkeya, per = vectors of long long int\nans = long long int with ans = INF\n\n  i, j, k, n, p, x = integers\n  read n, k, p\n  for i = 0 to n exclusive\n    read x\n    append x in per\n  \n  for i = 0 to k exclusive\n    read x\n    append x in key\n  \n  sort begin of per and end of per\n  sort begin of key and end of key\n  for j = 0 to j + n - 1 < k\n    now = long long int with now = 0\n    for i = 0 to n exclusive now = max of now and abs(per[i] - key[j + i]) + abs(key[j + i] - p)\n    ans = min of ans and now\n  \n  print ans\n  \n\n",
        "const int MOD = 1e9 + 7;\nconst long long int INF = 1e18;\nvector<long long int> key, per;\nlong long int ans = INF;\nint main() {\n  int i, j, k, n, p, x;\n  cin >> n >> k >> p;\n  for (i = 0; i < n; i++) {\n    cin >> x;\n    per.push_back(x);\n  }\n  for (i = 0; i < k; i++) {\n    cin >> x;\n    key.push_back(x);\n  }\n  sort(per.begin(), per.end());\n  sort(key.begin(), key.end());\n  for (j = 0; j + n - 1 < k; j++) {\n    long long int now = 0;\n    for (i = 0; i < n; i++) { now = max(now, abs(per[i] - key[j + i]) + abs(key[j + i] - p)); }\n    ans = min(ans, now);\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, k, p\n  read n read k read p\n  create long long arrays pe, ke, with pe size 1001, ke size 2002\n  for a = 0 to n exclusive, read pe[a]\n  for a = 0 to k exclusive, read ke[a]\n  sort elements from pe to pe + n\n  sort elements from ke to ke + n\n  create long long mins with mins = 99999999999999\n  for a = 0 to k - n + 1 exclusive\n    create long long tmp with tmp = 0\n    for b = 0 to n exclusive, set tmp to maximum of ( tmp and absolute value of ( pe[b] - ke[a + b] ) + absolute value of ( ke[a + b] - p ) )\n    set mins to minimum of tmp and mins\n  \n  print mins print newline\n  \n\n",
        "int main() {\n  long long n, k, p;\n  cin >> n >> k >> p;\n  long long pe[1001], ke[2002];\n  for (int a = 0; a < n; a++) cin >> pe[a];\n  for (int a = 0; a < k; a++) cin >> ke[a];\n  sort(pe, pe + n);\n  sort(ke, ke + k);\n  long long mins = 99999999999999;\n  for (int a = 0; a < k - n + 1; a++) {\n    long long tmp = 0;\n    for (int b = 0; b < n; b++) tmp = max(tmp, abs(pe[b] - ke[a + b]) + abs(ke[a + b] - p));\n    mins = min(tmp, mins);\n  }\n  cout << mins << endl;\n  return 0;\n}\n"
    ],
    [
        "n, k, p = integer\nperson = long long array of size 1005, key = long long array of size 2005\nans, tmp = long long\n\n  while read n, k, p\n    ans = 99999999999999LL\n    for i = 0 to n exclusive, read person[i]\n    for i = 0 to k exclusive, read key[i]\n    sort person and person + n\n    sort key and key + k\n    for i = 0 to i + n <= k\n      tmp = 0\n      for j = 0 to n exclusive, tmp = max of tmp and abs of key[i + j] - person[j] + abs of p - key[i + j]\n      ans = min of tmp and ans\n    \n    print ans\n  \n  \n\n",
        "int n, k, p;\nlong long person[1005], key[2005];\nlong long ans, tmp;\nint main() {\n  while (cin >> n >> k >> p) {\n    ans = 99999999999999LL;\n    for (int i = 0; i < n; i++) { cin >> person[i]; }\n    for (int i = 0; i < k; i++) { cin >> key[i]; }\n    sort(person, person + n);\n    sort(key, key + k);\n    for (int i = 0; i + n <= k; i++) {\n      tmp = 0;\n      for (int j = 0; j < n; j++) { tmp = max(tmp, abs(key[i + j] - person[j]) + abs(p - key[i + j])); }\n      ans = min(tmp, ans);\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create 64 bit integer infint64_t with infint64_t = 9223372036854775807LL\ndeclare solve with no arguments, returning void\n  create 64 bit integers n, k, p\n  read n read k read p\n  create 64 bit integer vector a initialized with n\n  for i = 0 to n exclusive, read a[i]\n  sort elements from beginning of a to end of a\n  create 64 bit integer vector b initialized with k\n  for i = 0 to k exclusive, read b[i]\n  sort elements from beginning of b to end of b\n  create 64 bit integer best with best = infint64_t\n  for i = 0 to k - n inclusive\n    create 64 bit integer curWorst with curWorst = 0\n    for j = 0 to n exclusive\n      create 64 bit integer cur with cur = absolute value of ( b[i+j] - p ) + absolute value of (b[i+j]-a[j] )\n      set curWorst to maximum of curWorst and cur\n    \n    set best to minimum of best and curWorst\n  \n  print best print newline\n\n\n  run solve\n  \n\n",
        "const int64_t infint64_t = 9223372036854775807LL;\nvoid solve() {\n  int64_t n, k, p;\n  cin >> n >> k >> p;\n  vector<int64_t> a(n);\n  for (int64_t i = 0; i < n; i++) { cin >> a[i]; }\n  sort(a.begin(), a.end());\n  vector<int64_t> b(k);\n  for (int64_t i = 0; i < k; i++) { cin >> b[i]; }\n  sort(b.begin(), b.end());\n  int64_t best = infint64_t;\n  for (int64_t i = 0; i <= k - n; i++) {\n    int64_t curWorst = 0;\n    for (int64_t j = 0; j < n; j++) {\n      int64_t cur = abs(b[i + j] - p) + abs(b[i + j] - a[j]);\n      curWorst = max(curWorst, cur);\n    }\n    best = min(best, curWorst);\n  }\n  cout << best << endl;\n}\nint main() {\n  solve();\n  return 0;\n}\n"
    ],
    [
        "\n  create long long t\n  read t\n  decrement t and loop further, while t > 0\n    declare long longs a and b\n    read a and b\n    long long c = pow(a * b, 1.0 / 3.0)\n    increment c while c * c * c < a * b\n    decrement c while c * c * c > a * b\n    if c * c * c = a * b && a % c = 0 && b % c = 0\n      print \"Yes\\n\"\n    else\n      print \"No\\n\"\n    \n  \n  \n\n",
        "int main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b;\n    cin >> a >> b;\n    long long c = pow(a * b, 1.0 / 3.0);\n    while (c * c * c < a * b) c++;\n    while (c * c * c > a * b) c--;\n    if (c * c * c == a * b && a % c == 0 && b % c == 0) {\n      cout << \"Yes\\n\";\n    } else {\n      cout << \"No\\n\";\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let q be a long integer\n  read q\n  while q value is decreased by 1\n    let a, b be long integers\n    read a and b\n    let prod be long integer with prod = a * b\n    let round1 be long integer with round1 = round(cbrt(prod))\n    if a modulus round1 is equal to 0 and b modulus round1 is equal to 0\n      if round1 is equal to 1\n        if a is equal to 1 and b is equal to 1\n          print Yes\n            print newline\n        else do the following\n          print No\n            print newline\n      else do the following\n        print Yes\n          print newline\n    else do the following\n      print No\n        print newline\n  \n  \n\n",
        "int main() {\n  long long q;\n  cin >> q;\n  while (q--) {\n    long long a, b;\n    cin >> a >> b;\n    long long prod = a * b;\n    long long round1 = round(cbrt(prod));\n    if (a % round1 == 0 && b % round1 == 0) {\n      if (round1 == 1) {\n        if (a == 1 && b == 1)\n          cout << \"Yes\"\n            << \"\\n\";\n        else\n          cout << \"No\"\n            << \"\\n\";\n      } else\n        cout << \"Yes\"\n          << \"\\n\";\n    } else\n      cout << \"No\"\n        << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  q = long long\n  read q\n  while q is not 0 subtract 1 from q do\n    a, b = long long\n    read a and b\n    prod = long long with value of a*b\n    round1 = long long with value of the cubic root of prod rounded to the nearest whole number\n    if a mod round1 equals 0 and b mod round1 equals 0\n      if round1 equals 1\n        if a and b equal 1\n          print Yes\n            print a new line\n        else\n          print No\n            print a new line\n      else\n        print Yes\n          print a new line\n    else\n      print No\n        print a new line\n  \n  \n\n",
        "int main() {\n  long long q;\n  cin >> q;\n  while (q--) {\n    long long a, b;\n    cin >> a >> b;\n    long long prod = a * b;\n    long long round1 = round(cbrt(prod));\n    if (a % round1 == 0 && b % round1 == 0) {\n      if (round1 == 1) {\n        if (a == 1 && b == 1)\n          cout << \"Yes\"\n            << \"\\n\";\n        else\n          cout << \"No\"\n            << \"\\n\";\n      } else\n        cout << \"Yes\"\n          << \"\\n\";\n    } else\n      cout << \"No\"\n        << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "in function maxx taking two references to long long ints a and b and returning a long long int\n  return a if it is greater than b else return b\n\nin function minn taking two references to long long ints a and b and returning a long long int\n  return b if a is greater than b else return a\n\ndefine empty function boostISO\nin function gcd taking two long long ints a and b and returning a long long int\n  return a if b is 0 else return gcd of b and a mod b\n\nin function int_gcd taking two ints a and b and returning an int\n  returna if b is 0 else return int_gcd of b and a mod b\n\nin function lcm taking two long long ints a and b and returning a long long int\n  return a / gcd of a and b * b\n\nin function poww taking three long long ints base, exp and mod and returning a long long int\n  set base to base modulo mod\n  result = long long int with result = 1\n  loop while exp is greater than 0\n    if exp bitwise-and 1 is 1 then set result to (result * base) modulo mod\n    set base to (base * base) modulo mod\n    set exp to exp bitshift right by 1\n  \n  return result\n\nin function cube_root taking a long long int x and returning an int\n  l, r = long long int with l = 1 and r = 1e6 + 10\n  loop while l is less than r\n    mid = long long int with mid = (l + r) bitshift right by 1\n    if mid * mid * mid is greater or equal to x\n      set r to mid\n    else\n      set l ti mid + 1\n    \n  \n  if l * l * l is x then return l\n  return -1\n\n\n  call boostISO\n  t = int\n  read t\n  loop t times\n    a, b = long long int\n    read a then b\n    value = int with value = cube_root of a * b\n    if value is not - 1\n      g = long long int with g = gcd of a and b\n      if g is a multiple of value\n        print \"YES\"\n        continue loop\n      \n    \n    print \"NO\"\n  \n\n",
        "long long int maxx(long long int &a, long long int &b) {\n  return a > b ? a : b;\n}\nlong long int minn(long long int &a, long long int &b) {\n  return a > b ? b : a;\n}\nvoid boostIO() {}\nlong long int gcd(long long int a, long long int b) {\n  return b == 0 ? a : gcd(b, a % b);\n}\nint int_gcd(int a, int b) {\n  return b == 0 ? a : int_gcd(b, a % b);\n}\nlong long int lcm(long long int a, long long int b) {\n  return a / gcd(a, b) * b;\n}\nlong long int poww(long long int base, long long int exp, long long int mod) {\n  base %= mod;\n  long long int result = 1;\n  while (exp > 0) {\n    if (exp & 1) result = (result * base) % mod;\n    base = (base * base) % mod;\n    exp >>= 1;\n  }\n  return result;\n}\nint cube_root(long long int x) {\n  long long int l = 1, r = 1e6 + 10;\n  while (l < r) {\n    long long int mid = (l + r) >> 1;\n    if (mid * mid * mid >= x) {\n      r = mid;\n    } else {\n      l = mid + 1;\n    }\n  }\n  if (l * l * l == x) { return l; }\n  return -1;\n}\nint main() {\n  boostIO();\n  int t;\n  cin >> t;\n  while (t--) {\n    long long int a, b;\n    cin >> a >> b;\n    int value = cube_root(a * b);\n    if (value != -1) {\n      long long int g = gcd(a, b);\n      if (g % value == 0) {\n        puts(\"Yes\");\n        continue;\n      }\n    }\n    puts(\"No\");\n  }\n}\n"
    ],
    [
        "create const integer MAX = 2e5 + 7\ncreate const integer INF = 0x3f3f3f3f\ndeclare integer variables N, M and K\ndeclare an arrays of integers prea and preb with size MAX\ninteger function cal with integer arguments a and b and char argument c\n  if c = '&', return a & b\n  if c = '|', return a | b\n  return a ^ b\n\n\n  read N and loop further\n    create integers x = 0 and y = 1023\n    for i from 0 to N exclusive\n      declare character c\n      declare integer a\n      read c and a\n      set x to cal(x, c, a)\n      set y to cal(y, c, a)\n    \n    declare integers a and b = 0 and c = 1023\n    for integer i = 0 to 10 exclusive\n      integer p = 1 << i\n      if x & p != 0\n        if y & p != 0\n          a |= p\n        else\n          b |= p\n      else\n        if y & p = 0, set c to c ^ p\n      \n    \n    print 3\n    print \"| \" and a\n    print \"^ \" and b\n    print \"& \" and c\n  \n  \n\n",
        "const int MAX = 2e5 + 7;\nconst int INF = 0x3f3f3f3f;\nint N, M, K;\nint prea[MAX], preb[MAX];\nint cal(int a, char c, int b) {\n  if (c == '&') return a & b;\n  if (c == '|') return a | b;\n  return a ^ b;\n}\nint main() {\n  while (cin >> N) {\n    int x = 0, y = 1023;\n    for (int i = 0; i < N; i++) {\n      char c;\n      int a;\n      cin >> c >> a;\n      x = cal(x, c, a);\n      y = cal(y, c, a);\n    }\n    int a = 0, b = 0, c = 1023;\n    for (int i = 0; i < 10; i++) {\n      int p = 1 << i;\n      if (x & p) {\n        if (y & p)\n          a |= p;\n        else\n          b |= p;\n      } else {\n        if (!(y & p)) c ^= p;\n      }\n    }\n    cout << 3 << endl;\n    cout << \"| \" << a << endl;\n    cout << \"^ \" << b << endl;\n    cout << \"& \" << c << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n,xx=long long\n  read n\n  m1=0, m2=1023\n  rr and ss=array of 1024 long long\n  for i=0 to 1024 exclusive\n    rr[i]=i\n    ss[i]=i\n  \n  while decremented value of n is not 0\n    r=char\n    read r,xx\n    if r is '|'\n      m1=m1 or xx\n      m2=m2 or xx\n      for i=0 to 1024 exclusive rr[i]=rr[i] or xx\n    else if r is '^'\n      m1=m1 xor xx\n      m2=m2 xor xx\n      for i=0 to 1024 exclusive rr[i]=rr[i] xor xx\n    else\n      m1=m1 and xx\n      m2=m2 and xx\n      for i=0 to 1024 exclusive rr[i]=rr[i] and xx\n    \n  \n  x,a,o=0\n  for i=0 to 10 exclusive\n    u=m1 and (2^(i+1))\n    v=m2 and (2^(i+1))\n    if m1 and (2^(i+1)) and v is 0\n      x=x or (2^(i+1))\n      a=a or (2^(i+1))\n    else if u is 0 and m2 and (2^(i+1))\n      a=a or (2^(i+1))\n    else if m1 and (2^(i+1)) and m2 and (2^(i+1))\n      a=a or (2^(i+1))\n      o=o or (2^(i+1))\n    \n  \n  print \"3\"\n  print \"| \" and o\n  print \"^ \" and x\n  print \"& \" and a\n\n",
        "int main() {\n  long long n, xx;\n  cin >> n;\n  long long m1 = 0, m2 = 1023;\n  long long rr[1024], ss[1024];\n  for (long long i = 0; i < 1024; i++) {\n    rr[i] = i;\n    ss[i] = i;\n  }\n  while (n--) {\n    char r;\n    cin >> r >> xx;\n    if (r == '|') {\n      m1 = m1 | xx;\n      m2 = m2 | xx;\n      for (long long i = 0; i < 1024; i++) { rr[i] = rr[i] | xx; }\n    } else if (r == '^') {\n      m1 = m1 ^ xx;\n      m2 = m2 ^ xx;\n      for (long long i = 0; i < 1024; i++) { rr[i] = rr[i] ^ xx; }\n    } else {\n      m1 = m1 & xx;\n      m2 = m2 & xx;\n      for (long long i = 0; i < 1024; i++) { rr[i] = rr[i] & xx; }\n    }\n  }\n  long long x = 0, a = 0, o = 0;\n  for (long long i = 0; i < 10; i++) {\n    long long u = m1 & (1 << i);\n    long long v = m2 & (1 << i);\n    if (m1 & (1 << i) && v == 0) {\n      x = x | (1 << i);\n      a = a | (1 << i);\n    } else if (u == 0 && m2 & (1 << i)) {\n      a = a | (1 << i);\n    } else if (m1 & (1 << i) && m2 & (1 << i)) {\n      a = a | (1 << i);\n      o = o | (1 << i);\n    }\n  }\n  cout << \"3\" << '\\n';\n  cout << \"| \" << o << '\\n';\n  cout << \"^ \" << x << '\\n';\n  cout << \"& \" << a << '\\n';\n}\n"
    ],
    [
        "\n  create long longs n, M, M2, s, with s = 0\n  create long long array t with size 100005\n  create long long array t2 with size 100005\n  read n\n  for i = 0 to n exclusive\n    read t[i]\n    increment s by t[i]\n  \n  for i = 0 to n exclusive, read t2[i]\n  sort elements from t2 to t2 + n\n  if s is less than or equal to t2[n-1] + t2[n-2]\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n  \n\n",
        "int main() {\n  long long n, M, M2, s = 0;\n  long long t[100005];\n  long long t2[100005];\n  cin >> n;\n  for (long long i = 0; i < n; i++) {\n    cin >> t[i];\n    s += t[i];\n  }\n  for (long long i = 0; i < n; i++) { cin >> t2[i]; }\n  sort(t2, t2 + n);\n  if (s <= t2[n - 1] + t2[n - 2]) {\n    cout << \"YES\" << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, sum with sum = 0\n  read n\n  create long long array a with size n\n  create long long array b with size n\n  for i = 0 to n exclusive\n    read a[i]\n    increment sum by a[i]\n  \n  for i = 0 to n exclusive, read b[i]\n  sort elements from b to b + n\n  print \"YES\" if b[n - 2] + b[n - 1] is greater than or equal to sum, else \"NO\", print '\\n'\n  \n\n",
        "int main() {\n  long long n, sum = 0;\n  cin >> n;\n  long long a[n];\n  long long b[n];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  for (long long i = 0; i < n; i++) { cin >> b[i]; }\n  sort(b, b + n);\n  cout << (b[n - 2] + b[n - 1] >= sum ? \"YES\" : \"NO\") << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create long long array num with 100010 elements\nfunction cmp with integer arguments a and b that returns boolean\n  return a > b\n\n\n  declare long long variable sum = 0\n  declare integer n\n  read n\n  for integer i = 0 to n exclusive\n    declare integer a\n    read a\n    increase sum by a\n  \n  read n elements into num\n  sort num using cmp as comparator function\n  if num[0] + num[1] >= sum\n    print \"YES\"\n  else\n    print \"NO\"\n\n",
        "long long num[100010];\nbool cmp(int a, int b) {\n  return a > b;\n}\nint main() {\n  long long sum = 0;\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    int a;\n    cin >> a;\n    sum += a;\n  }\n  for (int i = 0; i < n; i++) { cin >> num[i]; }\n  sort(num, num + n, cmp);\n  if (num[0] + num[1] >= sum)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "\n  declare long long variables cans, sum and aux, with sum = 0\n  read cans\n  val is an array of long longs with size cans + 2\n  for i = 0 to cans exclusive\n    read aux\n    increase sum by aux\n  \n  read val cans times\n  sort val\n  if sum <= val[cans - 1] + val[cans - 2]\n    print \"YES\\n\"\n  else\n    print \"NO\\n\"\n  \n\n",
        "int main() {\n  long long cans, sum = 0, aux;\n  cin >> cans;\n  long long val[cans + 2];\n  for (int i = 0; i < cans; i++) {\n    cin >> aux;\n    sum += aux;\n  }\n  for (int i = 0; i < cans; i++) cin >> val[i];\n  sort(val, val + cans);\n  if (sum <= val[cans - 1] + val[cans - 2])\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  let n, sum be long integers with sum is equal to 0\n  read n\n  b= array of long inters of length n\n  for long integer i = 0 to n exclusive\n    let x be a long integer\n    read x\n    sum is equal to sum+x\n  \n  for long integer i = 0 to n exclusive, read ith element of b array\n  sorting the data of b, b+n\n  print YES if (b[n - 2] + b[n - 1] >= sum ) else print NO\n  \n\n",
        "int main() {\n  long long n, sum = 0;\n  cin >> n;\n  long long b[n];\n  for (long long i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    sum += x;\n  }\n  for (long long i = 0; i < n; i++) { cin >> b[i]; }\n  sort(b, b + n);\n  cout << (b[n - 2] + b[n - 1] >= sum ? \"YES\" : \"NO\") << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 1e5 + 10\n\n  create integer n\n  read n\n  create integer arrays a, b, with a size N, b size N\n  create long long sum with sum = 0\n  for i = 0 to n exclusive\n    read a[i]\n    increment sum by a[i]\n  \n  for i = 0 to n exclusive, read b[i]\n  sort elements from b to b + n using integer greater to compare\n  if sum is less than or equal to (b[0] + b[1])\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n  \n\n",
        "const int N = 1e5 + 10;\nint main() {\n  int n;\n  cin >> n;\n  int a[N], b[N];\n  long long sum = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  for (int i = 0; i < n; i++) cin >> b[i];\n  sort(b, b + n, greater<int>());\n  if (sum <= (b[0] + b[1]))\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "declare constant integer N = 1e5 + 10\n\n  declare integer variable n\n  read n\n  create long long arrays a and b with N elements\n  declare long long sum = 0\n  for integer i = 0 to n exclusive\n    read a[i]\n    increase sum by a[i]\n  \n  for i = 0 to n exclusive read b[i]\n  sort b using greater function as comparer\n  if sum <= (b[0] + b[1])\n    print \"YES\"\n  else\n    print \"NO\"\n  \n\n",
        "const int N = 1e5 + 10;\nint main() {\n  int n;\n  cin >> n;\n  long long a[N], b[N];\n  long long sum = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  for (int i = 0; i < n; i++) cin >> b[i];\n  sort(b, b + n, greater<int>());\n  if (sum <= (b[0] + b[1]))\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "let a,b, i, n be integers where a and b are arrays of length 100001\nlet s be a long integer\n\n  read n\n  for i= 1 to n inclusive\n    read ith element of array a\n    s is equal to s + ith element of array a\n  \n  for i = 1 to n inclusive, read ith element of array b\n  sort the values b+1, b+n+1\n  if (nth term of array b + [n - 1]th term of array b is greater than or equal to s)\n    print YES and newline\n  else do the following\n    print NO and newline\n  \n\n",
        "int a[100001], b[100001], i, n;\nlong long s;\nint main() {\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> a[i];\n    s += a[i];\n  }\n  for (i = 1; i <= n; i++) cin >> b[i];\n  sort(b + 1, b + n + 1);\n  if (b[n] + b[n - 1] >= s)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "function gcd with long long arguments a and b that returns long long\n  if b = 0, return a\n  return gcd(b, a % b)\n\nfunction lcm with long long arguments a and b that returns long long\n  return a * b / gcd(a, b)\n\n\n  create long longs i and j\n  declare long long n\n  read n\n  create vectors of long long a and b with n elements each\n  read n elements into a\n  read n elements into b\n  declare long long variable sum = 0\n  add all elements of a to the sum one by one\n  sort array b\n  if sum is greater than b[n - 1] + b[n - 2]\n    print \"NO\" and a new line\n  else\n    print \"YES\" and a new line\n  \n\n",
        "long long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long lcm(long long a, long long b) {\n  return a * b / gcd(a, b);\n}\nint main() {\n  long long i, j;\n  long long n;\n  cin >> n;\n  vector<long long> a(n), b(n);\n  for (long long i = 0; i < (n); i++) cin >> a[i];\n  for (long long i = 0; i < (n); i++) cin >> b[i];\n  long long sum = 0;\n  for (long long i = 0; i < (n); i++) sum += a[i];\n  sort(b.begin(), b.end());\n  if (sum > b[n - 1] + b[n - 2]) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n  }\n}\n"
    ],
    [
        "\n  create long long integers n and k, array c with 2 elements filled with 0, and arrays a and b with size 100000\n  declare long long integer variables i, j and sum where sum = 0\n  read n\n  for i = 0 to n exclusive\n    read a[i]\n    set sum to sum + a[i]\n  \n  for i = 0 to n exclusive\n    read b[i]\n    if b[i] is greater than c[0]\n      c[0] = b[i]\n      k = i\n    \n  \n  for i = 0 to n exclusive\n    if c[1] < b[i] and b[i] <= c[0] and i != k, set c[1] to b[i]\n  \n  if c[1] + c[0] >= sum\n    print \"YES\"\n  else\n    print \"NO\"\n  \n  \n\n",
        "int main() {\n  long long int n, a[100000], b[100000], c[2] = {0}, k;\n  long long int i, j, sum = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    sum = sum + a[i];\n  }\n  for (i = 0; i < n; i++) {\n    cin >> b[i];\n    if (b[i] > c[0]) {\n      c[0] = b[i];\n      k = i;\n    }\n  }\n  for (i = 0; i < n; i++) {\n    if (c[1] < b[i] && b[i] <= c[0] && i != k) c[1] = b[i];\n  }\n  if (c[1] + c[0] >= sum) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create long long arrays a, b, with a size 100010, b size 100010\ndeclare cmp with integers a, b as arguments, returning boolean\n  return a is greater than b\n\n\n  create integers n, i, j\n  while read n is true\n    set bytes from a to size of a to value 0\n    set bytes from b to size of b to value 0\n    create double sum with sum = 0\n    for i = 0 to n exclusive\n      read a[i]\n      increment sum by a[i]\n    \n    for i = 0 to n exclusive, read b[i]\n    sort elements from b to b + i using cmp to compare\n    if b[0] + b[1] is greater than or equal to sum\n      print \"YES\" print newline\n    else\n      print \"NO\" print newline\n  \n  \n\n",
        "long long a[100010], b[100010];\nbool cmp(int a, int b) {\n  return a > b;\n}\nint main() {\n  int n, i, j;\n  while (cin >> n) {\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    double sum = 0;\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n      sum += a[i];\n    }\n    for (i = 0; i < n; i++) { cin >> b[i]; }\n    sort(b, b + i, cmp);\n    if (b[0] + b[1] >= sum)\n      cout << \"YES\" << endl;\n    else\n      cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, M, M2, s = long long and set s to 0\n  t = long long array of size 100005\n  t2 = long long array of size 100005\n  read n\n  for long long i = 0 to n exclusive\n    read t[i]\n    increase s by t[i]\n  \n  for long long i = 0 to n exclusive read t2[i]\n  sort the first n elements of t2\n  if s <= t2[n-1] + t2[n-2]\n    print YES\n  else\n    print NO\n  \n\n",
        "int main() {\n  long long n, M, M2, s = 0;\n  long long t[100005];\n  long long t2[100005];\n  cin >> n;\n  for (long long i = 0; i < n; i++) {\n    cin >> t[i];\n    s += t[i];\n  }\n  for (long long i = 0; i < n; i++) { cin >> t2[i]; }\n  sort(t2, t2 + n);\n  if (s <= t2[n - 1] + t2[n - 2]) {\n    cout << \"YES\" << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant long long Mod with value 1e9 + 7\ncreate constant double pi with value 2 * acos(0.0)\ncreate constant double N with value 2e5 + 5\narr is an integer array with size N\n\n  create long longs n, x and s, with s = 0\n  read n\n  for integer i = 0 to n exclusive\n    read x\n    increase s by x\n  \n  for integer i = 0 to n exclusive read arr[i]\n  sort arr\n  if arr[n - 1] + arr[n - 2] >= s\n    print \"YES\" and a new line\n  else\n    print \"NO\" and a new line\n  \n\n",
        "const long long Mod = 1e9 + 7;\nconst double pi = 2 * acos(0.0);\nconst int N = 2e5 + 5;\nint arr[N];\nint main() {\n  long long n, x, s = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    s += x;\n  }\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  sort(arr, arr + n);\n  if (arr[n - 1] + arr[n - 2] >= s)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  let sum and cur be long longs where sum = 0\n  for size_t = 0 to n exclusive\n    read cur\n    increase sum by cur\n  \n  create long longs Max1 and Max2 = -1\n  for size_t = 0 to n exclusive\n    read cur\n    if cur is greater than Max1\n      set Max2 to Max1\n      set value of Max1 to cur\n    else if cur is greater than Max2\n      Max2 = cur\n    \n  \n  print \"YES\\n\" if Max2 + Max1 >= sum, else pring \"NO\\n\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long sum = 0, cur;\n  for (size_t i = 0; i < n; i++) {\n    cin >> cur;\n    sum += cur;\n  }\n  long long Max1 = -1, Max2 = -1;\n  for (size_t i = 0; i < n; i++) {\n    cin >> cur;\n    if (cur > Max1) {\n      Max2 = Max1;\n      Max1 = cur;\n    } else if (cur > Max2) {\n      Max2 = cur;\n    }\n  }\n  cout << ((Max2 + Max1 >= sum) ? \"YES\\n\" : \"NO\\n\");\n  return 0;\n}\n"
    ],
    [
        "\n  create integer x\n  create long long integer k with k = 0\n  read x\n  create long long integer vector v\n  create integer arrays a, b, with a size x, b size x\n  for i = 0 to x exclusive\n    create integer s\n    read s\n    increment k by s\n  \n  for i = 0 to x exclusive\n    create long long integer d\n    read d\n    add element d to end of v\n  \n  sort elements from beginning of v to end of v\n  create long long integer s with s = v[x-1]+v[x-2]\n  if s is greater than or equal to k\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n  \n  \n\n",
        "int main() {\n  int x;\n  long long int k = 0;\n  cin >> x;\n  vector<long long int> v;\n  int a[x], b[x];\n  for (int i = 0; i < x; i++) {\n    int s;\n    cin >> s;\n    k += s;\n  }\n  for (int i = 0; i < x; i++) {\n    long long int d;\n    cin >> d;\n    v.push_back(d);\n  }\n  sort(v.begin(), v.end());\n  long int s = v[x - 1] + v[x - 2];\n  if (s >= k) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare gcd with long longs a, b as arguments, returning long long\n  while b is true, swap values of ( set a to a % b, and b )\n  return a\n\n\n  create long long n\n  read n\n  create long long vector nums initialized with n\n  create long long sum with sum = 0\n  for i = 0 to n exclusive\n    create long long a\n    read a\n    increment sum by a\n  \n  create long longs mx1, mx2 with mx1= 0, mx2 = 0\n  for i = 0 to n exclusive\n    read nums[i]\n    if nums[i] is greater than mx1\n      set mx2 to mx1, set mx1 to nums[i]\n    else if nums[i] is less than or equal to mx1 and nums[i] is greater than mx2\n      set mx2 to nums[i]\n  \n  if sum is less than or equal to mx1 + mx2\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n\n",
        "long long gcd(long long a, long long b) {\n  while (b) swap(a %= b, b);\n  return a;\n}\nint main() {\n  long long n;\n  cin >> n;\n  vector<long long> nums(n);\n  long long sum = 0;\n  for (long long i = 0; i < n; ++i) {\n    long long a;\n    cin >> a;\n    sum += a;\n  }\n  long long mx1 = 0, mx2 = 0;\n  for (long long i = 0; i < n; ++i) {\n    cin >> nums[i];\n    if (nums[i] > mx1)\n      mx2 = mx1, mx1 = nums[i];\n    else if (nums[i] <= mx1 && nums[i] > mx2)\n      mx2 = nums[i];\n  }\n  if (sum <= mx1 + mx2)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "n, j, minnum and ans are integers with minnum = 1000000002 and ans = 100002\ncreate an arrays of ints a and flag with size 100005\n\n  read n\n  for i from 1 to n inclusive\n    read a[i]\n    if minnum is greater than a[i], change minnum to a[i]\n  \n  for i from 1 to n inclusive\n    if a[i] = minnum\n      increment j\n      change flag[j] to i\n    \n  \n  for integer i = 1 to j exclusive\n    if flag[i + 1] - flag[i] is less than ans, set ans to flag[i + 1] - flag[i]\n  print ans\n  \n\n",
        "int n, j, minnum = 1000000002, ans = 100002;\nint a[100005], flag[100005];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (minnum > a[i]) minnum = a[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == minnum) {\n      j++;\n      flag[j] = i;\n    }\n  }\n  for (int i = 1; i < j; i++)\n    if (flag[i + 1] - flag[i] < ans) ans = flag[i + 1] - flag[i];\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "n, a, mink, pr, mind = integers with a = integer array of size 100001, mink = 2e9, pr = -1, mind = 2e9\n\n  read n\n  for i = 0 to n exclusive\n    read a[i]\n    mink = min of mink and a[i]\n  \n  for i = 0 to n exclusive\n    if pr is not -1 and a[i] is mink, mind = min(mind, i - pr)\n    if a[i] is mink, pr = i\n  \n  print mind\n\n",
        "int n, a[100001], mink = 2e9, pr = -1, mind = 2e9;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    mink = min(mink, a[i]);\n  }\n  for (int i = 0; i < n; i++) {\n    if (pr != -1 && a[i] == mink) { mind = min(mind, i - pr); }\n    if (a[i] == mink) { pr = i; }\n  }\n  cout << mind << endl;\n}\n"
    ],
    [
        "create constant int maxn = 1e7 + 10\nlet int array a of size maxn\nlet int n\nlet integer mini = 1e9 + 10\n\n  read n\n  for i = 0 to n exclusive\n    read a[i]\n    if a[i] is less than mini, set mini to a[i]\n  \n  create int vector vec\n  for i = 0 to n exclusive\n    if mini is equal to a[i], append i to vec\n  \n  set mini to n\n  for i = 0 to the size of vec exclusive, set mini to the min of mini and vec[i + 1] - vec[i]\n  print mini\n  \n\n",
        "const int maxn = 1e7 + 10;\nint a[maxn];\nint n;\nint mini = 1e9 + 10;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] < mini) mini = a[i];\n  }\n  vector<int> vec;\n  for (int i = 0; i < n; i++) {\n    if (mini == a[i]) { vec.push_back(i); }\n  }\n  mini = n;\n  for (int i = 0; i < vec.size() - 1; i++) { mini = min(mini, vec[i + 1] - vec[i]); }\n  cout << mini << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  v = long long vector\n  v1 = long long vector\n  i, j, n, ans, min, t, flag = long long with min = 1000000002\n  read n\n  for i = 0 to n\n    x = long long\n    read x\n    append x to v\n    if x is less than min set min to x\n  \n  for i = 0 to n\n    if min is v[i] append i to v1\n  \n  set min to 1000000002\n  for i = 1 to size of v1\n    if (v1[i] - v1[i - 1]) < min set min to v1[i] - v1[i - 1]\n  \n  print min\n\n",
        "int main() {\n  vector<long long> v;\n  vector<long long> v1;\n  long long i, j, n, ans, min = 1000000002, t, flag;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    v.push_back(x);\n    if (x < min) { min = x; }\n  }\n  for (i = 0; i < n; i++) {\n    if (min == v[i]) { v1.push_back(i); }\n  }\n  min = 1000000002;\n  for (i = 1; i < v1.size(); i++) {\n    if ((v1[i] - v1[i - 1]) < min) { min = (v1[i] - v1[i - 1]); }\n  }\n  cout << min << endl;\n}\n"
    ],
    [
        "a = array of integers of length 100010\n\n  let n, m, j, k, l, i, o, p be integers with j = INT_MAX, l = INT_MAX\n  read n\n  for i = 1 to n inclusive\n    read a[i]\n    l is equal to minimum of l, a[i]\n  \n  k is equal to distance(a, find(a + 1, a + n + 1, l))\n  for i = k + 1 to n inclusive\n    if a[i] is equal to l\n      j is equal to minimum of j, i - k\n      k is equal to i\n    \n  \n  print j and newline\n  \n\n",
        "int a[100010];\nint main() {\n  int n, m, j = INT_MAX, k, l = INT_MAX, i, o, p;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> a[i];\n    l = min(l, a[i]);\n  }\n  k = distance(a, find(a + 1, a + n + 1, l));\n  for (i = k + 1; i <= n; i++) {\n    if (a[i] == l) {\n      j = min(j, i - k);\n      k = i;\n    }\n  }\n  cout << j << endl;\n  return 0;\n}\n"
    ],
    [
        "n, a, Min, pre, ans = integers with a = array of size 100005, ans = 100005\n\n  read n\n  for i = 1 to n, read a[i]\n  Min = a[1]\n  for i = 2 to n, Min = min of Min and a[i]\n  for i = 1 to n\n    if a[i] is Min\n      if not pre\n        pre = i\n      else\n        ans = min(ans, i - pre), pre = i\n    \n  print ans\n  \n\n",
        "int n, a[100005], Min, pre, ans = 100005;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  Min = a[1];\n  for (int i = 2; i <= n; i++) Min = min(Min, a[i]);\n  for (int i = 1; i <= n; i++)\n    if (a[i] == Min) {\n      if (!pre)\n        pre = i;\n      else\n        ans = min(ans, i - pre), pre = i;\n    }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let int s = 9999999999\n  let int n\n  read n\n  create pair array a of int and int of size n\n  for i = 0 to n exclusive\n    read a[i].first\n    set a[i].second to i + 1\n  \n  sort array a\n  for i = 0 to n - 1 exclusive\n    if a[i].first equals a[i + 1].first and a[0].first equals a[i].first, set s to min of s and a[i +1].second - a[i].second\n  \n  print s\n  \n\n",
        "int main() {\n  int s = 9999999999;\n  int n;\n  cin >> n;\n  pair<int, int> a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i].first;\n    a[i].second = i + 1;\n  }\n  sort(a, a + n);\n  for (int i = 0; i < n - 1; i++) {\n    if (a[i].first == a[i + 1].first && a[0].first == a[i].first) { s = min(s, a[i + 1].second - a[i].second); }\n  }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  size = int and in = int array of size 100005\n  d1 = int vector\n  read size\n  read size values into in\n  mn = int with mn = 1e9\n  for i = 0 to size\n    if in[i] < mn set mn to in[i]\n  \n  for i = 0 to size\n    if mn is in[i] append i to d1\n  \n  mns = int with mns = 1e9\n  for i = 0 to size of d1 - 1\n    if absolute of d1[i] - d1[i + 1] < mns set mns to ansolute of d1[i] - d1[i + 1]\n  \n  print mns\n  \n\n",
        "int main() {\n  int size, in[100005];\n  vector<int> d1;\n  cin >> size;\n  for (int i = 0; i < size; i++) { cin >> in[i]; }\n  int mn = 1e9;\n  for (int i = 0; i < size; i++) {\n    if (in[i] < mn) { mn = in[i]; }\n  }\n  for (int i = 0; i < size; i++) {\n    if (mn == in[i]) { d1.push_back(i); }\n  }\n  int mns = 1e9;\n  for (int i = 0; i < d1.size() - 1; i++) {\n    if (abs(d1[i] - d1[i + 1]) < mns) { mns = abs(d1[i] - d1[i + 1]); }\n  }\n  cout << mns << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  while read n\n    v = vector of integer with v = n\n    s = vector of integer with s = n\n    for i = 0 to n exclusive\n      read v[i]\n      s[i] = v[i]\n    \n    sort s.begin() and s.end()\n    a, b = integers\n    a = s[0]\n    b = s[1]\n    x, y, d = integers\n    d = x = y = 1000000100\n    sw = bool with sw = true\n    for i = 0 to n exclusive\n      if a is v[i]\n        x = i\n        break loop\n      \n    \n    for i = x + 1 to n exclusive\n      if b is v[i]\n        y = i\n        d = min of d and abs(x - y)\n        x = i\n      \n    \n    print d\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    vector<int> v(n);\n    vector<int> s(n);\n    for (int i = 0; i < n; i++) {\n      cin >> v[i];\n      s[i] = v[i];\n    }\n    sort(s.begin(), s.end());\n    int a, b;\n    a = s[0];\n    b = s[1];\n    int x, y, d;\n    d = x = y = 1000000100;\n    bool sw = true;\n    for (int i = 0; i < n; i++) {\n      if (a == v[i]) {\n        x = i;\n        break;\n      }\n    }\n    for (int i = x + 1; i < n; i++) {\n      if (b == v[i]) {\n        y = i;\n        d = min(d, abs(x - y));\n        x = i;\n      }\n    }\n    cout << d << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, menor, pos, ans, i = int\n  read n\n  V = int vector of size n\n  read n values into V\n  set menor to 2000000000\n  for i = 0 to n set menor to min of menor and V[i]\n  for i = 0 to n\n    if V[i] = menor\n      set pos to i\n      break\n    \n  \n  set ans to 1000000\n  for i = pos + 1 to n\n    if V[i] = menor\n      if i - pos < ans set ans to i - pos\n      set pos to i\n    \n  \n  print ans\n\n",
        "int main() {\n  int n, menor, pos, ans, i;\n  cin >> n;\n  vector<int> V(n);\n  for (i = 0; i < n; i++) { cin >> V[i]; }\n  menor = 2000000000;\n  for (i = 0; i < n; i++) { menor = min(menor, V[i]); }\n  for (i = 0; i < n; i++) {\n    if (V[i] == menor) {\n      pos = i;\n      break;\n    }\n  }\n  ans = 1000000;\n  for (i = pos + 1; i < n; i++) {\n    if (V[i] == menor) {\n      if (i - pos < ans) ans = i - pos;\n      pos = i;\n    }\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "create long long array a of length 100005\n\n  create long long a and mi, set mi to 1000000007\n  read n\n  for i=1 to n+1 exclusive\n    read a[i]\n    set mi to min of mi and a[i]\n  \n  set j to -1000000007 and ans to 1000000007\n  for i=1 to n+1 exclusive\n    if a[i] = mi\n      set ans to min of ans and i - j\n      assign i to j\n    \n  \n  print ans\n  \n\n",
        "long long a[100005];\nint main() {\n  long long n, mi = 1000000007;\n  cin >> n;\n  for (long long i = 1; i < n + 1; i++) {\n    cin >> a[i];\n    mi = min(mi, a[i]);\n  }\n  long long j = -1000000007, ans = 1000000007;\n  for (long long i = 1; i < n + 1; i++) {\n    if (a[i] == mi) {\n      ans = min(ans, i - j);\n      j = i;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer n\n  read n\n  declare integer pointer a = new integer array size n\n  declare long long integer min = 99999999999999999\n  for i = 0 to n exclusive\n    read a[i]\n    if a[i] is less than min, let min = a[i]\n  \n  declare integer array p size 100000\n  declare integer c = 0\n  for i = 0 to n exclusive\n    if a[i] is min\n      let p[c] be i\n      increment c\n    \n  \n  let min be 99999999999999999\n  for i = 1 to c exclusive\n    declare integer r = p[i] - p[i - 1]\n    if r is less than min, let min be r\n  \n  print min, newline\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int *a = new int[n];\n  long long int min = 99999999999999999;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] < min) { min = a[i]; }\n  }\n  int p[100000];\n  int c = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] == min) {\n      p[c] = i;\n      c++;\n    }\n  }\n  min = 99999999999999999;\n  for (int i = 1; i < c; i++) {\n    int r = p[i] - p[i - 1];\n    if (r < min) { min = r; }\n  }\n  cout << min << endl;\n}\n"
    ],
    [
        "let maxn be a constant integer with maxn = 1e6 + 7\nlet mod be a constant integer with mod = 998244353\nread the integer data\n  let c, Nig, x be integers with Nig = 1, x = 0\n  while not isdigit of c , c = getchar()\n  if c is equal to - , Nig = -1, c = getchar()\n  while isdigit of c, x is equal to ((x << 1) + (x << 3)) + (c ^ '0'), c is equal to getchar()\n  return the value of Nig * x\n\na = array of integers of length maxn\n\n  read from n\n  for i = 1 to n inclusive, read a[i]\n  let minl be a integer with minl = *min_element(a + 1, a + 1 + n)\n  let pos, ans be integers with pos = -1, ans = 0x3f3f3f3f\n  for i = 1 to n inclusive\n    if a[i] is equal to minl\n      if ~pos\n        ans is equal to minimum of ans and i - pos , pos is equal to i\n      else do the following\n        pos is equal to i\n    \n  \n  print ans and new line\n  \n\n",
        "const int maxn = 1e6 + 7;\nconst int mod = 998244353;\nint read() {\n  int c = getchar(), Nig = 1, x = 0;\n  while (!isdigit(c)) c = getchar();\n  if (c == '-') Nig = -1, c = getchar();\n  while (isdigit(c)) x = ((x << 1) + (x << 3)) + (c ^ '0'), c = getchar();\n  return Nig * x;\n}\nint a[maxn];\nint main() {\n  int n = read();\n  for (int i = 1; i <= n; i++) { a[i] = read(); }\n  int minl = *min_element(a + 1, a + 1 + n);\n  int pos = -1, ans = 0x3f3f3f3f;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == minl) {\n      if (~pos)\n        ans = min(ans, i - pos), pos = i;\n      else\n        pos = i;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create new array of long longs a with 200050 elements\ncreate new array of long longs b with size 200050\ndeclare integer variable len with value 0\n\n  declare new integer called n\n  read n\n  for i from 0 to n exclusive, read standard input to a[i]\n  create long long minn with value 1000000009\n  for integer i = 0 to n exclusive, set minn to min of minn and a[i]\n  for integer i = 0 to n exclusive incrementing i\n    if a[i] = minn\n      assign i to b[len]\n      increment len by one\n    \n  \n  declare new long long called minnn = 200000050\n  in a for loop, change i from 1 to len exclusive, assigning min of minnn and b[i] - b[i - 1] to minnn on each loop\n  print minnn to the standard output\n  \n\n",
        "long long a[200050];\nlong long b[200050];\nint len = 0;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  long long minn = 1000000009;\n  for (int i = 0; i < n; i++) { minn = min(minn, a[i]); }\n  for (int i = 0; i < n; i++) {\n    if (a[i] == minn) {\n      b[len] = i;\n      len++;\n    }\n  }\n  long long minnn = 200000050;\n  for (int i = 1; i < len; i++) { minnn = min(minnn, b[i] - b[i - 1]); }\n  cout << minnn << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, n, mini, ans = long long int with ans = 0\n  read n\n  for i = 0 to n\n    read a\n    increment ans\n    if i is 0 or a is less than mini\n      set mini to a\n      set ans to 0\n      set b to 0\n    else if a is mini\n      if ans is less than b or b is 0 set b to ans\n      set ans to 0\n    \n  \n  print b\n  \n\n",
        "int main() {\n  long long int a, b, n, mini, ans = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    ans++;\n    if (i == 0 || a < mini) {\n      mini = a;\n      ans = 0;\n      b = 0;\n    } else if (a == mini) {\n      if ((ans < b) || (b == 0)) { b = ans; }\n      ans = 0;\n    }\n  }\n  cout << b << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let ints n, min = INT_MAX, cnt = 0, first, last, and selisih and int array num of size 100005\n  create int has = INT_MAX and int array arrpos of size 100005\n  read n\n  for x = 1 to n\n    read num[x]\n    if num[x] is less than min, set min to num[x]\n  \n  for x = 1 to n\n    if num[x] equals min\n      if cnt is equal to 0\n        set arrpos[x] to x\n        set first to x\n      \n      if cnt equals 1\n        set arrpos[x] to x\n        set last to x\n      \n      if cnt is greater than or equal to 2\n        set first to last\n        set last to x\n        set arrpos[x] to x\n      \n      increment cnt\n    \n    if cnt is greater than or equal to 2\n      set selisih to the result of arrpos[last] - arrpos[first]\n      if selisih is less than has, set has to selisih\n    \n  \n  print has\n  \n\n",
        "int main() {\n  int n, num[100005], min = INT_MAX, cnt = 0, first, last, selisih;\n  int arrpos[100005], has = INT_MAX;\n  cin >> n;\n  for (int x = 1; x <= n; x++) {\n    cin >> num[x];\n    if (num[x] < min) { min = num[x]; }\n  }\n  for (int x = 1; x <= n; x++) {\n    if (num[x] == min) {\n      if (cnt == 0) {\n        arrpos[x] = x;\n        first = x;\n      }\n      if (cnt == 1) {\n        arrpos[x] = x;\n        last = x;\n      }\n      if (cnt >= 2) {\n        first = last;\n        last = x;\n        arrpos[x] = x;\n      }\n      cnt++;\n    }\n    if (cnt >= 2) {\n      selisih = arrpos[last] - arrpos[first];\n      if (selisih < has) { has = selisih; }\n    }\n  }\n  cout << has << endl;\n  return 0;\n}\n"
    ],
    [
        "a is a new array of integers with size 1e5 + 5\nfunction min with long long arguments a and b that returns long long\n  if a is greater than b\n    return b\n  else\n    return a\n  \n\n\n  declare integer variable n\n  read n from the user input\n  declare long long m with value 1e9 + 1\n  for integer i = 1 to n inclusive incrementing i\n    read input to a[i]\n    change m to min of m and a[i]\n  \n  declare vector of integers called ans\n  for i = 1 to n inclusive\n    if a[i] is equal to m, push i into ans\n  \n  create new integer called mins = 1e9\n  declare integer size with value length of ans - 1\n  for i from 1 to size inclusive, assign min of mins and ans[i] - ans[i - 1] to mins\n  print mins to the standard output\n  \n\n",
        "int a[(int)1e5 + 5];\nlong long min(long long a, long long b) {\n  if (a > b) {\n    return b;\n  } else {\n    return a;\n  }\n}\nint main() {\n  int n;\n  cin >> n;\n  long long m = 1e9 + 1;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    m = min(m, a[i]);\n  }\n  vector<int> ans;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == m) { ans.push_back(i); }\n  }\n  int mins = 1e9;\n  int size = ans.size() - 1;\n  for (int i = 1; i <= size; i++) { mins = min(mins, ans[i] - ans[i - 1]); }\n  cout << mins << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  t, n, i, x, pp, count, flag, dis, min, sum = integers with flag = 0, dis = 0, min = 0\n  v = vector of integer\n  it = iterator vector of integer\n  read n\n  while decrement n\n    read x\n    append x in v\n  \n  t = pointer min_element on v.begin() and v.end()\n  for i = 0 to v.size() exclusive\n    if v[i] is t\n      if flag is not 0\n        dis = i - pp\n        if min is 0 and dis is not 0\n          min = dis\n        else if min is not 0 and min > dis\n          min = dis\n      \n      increment flag\n      pp = i\n    \n  \n  print min\n  \n\n",
        "int main() {\n  int t, n, i, x, pp, count, flag = 0, dis = 0, min = 0, sum;\n  vector<int> v;\n  vector<int>::iterator it;\n  cin >> n;\n  while (n--) {\n    cin >> x;\n    v.push_back(x);\n  }\n  t = *min_element(v.begin(), v.end());\n  for (i = 0; i < v.size(); i++) {\n    if (v[i] == t) {\n      if (flag != 0) {\n        dis = i - pp;\n        if (min == 0 && dis != 0)\n          min = dis;\n        else if (min != 0 && min > dis)\n          min = dis;\n      }\n      flag++;\n      pp = i;\n    }\n  }\n  cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer x\n  read x from the input\n  create new array of integers ara with x elements\n  create new integer maxn\n  create new set of integers s\n  set maxn to 1000000009\n  declare new integer variable d with value 1000000009\n  create boolean variable with name b with value 0\n  in the for loop, change integer w from 0 to x exclusive\n    read variable ara[w] from the input\n    if ara[w] is less than maxn, change maxn to ara[w]\n  \n  for w from 0 to x exclusive\n    if ara[w] = maxn, insert w into set s\n  \n  i is a new iterator for the set of integers\n  j is a new iterator for the set of integers pointed to the end of s\n  decrement j\n  declare ints l and m\n  move i through s in a for loop\n    if i is equal to j, skip the rest of the loop\n    change m to the value pointed by i\n    increment i\n    change l to the value pointed by i\n    decrement i\n    if l - m is less than d, set d to (l - m)\n  \n  print d to the standard output\n  \n\n",
        "int main() {\n  int x;\n  cin >> x;\n  int ara[x];\n  int maxn;\n  set<int> s;\n  maxn = 1000000009;\n  int d = 1000000009;\n  bool b = 0;\n  for (int w = 0; w < x; w++) {\n    cin >> ara[w];\n    if (ara[w] < maxn) { maxn = ara[w]; }\n  }\n  for (int w = 0; w < x; w++) {\n    if (ara[w] == maxn) { s.insert(w); }\n  }\n  set<int>::iterator i;\n  set<int>::iterator j = s.end();\n  j--;\n  int l, m;\n  for (i = s.begin(); i != s.end(); i++) {\n    if (i == j) continue;\n    m = *i;\n    i++;\n    l = *i;\n    i--;\n    if (l - m < d) d = (l - m);\n  }\n  cout << d << endl;\n  return 0;\n}\n"
    ],
    [
        "a is a new array of integers with 300000 elements\n\n  create ints n, m1, m2, minn and minn2 with m1 and m2 = 0, minn2 = 9999999 and minn = 9999999999\n  read standard input to n\n  for i from 1 to n inclusive incrementing i\n    read input to a[i]\n    if minn is greater than a[i], assign a[i] to minn\n  \n  start for loop from i = 1 to n inclusive on each loop\n    if a[i] is equal to minn\n      if m1 is equal to 0\n        change m1 to i\n      else if m2 = 0\n        assign i to m2\n        if minn2 is greater than m2 - m1, change minn2 to m2 - m1\n      else\n        change m1 to m2\n        assign i to m2\n        if minn2 is greater than m2 - m1, change minn2 to m2 - m1\n      \n    \n  \n  print minn2 to the standard output\n  \n\n",
        "int a[300000];\nint main() {\n  int n, m1 = 0, m2 = 0, minn = 9999999999, minn2 = 9999999;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (minn > a[i]) minn = a[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == minn) {\n      if (m1 == 0)\n        m1 = i;\n      else if (m2 == 0) {\n        m2 = i;\n        if (minn2 > m2 - m1) minn2 = m2 - m1;\n      } else {\n        m1 = m2;\n        m2 = i;\n        if (minn2 > m2 - m1) minn2 = m2 - m1;\n      }\n    }\n  }\n  cout << minn2 << endl;\n  return 0;\n}\n"
    ],
    [
        "nums is a new vector of integers\n\n  declare int variables n, a, last and dist\n  create integer variable min with value INT_MAX\n  mindist is a new integer with value INT_MAX\n  read n from the user input\n  for i from 0 to n exclusive\n    read input to a\n    push a to the end of nums\n    if a is less than min, set min to a\n  \n  in a for loop, change i from 0 to n exclusive\n    if nums[i] = min\n      change last to i\n      break\n    \n  \n  for i from last + 1 to n exclusive incrementing i\n    if nums[i] = min\n      change dist to i - last\n      if dist is less than mindist, change mindist to dist\n      assign i to last\n    \n  \n  print mindist to the standard output\n\n",
        "vector<int> nums;\nint main() {\n  int n, a, last, dist;\n  int min = INT_MAX;\n  int mindist = INT_MAX;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    nums.push_back(a);\n    if (a < min) min = a;\n  }\n  for (int i = 0; i < n; i++) {\n    if (nums[i] == min) {\n      last = i;\n      break;\n    }\n  }\n  for (int i = last + 1; i < n; i++) {\n    if (nums[i] == min) {\n      dist = i - last;\n      if (dist < mindist) mindist = dist;\n      last = i;\n    }\n  }\n  cout << mindist << endl;\n}\n"
    ],
    [
        "\n  declare integer variable n and an array of integers ar with size 100010\n  read n\n  read input into ar n times\n  declare integer variable mn = ar[0]\n  for i from 0 to n exclusive\n    if mn is greater than ar[i], assign ar[i] to mn\n  \n  declare integers p1, p2 and d with p1 and p2 = -1\n  create int mnd = n\n  for integer i = 0 to n exclusive\n    if ar[i] = mn\n      assign i to p1\n      if p2 != -1\n        if mnd is greater than (p1 - p2), change mnd to p1 - p2\n      \n      assign p1 to p2\n    \n  \n  print mnd\n  \n\n",
        "int main() {\n  int n, ar[100010];\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> ar[i]; }\n  int mn = ar[0];\n  for (int i = 0; i < n; i++) {\n    if (mn > ar[i]) mn = ar[i];\n  }\n  int p1 = -1, p2 = -1, d;\n  int mnd = n;\n  for (int i = 0; i < n; i++) {\n    if (ar[i] == mn) {\n      p1 = i;\n      if (p2 != -1) {\n        if (mnd > (p1 - p2)) { mnd = p1 - p2; }\n      }\n      p2 = p1;\n    }\n  }\n  cout << mnd << endl;\n  return 0;\n}\n"
    ],
    [
        "n, mn, skr, mnd = integers with mn = 1e9 + 7, skr = 1e9 + 7, mnd = 1e6\nin the function masuk that takes integer idx\n  if idx < n\n    ai = integer\n    read ai\n    mn = min of mn and ai\n    masuk of idx + 1\n    if ai is mn\n      mnd = min of mnd and skr - idx\n      skr = idx\n    \n  \n\n\n  read n\n  masuk of 0\n  print mnd\n  \n\n",
        "int n, mn = 1e9 + 7, skr = 1e9 + 7, mnd = 1e6;\nvoid masuk(int idx) {\n  if (idx < n) {\n    int ai;\n    cin >> ai;\n    mn = min(mn, ai);\n    masuk(idx + 1);\n    if (ai == mn) {\n      mnd = min(mnd, skr - idx);\n      skr = idx;\n    }\n  }\n}\nint main() {\n  cin >> n;\n  masuk(0);\n  cout << mnd << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  t,n,i,x,pp,count,sum=int, flag,dis,min=0\n  v=vector of int\n  it=iterator on vector of int\n  read n\n  while decremented value of n is not zero\n    read x\n    put x at end of v\n  \n  t=item of v with min value\n  for i=0 to size of v exclusive\n    if v[i] is t\n      if flag != 0\n        dis=i-pp\n        if min is 0 and dis is not 0\n          min=dis\n        else if min is not 0 and min>dis\n          min=dis\n      \n      increment flag\n      pp=i\n    \n  \n  print min\n  \n\n",
        "int main() {\n  int t, n, i, x, pp, count, flag = 0, dis = 0, min = 0, sum;\n  vector<int> v;\n  vector<int>::iterator it;\n  cin >> n;\n  while (n--) {\n    cin >> x;\n    v.push_back(x);\n  }\n  t = *min_element(v.begin(), v.end());\n  for (i = 0; i < v.size(); i++) {\n    if (v[i] == t) {\n      if (flag != 0) {\n        dis = i - pp;\n        if (min == 0 && dis != 0)\n          min = dis;\n        else if (min != 0 && min > dis)\n          min = dis;\n      }\n      flag++;\n      pp = i;\n    }\n  }\n  cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, minix, p, q\n  read n\n  create vector int v(n)\n  minix = INT_MAX\n  for i=0 to n exclusive\n    read v[i]\n    set minix to min of minix and v[i]\n  \n  assign -999999 to p\n  set q to INT_MAX\n  for i=0 to n exclusive\n    if v[i] = minix\n      set q = min of q and i - p\n      p=i\n    \n  \n  print q\n  \n\n",
        "int main() {\n  int n, minix, p, q;\n  cin >> n;\n  vector<int> v(n);\n  minix = INT_MAX;\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n    minix = min(minix, v[i]);\n  }\n  p = -999999;\n  q = INT_MAX;\n  for (int i = 0; i < n; i++) {\n    if (v[i] == minix) {\n      q = min(q, i - p);\n      p = i;\n    }\n  }\n  cout << q << endl;\n  return 0;\n}\n"
    ],
    [
        "create const int oo = 1e9\n\n  declare int variable n\n  read n\n  declare vector of integers called a with n elements\n  read n elements from the input into a\n  create int mn = pointer to the min element of a\n  create integer ans = oo\n  for i = 0 and prev = -oo while i < n, incrementing i\n    if a[i] is equal to mn\n      set ans to min of ans and i - prev\n      set prev to i\n    \n  print ans and '\\n'\n  \n\n",
        "const int oo = 1e9;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int mn = *min_element(a.begin(), a.end());\n  int ans = oo;\n  for (int i = 0, prev = -oo; i < n; i++)\n    if (a[i] == mn) {\n      ans = min(ans, i - prev);\n      prev = i;\n    }\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  declare vector of long longs v\n  create new vector of long longs v1\n  declare long longs i, j, n, ans, min, t and flag with min = 1000000002\n  read input to n\n  for i = 0 to n exclusive\n    declare long long variable x\n    read from the input to x\n    push x to the back of v\n    if x is less than min, set min to x\n  \n  for i from 0 to n exclusive\n    if min = v[i], push i into v1\n  \n  assign 1000000002 to min\n  start for loop from i = 1 to length of v1 exclusive\n    if (v1[i] - v1[i - 1]) is less than min, assign v1[i] - v1[i - 1] to min\n  \n  print min to the standard output\n\n",
        "int main() {\n  vector<long long> v;\n  vector<long long> v1;\n  long long i, j, n, ans, min = 1000000002, t, flag;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    v.push_back(x);\n    if (x < min) { min = x; }\n  }\n  for (i = 0; i < n; i++) {\n    if (min == v[i]) { v1.push_back(i); }\n  }\n  min = 1000000002;\n  for (i = 1; i < v1.size(); i++) {\n    if ((v1[i] - v1[i - 1]) < min) { min = (v1[i] - v1[i - 1]); }\n  }\n  cout << min << endl;\n}\n"
    ],
    [
        "arr = array of integers of length 1000000\n\n  let n be a integer\n  read n\n  let minimum, answer be integers wih answer = (int)1e9\n  create a vector of integers with name occurrences\n  for i = 0 to n exclusive\n    read arr[i]\n    if not i , minimum is equal to arr[0]\n    minimum is equal to minimum of minimum, arr[i]\n  \n  for i = 0 to n exclusive\n    if arr[i] is equal to minimum , push i into occurrences from back\n  for i = 1 to length of occurrences exclusive , answer = minimum of answer, occurrences[i] - occurrences[i - 1]\n  print answer and newline\n  \n\n",
        "int arr[1000000];\nint main() {\n  int n;\n  cin >> n;\n  int minimum, answer = (int)1e9;\n  vector<int> occurrences;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    if (!i) minimum = arr[0];\n    minimum = min(minimum, arr[i]);\n  }\n  for (int i = 0; i < n; i++)\n    if (arr[i] == minimum) occurrences.push_back(i);\n  for (int i = 1; i < occurrences.size(); i++) answer = min(answer, occurrences[i] - occurrences[i - 1]);\n  cout << answer << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, i = int\n  a = int array of size 100005\n  loop while reading n\n    Min = int with Min = 0x7fffffff\n    for i = 1 to n inclusive\n      read a[i]\n      set Min to min of a[i] and Min\n    \n    ans = int with ans = 0x7fffffff\n    t = int with t = -1\n    for i = 1 to n inclusive\n      if a[i] is Min\n        set t to i\n        break\n      \n    \n    for i = t + 1 to n inclusive\n      if a[i] is Min\n        set ans to min of i - t and ans\n        set t to i\n      \n    \n    print ans\n  \n  \n\n",
        "int main() {\n  int n, i;\n  int a[100005];\n  while (cin >> n) {\n    int Min = 0x7fffffff;\n    for (i = 1; i <= n; i++) {\n      cin >> a[i];\n      Min = min(a[i], Min);\n    }\n    int ans = 0x7fffffff;\n    int t = -1;\n    for (i = 1; i <= n; i++) {\n      if (a[i] == Min) {\n        t = i;\n        break;\n      }\n    }\n    for (i = t + 1; i <= n; i++) {\n      if (a[i] == Min) {\n        ans = min(i - t, ans);\n        t = i;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare new constant integer called maxn = 1e7 + 10\na is a new array of integers with maxn elements\nn is a new integer variable\ncreate new integer variable mini = 1e9 + 10\n\n  read from the input to n\n  start for loop from i = 0 to n exclusive\n    read from the input to a[i]\n    if a[i] is less than mini, assign a[i] to mini\n  \n  create new vector of integers vec\n  start for loop from i = 0 to n exclusive\n    if mini = a[i], add i to the end of vec\n  \n  assign n to mini\n  for i from 0 to length of vec - 1 exclusive, assign min of mini and vec[i + 1] - vec[i] to mini\n  print mini\n  \n\n",
        "const int maxn = 1e7 + 10;\nint a[maxn];\nint n;\nint mini = 1e9 + 10;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] < mini) mini = a[i];\n  }\n  vector<int> vec;\n  for (int i = 0; i < n; i++) {\n    if (mini == a[i]) { vec.push_back(i); }\n  }\n  mini = n;\n  for (int i = 0; i < vec.size() - 1; i++) { mini = min(mini, vec[i + 1] - vec[i]); }\n  cout << mini << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  r, c = integers\n  flag = integer with flag = -1\n  read r, c\n  v = 2d character array of size [r][c]\n  empt, wolf, sheep = integers with empt = 0, wolf = 0, sheep = 0\n  p = character\n  for i = 0 to r exclusive\n    for j = 0 to c exclusive\n      read p\n      if p is .\n        v[i][j] = D\n      else\n        v[i][j] = p\n    \n  \n  for i = 0 to r exclusive\n    for j = 0 to c exclusive\n      if v[i][j] is S\n        if v[i - 1][j] is W and i - 1 >= 0, flag = 0\n        if v[i + 1][j] is W and i + 1 < r, flag = 0\n        if v[i][j + 1] is W and j + 1 < c, flag = 0\n        if v[i][j - 1] is W and j - 1 >= 0, flag = 0\n      \n    \n  \n  if flag is 0\n    print NO\n  else\n    print YES\n    for i = 0 to r exclusive\n      for j = 0 to c exclusive, print v[i][j]\n      print new line\n    \n  \n\n",
        "int main() {\n  int r, c;\n  int flag = -1;\n  cin >> r >> c;\n  char v[r][c];\n  int empt = 0, wolf = 0, sheep = 0;\n  char p;\n  for (int i = 0; i < r; i++) {\n    for (int j = 0; j < c; j++) {\n      cin >> p;\n      if (p == '.')\n        v[i][j] = 'D';\n      else\n        v[i][j] = p;\n    }\n  }\n  for (int i = 0; i < r; i++) {\n    for (int j = 0; j < c; j++) {\n      if (v[i][j] == 'S') {\n        if (v[i - 1][j] == 'W' && i - 1 >= 0) flag = 0;\n        if (v[i + 1][j] == 'W' && i + 1 < r) flag = 0;\n        if (v[i][j + 1] == 'W' && j + 1 < c) flag = 0;\n        if (v[i][j - 1] == 'W' && j - 1 >= 0) flag = 0;\n      }\n    }\n  }\n  if (flag == 0)\n    cout << \"NO\" << endl;\n  else {\n    cout << \"YES\" << endl;\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) { cout << v[i][j]; }\n      cout << endl;\n    }\n  }\n}\n"
    ],
    [
        "create long long a and b\ncreate char s[1000][1000]\n\n  read a and b\n  for i=0 to a exclusive\n    for j=0 to b exclusive, read cin >> s[i][j]\n  \n  for i=0 to a exclusive\n    for j=0 to b exclusive\n      if s[i][j] = S\n        if s[i][j + 1] = W\n          print NO\n          \n        \n        if s[i][j - 1] equal to W\n          print NO\n          \n        \n        s[i + 1][j] = W\n          print NO\n          \n        \n        if s[i - 1][j] = W\n          print NO and a newline\n          \n        \n      \n    \n  \n  print YES\n  for i=0 to a exclusive\n    for j=0 to b exclusive\n      if s[i][j] = ., set s[i][j] to D\n      print s[i][j]\n    \n    print a newline\n  \n\n",
        "long long a, b;\nchar s[1000][1000];\nint main() {\n  cin >> a >> b;\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) { cin >> s[i][j]; }\n  }\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) {\n      if (s[i][j] == 'S') {\n        if (s[i][j + 1] == 'W') {\n          cout << \"NO\" << endl;\n          return 0;\n        }\n        if (s[i][j - 1] == 'W') {\n          cout << \"NO\" << endl;\n          return 0;\n        }\n        if (s[i + 1][j] == 'W') {\n          cout << \"NO\" << endl;\n          return 0;\n        }\n        if (s[i - 1][j] == 'W') {\n          cout << \"NO\" << endl;\n          return 0;\n        }\n      }\n    }\n  }\n  cout << \"YES\" << endl;\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) {\n      if (s[i][j] == '.') { s[i][j] = 'D'; }\n      cout << s[i][j];\n    }\n    cout << endl;\n  }\n}\n"
    ],
    [
        "declare int array freq with size 1005\n\n  declare int variables hh and mm\n  declare double variables h, d, c and n\n  declare doubles cost1 and cost2\n  read hh and mm\n  read input to h, d, c and n\n  declare int time = (hh * 60) + mm\n  declare int buns = 0\n  declare int hunger = h\n  while hunger > 0\n    subtract n from hunger\n    increment buns\n  \n  assign buns * c to cost1\n  if time is less than 1200\n    set hunger to h + ((1200 - time) * d)\n  else\n    change hunger to h\n  change buns to 0\n  while hunger > 0\n    decrease hunger by n\n    increment buns\n  \n  decrease c by c * (20.0 / 100)\n  change cost2 to c * buns\n  change decimal precision of the output to 5, set showpoint and fixed flags and print the min of cost2 and cost1\n\n",
        "int freq[1005];\nint main() {\n  int hh, mm;\n  double h, d, c, n;\n  double cost1, cost2;\n  cin >> hh >> mm;\n  cin >> h >> d >> c >> n;\n  int time = (hh * 60) + mm;\n  int buns = 0;\n  int hunger = h;\n  while (hunger > 0) {\n    hunger -= n;\n    buns++;\n  }\n  cost1 = buns * c;\n  if (time < 1200)\n    hunger = h + ((1200 - time) * d);\n  else\n    hunger = h;\n  buns = 0;\n  while (hunger > 0) {\n    hunger -= n;\n    buns++;\n  }\n  c -= c * (20.0 / 100);\n  cost2 = c * buns;\n  cout << setprecision(5) << showpoint << fixed << min(cost2, cost1) << endl;\n}\n"
    ],
    [
        "create vector integer v\ncreate integer arrays num, value, with num size 51, value size 51\n\n  create integers n, index with index = 1\n  read n\n  for i = 0 to n exclusive, read num[i]\n  add element num[n-1] to end of v\n  for i = n - 2 to 0 inclusive, decrementing i\n    create integers j, flag with j = 0, flag = 0\n    while j is less than size of v\n      if num[i] is v[j]\n        set flag to 1\n        break loop\n      \n      increment j\n    \n    if not flag, add element num[i] to end of v\n  \n  print size of v print newline\n  print v[size of v - 1]\n  for i = size of v - 2 to 0 inclusive, decrementing i, print \" \" print v[i]\n  print newline\n\n",
        "vector<int> v;\nint num[51], value[51];\nint main() {\n  int n, index = 1;\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> num[i]; }\n  v.push_back(num[n - 1]);\n  for (int i = n - 2; i >= 0; i--) {\n    int j = 0, flag = 0;\n    while (j < v.size()) {\n      if (num[i] == v[j]) {\n        flag = 1;\n        break;\n      }\n      j++;\n    }\n    if (!flag) v.push_back(num[i]);\n  }\n  cout << v.size() << endl;\n  cout << v[v.size() - 1];\n  for (int i = v.size() - 2; i >= 0; i--) cout << \" \" << v[i];\n  cout << endl;\n}\n"
    ],
    [
        "create integer array a with size 555\ncreate boolean array vis with size 1005\ncreate integer vector s\n\n  create integer n, tot with tot = 0\n  read n\n  for i = 0 to n exclusive, read a[i]\n  for i = n - 1 to 0 inclusive, decrementing i\n    if vis[a[i]] is false\n      add element a[i] to end of s\n      set vis[a[i]] to true\n    \n  \n  create integer len with len = size of s\n  print len print newline\n  for i = len - 1 to 0 exclusive, decrementing i, print s[i] print \" \"\n  print s[0] print newline\n  \n\n",
        "int a[55];\nbool vis[1005];\nvector<int> s;\nint main() {\n  int n, tot = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = n - 1; i >= 0; i--) {\n    if (!vis[a[i]]) {\n      s.push_back(a[i]);\n      vis[a[i]] = true;\n    }\n  }\n  int len = s.size();\n  cout << len << endl;\n  for (int i = len - 1; i > 0; i--) cout << s[i] << \" \";\n  cout << s[0] << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array num of size 100\ncreate integer array nn of size 100\ncreate integer cnt with cnt = 0\ncreate integer cc1 with cc1 = 0\ndeclare num_find with integer in as argument, returning boolean\n  for i = 0 to cnt exclusive\n    if num[i] is in, return true from function\n  \n  return false from function\n\n\n  create integer N\n  read N\n  for i = 0 to N exclusive\n    read nn[cc1]\n    increment cc1\n  \n  for i = N - 1 to 0 inclusive, decrement i\n    create integer tmp\n    set tmp to nn[i]\n    if result of num_find with tmp as argument is false\n      set num[cnt] is tmp\n      increment cnt\n    \n  \n  print cnt print newlien\n  for i = cnt - 1 to 0 exclusive, decrementing i, print num[i] print \" \"\n  print num[0] print newline\n\n",
        "int num[100];\nint nn[100];\nint cnt = 0;\nint cc1 = 0;\nbool num_find(int in) {\n  for (int i = 0; i < cnt; i++) {\n    if (num[i] == in) return true;\n  }\n  return false;\n}\nint main() {\n  int N;\n  cin >> N;\n  for (int i = 0; i < N; i++) {\n    cin >> nn[cc1];\n    cc1++;\n  }\n  for (int i = N - 1; i >= 0; i--) {\n    int tmp;\n    tmp = nn[i];\n    if (!num_find(tmp)) {\n      num[cnt] = tmp;\n      cnt++;\n    }\n  }\n  cout << cnt << endl;\n  for (int i = cnt - 1; i > 0; i--) cout << num[i] << \" \";\n  cout << num[0] << endl;\n}\n"
    ],
    [
        "declare integers n and t, integer arrays a and b with 100 elements and an array of integers visit with 1010 elements\n\n  while reading n\n    call memset with arguments a, 0 and sizeof(a)\n    call memset with arguments b, 0 and sizeof(b)\n    call memset with arguments visit, 0 and sizeof(visit)\n    t = 0\n    for i = 0 to n exclusive read a[i]\n    declare integer variable p = n\n    for i = n - 1 to 0 inclusive counting down\n      if visit[a[i]] is greater than 0\n        decrement p\n        continue the loop\n      \n      set b[t] to a[i] and increment t\n      increase visit[a[i]]\n    \n    print p\n    for i = t - 1 to 0 inclusive counting down\n      print b[i]\n      if i != 0, print \" \"\n    \n    print new line\n  \n\n",
        "int n, a[100], b[100], visit[1010], t;\nint main() {\n  while (cin >> n) {\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    memset(visit, 0, sizeof(visit));\n    t = 0;\n    for (int i = 0; i < n; i++) cin >> a[i];\n    int p = n;\n    for (int i = n - 1; i >= 0; i--) {\n      if (visit[a[i]] > 0) {\n        p--;\n        continue;\n      }\n      b[t++] = a[i];\n      visit[a[i]]++;\n    }\n    cout << p << endl;\n    for (int i = t - 1; i >= 0; i--) {\n      cout << b[i];\n      if (i != 0) cout << \" \";\n    }\n    cout << endl;\n  }\n}\n"
    ],
    [
        "\n  create integer arrays a, b with a size 5000, b size 5000\n  create integer array flag of size 5000\n  set bytes from flag to size of flag to value true\n  create integer n\n  read n\n  for i = 0 to n exclusive, read a[i]\n  create integer len with len = 0\n  for i = n - 1 to 0 inclusive, decrementing i\n    if flag[a[i]] is true\n      increment len\n      set b[len] to a[i]\n      set flag[a[i]] to false\n    \n  \n  print len print newline\n  for i = len to 1 inclusive, decrementing i\n    if i is not 1\n      print b[i] print ' '\n    else\n      print b[i] print newline\n  \n\n",
        "int main() {\n  int a[5000], b[5000];\n  int flag[5000];\n  memset(flag, true, sizeof(flag));\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  int len = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    if (flag[a[i]]) {\n      len++;\n      b[len] = a[i];\n      flag[a[i]] = false;\n    }\n  }\n  cout << len << endl;\n  for (int i = len; i >= 1; i--)\n    if (i != 1)\n      cout << b[i] << ' ';\n    else\n      cout << b[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "let n be integer\nA = array of integers of size 60\nlet sum be integer\nlet B be an array of integers of size 60\n\n  read n\n  sum = n\n  create integer t with value 0\n  read n elements from the input to A\n  for integer i = 0 to n exclusive\n    for integer x = i + 1 to n exclusive\n      if A[i] = A[x]\n        assign value of 0 to the A[i]\n        assign value of i to the B[t]\n        increase t\n        stop the loop\n      \n    \n  \n  for i = t - 1 to 0\n    decrease sum by one\n    for integer x = B[i] to n exclusive\n      A[x] = A[x + 1]\n      A[x + 1] = 0\n    \n  \n  print sum and a new line\n  for i = 0 to sum exclusive\n    print A[i]\n    if i != sum - 1, print \" \"\n  \n  print new line\n\n",
        "int n;\nint A[60];\nint sum;\nint B[60];\nint main() {\n  cin >> n;\n  sum = n;\n  int t = 0;\n  for (int i = 0; i < n; i++) { cin >> A[i]; }\n  for (int i = 0; i < n; i++) {\n    for (int x = i + 1; x < n; x++) {\n      if (A[i] == A[x]) {\n        A[i] = 0;\n        B[t] = i;\n        t++;\n        break;\n      }\n    }\n  }\n  for (int i = t - 1; i >= 0; i--) {\n    sum--;\n    for (int x = B[i]; x < n; x++) {\n      A[x] = A[x + 1];\n      A[x + 1] = 0;\n    }\n  }\n  cout << sum << endl;\n  for (int i = 0; i < sum; i++) {\n    cout << A[i];\n    if (i != sum - 1) { cout << \" \"; }\n  }\n  cout << endl;\n}\n"
    ],
    [
        "\n  let n and sum be integers, with sum = 0; a and b are arrays of integers with size 50 and v is an array of integers with size 1001 filled with 0\n  read n\n  read n elements into a\n  for integer i = n - 1 to 0 inclusive counting down\n    if v[a[i]] is 0\n      set value of v[a[i]] to 1\n      set value of b[sum] to a[i]\n      increment sum\n    \n  print sum and a new line\n  for i = sum - 1 to 0 exclusive counting down, print b[i] and ' '\n  print b[0] and a new line\n  \n\n",
        "int main() {\n  int a[50], b[50], v[1001] = {0}, n, sum = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = n - 1; i >= 0; i--)\n    if (!v[a[i]]) {\n      v[a[i]] = 1;\n      b[sum] = a[i];\n      sum++;\n    }\n  cout << sum << endl;\n  for (int i = sum - 1; i > 0; i--) cout << b[i] << ' ';\n  cout << b[0] << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer Max with Max = 1e3 + 10\ncreate integer arrays a, ans, flag, with a size Max, ans size Max, flag size Max\n\n  create integers n, tot with tot = 0\n  read n\n  for i = 1 to n inclusive, read a[i]\n  for i = n to 1 inclusive, decrementing i\n    if not flag[a[i]]\n      set flag[a[i]] to 1\n      set ans[increment tot] to a[i]\n    \n  \n  print tot print newline\n  for i = tot - 1 to 0 inclusive, decrementing i\n    print ans[i]\n    if i is not 0 print \" \"\n  \n  print newline\n  \n\n",
        "const int Max = 1e3 + 10;\nint a[Max], ans[Max], flag[Max];\nint main() {\n  int n, tot = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = n; i >= 1; i--) {\n    if (!flag[a[i]]) {\n      flag[a[i]] = 1;\n      ans[tot++] = a[i];\n    }\n  }\n  cout << tot << endl;\n  for (int i = tot - 1; i >= 0; i--) {\n    cout << ans[i];\n    if (i != 0) cout << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integer n\n  while read n\n    if n is 0\n      print 0 print newline\n    else if ( n + 1 ) % 2 is 0\n      print ( n + 1 ) / 2 print newline\n    else\n      print n + 1 print newline\n  \n  \n\n",
        "int main() {\n  long long int n;\n  while (cin >> n) {\n    if (n == 0)\n      cout << 0 << endl;\n    else if ((n + 1) % 2 == 0)\n      cout << (n + 1) / 2 << endl;\n    else\n      cout << n + 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long int n\n  read n\n  if n = 0\n    print n and a newline\n  else\n    if n is even\n      print n + 1 and a newline\n    otherwise\n      print (n + 1) / 2 and a newline\n    \n  \n\n",
        "int main() {\n  long long int n;\n  cin >> n;\n  if (n == 0) {\n    cout << n << \"\\n\";\n  } else {\n    if (n % 2 == 0) {\n      cout << n + 1 << \"\\n\";\n    } else {\n      cout << (n + 1) / 2 << \"\\n\";\n    }\n  }\n}\n"
    ],
    [
        "\n  declare int64_t N\n  read N\n  declare int64_t ans = 0 if N = 0, (N + 1) / 2 if N is even, or N + 1 if N is odd\n  print ans\n  \n\n",
        "int main() {\n  int64_t N;\n  cin >> N;\n  int64_t ans = N == 0 ? 0 : (N % 2 ? (N + 1) / 2 : N + 1);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create long long n\n\n  read n\n  if n = 0\n    print 0\n  else if n is even\n    print n+1\n  otherwise\n    print (n+1)/2 and a newline\n  \n\n",
        "long long n;\nint main() {\n  cin >> n;\n  if (n == 0)\n    cout << 0 << endl;\n  else if (n % 2 == 0)\n    cout << n + 1 << endl;\n  else\n    cout << (n + 1) / 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  Read n\n  if (n + 1) modulo 2 is equal to 0\n    print (n + 1) / 2 and a new line\n  else do the following\n    if n is equal to 0\n      print 0 and a new line\n    else do the following\n      print n + 1 and a new line\n    \n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  if ((n + 1) % 2 == 0) {\n    cout << (n + 1) / 2 << endl;\n  } else {\n    if (n == 0) {\n      cout << 0 << endl;\n    } else {\n      cout << n + 1 << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  let n be a unsigned long integer\n  read n\n  increase n value by 1\n  if (n modulus 2 is equal to 0)\n    print n / 2 and newline\n  else if (n is equal to 1)\n    print 0 and newline\n  else do the following\n    print n and newline\n\n",
        "int main() {\n  unsigned long long int n;\n  cin >> n;\n  n++;\n  if (n % 2 == 0)\n    cout << n / 2 << endl;\n  else if (n == 1)\n    cout << 0 << endl;\n  else\n    cout << n << endl;\n}\n"
    ],
    [
        "integer function gcd with integer arguments a and b\n  if b = 0\n    return a\n  else\n    call gcd with arguments b and a % b\n\n\n  declare long long integer variable n\n  read n and keep looping\n    increase n by one\n    if n = 1\n      print \"0\"\n    else if n is even\n      print n / 2\n    else\n      print n\n    print new line\n  \n\n",
        "int gcd(int a, int b) {\n  if (b == 0)\n    return a;\n  else\n    gcd(b, a % b);\n}\nint main() {\n  long long int n;\n  while (cin >> n) {\n    n++;\n    if (n == 1)\n      cout << \"0\";\n    else if (n % 2 == 0)\n      cout << n / 2;\n    else\n      cout << n;\n    cout << endl;\n  }\n}\n"
    ],
    [
        "\n  declare long long n\n  read n\n  if n = 0\n    print 0 and \"\\n\"\n    \n  \n  if n = 1\n    print 1 and \"\\n\"\n    \n  \n  if odd is greater than even\n    print (n + 1) / 2 and \"\\n\"\n  else\n    print n + 1 and \"\\n\"\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  if (n == 0) {\n    cout << 0 << \"\\n\";\n    return 0;\n  }\n  if (n == 1) {\n    cout << 1 << \"\\n\";\n    return 0;\n  }\n  if (n % 2 == 1)\n    cout << (n + 1) / 2 << \"\\n\";\n  else\n    cout << n + 1 << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create long long n\n  read n\n  if n is equal to 0\n    print 0\n    \n  \n  if n is even\n    print n+1 and a newline\n  else\n    print (n+1)/2\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  if (n == 0) {\n    cout << 0 << endl;\n    return 0;\n  }\n  if (n % 2 == 0)\n    cout << n + 1 << endl;\n  else\n    cout << (n + 1) / 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = long long\n  read n\n  print if not n then 0 else if n & 1 then (n + 1) >> 1 else n + 1\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  cout << (!n ? 0 : n & 1 ? (n + 1) >> 1 : n + 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long int s, n, i, j, p, h, set h to 0\n  read n\n  if n equal to 0\n    print 0\n  else if n is even\n    print n +1\n  else\n    print (n+1)/2 and a newline\n\n",
        "int main() {\n  long long int s, n, i, j, p, h = 0;\n  cin >> n;\n  if (n == 0)\n    cout << \"0\" << endl;\n  else if (n % 2 == 0)\n    cout << n + 1 << endl;\n  else\n    cout << (n + 1) / 2 << endl;\n}\n"
    ],
    [
        "create long longs n, p, b and q\nlong long function gcd with long long arguments a and b\n  return a if b = 0\n  return gcd(b, a % b)\n\n\n  read n\n  decrement n and loop further, while n > 0\n    read from the input to p, q and b\n    declare long long variable tmp = gcd(p,q)\n    divide p by tmp\n    divide q by tmp\n    create long long div = gcd of b and q\n    while div = (gcd(b, q) != 1)\n      while q % div is 0, divide q by div\n    if q is 1\n      print \"Finite\"\n    else\n      print \"Infinite\"\n  \n  \n\n",
        "long long n, p, b, q;\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nint main() {\n  cin >> n;\n  while (n--) {\n    cin >> p >> q >> b;\n    long long tmp = gcd(p, q);\n    p /= tmp;\n    q /= tmp;\n    long long div = gcd(b, q);\n    while ((div = gcd(b, q)) != 1)\n      while (q % div == 0) q /= div;\n    if (q == 1)\n      cout << \"Finite\" << endl;\n    else\n      cout << \"Infinite\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "long long function gcd with long long arguments a and b\n  while b > 0\n    a = a modulo b\n    swap a and b\n  \n  return a\n\ndeclare string sy = \"Finite\\n\"\ndeclare string sn = \"Infinite\\n\"\ncreate map m of long long pairs to chars\nvoid function solve\n  create int n\n  read n\n  loop i from 0 to n exclusive\n    create long longs p, q and b\n    read input to p, q and b\n    p = p modulo q\n    declare long long g = gcd of p and q\n    divide p by g\n    divide q by g\n    if p = 0\n      print sy\n      go to the start of the loop\n    \n    if pair {q, b} is present in m\n      if m[{q, b}] != 0\n        print sy\n      else\n        print sn\n      continue the loop\n    \n    declare long long q1 = q\n    change g to gcd(q,b)\n    while g > 1\n      while q % g = 0\n      set g to gcd(q,b)\n    \n    if q = 1\n      assign true to m[{ q1 , b }]\n      print sy\n    else\n      assign false to m[{ q1 , b }]\n      print sn\n    \n  \n\n\n  initialize random number generator using 555 as a seed\n  invoke function solve\n\n",
        "long long gcd(long long a, long long b) {\n  while (b > 0) {\n    a %= b;\n    swap(a, b);\n  }\n  return a;\n}\nstring sy = \"Finite\\n\";\nstring sn = \"Infinite\\n\";\nmap<pair<long long, long long>, char> m;\nvoid solve() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    long long p, q, b;\n    cin >> p >> q >> b;\n    p %= q;\n    long long g = gcd(p, q);\n    p /= g;\n    q /= g;\n    if (p == 0) {\n      cout << sy;\n      continue;\n    }\n    if (m.find({q, b}) != m.end()) {\n      if (m[{q, b}])\n        cout << sy;\n      else\n        cout << sn;\n      continue;\n    }\n    long long q1 = q;\n    g = gcd(q, b);\n    while (g > 1) {\n      while (q % g == 0) q /= g;\n      g = gcd(q, b);\n    }\n    if (q == 1) {\n      m[{q1, b}] = true;\n      cout << sy;\n    } else {\n      m[{q1, b}] = false;\n      cout << sn;\n    }\n  }\n}\nint main() {\n  srand(555);\n  solve();\n}\n"
    ],
    [
        "n = integer\np, q, b = long long\n\n  read n\n  while decrement n\n    read p, q, b\n    if p modulo q is 0\n      print Finite\n      continue iteration\n    \n    q = q / gcd of p and q\n    g = long long\n    while 1\n      g = gcd of q and b\n      if g is 1, break loop\n      while q modulo g is 0, q = q / g\n    \n    if q is not 1\n      print Infinite\n    else\n      print Finite\n  \n\n",
        "int n;\nlong long p, q, b;\nint main() {\n  cin >> n;\n  while (n--) {\n    cin >> p >> q >> b;\n    if (p % q == 0) {\n      cout << \"Finite\\n\";\n      continue;\n    }\n    q /= __gcd(p, q);\n    long long g;\n    while (1) {\n      g = __gcd(q, b);\n      if (g == 1) break;\n      while (q % g == 0) q /= g;\n    }\n    if (q != 1)\n      cout << \"Infinite\\n\";\n    else\n      cout << \"Finite\\n\";\n  }\n}\n"
    ],
    [
        "N = integer\nP, Q, B = long long\nin the function gcd that takes long long x, y and returns long long\n  if y is 0, return x\n  return gcd of y and x modulo y\n\n\n  read N\n  while decrement N\n    read P, Q, B\n    P = P modulo Q\n    G = long long with G = gcd of P and Q\n    Q = Q / G\n    C = long long with C = gcd of B and Q\n    while C is not 1\n      Q = Q / C\n      C = gcd of C and Q\n    \n    if Q is not 1\n      print Infinite\n    else\n      print Finite\n  \n  \n\n",
        "int N;\nlong long P, Q, B;\nlong long gcd(long long x, long long y) {\n  if (y == 0) return x;\n  return gcd(y, x % y);\n}\nint main() {\n  cin >> N;\n  while (N--) {\n    cin >> P >> Q >> B;\n    P %= Q;\n    long long G = gcd(P, Q);\n    Q /= G;\n    long long C = gcd(B, Q);\n    while (C != 1) {\n      Q /= C;\n      C = gcd(C, Q);\n    }\n    if (Q != 1)\n      cout << \"Infinite\\n\";\n    else\n      cout << \"Finite\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare long longs n, p, q and b\n  read input to n\n  for integer i = 1 to n inclusive\n    read p, q and b from the input\n    declare long long variable t = __gcd of p and q\n    divide q by t\n    assign b to t\n    while q != 1\n      assign result of __gcd(q,t) to t\n      divide q by t\n      break if t = 1\n    \n    if q = 1\n      print \"Finite\\n\"\n    else\n      print \"Infinite\\n\"\n  \n\n",
        "int main() {\n  long long n, p, q, b;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> p >> q >> b;\n    long long t = __gcd(p, q);\n    q /= t;\n    t = b;\n    while (q != 1) {\n      t = __gcd(q, t);\n      q /= t;\n      if (t == 1) break;\n    }\n    if (q == 1)\n      cout << \"Finite\\n\";\n    else\n      cout << \"Infinite\\n\";\n  }\n}\n"
    ],
    [
        "in the function freac\nDX = array of const integers with DX = +1, 0, -1, 0, +1, +1, -1, -1\nDX = array of const integers with DY = 0, +1, 0, -1, +1, -1, +1, -1\nINF = const integer with INF = cast 1e9 + 123 from integer\nINFL = const long long with INFL = cast 1e18 + 123 from long long\nEPS = const double with EPS = 1e-9\nin the function lifestyle\n\n  call lifestyle\n  call freac\n  n = integer\n  p, q, b = long long\n  read n\n  while decrement n\n    read p, q, b\n    g = long long with g = gcd of p and q\n    q = q / g\n    while b is not 1\n      while q modulo b is 0, q = q / b\n      b = gcd of q and b\n    \n    if q is 1 print Finite else print Infinite\n  \n  return false\n\n",
        "void freac() {}\nconst int DX[] = {+1, 0, -1, 0, +1, +1, -1, -1};\nconst int DY[] = {0, +1, 0, -1, +1, -1, +1, -1};\nconst int INF = (int)1e9 + 123;\nconst long long INFL = (long long)1e18 + 123;\nconst double EPS = 1e-9;\nvoid lifestyle() {}\nint main() {\n  lifestyle();\n  freac();\n  int n;\n  long long p, q, b;\n  cin >> n;\n  while (n--) {\n    cin >> p >> q >> b;\n    long long g = __gcd(p, q);\n    q /= g;\n    while (b != 1) {\n      while (q % b == 0) q /= b;\n      b = __gcd(q, b);\n    }\n    cout << ((q == 1) ? \"Finite\" : \"Infinite\") << endl;\n  }\n  return false;\n}\n"
    ],
    [
        "declare int n\ndeclare long longs p, q, and b\ndeclare long long NWD with long long x and long long y\n  if y is 0\n    return x\n  else\n    return the NWD of y, and x mod y\n\n\n  input n\n  loop i between 1 and n inclusive\n    input p, q, and b\n    declare long long blep to be NWD of p and q\n    divide q by q over blep\n    set blep to NWD of q and b\n    while blep is more than 1\n      while q mod blep is zero, then set q to q over blep\n      set blep to NWD of q and b\n    \n    if q is greater than 1\n      output \"Infinite\"\n    else\n      output \"Finite\"\n  \n  \n\n",
        "int n;\nlong long p, q, b;\nlong long NWD(long long x, long long y) {\n  if (y == 0)\n    return x;\n  else\n    return NWD(y, x % y);\n}\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> p >> q >> b;\n    long long blep = NWD(p, q);\n    q /= blep;\n    blep = NWD(q, b);\n    while (blep > 1) {\n      while (q % blep == 0) q /= blep;\n      blep = NWD(q, b);\n    }\n    if (q > 1)\n      cout << \"Infinite\" << endl;\n    else\n      cout << \"Finite\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in function gcd taking two long longs a and b and returning a long long\n  return __gcd of a and b\n\nin function solve returning a bool\n  p, q, b = long long\n  read p then q then b\n  if p is 0 then return true\n  gc = long long with gc = gcd of p and q\n  set p to p / gc\n  set q to q / gc\n  x = long long\n  loop while setting x to gcd of q and b and x is greater than 1\n    loop while q mod x is 0 set q to q / x\n    set x to gcd of q and b\n  \n  return true if q is 1 else return false\n\n\n  t = int\n  read t\n  loop t times\n    is = bool with is = solve\n    print \"Finite\" if is is true else print \"Infinte\"\n  \n  \n\n",
        "long long gcd(long long a, long long b) {\n  return __gcd(a, b);\n}\nbool solve() {\n  long long p, q, b;\n  cin >> p >> q >> b;\n  if (p == 0) return true;\n  long long gc = gcd(p, q);\n  p /= gc;\n  q /= gc;\n  long long x;\n  while ((x = gcd(q, b)) > 1) {\n    while (q % x == 0) q /= x;\n    x = gcd(q, b);\n  }\n  return q == 1;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    bool is = solve();\n    cout << (is ? \"Finite\" : \"Infinite\") << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "create long longs p, q, k\ndeclare gcd with long longs a, b as arguments, returning long long\n  return a if b is 0, else result of run gcd with b, a % b as arguments\n\ndeclare inline rd with no arguments, returning long long\n  create long longs x, f, with x = 0, f = 1\n  create character ch with ch = getchar\n  while ch is greater than '9' or ch is less than '0'\n    if ch is '-', set f to -1\n    set ch to read character\n  \n  while ch is greater than or equal to '0' and ch is less than or equal to '9'\n    set x to ( x bitshift left 1 ) + ( x bitshift left 3 ) + ch - '0'\n    set ch to read character\n  \n  return x * f from function\n\ndeclare inline solve with no arguments, returning void\n  set p to result of run rd, set q to result of run rd, set k to result of run rd\n  create long long t with t = result of run gcd with p, q as arguments\n  set q to q / t\n  while ( set t to result of run gcd with k, q as arguments ) is not 1\n    while ( q % t is 0 ) set q to q / t\n  \n  print \"Finite\" if q is 1, else \"Infinite\"\n\n\n  for T = result of run rd to T, decrementing T, run solve\n  \n\n",
        "long long p, q, k;\nlong long gcd(long long a, long long b) {\n  return b == 0 ? a : gcd(b, a % b);\n}\ninline long long rd() {\n  long long x = 0, f = 1;\n  char ch = getchar();\n  while (ch > '9' || ch < '0') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = (x << 1) + (x << 3) + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\ninline void solve() {\n  p = rd(), q = rd(), k = rd();\n  long long t = gcd(p, q);\n  q /= t;\n  while ((t = gcd(k, q)) != 1) {\n    while (q % t == 0) q /= t;\n  }\n  puts(q == 1 ? \"Finite\" : \"Infinite\");\n}\nint main() {\n  for (int T = rd(); T; T--) solve();\n  return 0;\n}\n"
    ],
    [
        "in function compare taking two pointers to const void x1 and x2 and returning an int\n  return value of x1 as pointer to in - value of x2 as pointer to int\n\n\n  N = int\n  final = int\n  read N\n  massiv = int array of size N\n  d = int\n  R = int\n  for R = 0 to N\n    read d\n    set massiv[R] to d\n  \n  call qsort on massiv, N, sizeof of int and compare\n  if N is even\n    set final to massiv[R / 2 - 1]\n  else\n    set final to massiv[R / 2]\n  \n  print final\n\n",
        "int compare(const void *x1, const void *x2) {\n  return (*(int *)x1 - *(int *)x2);\n}\nint main() {\n  int N;\n  int final;\n  cin >> N;\n  int massiv[N];\n  int d;\n  int R;\n  for (R = 0; R < N; R++) {\n    cin >> d;\n    massiv[R] = d;\n  }\n  qsort(massiv, N, sizeof(int), compare);\n  if (N % 2 == 0) {\n    final = massiv[R / 2 - 1];\n  } else {\n    final = massiv[R / 2];\n  }\n  cout << final << endl;\n}\n"
    ],
    [
        "\n  declare long long n and an array of long longs arr with 1001 element\n  read n\n  for i from 0 to n exclusive, read arr[i]\n  sort arr\n  if n is even\n    print arr[(n / 2) - 1]\n  else\n    print arr[n / 2]\n  \n\n",
        "int main() {\n  long long n, arr[1001];\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  sort(arr, arr + n);\n  if (n % 2 == 0)\n    cout << arr[(n / 2) - 1] << endl;\n  else\n    cout << arr[n / 2] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer array a with size 1005\n  create integer n\n  create integer sum with sum = 0\n  read n\n  for i = 0 to n exclusive, read a[i]\n  sort elements from a to a + n\n  if n % 2\n    print a[n / 2] print newline\n  else\n    print a[n/2 - 1] print newline\n\n",
        "int main() {\n  int a[1005];\n  int n;\n  int sum = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  sort(a, a + n);\n  if (n % 2)\n    cout << a[n / 2] << endl;\n  else\n    cout << a[n / 2 - 1] << endl;\n}\n"
    ],
    [
        "create constant integer N with N = 100010\ncreate integer array a with size N\n\n  create integer N\n  read n\n  for i = 1 to n inclusive, read a[i]\n  sort elements from a + 1 to a + n + 1\n  print a[(n + 1) / 2] print \"\\n\"\n  \n\n",
        "const int N = 100010;\nint a[N];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  sort(a + 1, a + n + 1);\n  cout << a[(n + 1) / 2] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n=int\n  read n\n  v=vector of int\n  for i=0 to n exclusive\n    x=int\n    read x\n    add x at end of v\n  \n  sort first n items of v in numeric ascending order\n  turn=0\n  while size of v is not 1\n    if turn is even\n      erase first item of v\n    else\n      pop last item of v\n    \n    turn=(incremented value of turn) modulo 2\n  \n  print first item of v\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<int> v;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    v.push_back(x);\n  }\n  sort(v.begin(), v.begin() + n, greater<int>());\n  int turn = 0;\n  while (v.size() != 1) {\n    if (turn % 2 == 0) {\n      v.erase(v.begin());\n    } else {\n      v.pop_back();\n    }\n    turn = (++turn) % 2;\n  }\n  cout << v.front() << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, a[1001]\n  read n\n  for i=1 to n inclusive, read a[i]\n  sort elements bewteen a+1 and a+n+1\n  if n is even\n    print a[n / 2]\n  otherwise\n    print a[n / 2 + 1] and a newline\n\n",
        "int main() {\n  int n, a[1001];\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  sort(a + 1, a + n + 1);\n  if (n % 2 == 0)\n    cout << a[n / 2] << endl;\n  else\n    cout << a[n / 2 + 1] << endl;\n}\n"
    ],
    [
        "create long int array arr with size 1001\n\n  create integers n, i and mid\n  read input to n\n  for i from 0 to n exclusive, read arr[i]\n  sort arr\n  mid = n / 2 rounded up\n  print arr[mid - 1]\n\n",
        "long int arr[1001];\nint main() {\n  int n, i, mid;\n  cin >> n;\n  for (i = 0; i < n; i++) { cin >> arr[i]; }\n  sort(arr, arr + n);\n  mid = ceil((double)n / 2);\n  cout << arr[mid - 1] << endl;\n}\n"
    ],
    [
        "maxn = const integer with maxn = 1e3 + 10\n\n  n = integer\n  a = integer array of size maxn\n  read n\n  for i = 1 to n, read a[i]\n  sort a + 1 and a + n + 1\n  print a[(n + 1) / 2]\n  \n\n",
        "const int maxn = 1e3 + 10;\nint main() {\n  int n;\n  int a[maxn];\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  sort(a + 1, a + n + 1);\n  cout << a[(n + 1) / 2] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read input to n\n  declare vector of integers a with size n\n  for i from 0 to n exclusive, read a[i]\n  sort a\n  create integer idx = (length of a - 1) / 2\n  print a[idx]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  sort(a.begin(), a.end());\n  int idx = (a.size() - 1) / 2;\n  cout << a[idx] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let int n\n  read n\n  create int array a of size n\n  for i = 0 to n exclusive, read a[i]\n  for i = 0 to n - 1 exclusive\n    for j = 0 to n - i - 1 exclusive\n      if a[j] is greater than a[j + 1], swap values between a[j] and a[j + 1]\n    \n  \n  if n modulo 2 is 0\n    print a[n / 2 - 1]\n  else\n    print a[n / 2]\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = 0; j < n - i - 1; j++) {\n      if (a[j] > a[j + 1]) { swap(a[j], a[j + 1]); }\n    }\n  }\n  if (n % 2 == 0) {\n    cout << a[n / 2 - 1] << endl;\n  } else {\n    cout << a[n / 2] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let int n and int array a of size 1110\n  read n\n  for i = 0 to n exclusive, read a[i]\n  sort array a\n  print a[(n - 1) / 2]\n  \n\n",
        "int main() {\n  int n, a[1110];\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  sort(a, a + n);\n  cout << a[(n - 1) / 2] << endl;\n  return 0;\n}\n"
    ],
    [
        "",
        ""
    ],
    [
        "\n  create integer n\n  read n\n  create integers cur, cnt with cur = 1, cnt = 0\n  create integer vector ans\n  for i = 0 to n exclusive\n    create integer x\n    read x\n    if x is cur\n      increment cnt\n      increment cur\n    else\n      add element cnt to end of ans\n      set cnt to 1\n      set cur to 2\n    \n    if i is n - 1, add element cnt to end of ans\n  \n  print integer casted size of ans print newline\n  for i = 0 to integer casted size of ans exclusive\n    if i is greater than 0, print \" \"\n    print ans[i]\n  \n  print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int cur = 1, cnt = 0;\n  vector<int> ans;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    if (x == cur) {\n      cnt++;\n      cur++;\n    } else {\n      ans.push_back(cnt);\n      cnt = 1;\n      cur = 2;\n    }\n    if (i == n - 1) { ans.push_back(cnt); }\n  }\n  cout << (int)ans.size() << endl;\n  for (int i = 0; i < (int)ans.size(); i++) {\n    if (i > 0) cout << \" \";\n    cout << ans[i];\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be an integer\n  while reading n\n    let a be an integer array of length n\n    let b be an integer array of length n\n    let max be an int\n    let count = 0 be an int\n    read a n times\n    set max = a at 0\n    for q = 1 to n exclusive\n      if a at q is 1 then increment count, set b[count] to a[q-1]\n    \n    print count + 1\n    for j = 1 to count inclusive print b\n    print a[n-1]\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int a[n];\n    int b[n];\n    int max;\n    int count = 0;\n    for (int i = 0; i < n; i++) { cin >> a[i]; }\n    max = a[0];\n    for (int q = 1; q < n; q++) {\n      if (a[q] == 1) { b[++count] = a[q - 1]; }\n    }\n    cout << count + 1 << endl;\n    for (int j = 1; j <= count; j++) cout << b[j] << \" \";\n    cout << a[n - 1] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  declare int array arr with n elements and int variable ct = 0\n  change i from 0 to n exclusive in a loop\n    read input to arr[i]\n    if arr[i] is equal to 1, increment ct\n  \n  print ct\n  for i from 1 to n exclusive\n    if arr[i] is equal to 1, print arr[i - 1] and \" \"\n  \n  print arr[n - 1]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int arr[n], ct = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    if (arr[i] == 1) ct++;\n  }\n  cout << ct << endl;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] == 1) cout << arr[i - 1] << \" \";\n  }\n  cout << arr[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  i, j, k= int with k = 0 and a = int array of size n + 1\n  for i = 0 to n\n    read a[i]\n    if a[i] is 1 then increment k\n  \n  print k\n  for i = 1 to n\n    if a[i] is 1 print a[i - 1] and \" \"\n  \n  print a[n - 1]\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[n + 1], i, j, k = 0;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] == 1) k++;\n  }\n  cout << k << endl;\n  for (i = 1; i < n; i++) {\n    if (a[i] == 1) cout << a[i - 1] << \" \";\n  }\n  cout << a[n - 1] << endl;\n}\n"
    ],
    [
        "\n  declare int variable n\n  read n\n  declare an array of integers a with size 1005\n  declare an array of integers ans with size 1005\n  for i from 1 to n inclusive, read a[i]\n  create integer j = 0\n  loop i from 1 to n exclusive\n    if a[i + 1] <= a[i], set ans[j] to a[i] and increment j\n  \n  set ans[j] to a[n] and increment j\n  print j\n  for i = 0 to j - 1 exclusive, print ans[i] and \" \"\n  print ans[j - 1]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[1005];\n  int ans[1005];\n  for (int i = 1; i <= n; i++) { cin >> a[i]; }\n  int j = 0;\n  for (int i = 1; i < n; i++) {\n    if (a[i + 1] <= a[i]) { ans[j++] = a[i]; }\n  }\n  ans[j++] = a[n];\n  cout << j << endl;\n  for (int i = 0; i < j - 1; i++) cout << ans[i] << \" \";\n  cout << ans[j - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "maxn = const integer with maxn = 1e3 + 5\narr = integer array of size maxn\nstc = integer array of size maxn\n\n  n, top = integers\n  while read n\n    top = 0\n    for i = 0 to n exclusive, readarr[i]\n    i = integer\n    for i = 0 to n - 1 exclusive\n      if arr[i + 1] is 1, stc[increment top] = arr[i]\n    \n    stc[increment top] = arr[i]\n    print top,stc[0]\n    for i = 1 to top exclusive, print stc[i]\n    print next line\n  \n  \n\n",
        "const int maxn = 1e3 + 5;\nint arr[maxn];\nint stc[maxn];\nint main() {\n  int n, top;\n  while (cin >> n) {\n    top = 0;\n    for (int i = 0; i < n; ++i) { cin >> arr[i]; }\n    int i;\n    for (i = 0; i < n - 1; ++i) {\n      if (arr[i + 1] == 1) { stc[top++] = arr[i]; }\n    }\n    stc[top++] = arr[i];\n    cout << top << endl << stc[0];\n    for (int i = 1; i < top; ++i) { cout << \" \" << stc[i]; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  nxt = integer = 1\n  ans = integer vector\n  for i = 0 to n exclusive\n    x = integer\n    read x\n    if x is not nxt, then push back the values of ans and insert a new element of nxt - 1 at the end of ans\n    nxt = x + 1\n  \n  push back the values of ans and insert a new element of nxt - 1 at the end of ans\n  print size of ans in integer form\n  for i = 0 to size of ans in integer form\n    if i > 0, then print a space\n    print ans[i]\n  \n  print endline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int nxt = 1;\n  vector<int> ans;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    if (x != nxt) { ans.push_back(nxt - 1); }\n    nxt = x + 1;\n  }\n  ans.push_back(nxt - 1);\n  cout << (int)ans.size() << endl;\n  for (int i = 0; i < (int)ans.size(); i++) {\n    if (i > 0) cout << \" \";\n    cout << ans[i];\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a = int array of length 1001, n = int, s = int= 0\n  read n\n  read n values into array a\n  for i = 1 to n inclusive\n    if a at i is 1 increment sum\n  print sum\n  for i = 1 to n exclusive\n    if a at i + 1 is 1 print a at i\n  print a at n\n  \n\n",
        "int main() {\n  int a[1001], n, sum = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = 1; i <= n; i++)\n    if (a[i] == 1) sum++;\n  cout << sum << endl;\n  for (int i = 1; i < n; i++)\n    if (a[i + 1] == 1) cout << a[i] << \" \";\n  cout << a[n] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, c with c = 0, create integer array arr with size 1001\n  read n\n  for i = 0 to n exclusive\n    read arr[i]\n    if arr[i] is 1 increment c\n  \n  print c print newline\n  for i = 1 to n exclusive\n    if arr[i] is 1, print arr[i-1] print \" \"\n  \n  print arr[n-1] print newline\n  \n\n",
        "int main() {\n  int n, arr[1001], c = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    if (arr[i] == 1) c++;\n  }\n  cout << c << endl;\n  for (int i = 1; i < n; i++) {\n    if (arr[i] == 1) { cout << arr[i - 1] << \" \"; }\n  }\n  cout << arr[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  val = integer\n  Read n\n  for i = 0 to n exclusive\n    if i is greater than 0, print \" \"\n    Read val\n    print val - (val + 1) % 2 and a new line\n  \n  print a new line\n  \n\n",
        "int main() {\n  int n;\n  int val;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    if (i > 0) { cout << \" \"; }\n    cin >> val;\n    cout << (val - ((val + 1) % 2));\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "n = integer\n\n  Read n\n  a = array of n+10 integers\n  for i = 0 to n exclusive\n    Read n values into array a\n    if a[i] modulo 2 is 0, then set a[i] to a[i] - 1\n  \n  print a[j] and a new line\n  print a[n - 1] and a new line\n  \n\n",
        "int n;\nint main() {\n  cin >> n;\n  int a[n + 10];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] % 2 == 0) { a[i] -= 1; }\n  }\n  for (int j = 0; j < n - 1; j++) { cout << a[j] << \" \"; }\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  while read n is true\n    create integer flag with flag = 1\n    for i = 0 to n exclusive\n      create integer num\n      read num\n      if num is 0\n        if flag is true\n          print num, set flag to 0\n        else\n          print \" \" print num\n      else if num % 2 is 0\n        if flag is true\n          print num - 1, set flag to 0\n        else\n          print \" \" print num - 1\n      else\n        if flag is true\n          print num, flag with flag = 0\n        else\n          print \" \" print num\n      \n    \n    print newline\n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int flag = 1;\n    for (int i = 0; i < n; i++) {\n      int num;\n      cin >> num;\n      if (num == 0) {\n        if (flag)\n          cout << num, flag = 0;\n        else\n          cout << \" \" << num;\n      } else if (num % 2 == 0) {\n        if (flag)\n          cout << num - 1, flag = 0;\n        else\n          cout << \" \" << num - 1;\n      } else {\n        if (flag)\n          cout << num, flag = 0;\n        else\n          cout << \" \" << num;\n      }\n    }\n    cout << endl;\n  }\n}\n"
    ],
    [
        "array of 1000 = a\n\n  integers = n\n  read n\n  read in a until i = n inclusive\n  for i = 0 to n inclusive\n    if a[i] modulo 2 is 0 then do the following a[i] -= 1\n    if i = n then do the following\n      output a[i]\n    else\n      output a[i],\n  \n  \n\n",
        "int a[10000];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) { cin >> a[i]; }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] % 2 == 0) a[i] -= 1;\n    if (i == n)\n      cout << a[i] << endl;\n    else\n      cout << a[i] << \" \";\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer n\n\n  read n\n  create integer array a with size n + 10\n  for i = 0 to n exclusive\n    read a[i]\n    if a[i] % 2 is 0, decrement a[i] by 1\n  \n  for j = 0 to n - 1 exclusive, print a[j] print \" \"\n  print a[n-1] print newline\n  \n\n",
        "int n;\nint main() {\n  cin >> n;\n  int a[n + 10];\n  for (int i = 0; i < n; ++i) {\n    cin >> a[i];\n    if (a[i] % 2 == 0) { a[i] -= 1; }\n  }\n  for (int j = 0; j < n - 1; ++j) { cout << a[j] << \" \"; }\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "declare const int N = 1e5 + 50\ndeclare ints T, n, m, L and R\ndeclare long long array a with size 2 * N\n\n  read input to n\n  for i from 0 to n * 2 exclusive, read a[i]\n  if n <= 1\n    print \"0\"\n    \n  \n  sort a from the start to the position 2 * n\n  declare long long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n  declare long long C = a[2 * n - 1] - a[0]\n  for i = 1 to n inclusive\n    declare long long variable temp = C * (a[i + n - 1] - a[i])\n    set ans to min of ans and temp\n  \n  print ans\n  \n\n",
        "const int N = 1e5 + 50;\nint T, n, m, L, R;\nlong long a[2 * N];\nint main() {\n  cin >> n;\n  for (int i = 0; i < n * 2; i++) { cin >> a[i]; }\n  if (n <= 1) {\n    cout << \"0\" << endl;\n    return 0;\n  }\n  sort(a, a + 2 * n);\n  long long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n  long long C = a[2 * n - 1] - a[0];\n  for (int i = 1; i <= n; i++) {\n    long long temp = C * (a[i + n - 1] - a[i]);\n    ans = min(ans, temp);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = long long\n  while the loop reads n\n    a = long long array of size 2 * n +10\n    for i = 0 to 2 * n exclusive, read a[i]\n    sort a in ascending order\n    ans = long long = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n    for i = 1 to n exclusive, ans = the minimum value between ans and (a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i])\n    print ans\n  \n  \n\n",
        "int main() {\n  long long n;\n  while (cin >> n) {\n    long long a[2 * n + 10];\n    for (int i = 0; i < 2 * n; i++) cin >> a[i];\n    sort(a, a + 2 * n);\n    long long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n    for (int i = 1; i < n; i++) ans = min(ans, (a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i]));\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create constant integer sz with sz = 200010\ncreate long long integer array a with size sz\n\n  create integer n\n  read n\n  for i = 0 to 2 * n exclusive, read [i]\n  sort elements from a to a + 2 * n\n  create long long integer ans with ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n  for i = n to 2 * 2 exclusive, set ans to minimum of ( ans and (a[2 * n - 1] - a[0]) * (a[i] - a[i - n + 1]) )\n  print ans print newline\n  \n\n",
        "const int sz = 200010;\nlong long int a[sz];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < 2 * n; i++) { cin >> a[i]; }\n  sort(a, a + 2 * n);\n  long long int ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n  for (int i = n; i < 2 * n; i++) { ans = min(ans, (a[2 * n - 1] - a[0]) * (a[i] - a[i - n + 1])); }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "set N to 2e6 + 5\ncreate long long a[N]\n\n  create int n\n  read n\n  for i=0 to 2*n, read a[i]\n  sort elements between a and a + 2*n\n  set ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n  for i=1 to n exclusive, set and to min(ans, (a[i + n - 1] - a[i]) * (a[2 * n - 1] - a[0]))\n  print ans\n  \n\n",
        "const int N = 2e6 + 5;\nlong long a[N];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < 2 * n; i++) cin >> a[i];\n  sort(a, a + 2 * n);\n  long long ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n  for (int i = 1; i < n; i++) ans = min(ans, (a[i + n - 1] - a[i]) * (a[2 * n - 1] - a[0]));\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "N = const integer with N = 2e5 + 50\nM = const integer with M = 1e6\noo = const long long with oo = 1e18\nmod = const integer mod = 1e9 + 7\n\n  n = integer\n  read n\n  a(2 * n) = vector of long long\n  for i = 0 to n * 2 exclusive, read a[i]\n  sort a.begin() and a.end()\n  ans = long long with ans = (a[n - 1] - a[0]) * (a.back() - a[n])\n  for i = 1 to n exclusive, ans = min(ans, (a[i + n - 1] - a[i]) * (a.back() - a[0]))\n  print ans\n\n",
        "const int N = 2e5 + 50;\nconst int M = 1e6;\nconst long long oo = 1e18;\nconst int mod = 1e9 + 7;\nint main() {\n  int n;\n  cin >> n;\n  vector<long long> a(2 * n);\n  for (int i = 0; i < n * 2; i++) cin >> a[i];\n  sort(a.begin(), a.end());\n  long long ans = (a[n - 1] - a[0]) * (a.back() - a[n]);\n  for (int i = 1; i < n; i++) { ans = min(ans, (a[i + n - 1] - a[i]) * (a.back() - a[0])); }\n  cout << ans << endl;\n}\n"
    ],
    [
        "declare const int INF = 0x3f3f3f3f\ncreate const int maxa = 1e5 + 10\ndeclare int array a with size maxa << 1\n\n  declare integer variable n\n  read n and loop further\n    declare int variable i\n    for i = 0 to 2 * n exclusive, read a[i]\n    sort a\n    declare long long x = a[n - 1] - a[0]\n    create long long y = a[2 * n - 1] - a[n]\n    declare long long minsq = x * y\n    set x to a[2 * n - 1] - a[0]\n    for i from 1 to n exclusive\n      set y to a[i + n - 1] - a[i]\n      change minsq to min of minsq and x * y\n    \n    print minsq\n  \n  \n\n",
        "const int INF = 0x3f3f3f3f;\nconst int maxa = 1e5 + 10;\nint a[maxa << 1];\nint main() {\n  int n;\n  while (cin >> n) {\n    int i;\n    for (i = 0; i < 2 * n; i++) cin >> a[i];\n    sort(a, a + 2 * n);\n    long long x = a[n - 1] - a[0];\n    long long y = a[2 * n - 1] - a[n];\n    long long minsq = x * y;\n    x = a[2 * n - 1] - a[0];\n    for (i = 1; i < n; i++) {\n      y = a[i + n - 1] - a[i];\n      minsq = min(minsq, x * y);\n    }\n    cout << minsq << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer N\ncreate long long array A with size 200005\n\n  read N\n  for i = 0 to 2 * N - 1 inclusive, read A[i]\n  sort elements from A to A + 2 * N\n  create long long Ans with Ans = (A[N - 1] - A[0]) * (A[2 * N - 1] - A[N])\n  for i = 1 to N - 1 inclusive, set Ans to minimum of Ans and (A[2 * N - 1] - A[0]) * (A[i + N - 1] - A[i])\n  print Ans print '\\n'\n  \n\n",
        "int N;\nlong long A[200005];\nint main() {\n  cin >> N;\n  for (int i = 0; i <= 2 * N - 1; i++) cin >> A[i];\n  sort(A, A + 2 * N);\n  long long Ans = (A[N - 1] - A[0]) * (A[2 * N - 1] - A[N]);\n  for (int i = 1; i <= N - 1; i++) { Ans = min(Ans, (A[2 * N - 1] - A[0]) * (A[i + N - 1] - A[i])); }\n  cout << Ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "niz = array of integers of length 200005\n\n  let n be a integer\n  read n\n  for i = 1 to 2 * n inclusive , read niz[i]\n  sort the values niz + 1 and niz + 2 * n + 1\n  let dx be a integer with dx = niz[n] - niz[1]\n  let dy be a integer with dy = niz[2 * n] - niz[n + 1]\n  let p be a long integer with p = 0\n  the value (long long int)dx * dy is initialized to p\n  set the long integer tren to 0\n  for i = n + 1 to 2 * n - 1 inclusive\n    the long integer value of (niz[i] - niz[i - n + 1]) * (niz[2 * n] - niz[1]) is assigned to tren\n    if tren is less than p , the value of p is equal to tren\n  \n  print p and newline\n  \n\n",
        "int niz[200005];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= 2 * n; i++) { cin >> niz[i]; }\n  sort(niz + 1, niz + 2 * n + 1);\n  int dx = niz[n] - niz[1];\n  int dy = niz[2 * n] - niz[n + 1];\n  long long int p = 0;\n  p = (long long int)dx * dy;\n  long long int tren = 0;\n  for (int i = n + 1; i <= 2 * n - 1; i++) {\n    tren = (long long int)(niz[i] - niz[i - n + 1]) * (niz[2 * n] - niz[1]);\n    if (tren < p) p = tren;\n  }\n  cout << p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long long n and long long array a with size 1000001\n\n  read n\n  multiply n by 2\n  loop i from 1 to n inclusive, read a[i]\n  sort a from element 1 to n + 1\n  create long long ans = (a[n / 2] - a[1]) * (a[n] - a[n / 2 + 1])\n  loop i from 2 to n / 2 + 1 inclusive, assign min of ans and (a[i + n / 2 - 1] - a[i]) * (a[n] - a[1]) to ans\n  print ans\n  \n\n",
        "long long n, a[1000001];\nint main() {\n  cin >> n;\n  n *= 2;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  sort(a + 1, a + n + 1);\n  long long ans = (a[n / 2] - a[1]) * (a[n] - a[n / 2 + 1]);\n  for (int i = 2; i <= n / 2 + 1; i++) ans = min(ans, (a[i + n / 2 - 1] - a[i]) * (a[n] - a[1]));\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long long array a with size 202000\n\n  declare integer n\n  read input to n\n  for i = 1 to n << 1 inclusive, read a[i]\n  sort a fron index 1 to 1 + n + n\n  long long s = 1ll << 62\n  set s to min of s and (a[n] - a[1]) * (a[n << 1] - a[n + 1])\n  for i from 2 to n inclusive, change s to min of s and (a[n << 1] - a[1]) * (a[n + i - 1] - a[i])\n  print s\n  \n\n",
        "long long a[202000];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= (n << 1); ++i) { cin >> a[i]; }\n  sort(a + 1, a + 1 + n + n);\n  long long s = 1ll << 62;\n  s = min(s, (a[n] - a[1]) * (a[n << 1] - a[n + 1]));\n  for (int i = 2; i <= n; i++) { s = min(s, (a[n << 1] - a[1]) * (a[n + i - 1] - a[i])); }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "flag = int\nn, m, len = int\na = long long array of size 200005\nans, temp = long long\n\n  loop while reading n\n    read 2 * n values into a\n    sort a\n    set ans to (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0])\n    set temp to a[2 * n - 1] - a[0]\n    for i = 1 to n set ans to min of ans and temp * (a[i + n - 1] - a[i])\n    print ans\n  \n  \n\n",
        "int flag;\nint n, m, len;\nlong long a[200005];\nlong long ans, temp;\nint main() {\n  while (cin >> n) {\n    for (int i = 0; i < 2 * n; ++i) cin >> a[i];\n    sort(a, a + n + n);\n    ans = (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0]);\n    temp = a[2 * n - 1] - a[0];\n    for (int i = 1; i < n; ++i) { ans = min(ans, temp * (a[i + n - 1] - a[i])); }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer flag\ncreate integers n, m, len\ncreate long long array a with size 200005\ncreate long longs ans, temp\n\n  while read n is true\n    for i = 0 to 2 * n exclusive, read a[i]\n    sort elements from a to a + n + n\n    set ans to (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0])\n    set temp to a[2 * n - 1] - a[0]\n    for i = 1 to n exclusive, set ans to minimum of ans and temp * (a[i + n - 1] - a[i])\n    print ans print newline\n  \n  \n\n",
        "int flag;\nint n, m, len;\nlong long a[200005];\nlong long ans, temp;\nint main() {\n  while (cin >> n) {\n    for (int i = 0; i < 2 * n; ++i) cin >> a[i];\n    sort(a, a + n + n);\n    ans = (a[2 * n - 1] - a[n]) * (a[n - 1] - a[0]);\n    temp = a[2 * n - 1] - a[0];\n    for (int i = 1; i < n; ++i) { ans = min(ans, temp * (a[i + n - 1] - a[i])); }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "maxn = const integer with maxn = 2e5 + 10\na = array of size maxn long long\n\n  n = integer\n  read n\n  ans = long long with ans = 0\n  for i = 0 to 2 * n exclusive, read a[i]\n  sort a and a + 2 * n\n  ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n])\n  for i = 1 to n exclusive, ans = min((a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i]), ans)\n  print ans\n  \n\n",
        "const int maxn = 2e5 + 10;\nlong long a[maxn];\nint main() {\n  int n;\n  cin >> n;\n  long long ans = 0;\n  for (int i = 0; i < 2 * n; i++) { cin >> a[i]; }\n  sort(a, a + 2 * n);\n  ans = (a[n - 1] - a[0]) * (a[2 * n - 1] - a[n]);\n  for (int i = 1; i < n; i++) { ans = min((a[2 * n - 1] - a[0]) * (a[i + n - 1] - a[i]), ans); }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "n = integer\na = long long array of size 200001, ans = long long\n\n  read n\n  for i = 1 to (left shift n 1 place), read a[i]\n  sort a + 1 and a + (n << 1) + 1\n  ans = (a[n] - a[1]) * (a[shift n 1 place] - a[n + 1])\n  for i = 1 to n exclusive, ans = min((a[left shift n 1 place] - a[1]) * (a[n + i] - a[i + 1]), ans)\n  print ans\n  \n\n",
        "int n;\nlong long a[200001], ans;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= (n << 1); i++) cin >> a[i];\n  sort(a + 1, a + (n << 1) + 1);\n  ans = (a[n] - a[1]) * (a[n << 1] - a[n + 1]);\n  for (int i = 1; i < n; i++) ans = min((a[n << 1] - a[1]) * (a[n + i] - a[i + 1]), ans);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "let in be long long array with size 200010\ncreate ints n and n2\ndeclare long long ans\n\n  read n\n  change n2 to n * 2\n  for integer i = 0 to n2 exclusive, read in[i]\n  sort n2 elements of in\n  assign (in[n - 1] - in[0]) * (in[n2 - 1] - in[n]) to ans\n  for i from 1 to n exclusive, set ans to min of ans and in[n - 1 + i] - in[i]) * (in[n2 - 1] - in[0]\n  print ans and '\\n'\n  \n\n",
        "long long in[200010];\nint n, n2;\nlong long ans;\nint main() {\n  cin >> n;\n  n2 = n * 2;\n  for (int i = 0; i < n2; i++) cin >> in[i];\n  sort(in, in + n2);\n  ans = (in[n - 1] - in[0]) * (in[n2 - 1] - in[n]);\n  for (int i = 1; i < n; i++) ans = min(ans, (in[n - 1 + i] - in[i]) * (in[n2 - 1] - in[0]));\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create long long array of length 200020\n\n  create int n\n  read n\n  for i=1 to 2*n inclusive, read a[i]\n  sort elements between a+1 and a + 2 * n + 1\n  set min1 to (a[n] - a[1]) * (a[2 * n] - a[n + 1])\n  for i=2 to n+1 inclusive, assign min of min1 and (a[2 * n] - a[1]) * (a[i + n - 1] - a[i]) to min1\n  print min1\n  \n\n",
        "long long a[200020];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= 2 * n; i++) cin >> a[i];\n  sort(a + 1, a + 2 * n + 1);\n  long long min1 = (a[n] - a[1]) * (a[2 * n] - a[n + 1]);\n  for (int i = 2; i <= n + 1; i++) { min1 = min(min1, (a[2 * n] - a[1]) * (a[i + n - 1] - a[i])); }\n  cout << min1 << endl;\n  return 0;\n}\n"
    ],
    [
        "create long long array a with size 202000\n\n  create integer n\n  read n\n  for i = 1 to i is less than or equal to ( n bitshift left 1 ), incrementing i, read a[i]\n  sort elements from a + 1 to a + 1 + n + n\n  create long long s with s = (s, (a[n] - a[1]) * (a[n bitshift left 1] - a[n + 1]))\n  for i = 2 to n inclusive, set s to minimum of ( s and (a[n bitshift left 1] - a[1]) * (a[n + i - 1] - a[i])\n  print s print newline\n  \n\n",
        "long long a[202000];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= (n << 1); ++i) { cin >> a[i]; }\n  sort(a + 1, a + 1 + n + n);\n  long long s = (s, (a[n] - a[1]) * (a[n << 1] - a[n + 1]));\n  for (int i = 2; i <= n; i++) { s = min(s, (a[n << 1] - a[1]) * (a[n + i - 1] - a[i])); }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  create long longs vector a with n * 2 elements\n  for i = 0 to n*2 exclusive, read a[i]\n  sort a\n  create long long ans = LLONG_MAX\n  loop i from 0 to n exclusive\n    if i = 0\n      assign min of ans and (a[n - 1] - a[0]) * (a[n * 2 - 1] - a[n]) to ans\n    else\n      assign min of ans and (a[i + n - 1] - a[i]) * (a[n * 2 - 1] - a[0]) to ans\n    \n  \n  print ans\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<long long> a(n * 2);\n  for (int i = 0; i < n * 2; i++) { cin >> a[i]; }\n  sort(a.begin(), a.end());\n  long long ans = LLONG_MAX;\n  for (int i = 0; i < n; i++) {\n    if (i == 0) {\n      ans = min(ans, (a[n - 1] - a[0]) * (a[n * 2 - 1] - a[n]));\n    } else {\n      ans = min(ans, (a[i + n - 1] - a[i]) * (a[n * 2 - 1] - a[0]));\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create const int maxn = 1e5 + 2\nlet a be long long array with size maxn * 2\n\n  declare integer variable n\n  read n\n  create long long m = n * 2\n  for i from 1 to m inclusive, read input to a[i]\n  sort a from index 1 to m + 1\n  create long long ans = 1e18\n  for i from 1 to n inclusive\n    if i = 1\n      change ans to min of ans and (a[n] - a[1]) * (a[m] - a[n + 1])\n    else\n      change ans to min of ans and (a[m] - a[1]) * (a[n + i - 1] - a[i])\n    \n  \n  print ans\n  \n\n",
        "const int maxn = 1e5 + 2;\nlong long a[maxn * 2];\nint main() {\n  int n;\n  cin >> n;\n  long long m = n * 2;\n  for (int i = 1; i <= m; i++) { cin >> a[i]; }\n  sort(a + 1, a + m + 1);\n  long long ans = 1e18;\n  for (int i = 1; i <= n; i++) {\n    if (i == 1) {\n      ans = min(ans, (a[n] - a[1]) * (a[m] - a[n + 1]));\n    } else {\n      ans = min(ans, (a[m] - a[1]) * (a[n + i - 1] - a[i]));\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAXN with MAXN = integer casted ( 2 * 1e5 + 5 )\ncreate integer n\ncreate long long array a with size MAXN\n\n  read n\n  for i = 0 to n + n exclusive, read a[i]\n  sort elements from a to a + n + n\n  if n is less than or equal to 1\n    print \"0\" print newline\n  else\n    create long long ans with ans = a[n-1]-a[0]\n    set ans to ans * ( a[n + n - 1] - a[n] )\n    create long long l with l = a[n + n - 1] - a[0]\n    for i = 1 to n inclusive, set ans to minimum of ( ans and ( l * (a[i + n - 1] - a[i]) ) )\n    print ans print newline\n  \n\n",
        "const int MAXN = (int)(2 * 1e5 + 5);\nint n;\nlong long a[MAXN];\nint main() {\n  cin >> n;\n  for (int i = 0; i < n + n; i++) { cin >> a[i]; }\n  sort(a, a + n + n);\n  if (n <= 1) {\n    cout << \"0\" << endl;\n  } else {\n    long long ans = a[n - 1] - a[0];\n    ans *= a[n + n - 1] - a[n];\n    long long l = a[n + n - 1] - a[0];\n    for (int i = 1; i <= n; i++) { ans = min(ans, l * (a[i + n - 1] - a[i])); }\n    cout << ans << endl;\n  }\n}\n"
    ],
    [
        "\n  n, x = integers\n  read n\n  set cnt1, cnt2 = 0\n  for i = 0 to n exclusive\n    read x\n    set cnt1 = cnt1 + x\n  \n  for i = 0 to n exclusive\n    read x\n    set cnt2 = cnt2 + x\n  \n  if cnt1 >= cnt2\n    print \"YES\"\n  else\n    print \"NO\"\n\n",
        "int main() {\n  int n, x;\n  cin >> n;\n  int cnt1 = 0, cnt2 = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    cnt1 += x;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    cnt2 += x;\n  }\n  if (cnt1 >= cnt2)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "\n  declare long long integer variables n, i and j\n  read n\n  declare long long integers s1 and s2 = 0 and long long integer arrays a and b with size n\n  for i = 0 to n exclusive\n    read a[i]\n    increase s1 by a[i]\n  \n  for i = 0 to n exclusive\n    read b[i]\n    increase s2 by b[i]\n  \n  if s1 >= s2\n    print \"YES\" and '\\n'\n  else\n    print \"NO\" and '\\n'\n  \n  \n\n",
        "int main() {\n  long long int n, i, j;\n  cin >> n;\n  long long int a[n], b[n], s1 = 0, s2 = 0;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    s1 += a[i];\n  }\n  for (i = 0; i < n; i++) {\n    cin >> b[i];\n    s2 += b[i];\n  }\n  if (s1 >= s2) {\n    cout << \"YES\" << '\\n';\n  } else {\n    cout << \"NO\" << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  Read n\n  sumx = integer, set to 0\n  sumy = integer, set to 0\n  for i = 0 to n exclusive\n    x =integer\n    Read x\n    set sumx to sumx + x\n  \n  for i = 0 to n exclusive\n    y =integer\n    Read y\n    set sumy to sumy + y\n  \n  if sumy is less than or equal to sumx\n    print YES and a new line\n  else do the following\n    print NO and a new line\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int sumx = 0;\n  int sumy = 0;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    sumx = sumx + x;\n  }\n  for (int i = 0; i < n; i++) {\n    int y;\n    cin >> y;\n    sumy = sumy + y;\n  }\n  if (sumy <= sumx) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  x, y, n = integers with x, y = 0\n  a = integer\n  read n\n  for i = 1 to n inclusive\n    read a\n    set x to x + a\n  \n  for i = 1 to n inclusive\n    read a\n    set y to y + a\n  \n  if x >= y\n    print YES\n  else\n    print NO\n  \n  \n\n",
        "int main() {\n  int x = 0, y = 0, n;\n  int a;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a;\n    x += a;\n  }\n  for (int i = 1; i <= n; i++) {\n    cin >> a;\n    y += a;\n  }\n  if (x >= y) {\n    cout << \"YES\\n\";\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer arrays x, y, with x size 51, y size 51\n\n  create integers n, sum_x, sum_y, with sum_x = 0, sum_y = 0\n  read n\n  for i = 0 to n exclusive, read x[i], increment sum_x by x[i]\n  for i = 0 to n exclusive, read y[i], increment sum_y by y[i]\n  if sum_x is greater than or equal than sum_y\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n\n",
        "int x[51], y[51];\nint main() {\n  int n, sum_x = 0, sum_y = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> x[i], sum_x += x[i];\n  for (int i = 0; i < n; i++) cin >> y[i], sum_y += y[i];\n  if (sum_x >= sum_y)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "\n  create n, sum, s as int set sum and s to 0\n  read in to n\n  create int array arr and ar both size n\n  for i = 0 to n exclusive\n    read in to arr[i]\n    increase sum by arr[i]\n  \n  for i = 0 to n exclusive\n    read in to ar[i]\n    increase s by ar[i]\n  \n  if s <= sum\n    print YES\n  else\n    print NO\n  \n\n",
        "int main() {\n  int n, sum = 0, s = 0;\n  cin >> n;\n  int arr[n], ar[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    sum += arr[i];\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> ar[i];\n    s += ar[i];\n  }\n  if (s <= sum) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n}\n"
    ],
    [
        "let is be integer array with size 105\n\n  create integers n, m, a and b\n  read n and m\n  for integer i = 0 to n exclusive\n    read a and b\n    for j = a to b inclusive set is[j] to 1\n  \n  declare integer vector ans\n  for i = 1 to m inclusive\n    if is[i] is 0, push i into ans\n  print length of ans and \"\\n\"\n  for i = 0 to length of ans exclusive\n    if i != length of ans - 1\n      print ans[i] and \" \"\n    else\n      print ans[i] and \"\\n\"\n  \n\n",
        "int is[105];\nint main() {\n  int n, m, a, b;\n  cin >> n >> m;\n  for (int i = 0; i < n; i++) {\n    cin >> a >> b;\n    for (int j = a; j <= b; j++) is[j] = 1;\n  }\n  vector<int> ans;\n  for (int i = 1; i <= m; i++)\n    if (!is[i]) ans.push_back(i);\n  cout << ans.size() << \"\\n\";\n  for (int i = 0; i < ans.size(); i++)\n    if (i != ans.size() - 1)\n      cout << ans[i] << \" \";\n    else\n      cout << ans[i] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  a, tam, comeco, fim = int witha = 0 and tam = 0 and comeco = 0 and fim = 0\n  read a then tam\n  isThere = bool array of size tam + 1\n  set all values of isThere to false\n  for b = 0 to a\n    read comeco then fim\n    for c = comeco to fim inclusive set siThere[c] to true\n  \n  resp = int with resp = 0\n  presentes = int array of size tam + 1\n  ordem = string with ordem = \"\"\n  for b = 1 to tam inclusive\n    is isThere[b] is false\n      set presentes[resp] to b\n      increment resp\n    \n  \n  print resp\n  for b = 0 to resp\n    print presentes[b]\n    if b is resp - 1\n      print newline\n    else\n      print \" \"\n    \n  \n  \n\n",
        "int main() {\n  int a = 0, tam = 0, comeco = 0, fim = 0;\n  cin >> a >> tam;\n  bool isThere[tam + 1];\n  for (int j = 0; j <= tam; j++) { isThere[j] = false; }\n  for (int b = 0; b < a; b++) {\n    cin >> comeco >> fim;\n    for (int c = comeco; c <= fim; c++) { isThere[c] = true; }\n  }\n  int resp = 0;\n  int presentes[tam + 1];\n  string ordem = \"\";\n  for (int b = 1; b <= tam; b++) {\n    if (!isThere[b]) {\n      presentes[resp] = b;\n      resp++;\n    }\n  }\n  cout << resp << endl;\n  for (int b = 0; b < resp; b++) {\n    cout << presentes[b];\n    if (b == resp - 1) {\n      cout << endl;\n    } else {\n      cout << \" \";\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "M = const int with M = 3010\nb = int vector and a = int vector array of size M\nn, m = int\nin function judge taking an int x and returning a bool\n  num1 = int with num1 = size of a[1]\n  for i = 2 to m inclusive\n    if size of a[i] is greater than x\n      increment num1 by size of a[i] - x\n    else\n      increment num1 by size of a[i]\n  \n  return true if num1 is greater than x else return false\n\nin function get_ans taking an int x and returning a long long\n  ans = long long with ans = 0\n  num1 = int with num1 = size of a[1]\n  clear b\n  for i = 2 to m inclusive\n    if size of a[i] is greater than x\n      for j = x to size of a[i]\n        increment num1\n        increment ans by a[i][j]\n      \n      for j = 0 to x append a[i][j] to b\n    else\n      for j = 0 to size of a[i] append a[i][j] to b\n  \n  sort b\n  if num1 is less than x and x - num1 + 1 is greater than size of b then return 10000000000000ll\n  hh = int with hh = x - num1 + 1\n  for i = 0 to hh increment ans by b[i]\n  return ans\n\nin function cmp taking two ints x and y and returning a bool\n  return true if x is greater than y else return false\n\n\n  read n then m\n  for i = 1 to n inclusive\n    x, y = int\n    read x then y\n    append y to a[x]\n  \n  for i = 1 to m inclusive sort a[i] using cmp\n  ans = long long with ans = 10000000000000ll\n  for i = 0 to n / 2 inclusive set ans to min of ans and get_ans of i\n  print ans\n  \n\n",
        "const int M = 3010;\nvector<int> a[M], b;\nint n, m;\nbool judge(int x) {\n  int num1 = a[1].size();\n  for (int i = 2; i <= m; i++) {\n    if (a[i].size() > x)\n      num1 += a[i].size() - x;\n    else\n      num1 += a[i].size();\n  }\n  return num1 > x;\n}\nlong long get_ans(int x) {\n  long long ans = 0;\n  int num1 = a[1].size();\n  b.clear();\n  for (int i = 2; i <= m; i++) {\n    if (a[i].size() > x) {\n      for (int j = x; j < a[i].size(); j++) {\n        num1++;\n        ans += a[i][j];\n      }\n      for (int j = 0; j < x; j++) b.push_back(a[i][j]);\n    } else\n      for (int j = 0; j < a[i].size(); j++) b.push_back(a[i][j]);\n  }\n  sort(b.begin(), b.end());\n  if (num1 < x && x - num1 + 1 > b.size()) return 10000000000000ll;\n  int hh = x - num1 + 1;\n  for (int i = 0; i < hh; i++) ans += b[i];\n  return ans;\n}\nbool cmp(int x, int y) {\n  return x > y;\n}\nint main() {\n  cin >> n >> m;\n  for (int i = 1; i <= n; i++) {\n    int x, y;\n    cin >> x >> y;\n    a[x].push_back(y);\n  }\n  for (int i = 1; i <= m; i++) sort(a[i].begin(), a[i].end(), cmp);\n  long long ans = 10000000000000ll;\n  for (int i = 0; i <= n / 2; i++) ans = min(ans, get_ans(i));\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create long long integer pair p of 3007 size\nc = long long integers array of length 3007\n\n  integer n,m = long long integers\n  read n,m\n  set long long integer mx to 0\n  for i = 0 to less than n do the following\n    read p[i].second,p[i].first\n    add one to c[p[i].second]\n  \n  sort the values of p to p + n\n  for i = 2 to less than or equal to m then make mx the maximum of mx or c[i]\n  set long long integer ans to 21474836470000\n  set long long integer sum to 0\n  for i = mx to greater than or equal to 0 do the following\n    for j = 0 to less than n do the following\n      if p[j].second is not equal to 1 and c[p[j].second] > i then do the following\n        minus 1from c[p[j].second]\n        set p[j].second to 1\n        add 1 to c[1]\n        sum equals sum plus p[j].first\n      \n    \n    set long long integer k to i - c[1] + 1\n    set long long integer t to sum\n    for j = 0 to less than n do the following\n      if k is greater than 0 then do the following\n        if p[j].second is not equal to 1 then do the following\n          t equals t plus p[j].first\n          minus 1 from k--\n        \n      \n    \n    set ans to min(ans, t)\n  \n  output ans,\\n\n\n",
        "pair<long long int, long long int> p[3007];\nlong long int c[3007];\nint main() {\n  long long int n, m;\n  cin >> n >> m;\n  long long int mx = 0;\n  for (long long int i = 0; i < n; i++) {\n    cin >> p[i].second >> p[i].first;\n    c[p[i].second]++;\n  }\n  sort(p, p + n);\n  for (long long int i = 2; i <= m; i++) mx = max(mx, c[i]);\n  long long int ans = 21474836470000;\n  long long int sum = 0;\n  for (long long int i = mx; i >= 0; i--) {\n    for (long long int j = 0; j < n; j++) {\n      if (p[j].second != 1 && c[p[j].second] > i) {\n        c[p[j].second]--;\n        p[j].second = 1;\n        c[1]++;\n        sum += p[j].first;\n      }\n    }\n    long long int k = i - c[1] + 1;\n    long long int t = sum;\n    for (long long int j = 0; j < n; j++) {\n      if (k > 0) {\n        if (p[j].second != 1) {\n          t += p[j].first;\n          k--;\n        }\n      }\n    }\n    ans = min(ans, t);\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "\n  ax, ay, bx, by, cx, cy, n =integers\n  Read ax, ay, bx, by, cx, cy, n\n  if cx is greater than bx\n    if cy is greater than by\n      if (ax is less than cx and ax is greater than bx) OR (ay is less than cy and ay is greater than by)\n        print NO and a new line\n      else do the following\n        print YES and a new line\n      \n    else do the following\n      if (ax is less than cx and ax is greater than bx) OR (ay is greater than cy and ay is less than by)\n        print NO and a new line\n      else do the following\n        print YES and a new line\n      \n    \n  else do the following\n    if cy is greater than by\n      if (ax is greater than cx and ax is less than bx) OR| (ay is less than cy and ay is greater than by\n        print NO and a new line\n      else do the following\n        print YES and a new line\n      \n    else do the following\n      if (ax is greater than cx and ax is less than bx) OR| (ay is greater than cy and ay is less than by)\n        print NO and a new line\n      else do the following\n        print YES and a new line\n      \n    \n  \n  \n\n",
        "int main() {\n  int ax, ay, bx, by, cx, cy, n;\n  cin >> n >> ax >> ay >> bx >> by >> cx >> cy;\n  if (cx > bx) {\n    if (cy > by) {\n      if ((ax < cx && ax > bx) || (ay < cy && ay > by)) {\n        cout << \"NO\\n\";\n      } else {\n        cout << \"YES\\n\";\n      }\n    } else {\n      if ((ax < cx && ax > bx) || (ay > cy && ay < by)) {\n        cout << \"NO\\n\";\n      } else {\n        cout << \"YES\\n\";\n      }\n    }\n  } else {\n    if (cy > by) {\n      if ((ax > cx && ax < bx) || (ay < cy && ay > by)) {\n        cout << \"NO\\n\";\n      } else {\n        cout << \"YES\\n\";\n      }\n    } else {\n      if ((ax > cx && ax < bx) || (ay > cy && ay < by)) {\n        cout << \"NO\\n\";\n      } else {\n        cout << \"YES\\n\";\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create 2d integer array bio with size 1000 by 1000\ncreate constant integer array smjeroviX with size 8 with smjeroviX = {0, 0, 1, -1, 1, 1, -1, -1}\ncreate constant integer array smjeroviY with size 8 with smjeroviY = {1, -1, 0, 0, 1, -1, 1, -1}\n\n  create integers n, aX, aY, bX, bY, cX, cY\n  read n read aX read aY read bX read bY read cX read cY\n  decrement aX\n  decrement aY\n  decrement bX\n  decrement bY\n  decrement cX\n  decrement cY\n  create integer queue q\n  add element bX to end of q\n  add element bY to end of q\n  set bio[bX][bY] to 1\n  while q is not empty\n    create integer x with x = front of q\n    remove next element from q\n    set y to front of q\n    remove next element from q\n    if x is cX and y is cY\n      print \"YES\\n\"\n      \n    \n    for i = 0 to 8 exclusive\n      create integer X with X = x + smjeroviX[i]\n      create integer Y with Y = y + smjeroviY[i]\n      if X is less than 0 or X is n or Y is less than 0 or Y is n or bio[X][Y], break current loop iteration\n      set bio[X][Y] to 1\n      if X is not aX and Y is not aY and ( X + Y is not aX + aY) and ( X - Y is not aX - aY)\n        add element X to end of q\n        add element Y to end of q\n      \n    \n  \n  print \"NO\\n\"\n  \n\n",
        "int bio[1000][1000];\nconst int smjeroviX[8] = {0, 0, 1, -1, 1, 1, -1, -1};\nconst int smjeroviY[8] = {1, -1, 0, 0, 1, -1, 1, -1};\nint main() {\n  int n, aX, aY, bX, bY, cX, cY;\n  cin >> n >> aX >> aY >> bX >> bY >> cX >> cY;\n  aX--;\n  aY--;\n  bX--;\n  bY--;\n  cX--;\n  cY--;\n  queue<int> q;\n  q.push(bX);\n  q.push(bY);\n  bio[bX][bY] = 1;\n  while (!q.empty()) {\n    int x = q.front();\n    q.pop();\n    int y = q.front();\n    q.pop();\n    if (x == cX && y == cY) {\n      cout << \"YES\\n\";\n      return 0;\n    }\n    for (int i = 0; i < 8; i++) {\n      int X = x + smjeroviX[i];\n      int Y = y + smjeroviY[i];\n      if (X < 0 || X == n || Y < 0 || Y == n || bio[X][Y]) continue;\n      bio[X][Y] = 1;\n      if (X != aX && Y != aY && (X + Y != aX + aY) && (X - Y != aX - aY)) {\n        q.push(X);\n        q.push(Y);\n      }\n    }\n  }\n  cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  integers = n,ax,ay,bx,by,cx,cy\n  read n,ax,ay,bx,by,cx,cy\n  if (bx - ax) * (cx - ax)is less than 0 or (by - ay) * (cy - ay) < 0 then do the following\n    output NO\n  else\n    print YES\n  \n\n",
        "int main() {\n  int n, ax, ay, bx, by, cx, cy;\n  cin >> n >> ax >> ay >> bx >> by >> cx >> cy;\n  if ((bx - ax) * (cx - ax) < 0 || (by - ay) * (cy - ay) < 0)\n    cout << \"NO\" << endl;\n  else\n    cout << \"YES\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read input to n\n  create integers x1 and y1\n  read x1 and y1\n  declare ints x2 and y2\n  read x2 and y2\n  declare integers x3 and y3\n  read x3 and y3\n  if x2 < x1 and y2 < y1 and x3 < x1 and y3 < y1\n    print \"YES\"\n  else if x2 > x1 && y2 > y1 && x3 > x1 && y3 > y1\n    print \"YES\"\n  else if x2 > x1 && x3 > x1 && y3 < y1 && y2 < y1\n    print \"YES\"\n  else if x2 < x1 && x3 < x1 && y2 > y1 && y3 > y1\n    print \"YES\"\n  else\n    print \"NO\"\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x1, y1;\n  cin >> x1 >> y1;\n  int x2, y2;\n  cin >> x2 >> y2;\n  int x3, y3;\n  cin >> x3 >> y3;\n  if (x2 < x1 && y2 < y1 && x3 < x1 && y3 < y1)\n    cout << \"YES\" << endl;\n  else if (x2 > x1 && y2 > y1 && x3 > x1 && y3 > y1)\n    cout << \"YES\" << endl;\n  else if (x2 > x1 && x3 > x1 && y3 < y1 && y2 < y1)\n    cout << \"YES\" << endl;\n  else if (x2 < x1 && x3 < x1 && y2 > y1 && y3 > y1)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "n, qx, qy, kx, ky, tx, ty = integers\n\n  Read n\n  Read qx\n  Read qy\n  Read kx\n  Read ky\n  Read tx\n  Read ty\n  if kx is less than qx\n    if ky is less than qy\n      if tx is less than qx and ty is less than qy\n        print YES and a new line\n      else do the following\n        print NO and a new line\n    else do the following\n      if tx is less than qx and ty is greater than qy\n        print YES and a new line\n      else do the following\n        print NO and a new line\n    \n  else do the following\n    if ky is less than qy\n      if tx is greater than qx and ty is less than qy\n        print YES and a new line\n      else do the following\n        print NO and a new line\n    else do the following\n      if tx is greater than qx and ty is greater than qy\n        print YES and a new line\n      else do the following\n        print NO and a new line\n    \n  \n\n",
        "int n, qx, qy, kx, ky, tx, ty;\nint main() {\n  cin >> n;\n  cin >> qx;\n  cin >> qy;\n  cin >> kx;\n  cin >> ky;\n  cin >> tx;\n  cin >> ty;\n  if (kx < qx) {\n    if (ky < qy) {\n      if (tx < qx && ty < qy) {\n        cout << \"YES\" << endl;\n      } else\n        cout << \"NO\" << endl;\n    } else {\n      if (tx < qx && ty > qy) {\n        cout << \"YES\" << endl;\n      } else\n        cout << \"NO\" << endl;\n    }\n  } else {\n    if (ky < qy) {\n      if (tx > qx && ty < qy) {\n        cout << \"YES\" << endl;\n      } else\n        cout << \"NO\" << endl;\n    } else {\n      if (tx > qx && ty > qy) {\n        cout << \"YES\" << endl;\n      } else\n        cout << \"NO\" << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  integers = n\n  read n\n  integers = x,y,x1,y1,x2,y2\n  read input x,y,x1,y1,x2,y2\n  integers = flag = 1\n  if x1 is x or y1 then do the following\n  if abs is abs(y - y1 then do the following or abs(x - x2\n    set flag to 0\n  else if x1 is less than x and x2 > x then do the following\n    set flag to 0\n  else if x1 > x and x2 is less than x then do the following\n    set flag to 0\n  else if y1 is less than y and y2 > y then do the following\n    set flag to 0\n  else if y1 > y and y2 is less than y then do the following\n    set flag to 0\n  \n  if flag is true\n    output YES\n  else\n    output NO\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x, y, x1, y1, x2, y2;\n  cin >> x >> y >> x1 >> y1 >> x2 >> y2;\n  int flag = 1;\n  if (x1 == x || y1 == y || x2 == x || y2 == y) { flag = 0; }\n  if (abs(x - x1) == abs(y - y1) || abs(x - x2) == abs(y - y2)) {\n    flag = 0;\n  } else if (x1 < x && x2 > x) {\n    flag = 0;\n  } else if (x1 > x && x2 < x) {\n    flag = 0;\n  } else if (y1 < y && y2 > y) {\n    flag = 0;\n  } else if (y1 > y && y2 < y) {\n    flag = 0;\n  }\n  if (flag)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "boolean function search with int arguments ax, ay, bx, by, cx and cy\n  if bx < ax and cx < ax and by < ay and cy < ay\n    return true\n  else if bx < ax and cx < ax and by > ay and cy > ay\n    return true\n  else if bx > ax and cx > ax and by < ay and cy < ay\n    return true\n  else if bx > ax and cx > ax and by > ay and cy > ay\n    return true\n  return false\n\n\n  create ints n, ax, ay, bx, by, cx and cy\n  read n, ax, ay, bx, by, cx and cy\n  if search(ax, ay, bx, by, cx, cy) returns true\n    print \"YES\"\n  else\n    print \"NO\"\n  \n\n",
        "bool search(int ax, int ay, int bx, int by, int cx, int cy) {\n  if (bx < ax && cx < ax && by < ay && cy < ay)\n    return true;\n  else if (bx < ax && cx < ax && by > ay && cy > ay)\n    return true;\n  else if (bx > ax && cx > ax && by < ay && cy < ay)\n    return true;\n  else if (bx > ax && cx > ax && by > ay && cy > ay)\n    return true;\n  return false;\n}\nint main() {\n  int n, ax, ay, bx, by, cx, cy;\n  cin >> n >> ax >> ay >> bx >> by >> cx >> cy;\n  if (search(ax, ay, bx, by, cx, cy))\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b, c = long long int\n  read n\n  if n is a multiple of 3 or n mod 3 is 1\n    set a to n - 2\n    set b to 1\n    set c to 1\n  else if n mod 3 is 2\n    set a to n - 3\n    set b to 1\n    set c to 2\n  \n  print a and b and c\n\n",
        "int main() {\n  long long int n, a, b, c;\n  cin >> n;\n  if (n % 3 == 0 || n % 3 == 1) {\n    a = n - 2;\n    b = 1;\n    c = 1;\n  } else if (n % 3 == 2) {\n    a = n - 3;\n    b = 1;\n    c = 2;\n  }\n  cout << a << \" \" << b << \" \" << c << endl;\n}\n"
    ],
    [
        "\n  declare integer n\n  declare integer variable c8 = 0\n  read n\n  read from the input input and ignore it\n  let s be char array with size 101\n  read s\n  if n >= 11\n    declare integer r = n / 11\n    loop i from 0 while s[i] !=0, incrementing i\n      if s[i] is equal to '8', increment c8\n      if c8 is equal to r, break the loop\n    \n    print c8\n    \n  \n  print c8\n  \n\n",
        "int main() {\n  int n;\n  int c8 = 0;\n  cin >> n;\n  cin.ignore();\n  char s[101];\n  gets(s);\n  if (n >= 11) {\n    int r = n / 11;\n    for (int i = 0; s[i]; i++) {\n      if (s[i] == '8') c8++;\n      if (c8 == r) break;\n    }\n    cout << c8 << endl;\n    return 0;\n  }\n  cout << c8 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, num8, numn and num\n  create character array str with 101 element\n  read n and loop further\n    set num8 to 0\n    read input to str\n    for i from 0 to n exclusive\n      if str[i] = '8', increment num8 by one\n    assign n / 11 to numn\n    if num8 is greater than numn\n      change num to numn\n    else\n      change num to num8\n    print num\n  \n  \n\n",
        "int main() {\n  int n, num8, numn, num;\n  char str[101];\n  while (cin >> n) {\n    num8 = 0;\n    cin >> str;\n    for (int i = 0; i < n; i++)\n      if (str[i] == '8') num8++;\n    numn = n / 11;\n    if (num8 > numn)\n      num = numn;\n    else\n      num = num8;\n    cout << num << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  st, s = string\n  i, a, b, count = int with count = 0\n  read a then st\n  set b to a / 11\n  for i = 0 to a\n    if st[i] is '8' then increment count\n  \n  if count is less than b\n    print count\n  else\n    print b\n  \n  \n\n",
        "int main() {\n  string st, s;\n  int i, a, b, count = 0;\n  cin >> a >> st;\n  b = a / 11;\n  for (i = 0; i < a; i++) {\n    if (st[i] == '8') { count++; }\n  }\n  if (count < b) {\n    cout << count << endl;\n  } else {\n    cout << b << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  s = character array of size 101\n  n, i = integers, sum8 = integer = 0, sum = integer = 0, total = integer = 0\n  read n\n  read s\n  for i = 0 to n exclusive\n    if s[i] is 8, then increase sum8 by 1\n    increase sum by 1\n  \n  if sum8 >= sum / 11\n    total = sum / 11\n  else\n    total = sum8\n  print total\n  \n\n",
        "int main() {\n  char s[101];\n  int n, i, sum8 = 0, sum = 0, total = 0;\n  cin >> n;\n  cin >> s;\n  for (i = 0; i < n; i++) {\n    if (s[i] == '8') sum8++;\n    sum++;\n  }\n  if (sum8 >= sum / 11)\n    total = sum / 11;\n  else\n    total = sum8;\n  cout << total << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create character array s with size 101\n  create integers n, i, sum8, sum, total, with sum8 = 0, sum = 0, total = 0\n  read n\n  read s\n  for i = 0 to n exclusive\n    if s[i] is '8', increment sum8\n    increment sum\n  \n  if sum8 is greater than or equal to sum / 11\n    set total to sum / 11\n  else\n    set total to sum8\n  print total print newline\n  \n\n",
        "int main() {\n  char s[101];\n  int n, i, sum8 = 0, sum = 0, total = 0;\n  cin >> n;\n  cin >> s;\n  for (i = 0; i < n; i++) {\n    if (s[i] == '8') sum8++;\n    sum++;\n  }\n  if (sum8 >= sum / 11)\n    total = sum / 11;\n  else\n    total = sum8;\n  cout << total << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  create int n and sum, set to sum 0\n  read n\n  read s\n  for i=0 to length of s exclusive\n    if s[i] equal to 8, increment sum\n  \n  if n/11 greater than 11\n    print n/11\n  else\n    print sum and a newline\n\n",
        "int main() {\n  string s;\n  int n, sum = 0;\n  cin >> n;\n  cin >> s;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == '8') sum++;\n  }\n  if (n / 11 < sum)\n    cout << (n / 11) << endl;\n  else\n    cout << sum << endl;\n}\n"
    ],
    [
        "set N to 1e6 + 10\nmod = 998244353\ncreate int n\ncreate string x\ncreate map m from int to int\n\n  read n and x\n  for i=0 to n exclusive, increment m[x[i] - 0]\n  set s to size of x\n  print min of m[8] and s/11\n\n",
        "const int N = 1e6 + 10;\nconst int mod = 998244353;\nint n;\nstring x;\nmap<int, int> m;\nint main() {\n  cin >> n >> x;\n  for (int i = 0; i < n; i++) m[x[i] - '0']++;\n  int s = x.size();\n  cout << min(m[8], s / 11) << endl;\n}\n"
    ],
    [
        "\n  n, k = integers with k = 0\n  Read n\n  s=string\n  Read s\n  for i = 0 to n exclusive\n    if s[i] is 8, then increment k\n  \n  print minimum value of n / 11 and k and a new line\n  \n\n",
        "int main() {\n  int n, k = 0;\n  cin >> n;\n  string s;\n  cin >> s;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '8') { k++; }\n  }\n  cout << min(n / 11, k) << endl;\n  return 0;\n}\n"
    ],
    [
        "MAX = const int with MAX = 100000\nIN = const int with INF = 1000000001\na = int array of size MAX\nn, sum = int with sum = 0\ns = string\n\n  read n\n  read s\n  len = int with len = length of s\n  for i = 0 to len increment sum if s[i] is '8'\n  res = int with res = n / 11\n  if sum is less or equal to res\n    print sum\n  else\n    print res\n  \n\n",
        "const int MAX = 100000;\nconst int INF = 1000000001;\nint a[MAX];\nint n, sum = 0;\nstring s;\nint main() {\n  cin >> n;\n  cin >> s;\n  int len = s.length();\n  for (int i = 0; i < len; ++i) sum += (s[i] == '8');\n  int res = n / 11;\n  if (sum <= res)\n    cout << sum << endl;\n  else\n    cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  Read n\n  number =string\n  Read number\n  has_eight =integer with 0\n  for i = 0 to length of string number exclusive\n    if number[i] is 8, then increment has_eight\n  if n is less than 11 OR has_eight is 0\n    print 0 and a new line\n    \n  \n  if (n / 11) is greater than or equal to has_eight\n    print has_eight and a new line\n  else if (n / 11) is less than has_eight\n    print n / 11 and a new line\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string number;\n  cin >> number;\n  int has_eight = 0;\n  for (int i = 0; i < number.length(); i++)\n    if (number[i] == '8') has_eight++;\n  if (n < 11 || has_eight == 0) {\n    cout << 0 << endl;\n    return 0;\n  }\n  if ((n / 11) >= has_eight)\n    cout << has_eight << endl;\n  else if ((n / 11) < has_eight)\n    cout << n / 11 << endl;\n}\n"
    ],
    [
        "\n  declare integer variables n and count with count = 0\n  read n\n  create character c\n  for integer i = 0 to n exclusive\n    read c\n    if c = '8', increment count\n  \n  if n < 11 or count = 0\n    print 0\n    \n    \n  \n  print min of count and n / 11\n  \n  \n\n",
        "int main() {\n  int n, count = 0;\n  cin >> n;\n  char c;\n  for (int i = 0; i < n; i++) {\n    cin >> c;\n    if (c == '8') count++;\n  }\n  if (n < 11 || count == 0) {\n    cout << 0 << endl;\n    return 0;\n    ;\n  }\n  cout << min(count, n / 11) << endl;\n  return 0;\n  ;\n}\n"
    ],
    [
        "k, i, n, ans, m = integers\ns = string\n\n  read n, s\n  for i = 0 to n exclusive\n    if s[i] is 8, increment k\n  \n  ans = min of k and n / 11\n  print ans\n\n",
        "int k, i, n, ans, m;\nstring s;\nint main() {\n  cin >> n >> s;\n  for (i = 0; i < n; i++) {\n    if (s[i] == '8') k++;\n  }\n  ans = min(k, n / 11);\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  s = string\n  read s\n  eight, other = int with eight = 0 and other = 0\n  for i= 0 to n\n    if s[i] is '8'\n      increment eight\n    else\n      increment other\n  \n  if eight is 0\n    print 0\n  else\n    ans = int with ans = other / 10\n    if ans is greater than eight\n      print eight\n      \n    \n    if eight - ans is 0\n      print ans\n    else\n      print (((eight - ans) + (other mod 10)) / 11) + ans\n    \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  int eight = 0, other = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '8')\n      eight++;\n    else\n      other++;\n  }\n  if (eight == 0)\n    cout << 0 << endl;\n  else {\n    int ans = other / 10;\n    if (ans > eight) {\n      cout << eight << endl;\n      return 0;\n    }\n    if (eight - ans == 0)\n      cout << ans << endl;\n    else {\n      cout << (((eight - ans) + (other % 10)) / 11) + ans << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  create integers n, i and cnt where i and cnt = 0\n  create string s\n  read n and s\n  while s[i] != '\\0'\n    if s[i] = '8', increment cnt by one\n    increment i\n  \n  if n >= 11 and n / 11 <= cnt and cnt != 0\n    print n / 11 and \"\\n\"\n  else if n >= 11 && n / 11 >= cnt && cnt != 0\n    print cnt and \"\\n\"\n  else\n    print \"0\\n\"\n  \n\n",
        "int main() {\n  int n, i = 0, cnt = 0;\n  string s;\n  cin >> n >> s;\n  while (s[i] != '\\0') {\n    if (s[i] == '8') cnt++;\n    i++;\n  }\n  if (n >= 11 && n / 11 <= cnt && cnt != 0)\n    cout << n / 11 << \"\\n\";\n  else if (n >= 11 && n / 11 >= cnt && cnt != 0)\n    cout << cnt << \"\\n\";\n  else\n    cout << \"0\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  declare integers n and sum with sum = 0\n  read n\n  read s\n  for i from 0 to length of s exclusive\n    if s[i] = '8', increment sum\n  \n  if n / 11 is less than sum\n    print n / 11\n  else\n    print sum\n\n",
        "int main() {\n  string s;\n  int n, sum = 0;\n  cin >> n;\n  cin >> s;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == '8') sum++;\n  }\n  if (n / 11 < sum)\n    cout << (n / 11) << endl;\n  else\n    cout << sum << endl;\n}\n"
    ],
    [
        "\n  declare int variable n\n  declare string variable num\n  read n and num\n  declare int count = 0\n  for integer i = 0 to n exclusive\n    if num[i] is equal to '8', increment count by one\n  \n  print count if n / 11 > count and n / 11 otherwise\n\n",
        "int main() {\n  int n;\n  string num;\n  cin >> n >> num;\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    if (num[i] == '8') { count++; }\n  }\n  cout << (n / 11 > count ? count : n / 11) << endl;\n}\n"
    ],
    [
        "\n  n, i, no_of_8, groups =integers with no_of_8 = 0\n  c = character\n  Read n\n  for i = 1 to n exclusive\n    Read c\n    f c is 8, then increment no_of_8\n  \n  set groups to n / 11\n  if no_of_8 is greater than or equal to groups\n    print groups and a new line\n  else do the following\n    print no_of_8 and a new line\n  \n\n",
        "int main() {\n  int n, i, no_of_8 = 0, groups;\n  char c;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> c;\n    if (c == '8') no_of_8++;\n  }\n  groups = n / 11;\n  if (no_of_8 >= groups)\n    cout << groups << endl;\n  else\n    cout << no_of_8 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  declare integer ans = 0\n  create char array s with 101 element\n  read s\n  for integer i = 0 to n exclusive\n    if s[i] = '8', increment ans by 1\n  \n  if ans is equal to 0 or n / 11 is equal to 0\n    print 0\n  else if ans > n / 11\n    print n / 11\n  else\n    print ans\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int ans = 0;\n  char s[101];\n  cin >> s;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '8') ans++;\n  }\n  if (ans == 0 || n / 11 == 0)\n    cout << 0 << endl;\n  else if (ans > n / 11)\n    cout << n / 11 << endl;\n  else\n    cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int\n  read t\n  while decrement t\n    n and k = int\n    read n, k\n    set flag =0\n    for i=0 to n/k exclusive\n      for j=0 to k exclusive\n        print char(97+j)\n        assign j to flag\n      \n    \n    for i=0 to n - (n/k) * k exclusive, print char(97 + flag)\n    print a newline\n  \n\n",
        "int main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    int n, k;\n    cin >> n >> k;\n    int flag = 0;\n    for (int i = 0; i < (n / k); i++) {\n      for (int j = 0; j < k; j++) {\n        cout << char(97 + j);\n        flag = j;\n      }\n    }\n    for (int i = 0; i < n - (n / k) * k; i++) { cout << char(97 + flag); }\n    cout << endl;\n  }\n}\n"
    ],
    [
        "\n  create integer n\n  create string s\n  read n\n  read s\n  create string t with t = \"\"\n  for i = 0 to n exclusive\n    create integer k with k = (i * (i + 1)) / 2\n    if k is greater than or equal to n, break loop\n    set t to t + s[k]\n  \n  print t print newline\n  \n\n",
        "int main() {\n  int n;\n  string s;\n  cin >> n;\n  cin >> s;\n  string t = \"\";\n  for (int i = 0; i < n; i++) {\n    int k = (i * (i + 1)) / 2;\n    if (k >= n) { break; }\n    t = t + s[k];\n  }\n  cout << t << endl;\n  return 0;\n}\n"
    ],
    [
        "create long longs x, y and z, with z = 1\ndeclare string variables s and ss\n\n  read x and s\n  for integer i = 0 to x exclusive\n    increase ss by s[i]\n    increase i by z\n    increment z\n  \n  print ss and a new line\n  \n\n",
        "long long x, y, z = 1;\nstring s, ss;\nint main() {\n  cin >> x >> s;\n  for (int i = 0; i < x;) {\n    ss += s[i];\n    i += z;\n    z++;\n  }\n  cout << ss << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  v = vector of characters\n  s = vector of characters\n  count and size are integers, with count = 1\n  declare character variable called c\n  read size\n  for integer i = 0 to size exclusive\n    read c\n    push c into v\n  \n  let in and i be integers, with i = 0\n  while i is less than size\n    if i = 0\n      push v[i] into s\n      increase i by one\n    else\n      set value of in to count\n      for integer j = 0 to in exclusive\n      if i is less than size push v[i] into s\n      increase count\n    \n  \n  for integer i = 0 to length of s exclusive, print s[i]\n  print new line\n  \n\n",
        "int main() {\n  vector<char> v;\n  vector<char> s;\n  int count = 1, size;\n  char c;\n  cin >> size;\n  for (int i = 0; i < size; i++) {\n    cin >> c;\n    v.push_back(c);\n  }\n  int in, i = 0;\n  while (i < size) {\n    if (i == 0) {\n      s.push_back(v[i]);\n      i++;\n    } else {\n      in = count;\n      for (int j = 0; j < in; j++) { i++; }\n      if (i < size) s.push_back(v[i]);\n      count++;\n    }\n  }\n  for (int i = 0; i < s.size(); i++) { cout << s[i]; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable called n\n  read n\n  let a be string\n  read a\n  for integer i = 1 while i * (i + 1) / 2 < n + 1, print a[(i * (i + 1) / 2) - 1]\n  print new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string a;\n  cin >> a;\n  for (int i = 1; i * (i + 1) / 2 < n + 1; i++) { cout << a[(i * (i + 1) / 2) - 1]; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, sum, index\n  create character arrays s, a, with s size 55, a size 55\n  read n read s\n  set sum to index to 0\n  for i = 0\n    increment index by i\n    if index is greater than or equal to n, break loop\n    set a[increment sum] to s[index]\n  \n  set a[sum] to '\\0'\n  print a print newline\n  \n\n",
        "int main() {\n  int n, sum, index;\n  char s[55], a[55];\n  cin >> n >> s;\n  sum = index = 0;\n  for (int i = 0;; i++) {\n    index += i;\n    if (index >= n) break;\n    a[sum++] = s[index];\n  }\n  a[sum] = '\\0';\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "define function compare with arguments p1 and p2 of type pair of string and int\n  return true if p1.second > p2.second or false if it is not\n\n\n  n is integer\n  read n\n  declare string called s\n  read s\n  declare string variable called ans = \" \"\n  declare integer called h = 1\n  declare integer variable called c = 1\n  for integer i = 0 to length of s exclusive\n    if c = h\n      increase ans by s[i]\n      increment h\n      c = 1\n    else\n      increase c by one\n  \n  print ans and a new line\n  read n\n\n",
        "int compare(pair<string, int> p1, pair<string, int> p2) {\n  return (p1.second > p2.second);\n}\nint main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  string ans = \"\";\n  int h = 1;\n  int c = 1;\n  for (int i = 0; i < int(s.size()); i++) {\n    if (c == h) {\n      ans += s[i];\n      h++;\n      c = 1;\n    } else\n      c++;\n  }\n  cout << ans << endl;\n  cin >> n;\n}\n"
    ],
    [
        "s, d = strings\nn, i, l = long long\n\n  read n\n  read s\n  while n is not 0\n    increment l\n    n=n-l\n  \n  for i=1 to less or equal l\n    sd = sd + s[0]\n    Erases the portion of the string\n  \n  print sd and new line\n  \n\n",
        "string s, sd;\nlong long n, i, l;\nint main() {\n  cin >> n;\n  cin >> s;\n  while (n != 0) {\n    l++;\n    n -= l;\n  }\n  for (i = 1; i <= l; i++) {\n    sd = sd + s[0];\n    s.erase(0, i);\n  }\n  cout << sd << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string a\n  create integers n, num, l with num = 0, l = 2\n  read n read a\n  while true\n    if num is less than n - 1\n      print a[num]\n      increment num by l\n      increment l\n    else\n      print a[num] print newline\n      break loop\n    \n  \n  \n\n",
        "int main() {\n  string a;\n  int n, num = 0, l = 2;\n  cin >> n >> a;\n  while (true) {\n    if (num < n - 1) {\n      cout << a[num];\n      num += l;\n      l++;\n    } else {\n      cout << a[num] << endl;\n      break;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long n\n  read n\n  create string palabra\n  read palabra\n  create string answer with answer = \"\"\n  create long long aumento with aumento = 1\n  for i = 0 to n exclusive, setting i to i + aumento\n    add element substring of palabra from i to 1 to end of answer\n    increment aumento\n  \n  print answer print newline\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  string palabra;\n  cin >> palabra;\n  string answer = \"\";\n  long long aumento = 1;\n  for (long long i = 0; i < n; i = i + aumento) {\n    answer.append(palabra.substr(i, 1));\n    aumento++;\n  }\n  cout << answer << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, sum, index\n  create character arrays s, a, with s size 56, a size 56\n  read n read s\n  set sum to index to 0\n  for i = 0\n    increment index by i\n    if index is greater than or equal to n, break loop\n    set a[increment sum] to s[index]\n  \n  set a[sum] to '\\0'\n  print a print newline\n  \n\n",
        "int main() {\n  int n, sum, index;\n  char s[56], a[56];\n  cin >> n >> s;\n  sum = index = 0;\n  for (int i = 0;; i++) {\n    index += i;\n    if (index >= n) break;\n    a[sum++] = s[index];\n  }\n  a[sum] = '\\0';\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer called n\n  read n\n  create string s\n  read s\n  let i be integer = 2\n  ans is an empty string\n  ans = ans + s[0]\n  j is integer = 3\n  while i <= n - 1\n    ans = ans + s[i]\n    i = i + j\n    increment j\n  \n  print ans and a new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  int i = 2;\n  string ans = \"\";\n  ans = ans + s[0];\n  int j = 3;\n  while (i <= n - 1) {\n    ans = ans + s[i];\n    i = i + j;\n    j++;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variable a\n  declare integer variables n and s with s = 0\n  read n and a\n  for i = 1 to n inclusive\n    increase s by i\n    if s <= n print a[s - i]\n  \n  print new line\n  \n\n",
        "int main() {\n  string a;\n  int n, s = 0;\n  cin >> n >> a;\n  for (int i = 1; s <= n; i++) {\n    s += i;\n    if (s <= n) cout << a[s - i];\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n is integer\n  read n\n  let a be an array of characters of length n\n  for i = 0 to n exclusive put input to a[i]\n  let incr be integer = 1\n  for integer i = 0 to n exclusive incrementing by incr\n    print a[i]\n    increase incr\n  \n  print new line\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  char a[n];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int incr = 1;\n  for (int i = 0; i < n; i = i + incr) {\n    cout << a[i];\n    incr++;\n  }\n  cout << endl;\n}\n"
    ],
    [
        "\n  create integer n\n  let s be an array of characters of length 100\n  read n and s\n  t is integer = 1\n  for i = 0 to n exclusive\n    print s[i]\n    increase t by one\n  \n  print new line\n  \n\n",
        "int main() {\n  int n;\n  char s[100];\n  cin >> n >> s;\n  int t = 1;\n  for (int i = 0; i < n; i += t) {\n    cout << s[i];\n    t++;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n and it; it = 1\n  create string s\n  read n and s\n  for i = 0 to n exclusive with step of it\n    increase it by one\n    print s[i]\n  \n  print new line\n\n",
        "int main() {\n  int n, it = 1;\n  string s;\n  cin >> n >> s;\n  for (int i = 0; i < n; i += it) {\n    it++;\n    cout << s[i];\n  }\n  cout << endl;\n}\n"
    ],
    [
        "a and b are char arrays with size 60\n\n  let n be integer\n  read n in a loop\n    call memset(b, 0 and sizeof(b))\n    read n elements into a starting from index 1\n    k and d are integers = 0\n    for i = 1 to n inclusive, incrementing by k\n      set b[d] to a[i]\n      increment d\n      increase k\n    \n    print b and a new line\n  \n\n",
        "char a[60], b[60];\nint main() {\n  int n;\n  while (cin >> n) {\n    memset(b, 0, sizeof(b));\n    for (int i = 1; i <= n; i++) { cin >> a[i]; }\n    int k = 0, d = 0;\n    for (int i = 1; i <= n; i = i + k) {\n      b[d] = a[i];\n      d++;\n      k++;\n    }\n    cout << b << endl;\n  }\n}\n"
    ],
    [
        "\n  declare integer variable called n\n  read n\n  let a be an array of characters of size 60\n  read a\n  j is integer = 1\n  for i = 0 to n exclusive, incrementing i by j\n    print a[i]\n    increase j by one\n  \n  print new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  char a[60];\n  cin >> a;\n  int j = 1;\n  for (int i = 0; i < n; i = i + j) {\n    cout << a[i];\n    j++;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  set s to character array of length 60\n  n, ans = integers with ans set to 0\n  read n\n  read s\n  for i to n inclusive incremented by ans\n    increment ans by 1\n    print s[i]\n  \n  print new line\n  \n\n",
        "int main() {\n  char s[60];\n  int n, ans = 0;\n  cin >> n;\n  cin >> s;\n  for (int i = 0; i < n; i += ans) {\n    ans += 1;\n    cout << s[i];\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create string s\n  read s\n  create string ans\n  create integers cnt, sum with cnt = 0, sum = 0\n  for i = 0 to n exclusive, incrementing i by cnt\n    add element s[i] to end of ans\n    increment cnt\n  \n  print ans print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  string ans;\n  int cnt = 0, sum = 0;\n  for (int i = 0; i < n; i += cnt) {\n    ans.push_back(s[i]);\n    cnt++;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, cnt, i with cnt = 1, i = 0\n  create string s\n  read n read s\n  while true\n    print s[i]\n    increment i by cnt\n    increment cnt\n    if i + cnt is greater than n, break loop\n  \n  print newline\n  \n\n",
        "int main() {\n  int n, cnt = 1, i = 0;\n  string s;\n  cin >> n >> s;\n  while (true) {\n    cout << s[i];\n    i += cnt;\n    cnt++;\n    if (i + cnt > n) { break; }\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variables l, r, n and k\n  read k\n  for i = 0 to k exclusive\n    read l and r\n    print l, ' ' and r - (r modulo l)\n  \n\n",
        "int main() {\n  int l, r, n, k;\n  cin >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> l >> r;\n    cout << l << ' ' << r - (r % l) << endl;\n  }\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  l, r, R = long long arrays of size 1000 each\n  for i = 0 to n\n    read l[i] then r[i]\n    set R[i] to r[i] / l[i]\n  \n  for i = 0 to n print l[i] then \" \" then l[i] * R[i]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long l[1000], r[1000], R[1000];\n  for (int i = 0; i < n; i++) {\n    cin >> l[i] >> r[i];\n    R[i] = r[i] / l[i];\n  }\n  for (int i = 0; i < n; i++) cout << l[i] << \" \" << l[i] * R[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers t, n, l\n  read t\n  while decrement t is true\n    read n read l\n    print n print \" \" print ( l / n ) * n print newline\n  \n  \n\n",
        "int main() {\n  int t, n, l;\n  cin >> t;\n  while (t--) {\n    cin >> n >> l;\n    cout << n << \" \" << (l / n) * n << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers T, l, r\n  read T\n  for i = 1 to T inclusive\n    read l read r\n    print l print \" \" print l * ( r / l ) print newline\n  \n\n",
        "int main() {\n  int T, l, r;\n  cin >> T;\n  for (int i = 1; i <= T; i++) {\n    cin >> l >> r;\n    cout << l << \" \" << l * (r / l) << endl;\n  }\n}\n"
    ],
    [
        "\n  create integer numberOfInputs\n  read numberOfInputs\n  create long longs input1 and input2\n  while numberOfInputs > 0, decrement it and keep looping\n    read input1 and input2\n    create long long div = input2 / input1\n    create long long answer = input1 * div\n    print input1, \" \" and answer\n  \n  \n\n",
        "int main() {\n  int numberOfInputs;\n  cin >> numberOfInputs;\n  long long input1, input2;\n  while (numberOfInputs--) {\n    cin >> input1 >> input2;\n    long long div = input2 / input1;\n    long long answer = input1 * div;\n    cout << input1 << \" \" << answer << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integers T, l ,r\n\n  create integers i, j\n  read T\n  for i = 1 to T inclusive\n    read l read r\n    print l print ' ' print ( r / l ) * l print '\\n'\n  \n  \n\n",
        "int T, l, r;\nint main() {\n  int i, j;\n  cin >> T;\n  for (i = 1; i <= T; i++) {\n    cin >> l >> r;\n    cout << l << ' ' << (r / l) * l << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  t = int\n  read t\n  loop t times\n    l, r = long int\n    read l then r\n    if l equals 1\n      print l and r\n    else\n      print l and \" \"\n      mod = long int with mod = r modulo l\n      print r - mod\n    \n  \n  \n\n",
        "int main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    long int l, r;\n    cin >> l >> r;\n    if (l == 1)\n      cout << l << \" \" << r << endl;\n    else {\n      cout << l << \" \";\n      long int mod = (r % l);\n      cout << (r - mod) << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  t=int\n  read t\n  l,r,d=int\n  while decremented t not equal 0\n    read l,r\n    if r modulo l is zero\n      print l, space, r\n    else\n      d=r modulo l\n      d=r-d\n      print l, space, d\n    \n  \n\n",
        "int main() {\n  int t;\n  cin >> t;\n  int l, r, d;\n  while (t--) {\n    cin >> l >> r;\n    if (r % l == 0) {\n      cout << l << \" \" << r << endl;\n    } else {\n      d = r % l;\n      d = r - d;\n      cout << l << \" \" << d << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  create long long n and m\n  read n\n  create long long l and r\n  while decrement n\n    read l and r\n    if r mod l = 0\n      print l, \" \", r\n    else\n      print l, \" \", r - (r mod l)\n    \n  \n\n",
        "int main() {\n  long long n, m;\n  cin >> n;\n  long long l, r;\n  while (n--) {\n    cin >> l >> r;\n    if (r % l == 0) {\n      cout << l << \" \" << r << endl;\n    } else {\n      cout << l << \" \" << r - (r % l) << endl;\n    }\n  }\n}\n"
    ],
    [
        "x, y = long long\n\n  T = int\n  read T\n  loop T times\n    read x then y\n    r = long long with r = y mod x\n    print x then \" \" then y - r\n  \n  \n\n",
        "long long x, y;\nint main() {\n  int T;\n  cin >> T;\n  while (T--) {\n    cin >> x >> y;\n    long long r = y % x;\n    cout << x << \" \" << y - r << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, i and arrays p and s of length 100100\n  read n\n  for i=2 to n inclusive, read p[i]\n  for i=1 to n inclusive, read s[i]\n  for i=2 to n inclusive\n    if s[i] = -1, continue the loop\n    s[p[i]] = -1\n      set s[p[i]] = s[i]\n    else\n      s[p[i]] = min of s[p[i]] and s[i]\n  \n  for i=2 to n inclusive\n    if s[i] equal to -1, continue the loop\n    if s[p[i]] greater than s[i]\n      print -1\n      \n    \n  \n  set ans to s[1]\n  for i=2 to n inclusive\n    if s[i] equal to -1, continue the loop\n    assign ans + s[i] - s[p[i]] to ans\n  \n  print ans\n  \n\n",
        "int main() {\n  int n, p[100100], s[100100], i;\n  cin >> n;\n  for (i = 2; i <= n; i++) cin >> p[i];\n  for (i = 1; i <= n; i++) cin >> s[i];\n  for (i = 2; i <= n; i++) {\n    if (s[i] == -1) continue;\n    if (s[p[i]] == -1)\n      s[p[i]] = s[i];\n    else\n      s[p[i]] = min(s[p[i]], s[i]);\n  }\n  for (i = 2; i <= n; i++) {\n    if (s[i] == -1) continue;\n    if (s[p[i]] > s[i]) {\n      cout << -1 << endl;\n      return 0;\n    }\n  }\n  long long ans = s[1];\n  for (i = 2; i <= n; i++) {\n    if (s[i] == -1) continue;\n    ans += (s[i] - s[p[i]]);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create long long integer arrays s, ms, p, v with s size n, ms size n, p size n, v size n\n  set p[0] to 0\n  for i = 1 to n exclusive, decrementing p[increment i], read p[i]\n  for i = 0 to n exclusive\n    read s[i]\n    set ms[i] to s[i]\n  \n  for i = n - 1 to 0 exclusive, decrementing i\n    if ms[i] is less than 0, break current loop iteration\n    if s[p[i]] is less than 0 and ( ms[p[i]] is less than 0 or ms[p[i]] is greater than ms[i]), set ms[p[i]] to ms[i]\n  \n  if ms[0] is less than 0, set ms[0] to 0\n  create long long integer sum with sum = ms[0]\n  for i = 1 to n exclusive\n    if ms[i] is less than 0\n      set ms[i] to mms[p[i]]\n    else if ms[i] is less than ms[p[i]]\n      print -1 print newline\n      \n    else\n      increment sum by ms[i] - ms[p[i]]\n  \n  print sum print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long int s[n], ms[n], p[n], v[n];\n  p[0] = 0;\n  for (int i = 1; i < n; --p[i++]) cin >> p[i];\n  for (int i = 0; i < n; ++i) {\n    cin >> s[i];\n    ms[i] = s[i];\n  }\n  for (int i = n - 1; i > 0; --i) {\n    if (ms[i] < 0) continue;\n    if (s[p[i]] < 0 && (ms[p[i]] < 0 || ms[p[i]] > ms[i])) ms[p[i]] = ms[i];\n  }\n  if (ms[0] < 0) ms[0] = 0;\n  long long int sum = ms[0];\n  for (int i = 1; i < n; ++i) {\n    if (ms[i] < 0)\n      ms[i] = ms[p[i]];\n    else if (ms[i] < ms[p[i]]) {\n      cout << -1 << endl;\n      return 0;\n    } else\n      sum += ms[i] - ms[p[i]];\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "let N be a constant integer with value N is equal to 100001\ng = array of vector integers of size N\nlet n, val be integers with val = array of integers of length N\nsum = array of long integers of length N\nlet depth first search of int u and int p be a boolean type\n  if length of g[u] is equal to 1 and p is not equal to -1\n    if sum[u] is equal to -1\n      set val[u] to 0\n      assign the value sum[p] to sum[u]\n    else do the following\n      assign the value of sum[u] - sum[p] to val[u]\n    return the value as true\n  \n  if sum[u] is equal to -1\n    let mn be a long integer with mn = 1e9\n    for i =0 to length of g[u] exclusive\n      let v be a integer with v = g[u][i]\n      if v is equal to p , proceed to next\n      let diff be a long integer with diff = sum[v] - sum[p]\n      if diff is less than 0, return false\n      mn = minimum of mn and diff\n    \n    the uth element of val = mn\n    sum[u] is equal to sum[p] + val[u]\n  else if ( p is not equal to -1 )\n    the value of sum[u] - sum[p] is assigned to val[u]\n  let check is a boolean type with check = 1\n  for i = 0 to length of g[u] exclusive]\n    let v be a integer with v = g[u][i]\n    if v is equal to p , proceed to next\n    check = check and depth first search of v , u\n  \n  return the value of check\n\n\n  read n\n  for i = 0 to n - 1 exclusive\n    let p be a integer\n    read p\n    decrease p value by 1\n    do g[p].push_back(i + 1)\n    do g[i + 1].push_back(p)\n  \n  for i = 0 to n exclusive , read sum[i]\n  let val[0] = sum[0]\n  if not dfs of 0 and -1\n    print -1 and newline\n  else do the following\n    let long integer s = 0\n    for i = 0 to n exclusive , increase s by val[i]\n    print s and newline\n  \n  \n\n",
        "const int N = 100001;\nvector<int> g[N];\nint n, val[N];\nlong long sum[N];\nbool dfs(int u, int p) {\n  if (g[u].size() == 1 && p != -1) {\n    if (sum[u] == -1) {\n      val[u] = 0;\n      sum[u] = sum[p];\n    } else\n      val[u] = sum[u] - sum[p];\n    return true;\n  }\n  if (sum[u] == -1) {\n    long long mn = 1e9;\n    for (int i = 0; i < g[u].size(); ++i) {\n      int v = g[u][i];\n      if (v == p) continue;\n      long long diff = sum[v] - sum[p];\n      if (diff < 0) return false;\n      mn = min(mn, diff);\n    }\n    val[u] = mn;\n    sum[u] = sum[p] + val[u];\n  } else if (p != -1)\n    val[u] = sum[u] - sum[p];\n  bool check = 1;\n  for (int i = 0; i < g[u].size(); ++i) {\n    int v = g[u][i];\n    if (v == p) continue;\n    check = check && dfs(v, u);\n  }\n  return check;\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < n - 1; ++i) {\n    int p;\n    cin >> p;\n    --p;\n    g[p].push_back(i + 1);\n    g[i + 1].push_back(p);\n  }\n  for (int i = 0; i < n; ++i) cin >> sum[i];\n  val[0] = sum[0];\n  if (!dfs(0, -1))\n    cout << -1 << endl;\n  else {\n    long long s = 0;\n    for (int i = 0; i < n; ++i) s += val[i];\n    cout << s << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create long long p with size 200000\ncreate long long s with size 200000\n\n  create long long num with num = 0\n  create long longs n, i, j\n  read n\n  for i = 2 to n inclusive, read p[i]\n  for i = 1 to n inclusive\n    read s[i]\n    if s[i] is -1, set s[i] to 1e10\n  \n  for i = 1 to n inclusive, set s[p[i]] to minimum of s[p[i]] and s[i]\n  for i = 1 to n inclusive\n    if s[p[i]] is greater than s[i]\n      print -1 print newline\n      \n    \n    if s[i] is 1e10, set s[i] to s[p[i]]\n    increment num by s[i] - s[p[i]]\n  \n  print num print newline\n  \n\n",
        "long long p[200000];\nlong long s[200000];\nint main() {\n  long long num = 0;\n  long long n, i, j;\n  cin >> n;\n  for (i = 2; i <= n; i++) { cin >> p[i]; }\n  for (i = 1; i <= n; i++) {\n    cin >> s[i];\n    if (s[i] == -1) s[i] = 1e10;\n  }\n  for (i = 1; i <= n; i++) s[p[i]] = min(s[p[i]], s[i]);\n  for (i = 1; i <= n; i++) {\n    if (s[p[i]] > s[i]) {\n      cout << -1 << endl;\n      return 0;\n    }\n    if (s[i] == 1e10) s[i] = s[p[i]];\n    num += s[i] - s[p[i]];\n  }\n  cout << num << endl;\n  return 0;\n}\n"
    ],
    [
        "declare const int maxn = 1e5 + 5\ndeclare const long long inf = 0x3f3f3f3f\ndeclare an array of integer vectors G with size maxn\ncreate long long arrays sum and a with maxn elements\ncreate integer array minson with maxn elements\ndeclare int variable n\ndefine function getson\n  declare int minkey = inf\n  for i = 0 to length of G[v] exclusive\n    create int to = G[v][i]\n    if minkey is greater than getson(to)\n      set minkey to sum[to]\n      change minson[v] to to\n    \n  \n  return sum[v]\n\nvoid function dfs with int arguments v and deep and long long argument fasum\n  if deep & 1 is not 0\n    assign sum[v] - fasum to a[v]\n  else if length of G[v] is not 0\n    change a[v] to 0\n    return\n  else\n    set a[v] to sum[minson[v]] - fasum\n  for i = 0 to length of G[v] exclusive, call dfs(G[v][i], fasum + a[v], deep + 1)\n\n\n  read n and loop further\n    create int pa\n    for i = 2 to n inclusive\n      read pa\n      push i to G[pa]\n    \n    for integer i = 1 to n inclusive, read sum[i]\n    call function getson with argument 1\n    call function dfs with arguments 1, 0 and 1\n    create long long maxsum = 0\n    create integer flag = 0\n    for integer i = 1 to n inclusive\n      if a[i] >= 0\n        add a[i] to maxsum\n      else\n        set flag to 1\n    \n    if flag is 0\n      print maxsum\n    else\n      print -1\n    for i = 0 to n inclusive, clear G[i]\n  \n  \n\n",
        "const int maxn = 1e5 + 5;\nconst long long inf = 0x3f3f3f3f;\nvector<int> G[maxn];\nlong long sum[maxn], a[maxn];\nint minson[maxn];\nint n;\nint getson(int v) {\n  int minkey = inf;\n  for (int i = 0; i < G[v].size(); ++i) {\n    int to = G[v][i];\n    if (minkey > getson(to)) {\n      minkey = sum[to];\n      minson[v] = to;\n    }\n  }\n  return sum[v];\n}\nvoid dfs(int v, long long fasum, int deep) {\n  if (deep & 1)\n    a[v] = sum[v] - fasum;\n  else if (!G[v].size()) {\n    a[v] = 0;\n    return;\n  } else\n    a[v] = sum[minson[v]] - fasum;\n  for (int i = 0; i < G[v].size(); ++i) dfs(G[v][i], fasum + a[v], deep + 1);\n}\nint main() {\n  while (cin >> n) {\n    int pa;\n    for (int i = 2; i <= n; ++i) {\n      cin >> pa;\n      G[pa].push_back(i);\n    }\n    for (int i = 1; i <= n; ++i) cin >> sum[i];\n    getson(1);\n    dfs(1, 0, 1);\n    long long maxsum = 0;\n    int flag = 0;\n    for (int i = 1; i <= n; ++i) {\n      if (a[i] >= 0)\n        maxsum += a[i];\n      else\n        flag = 1;\n    }\n    if (!flag)\n      cout << maxsum << endl;\n    else\n      cout << -1 << endl;\n    for (int i = 0; i <= n; ++i) G[i].clear();\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create string x\n  read x\n  create integers v and h = 0\n  for i = 0 to length of x exclusive\n    if x[i] is '0'\n      if v is 0\n        print 1, ' ', 1 and a new line, then increment v\n      else\n        print 3, ' ', 1 and a new line, then set v to 0\n    else\n      if h is 0\n        print 4, ' ', 3 and a new line, then increment h\n      else\n        print 4, ' ', 1 and a new line, then set h to 0\n    \n  \n  \n\n",
        "int main() {\n  string x;\n  cin >> x;\n  int v = 0, h = 0;\n  for (int i = 0; i < x.size(); i++) {\n    if (x[i] == '0') {\n      if (!v)\n        cout << 1 << ' ' << 1 << endl, v++;\n      else\n        cout << 3 << ' ' << 1 << endl, v = 0;\n    } else {\n      if (!h)\n        cout << 4 << ' ' << 3 << endl, h++;\n      else\n        cout << 4 << ' ' << 1 << endl, h = 0;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "declare boolean variables l and r\nlet s be string\n\n  read s\n  for i = 0 to length of s exclusive\n    if s[i] = '0' && l is true\n      print \"3 1\" and a new line\n      set value of l to false\n    else if s[i] = '0'\n      print \"1 1\" and a new line\n      l = true\n    else if s[i] = '1' && r is true\n      print \"4 1\" and a new line\n      assign value of false to r\n    else\n      print \"4 3\" and a new line\n      r = true\n    \n  \n  \n\n",
        "bool l, r;\nstring s;\nint main() {\n  cin >> s;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0' && l) {\n      cout << \"3 1\" << endl;\n      l = false;\n    } else if (s[i] == '0') {\n      cout << \"1 1\" << endl;\n      l = true;\n    } else if (s[i] == '1' && r) {\n      cout << \"4 1\" << endl;\n      r = false;\n    } else {\n      cout << \"4 3\" << endl;\n      r = true;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAXN with value 100000 + 5\n\n  create string s\n  read s\n  let cnt1 and cnt2 be integers = 0\n  for integer i = 0 to length of s exclusive\n    if s[i] = '0'\n      if cnt1 is even\n        print 1, \" \" and 1\n      else\n        print 3, \" \" and 1\n      increment cnt1\n    else\n      if cnt2 is even\n        print 4, \" \" and 3\n      else\n        print 4, \" \" and 1\n      increase cnt2\n    \n    print \"\\n\"\n  \n  \n\n",
        "const int MAXN = 100000 + 5;\nint main() {\n  string s;\n  cin >> s;\n  int cnt1 = 0, cnt2 = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0') {\n      if (cnt1 % 2 == 0)\n        cout << 1 << \" \" << 1;\n      else\n        cout << 3 << \" \" << 1;\n      cnt1++;\n    } else {\n      if (cnt2 % 2 == 0)\n        cout << 4 << \" \" << 3;\n      else\n        cout << 4 << \" \" << 1;\n      cnt2++;\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  s is string\n  read s\n  l1 is integer = length of s\n  create booleans vertikal and horizontal = 0\n  for integer i = 0 to l1 exclusive\n    if s[i] = '0'\n      if vertikal is not 0\n        assign value of 0 to vertikal\n        print \"3 1\\n\"\n      else\n        assign value of 1 to vertikal\n        print \"1 1\\n\"\n      \n    else\n      if horizontal is not 0\n        assign value of 0 to horizontal\n        print \"4 1\\n\"\n      else\n        set value of horizontal to 1\n        print \"4 3\\n\"\n      \n    \n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int l1 = s.length();\n  bool vertikal = 0, horizontal = 0;\n  for (int i = 0; i < l1; i++) {\n    if (s[i] == '0') {\n      if (vertikal) {\n        vertikal = 0;\n        cout << \"3 1\\n\";\n      } else {\n        vertikal = 1;\n        cout << \"1 1\\n\";\n      }\n    } else {\n      if (horizontal) {\n        horizontal = 0;\n        cout << \"4 1\\n\";\n      } else {\n        horizontal = 1;\n        cout << \"4 3\\n\";\n      }\n    }\n  }\n}\n"
    ],
    [
        "\n  create string s\n  read s\n  create integers o, z, with o = 0, z = 0\n  for i = 0 to size of s exclusive\n    if s[i] is '0'\n      increment o\n      if o % 2\n        print 1 print \" \" print 1 print newline\n      else\n        print 3 print \" \" print 1 print newline\n    else if s[i] is '1'\n      increment z\n      if z % 2\n        print 4 print \" \" print 3 print newline\n      else\n        print 4 print \" \" print 1 print newline\n    \n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int o = 0, z = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (s[i] == '0') {\n      o++;\n      if (o % 2)\n        cout << 1 << \" \" << 1 << endl;\n      else\n        cout << 3 << \" \" << 1 << endl;\n    } else if (s[i] == '1') {\n      z++;\n      if (z % 2)\n        cout << 4 << \" \" << 3 << endl;\n      else\n        cout << 4 << \" \" << 1 << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  create string str\n  read str\n  create integer len with len = length of str\n  create integers a, c, with a = 0, c = 0\n  for i = 0 to len exclusive\n    if str[i] is '0'\n      if a is 0\n        set a to 1\n        print \"1 1\"\n      else\n        set a to 0\n        print \"3 1\"\n      \n    \n    if str[i] is '1'\n      if c is 0\n        set c to 1\n        print \"4 3\"\n      else\n        set c to 0\n        print \"4 1\"\n      \n    \n  \n  \n\n",
        "int main() {\n  string str;\n  cin >> str;\n  int len = str.length();\n  int a = 0, c = 0;\n  for (int i = 0; i < len; i++) {\n    if (str[i] == '0') {\n      if (a == 0) {\n        a = 1;\n        puts(\"1 1\");\n      } else {\n        a = 0;\n        puts(\"3 1\");\n      }\n    }\n    if (str[i] == '1') {\n      if (c == 0) {\n        c = 1;\n        puts(\"4 3\");\n      } else {\n        c = 0;\n        puts(\"4 1\");\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "assign value 200005 to constant integer N\nassign value 998244353 to constant integer MOD\ndefine function solve\n  create string s\n  create boolean v = false\n  create boolean g = false\n  read s\n  declare integer n = length of s\n  for i = 0 to length of s exclusive\n    if s[i] = '0'\n      if v is true\n        print 3, \" \", 1 and a new line\n        set v to false\n      else\n        print \"1 1\" and a new line\n        set v to true\n      \n    else\n      if g is true\n        print 4, \" \", 1 and a new line\n        set g to false\n      else\n        print 4, \" \", 3 and a new line\n        set g to true\n      \n    \n  \n\n\n  declare integer variable t = 1\n  while t is not 0, decrement it and call solve\n\n",
        "const int N = 200005;\nconst long long MOD = 998244353;\nvoid solve() {\n  string s;\n  bool v = false;\n  bool g = false;\n  cin >> s;\n  int n = s.length();\n  for (int i = 0; i < (s.length()); i++) {\n    if (s[i] == '0') {\n      if (v) {\n        cout << 3 << \" \" << 1 << endl;\n        v = false;\n      } else {\n        cout << \"1 1\" << endl;\n        v = true;\n      }\n    } else {\n      if (g) {\n        cout << 4 << \" \" << 1 << endl;\n        g = false;\n      } else {\n        cout << 4 << \" \" << 3 << endl;\n        g = true;\n      }\n    }\n  }\n}\nint main() {\n  int t = 1;\n  while (t--) { solve(); }\n}\n"
    ],
    [
        "declare expo_fast with long long integers a, b as arguments, returning long long integer\n  set a to a\n  create long long integer result with result = 1\n  while b is true\n    if b bitwise and 1, set result to result * a\n    set b to b bitshift right 1\n    set a to a * a\n  \n  return result from function\n\ndeclare take_in with long long integer vector pointer arr as argument returning void\n  for i = 0 to result of run size from arr exclusive, read value of arr[i]\n\ndeclare disp_arr with long long integer vector pointer as argument, returning void\n  for i = 0 to result of run size from arr exclusive, print value of arr[i] print \" \"\n\ndeclare func with string s, integer n as arguments, returning string\n  create string q\n  resize q to size n\n  set q[0] to s[0]\n  set q[1] to s[1]\n  set q[2] to s[2]\n  for i = 3 to n exclusive\n    if i % 3 is 0\n      set q[i] to q[0]\n    else if i % 3 is 1\n      set q[i] to q[1]\n    else\n      set q[i] to q[2]\n  \n  return q from function\n\n\n  create string s\n  read s\n  create character stack stk\n  create long long integers ans with ans = 0\n  create booleans cond1, cond2 with cond1 = true, cond2 = true\n  for i = 0 to length of s exclusive\n    if s[i] is '0'\n      if cond1 is true\n        set cond1 to false\n        print \"1 1\\n\"\n      else\n        set cond1 to true\n        print \"3 1\\n\"\n      \n    else\n      if cond2 is true\n        set cond2 to false\n        print \"4 3\\n\"\n      else\n        set cond2 to true\n        print \"4 1\\n\"\n      \n    \n  \n\n",
        "long long int expo_fast(long long int a, long long int b) {\n  a = a;\n  long long int result = 1;\n  while (b) {\n    if (b & 1) result = (result * a);\n    b >>= 1;\n    a = (a * a);\n  }\n  return (result);\n}\nvoid take_in(vector<long long int> *arr) {\n  for (int i = 0; i < arr->size(); i++) cin >> (*(arr))[i];\n}\nvoid disp_arr(vector<long long int> *arr) {\n  for (int i = 0; i < arr->size(); i++) cout << (*(arr))[i] << \" \";\n}\nstring func(string s, int n) {\n  string q;\n  q.resize(n);\n  q[0] = s[0];\n  q[1] = s[1];\n  q[2] = s[2];\n  for (int i = 3; i < n; i++) {\n    if (i % 3 == 0)\n      q[i] = q[0];\n    else if (i % 3 == 1)\n      q[i] = q[1];\n    else\n      q[i] = q[2];\n  }\n  return q;\n}\nint main() {\n  string s;\n  cin >> s;\n  stack<char> stk;\n  long long int ans = 0;\n  bool cond1 = true, cond2 = true;\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] == '0') {\n      if (cond1) {\n        cond1 = false;\n        cout << \"1 1\\n\";\n      } else {\n        cond1 = true;\n        cout << \"3 1\\n\";\n      }\n    } else {\n      if (cond2) {\n        cond2 = false;\n        cout << \"4 3\\n\";\n      } else {\n        cond2 = true;\n        cout << \"4 1\\n\";\n      }\n    }\n  }\n}\n"
    ],
    [
        "create string s\ncreate integer array r with size 1001\ncreate integer array c with size 1001\n\n  read s\n  create integer n with n = length of s\n  create boolean slot_0 with slot_0 = false\n  create boolean slot_1 with slot_1 = false\n  for i = 0 to n exclusive\n    if s[i] is '0'\n      if not slot_0\n        print \"1 1\\n\"\n        set slot_0 to true\n      else\n        print \"3 1\\n\"\n        set slot_0 to false\n      \n    else\n      if not slot_1\n        print \"4 3\\n\"\n        set slot_1 to true\n      else\n        print \"4 1\\n\"\n        set slot_1 to false\n      \n    \n  \n\n",
        "string s;\nint r[1001];\nint c[1001];\nint main() {\n  cin >> s;\n  int n = s.length();\n  bool slot_0 = false;\n  bool slot_1 = false;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == '0') {\n      if (!slot_0) {\n        cout << \"1 1\\n\";\n        slot_0 = true;\n      } else {\n        cout << \"3 1\\n\";\n        slot_0 = false;\n      }\n    } else {\n      if (!slot_1) {\n        cout << \"4 3\\n\";\n        slot_1 = true;\n      } else {\n        cout << \"4 1\\n\";\n        slot_1 = false;\n      }\n    }\n  }\n}\n"
    ],
    [
        "create llin with no arguments, returning long long integer\n  create long long integer tmp\n  read tmp\n  return tmp from function\n\ndeclare solve with no arguments, returning void\n  create long long integer nsticks with nsticks = result of run llin\n  create long long integer array lengths with size nsticks\n  create long long integer min with min = 101\n  create long long integer max with max = 0\n  for i = 0 to nsticks exclusive\n    create long long integer tmp with tmp = result of run llin\n    set lengths[i] to tmp\n    if tmp is greater than max, set max to tmp\n    if tmp is less than min, set min to tmp\n  \n  create long long integer min_t with min_t to min\n  create long long integer min_cost with min_cost = 1000005\n  for t = min to max + 1 exclusive\n    create long long integer tmp_cost with tmp_cost = 0\n    for i = 0 to nsticks exclusive\n      create long long integer tmp_length with tmp_length = lengths[i]\n      if tmp_length is greater than t + 1\n        increment tmp_cost by tmp_length - ( t + 1 )\n      else if tmp_length is less than t - 1\n        increment tmp_cost by t - 1 - tmp_length\n    \n    if min_cost is greater than tmp_cost\n      set min_t to t\n      set min_cost to tmp_cost\n    \n  \n  print min_t print \" \" print min_cost print '\\n'\n  return from function\n\n\n  create integer TESTS with TESTS = 1\n  while decrement TESTS is true, run solve\n  \n\n",
        "long long int llin() {\n  long long int tmp;\n  cin >> tmp;\n  return tmp;\n}\nvoid solve() {\n  long long int nsticks = llin();\n  long long int lengths[nsticks];\n  long long int min = 101;\n  long long int max = 0;\n  for (long long int i = 0; i < nsticks; i++) {\n    long long int tmp = llin();\n    lengths[i] = tmp;\n    if (tmp > max) max = tmp;\n    if (tmp < min) min = tmp;\n  }\n  long long int min_t = min;\n  long long int min_cost = 1000005;\n  for (long long int t = min; t < max + 1; t++) {\n    long long int tmp_cost = 0;\n    for (long long int i = 0; i < nsticks; i++) {\n      long long int tmp_length = lengths[i];\n      if (tmp_length > t + 1)\n        tmp_cost += tmp_length - (t + 1);\n      else if (tmp_length < t - 1)\n        tmp_cost += t - 1 - (tmp_length);\n    }\n    if (min_cost > tmp_cost) {\n      min_t = t;\n      min_cost = tmp_cost;\n    }\n  }\n  cout << min_t << \" \" << min_cost << '\\n';\n  return;\n}\nint main() {\n  int TESTS = 1;\n  while (TESTS--) { solve(); }\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integer a, b, i, cnt, max, set cnt = 0, max = 0\n  for i = 0 to n execute\n    print a, b\n    set cnt = cnt + b - a\n    if cnt>max set max = cnt\n  \n  print max\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a, b, i, cnt = 0, max = 0;\n  for (i = 0; i < n; i++) {\n    cin >> a >> b;\n    cnt = cnt + b - a;\n    if (cnt > max) max = cnt;\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers x, y, c, m with c = 0, m = 0\n  create integer n\n  read n\n  while decrement n is true\n    read x read y\n    decrement c by x\n    increment c by y\n    if c is greater than m, set m to c\n  \n  print m print newline\n  \n\n",
        "int main() {\n  int x, y, c = 0, m = 0;\n  int n;\n  cin >> n;\n  while (n--) {\n    cin >> x >> y;\n    c -= x;\n    c += y;\n    if (c > m) { m = c; }\n  }\n  cout << m << endl;\n  return 0;\n}\n"
    ],
    [
        "create string str\nlet n, a, b, capacity, total be integers, set capacity = 0, total=0\n\n  read n\n  for i=0 to n exclusive\n    read a and b\n    total = total - a\n    set total to total + b\n    assign max of capacity and total to capacity\n  \n  print capacity\n  \n\n",
        "string str;\nint n, a, b, capacity = 0, total = 0;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> a >> b;\n    total -= a;\n    total += b;\n    capacity = max(capacity, total);\n  }\n  cout << capacity << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integers on, off, count, c with count = 0, c = 0\n  while decrement n is true\n    read off read on\n    increment c by on - off\n    if c is greater than count, set count to c\n  \n  print count print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int on, off, count = 0, c = 0;\n  while (n--) {\n    cin >> off >> on;\n    c += on - off;\n    if (c > count) count = c;\n  }\n  cout << count << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  integers = n\n  read n\n  integers = max,a,b,c\n  read a,b\n  set c to a + b\n  set max to c\n  for i = 1 to less than n do the following\n    read a,b\n    subtract a from c\n    c equals c plus b\n    if c is greater than max then do the following max = c\n  \n  output max\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int max, a, b, c;\n  cin >> a >> b;\n  c = a + b;\n  max = c;\n  for (int i = 1; i < n; i++) {\n    cin >> a >> b;\n    c -= a;\n    c += b;\n    if (c > max) max = c;\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, i, j, k, max, cap = int\n  set max to -1\n  set cap to 0\n  read n\n  for i = 0 to n\n    rad j then k\n    set cap to cap - j + k\n    if cap is greater than max set max to cap\n  \n  print max\n  \n\n",
        "int main() {\n  int n, i, j, k, max, cap;\n  max = -1;\n  cap = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> j >> k;\n    cap = cap - j + k;\n    if (cap > max) max = cap;\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be an integer\n  read n\n  max = int = 0\n  cp = 0 = int\n  for i = 0 to n\n    let a, b be ints\n    read a and b\n    increment cp by (b- a)\n    if cp >= max then set max to cp\n  \n  print max\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int max = 0;\n  int cp = 0;\n  for (int i = 0; i < n; i++) {\n    int a, b;\n    cin >> a >> b;\n    cp += (b - a);\n    if (cp >= max) max = cp;\n  }\n  cout << max << endl;\n}\n"
    ],
    [
        "\n  create integers n, a, b, c, m with c = 0, m = 0\n  read n\n  for i = 0 to n exclusive\n    read a read b\n    set c to c + b - a\n    if m is less than c, set m to c\n  \n  print m print newline\n  \n\n",
        "int main() {\n  int n, a, b, c = 0, m = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a >> b;\n    c = c + b - a;\n    if (m < c) m = c;\n  }\n  cout << m << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  ans =0\n  temp =0\n  for i=0 to n exclusive\n    create int a and b\n    read a and b\n    set temp to temp - a\n    assign temp + b to temp\n    set ans = max of temp and ans\n  \n  print ans\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int ans = 0;\n  int temp = 0;\n  for (int i = 0; i < n; i++) {\n    int a, b;\n    cin >> a >> b;\n    temp -= a;\n    temp += b;\n    ans = max(temp, ans);\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  create long longs n, max, d, with max = 0, d = 0\n  read n\n  create long long arrays a, b, with a size 100000, with b size 100000\n  for i = 0 to n exclusive\n    read a[i] read b[i]\n    set d to d - a[i]\n    set d to d + b[i]\n    if d is greater than max, set max to d\n  \n  print max print newline\n  \n\n",
        "int main() {\n  long long n, max = 0, d = 0;\n  cin >> n;\n  long long a[100000], b[100000];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i] >> b[i];\n    d = d - a[i];\n    d = d + b[i];\n    if (d > max) max = d;\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integer arrays a, b with a size n, b size n\n  for i = 0 to n exclusive, read a[i] read b[i]\n  create integer curr with curr = 0\n  create integer req with req = 0\n  for i = 0 to n exclusive\n    decrement curr by a[i]\n    increment cur by b[i]\n    if curr is greater than req, set req to curr\n  \n  print req print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[n], b[n];\n  for (int i = 0; i < n; i++) { cin >> a[i] >> b[i]; }\n  int curr = 0;\n  int req = 0;\n  for (int i = 0; i < n; i++) {\n    curr -= a[i];\n    curr += b[i];\n    if (curr > req) { req = curr; }\n  }\n  cout << req << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  create integer maxValue set maxValue = INT_MIN\n  read n\n  create Integer a, b\n  create integer d set d = 0\n  create integer c set c = 0\n  for i =0 to n execute\n    print a, b\n    set c = c + a\n    set d = d + b\n    if maxValue is less than the absolute value of c - d set maxValue = abs(c - d)\n  \n  print maxValue\n  \n\n",
        "int main() {\n  int n;\n  int maxValue = INT_MIN;\n  cin >> n;\n  int a, b;\n  int d = 0;\n  int c = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a >> b;\n    c = c + a;\n    d = d + b;\n    if (maxValue < abs(c - d)) maxValue = abs(c - d);\n  }\n  cout << maxValue << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  while read n is true\n    create integers ans, temp with ans = 0, temp = 0\n    for i = 0 to n exclusive\n      create integers p, q\n      read p read q\n      increment temp by q\n      decrement temp by p\n      set ans to maximum of ans and temp\n    \n    print ans print newline\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int ans = 0, temp = 0;\n    for (int i = 0; i < n; i++) {\n      int p, q;\n      cin >> p >> q;\n      temp += q;\n      temp -= p;\n      ans = max(ans, temp);\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n=int, Max and Count=0\n  read n\n  a and b=array of n int\n  for i=0 to n exclusive\n    read a[i],b[i]\n    subtract a[i] from Count\n    add b[i] to Count\n    if Count>Max Max=Count\n  \n  print Max\n  \n\n",
        "int main() {\n  int n, Max = 0, Count = 0;\n  cin >> n;\n  int a[n], b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i] >> b[i];\n    Count -= a[i];\n    Count += b[i];\n    if (Count > Max) { Max = Count; }\n  }\n  cout << Max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, i, j, c, n, p, q = int with j = 0 and c = 0 and p = 0 and q = 0\n  read n\n  for i = 1 to n inclusive\n    read a then b\n    set p to p + a\n    set q to q + b\n    set c to q - p\n    if c > j set j to c\n  \n  print j\n  \n\n",
        "int main() {\n  int a, b, i, j = 0, c = 0, n, p = 0, q = 0;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> a >> b;\n    p = p + a;\n    q = q + b;\n    c = q - p;\n    if (c > j) { j = c; }\n  }\n  cout << j << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create character array s with size 10001\n  create integer t\n  while read t is true\n    create integers ns, sm with ns = -1, sm = 0\n    while decrement t is true\n      create integers doll, puppet\n      read doll read puppet\n      set sm to sm - doll + puppet\n      set ns to maximum of ns and sm\n    \n    print ns print newline\n  \n\n",
        "int main() {\n  char s[10001];\n  int t;\n  while (cin >> t) {\n    int ns = -1, sm = 0;\n    while (t--) {\n      int doll, puppet;\n      cin >> doll >> puppet;\n      sm = sm - doll + puppet;\n      ns = max(ns, sm);\n    }\n    cout << ns << endl;\n  }\n}\n"
    ],
    [
        "\n  n = integer\n  while n can be read as a valid integer\n    a, b, total, max = integers, k = integer = 0\n    for i = 0 to n exclusive\n      read a, b\n      if k is 0\n        total = b\n        k = 1\n        max = b\n      else if k is 1\n        total = total - a + b\n        if total > max, then max = total\n      \n    \n    print max\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int a, b, total, k = 0, max;\n    for (int i = 0; i < n; i++) {\n      cin >> a >> b;\n      if (k == 0) {\n        total = b;\n        k = 1;\n        max = b;\n      } else if (k == 1) {\n        total = total - a + b;\n        if (total > max) max = total;\n      }\n    }\n    cout << max << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b\n  create integer counter with counter = 0\n  create integer tranSize with tranSize = 0\n  create integer rep\n  read rep\n  while decrement rep is true\n    read a read b\n    decrement counter by a\n    increment counter by b\n    if counter is greater than tranSize, set tranSize to counter\n  \n  print tranSize print newline\n  \n\n",
        "int main() {\n  int a, b;\n  int counter = 0;\n  int tranSize = 0;\n  int rep;\n  cin >> rep;\n  while (rep--) {\n    cin >> a >> b;\n    counter -= a;\n    counter += b;\n    if (counter > tranSize) { tranSize = counter; }\n  }\n  cout << tranSize << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  v = long long int vector\n  n, out, in, sum = long long int with sum = 0\n  read n\n  loop n times\n    read out then in\n    set sum to sum - out + in\n    append sum to v\n  \n  sort v\n  reverse v\n  print v[0]\n  \n\n",
        "int main() {\n  vector<long long int> v;\n  long long int n, out, in, sum = 0;\n  cin >> n;\n  while (n--) {\n    cin >> out >> in;\n    sum = sum - out + in;\n    v.push_back(sum);\n  }\n  sort(v.begin(), v.end());\n  reverse(v.begin(), v.end());\n  cout << v[0] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, x, y, i, max, a = long long integer with max, a = 0\n  read n\n  for i = 0 to n exclusive\n    read x, y\n    a = a - x + y\n    if max < a, max = a\n  \n  print max\n\n",
        "int main() {\n  long long int n, x, y, i, max = 0, a = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> x >> y;\n    a = a - x + y;\n    if (max < a) { max = a; }\n  }\n  cout << max << \"\\n\";\n}\n"
    ],
    [
        "\n  create integers minx, n, a, b and test with minx and test = 0\n  read variable n from the input\n  for integer i = 0 to n exclusive\n    read standard input to a and b\n    change test to test - a\n    change test to sum of test and b\n    change minx to max of minx and test\n  \n  print minx to the standard output\n  \n\n",
        "int main() {\n  int minx = 0, n, a, b, test = 0;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> a >> b;\n    test -= a;\n    test += b;\n    minx = max(minx, test);\n  }\n  cout << minx << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  a, b = int array of size n each\n  cntr, ans = int with cntr = 0 and ans = 0\n  for i = 0 to n\n    read a[i] then b[i]\n    decrement cntr by a[i]\n    increment cntr by b[i]\n    set ans to max of ans and cntr\n  \n  print ans\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[n], b[n];\n  int cntr = 0, ans = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i] >> b[i];\n    cntr -= a[i];\n    cntr += b[i];\n    ans = max(ans, cntr);\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  create integers n, a, b, s, t\n  while read n is true\n    set t to 0\n    create integers r, z, with r = 0, z = 0\n    for i = 0 to n exclusive\n      read a read b\n      increment r by a\n      increment z by b\n      set s to z - r\n      set t to maximum of t ans s\n    \n    print t print newline\n  \n  \n\n",
        "int main() {\n  int n, a, b, s, t;\n  while (cin >> n) {\n    t = 0;\n    int r = 0, z = 0;\n    for (int i = 0; i < n; i++) {\n      cin >> a >> b;\n      r += a;\n      z += b;\n      s = z - r;\n      t = max(t, s);\n    }\n    cout << t << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "s = integer\n\n  create integers x, a[10001], b[10001], maxs, set maxs to 0\n  read x\n  for i=1 to x inclusive, read a[i] and b[i]\n  for i=1 to x inclusive\n    set s to s - a[i]\n    assign s + b[i] to s\n    if s greater than maxs, set maxs to s\n  \n  print maxs\n  \n\n",
        "int s;\nint main() {\n  int x, a[10001], b[10001], maxs = 0;\n  cin >> x;\n  for (int i = 1; i <= x; i++) cin >> a[i] >> b[i];\n  for (int i = 1; i <= x; i++) {\n    s -= a[i];\n    s += b[i];\n    if (s > maxs) maxs = s;\n  }\n  cout << maxs << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, r, t, with r = 0, t = 0\n  read n\n  for i = 0 to n exclusive\n    create integers a, b\n    read a read b\n    set t to t = a + b\n    if t is greater than r, set r to t\n  \n  print r print newline\n  \n\n",
        "int main() {\n  int n, r = 0, t = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    int a, b;\n    cin >> a >> b;\n    t = t - a + b;\n    if (t > r) r = t;\n  }\n  cout << r << endl;\n  return 0;\n}\n"
    ],
    [
        "bool function lucky with integer argument n\n  while n != 0\n    if n % 10 != 4 && n % 10 != 7 return false\n    divide n by 10\n  \n  return true\n\nalmost_lucky is a boolean function with integer argument n\n  if lucky(n) is true, return true\n  for i = 2 while i * i <= n\n    if n % i = 0 && (lucky(i) or lucky(n / i) is true)\n  \n  return false\n\n\n  declare integer n\n  read n\n  if almost_lucky(n) is true\n    print \"YES\"\n  else\n    print \"NO\"\n  \n  \n\n",
        "bool lucky(int n) {\n  while (n != 0) {\n    if (n % 10 != 4 && n % 10 != 7) { return false; }\n    n /= 10;\n  }\n  return true;\n}\nbool almost_lucky(int n) {\n  if (lucky(n)) { return true; }\n  for (int i = 2; i * i <= n; ++i) {\n    if (n % i == 0 && (lucky(i) || lucky(n / i))) { return true; }\n  }\n  return false;\n}\nint main() {\n  int n;\n  cin >> n;\n  if (almost_lucky(n)) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "function str (get int n, return string)\n  ss = stringstream\n  push n into ss\n  s=string\n  s = ss\n  return s\n\nsorte=array of 1001 int\ntam=0\nfunction lucky\n  for i=0 to 1001 exclusive\n    s string = str(i)\n    sorte2=true\n    for c=0 to length of s exclusive\n      if s[c] != '4' and != '7'\n        sorte2 = false\n        break\n      \n    \n    if sorte2\n      sorte[tam] = i\n      increment tam\n    \n  \n\n\n  call lucky()\n  n=int\n  read n\n  pos=0\n  divide=false\n  while sorte[pos] <= n and pos < tam\n    if n modulo sorte[pos] is zero\n      divide=true\n      break\n    \n    increment pos\n  \n  if divide\n    print \"YES\"\n  else\n    print \"NO\"\n  \n  \n\n",
        "string str(int n) {\n  stringstream ss;\n  ss << n;\n  string s;\n  ss >> s;\n  return s;\n}\nint sorte[1001];\nint tam = 0;\nvoid lucky() {\n  for (int i = 0; i < 1001; i++) {\n    string s = str(i);\n    bool sorte2 = true;\n    for (int c = 0; c < s.length(); c++) {\n      if (s[c] != '4' && s[c] != '7') {\n        sorte2 = false;\n        break;\n      }\n    }\n    if (sorte2) {\n      sorte[tam] = i;\n      tam++;\n    }\n  }\n}\nint main() {\n  lucky();\n  int n;\n  cin >> n;\n  int pos = 0;\n  bool divide = false;\n  while (sorte[pos] <= n && pos < tam) {\n    if (n % sorte[pos] == 0) {\n      divide = true;\n      break;\n    }\n    pos++;\n  }\n  if (divide) {\n    cout << \"YES\\n\";\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "assign elements 4, 7, 44, 77, 47, 74, 444, 447, 474, 477, 777, 744, 747, 774 to int array arr\nset bool s to false\n\n  create int n\n  read n\n  for i=0 to 14 exclusive\n    if n mod arr[i] = 0\n      print YES\n      s = true\n      break\n    else\n      continue the loop\n  \n  if s is false, print NO and a newline\n  \n\n",
        "int arr[] = {4, 7, 44, 77, 47, 74, 444, 447, 474, 477, 777, 744, 747, 774};\nbool s = false;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < 14; ++i) {\n    if (n % arr[i] == 0) {\n      cout << \"YES\" << endl;\n      s = true;\n      break;\n    } else\n      continue;\n  }\n  if (s == false) cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, i, , a, j, h\n  read n\n  for i = 1 to n inclusive\n    set k to i\n    if n % k is 0\n      set j to h to 0\n      while k is not 0\n        set a to k % 10\n        if a is 4 or a is 7, increment h\n        set k to k / 10\n        increment j\n      \n      if h is j\n        print \"YES\" print newline\n        \n      \n    \n  \n  print \"NO\" print newline\n\n",
        "int main() {\n  int n, i, k, a, j, h;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    k = i;\n    if (n % k == 0) {\n      j = h = 0;\n      while (k != 0) {\n        a = k % 10;\n        if (a == 4 || a == 7) { h++; }\n        k = k / 10;\n        j++;\n      }\n      if (h == j) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"NO\" << endl;\n}\n"
    ],
    [
        "\n  num = integer\n  arr = integer array of 14 strings with arr = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777}\n  read num\n  for i = 0 to 13\n    if num modulo arr[i] is 0\n      print YES\n      \n    \n  \n  print NO\n  \n\n",
        "int main() {\n  int num;\n  int arr[14] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777};\n  cin >> num;\n  for (int i = 0; i < 14; i++) {\n    if (num % arr[i] == 0) {\n      cout << \"YES\" << endl;\n      return 0;\n    }\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  set int i, j, l, x, m, m1, k to 0, res=0\n  read x\n  set int a as array of 1000 all to 0\n  for = 4 to less than or equal to 1000 do the following\n    set i to j\n    set m to 0, m1\n    if i is greater than 0 then do\n      set l to i modulo 10\n      if l is 4 or 7 then add one to m\n      set i to i / 10\n      add one to m1\n    \n    if m is m1 then do the following\n      set a[k] to j\n      add one to k\n    \n  \n  for = 0 to less than k do the following\n    if x modulo a[i] is 0 then do\n      set res to 5\n      break\n    \n  \n  if res is 5 then do the following commands\n    output YES\n  else\n    output NO\n  \n\n",
        "int main() {\n  int i, j, l, x, m, m1, k = 0, res = 0;\n  cin >> x;\n  int a[1000] = {0};\n  for (j = 4; j <= 1000; j++) {\n    i = j;\n    m = 0, m1 = 0;\n    while (i > 0) {\n      l = i % 10;\n      if (l == 4 || l == 7) m++;\n      i = i / 10;\n      m1++;\n    }\n    if (m == m1) {\n      a[k] = j;\n      k++;\n    }\n  }\n  for (i = 0; i < k; i++) {\n    if (x % a[i] == 0) {\n      res = 5;\n      break;\n    }\n  }\n  if (res == 5)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer n\ncreate integer array arr with arr = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477}\n\n  read n\n  for i = 0 to size of arr / 4 exclusie\n    if not ( n % arr[i] )\n      print \"YES\\n\"\n      exit from program with code 0\n    \n  print \"NO\\n\"\n  \n\n",
        "int n;\nint arr[] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477};\nint main() {\n  cin >> n;\n  for (int i = 0; i < sizeof(arr) / 4; i++)\n    if (!(n % arr[i])) {\n      cout << \"YES\\n\";\n      exit(0);\n    }\n  cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "int function getdigits with int argument n\n  declare int variable c = 0\n  while n is not 0\n    divide n by 10\n    increment c\n  \n  return c\n\n\n  declare int variables n, d, i and flag where flag = 0\n  \n  read input to n\n  assign result of etdigits(n) to d\n  if n % 4 = 0\n    set flag to 1\n  else if n % 7 = 0\n    assign 1 to flag\n  else if n % 47 = 0\n    assign 1 to flag\n  else if n % 477 = 0\n    change flag to 1\n  else if n % 447 = 0\n    assign 1 to flag\n  else if n % 474 = 0\n    set flag to 1\n  else if n % 744 = 0\n    assign 1 to flag\n  else if n % 747 = 0\n    set flag to 1\n  else if n % 774 = 0\n    set flag to 1\n  \n  if flag is true\n    print \"YES\"\n      print \"\\n\"\n  else\n    print \"NO\"\n      print \"\\n\"\n  \n\n",
        "int getdigits(int n) {\n  int c = 0;\n  while (n != 0) {\n    n /= 10;\n    c++;\n  }\n  return c;\n}\nint main() {\n  int n, d, i, flag = 0;\n  ;\n  cin >> n;\n  d = getdigits(n);\n  if (n % 4 == 0) {\n    flag = 1;\n  } else if (n % 7 == 0) {\n    flag = 1;\n  } else if (n % 47 == 0) {\n    flag = 1;\n  } else if (n % 477 == 0) {\n    flag = 1;\n  } else if (n % 447 == 0) {\n    flag = 1;\n  } else if (n % 474 == 0) {\n    flag = 1;\n  } else if (n % 744 == 0) {\n    flag = 1;\n  } else if (n % 747 == 0) {\n    flag = 1;\n  } else if (n % 774 == 0) {\n    flag = 1;\n  }\n  if (flag)\n    cout << \"YES\"\n      << \"\\n\";\n  else\n    cout << \"NO\"\n      << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  integers = a\n  read a\n  set int l to 0\n  set int m to a\n  for i = 0 to less than a do the following\n    set m to m / 10\n    set l to l + 1\n    if m is 0 then do break\n  \n  for k = 1 to less than or equal to l do the following\n    set int b[k] to\n    for i = 1 to less than or equal to k do the following\n      set int sum1 to 0\n      set b[k - i] to 4\n      for j = 0 to less than k then sum1 = 10 * sum1 + b[j]\n      if a modulo sum1 is 0 then do\n        output YES\n        \n      \n    \n    for i = 1 to less than or equal to k do the following\n      set int sum1 to 0\n      set b[k - i] to 7\n      for j = 0 to less than k do the following\n      if a modulo sum1 is 0 then do\n        output YES\n        \n      \n    \n    for j = 0 to less than k do b[j] = 0\n    for i = 1 to less than or equal to k do the following\n      set int sum1 to 0\n      set b[k - i] to 7\n      for j = 0 to less than k do the following\n      if a modulo sum1 is 0 then do\n        output YES\n        \n      \n    \n    for i = 1 to less than or equal to k do the following\n      set int sum1 to 0\n      set b[k - i] to 4\n      for j = 0 to less than k do the following\n      if a modulo sum1 is 0 then do\n        output YES\n        \n      \n    \n  \n  output NO\n\n",
        "int main() {\n  int a;\n  cin >> a;\n  int l = 0;\n  int m = a;\n  for (int i = 0; i < a; i++) {\n    m = m / 10;\n    l = l + 1;\n    if (m == 0) { break; }\n  }\n  for (int k = 1; k <= l; k++) {\n    int b[k] = {};\n    for (int i = 1; i <= k; i++) {\n      int sum1 = 0;\n      b[k - i] = 4;\n      for (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n      if (a % sum1 == 0) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n    for (int i = 1; i <= k; i++) {\n      int sum1 = 0;\n      b[k - i] = 7;\n      for (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n      if (a % sum1 == 0) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n    for (int j = 0; j < k; j++) { b[j] = 0; }\n    for (int i = 1; i <= k; i++) {\n      int sum1 = 0;\n      b[k - i] = 7;\n      for (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n      if (a % sum1 == 0) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n    for (int i = 1; i <= k; i++) {\n      int sum1 = 0;\n      b[k - i] = 4;\n      for (int j = 0; j < k; j++) { sum1 = 10 * sum1 + b[j]; }\n      if (a % sum1 == 0) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"NO\" << endl;\n}\n"
    ],
    [
        "set int n, arr[] to 4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777\n\n  read n\n  for i = 0 to less than 10 do the following\n    if n / arr[i] has no remainder then do the following\n      output YES\n      \n    \n  \n  output NO\n  \n\n",
        "int n, arr[] = {4, 7, 44, 47, 74, 77, 444, 447, 474, 477, 744, 747, 774, 777};\nint main() {\n  cin >> n;\n  for (int i = 0; i < 10; i++) {\n    if (!(n % arr[i])) {\n      cout << \"YES\" << endl;\n      return 0;\n    }\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, k = integer\n  read n, k\n  x, y, x0, y0, total = double with total(0.0)\n  read x0, y0\n  while decrement n\n    read x, y\n    total = total + sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0))\n    x0 = x\n    y0 = y\n  \n  print fixed, setprecision(6), total * k / 50\n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  double x, y, x0, y0, total(0.0);\n  cin >> x0 >> y0;\n  while (--n) {\n    cin >> x >> y;\n    total += sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0));\n    x0 = x;\n    y0 = y;\n  }\n  cout << fixed << setprecision(6) << total * k / 50 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, k = int\n  read n then k\n  x, y, x0, y0, total = double with total = 0.0\n  read x0 then y0\n  loop n times\n    read x then y\n    add sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0)) to total\n    set x0 = x\n    set y0 = y\n  \n  print total * k / 50 with 6 decimal digits\n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  double x, y, x0, y0, total(0.0);\n  cin >> x0 >> y0;\n  while (--n) {\n    cin >> x >> y;\n    total += sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0));\n    x0 = x;\n    y0 = y;\n  }\n  cout << fixed << setprecision(6) << total * k / 50 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, k\n  read n read k\n  create doubles x, y, x0, y0, total with total initialized with 0.0\n  read x0 read y0\n  while decrement n is true\n    read x read y\n    increment total by square root of ( (x - x0) * (x - x0) + (y - y0) * (y - y0) )\n    set x0 to x\n    set y0 to y\n  \n  print fixed, set cout decimal precision to 6, print total*k/50 print newline\n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  double x, y, x0, y0, total(0.0);\n  cin >> x0 >> y0;\n  while (--n) {\n    cin >> x >> y;\n    total += sqrt((x - x0) * (x - x0) + (y - y0) * (y - y0));\n    x0 = x;\n    y0 = y;\n  }\n  cout << fixed << setprecision(6) << total * k / 50 << endl;\n  return 0;\n}\n"
    ],
    [
        "double function dist with integer arguments x1, y1, x2 and y2\n  return square root of (pow((x1 - x2), 2) + pow((y1 - y2), 2))\n\n\n  create integers n and k\n  read n and k\n  declare boolean f = true\n  create integers x1, y1, x2 and y2\n  create double totDist\n  decrement n in a loop while n > 0\n    if f is true\n      read x1 and y1\n      set f to false\n    else\n      read x2 and y2\n      increase totDist by dist of (x1, y1, x2, y2)\n      set x1 to x2\n      assign value of y2 to y1\n    \n  \n  create double r = totDist * k / 50.0\n  print fixed and r\n  \n\n",
        "double dist(int x1, int y1, int x2, int y2) {\n  return sqrt(pow((x1 - x2), 2) + pow((y1 - y2), 2));\n}\nint main() {\n  int n, k;\n  cin >> n >> k;\n  bool f = true;\n  int x1, y1, x2, y2;\n  double totDist;\n  while (n--) {\n    if (f) {\n      cin >> x1 >> y1;\n      f = false;\n    } else {\n      cin >> x2 >> y2;\n      totDist += dist(x1, y1, x2, y2);\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  double r = totDist * k / 50.0;\n  cout << fixed << r << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s = string\n  read s\n  for i = 0 to s.length() exclusive\n    while (s[i - 1] is character ' ' and s[i] is character ' '), erase(s.begin() + i - 1) from s\n    if ((s[i] is . or s[i] is ! or s[i] is , or s[i] is ?))\n      if (s[i - 1] is character ' ' and s[i + 1] is character ' ')\n        erase(s.begin() + i - 1) from s\n      else if (s[i + 1] is not character ' '\n        insert(s.begin() + i + 1, character ' ') in s\n      while (s[i - 1] is character ' ') erase(s.begin() + i - 1) from s\n    \n  \n  print s\n  \n\n",
        "int main() {\n  string s;\n  getline(cin, s);\n  for (int i = 0; i < s.length(); i++) {\n    while (s[i - 1] == ' ' && s[i] == ' ') s.erase(s.begin() + i - 1);\n    if ((s[i] == '.' || s[i] == '!' || s[i] == ',' || s[i] == '?')) {\n      if (s[i - 1] == ' ' && s[i + 1] == ' ')\n        s.erase(s.begin() + i - 1);\n      else if (s[i + 1] != ' ')\n        s.insert(s.begin() + i + 1, ' ');\n      while (s[i - 1] == ' ') s.erase(s.begin() + i - 1);\n    }\n  }\n  cout << s << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create const ints N = 1e5 + 5 and OO = 0x3f3f3f3f\n\n  declare string variable str\n  read input into str\n  loop i from 0 to length of str exclusive\n    if str[i] is equal to ' ' and str[i + 1] is equal to ' '\n      remove element at position i from str\n      decrement i by one\n    \n    if str[i] = ',' or str[i] = '!' or str[i] = '?' or str[i] = '.'\n      if str[i + 1] != ' ' and i < length of str-1\n        declare string a = \" \"\n        insert a to position i + 1 of str\n      \n      if str[i - 1] is equal to ' '\n        remove element at position i - 1 from str\n        decrement i by one\n      \n    \n  \n  print str\n\n",
        "const int N = 1e5 + 5, OO = 0x3f3f3f3f;\nint main() {\n  string str;\n  getline(cin, str);\n  for (int i = 0; i < str.size(); i++) {\n    if (str[i] == ' ' && str[i + 1] == ' ') {\n      str.erase(str.begin() + i);\n      i--;\n    }\n    if (str[i] == ',' || str[i] == '!' || str[i] == '?' || str[i] == '.') {\n      if (str[i + 1] != ' ' && i < str.size() - 1) {\n        string a = \" \";\n        str.insert(i + 1, a);\n      }\n      if (str[i - 1] == ' ') {\n        str.erase(str.begin() + (i - 1));\n        i--;\n      }\n    }\n  }\n  cout << str << endl;\n}\n"
    ],
    [
        "\n  s = string array\n  set int sp to 0, p = 0\n  get the line as variable s\n  set string s2 to\n  set int l to s.size()\n  for i = 0 to less than l do the following\n    if s[i] is then do\n      add one to sp\n    else if (s[i] equals , . ? or ! then do the following\n      add one to p\n      s2 equals s2 plus s[i]\n    else\n      if sp is 0 and p = 0 then do the following instructions\n        s2 equals s2 plus s[i]\n      else if sp and p = 0 the do the following\n        s2 equals s2 plus space\n        s2 equals s2 plus s[i]\n        set sp to 0\n      else\n        s2 equals s2 plus space\n        s2 equals s2 plus s[i]\n        set p to 0\n        set sp to 0\n      \n    \n  \n  output s2\n  \n\n",
        "int main() {\n  string s;\n  int sp = 0, p = 0;\n  getline(cin, s);\n  string s2 = \"\";\n  int l = s.size();\n  for (int i = 0; i < l; i++) {\n    if (s[i] == ' ')\n      sp++;\n    else if (s[i] == ',' || s[i] == '.' || s[i] == '?' || s[i] == '!') {\n      p++;\n      s2 += s[i];\n    } else {\n      if (sp == 0 && p == 0)\n        s2 += s[i];\n      else if (p == 0 && sp > 0) {\n        s2 += ' ';\n        s2 += s[i];\n        sp = 0;\n      } else {\n        s2 += ' ';\n        s2 += s[i];\n        p = 0;\n        sp = 0;\n      }\n    }\n  }\n  cout << s2 << endl;\n  return 0;\n}\n"
    ],
    [
        "create character variable c with size of 10005\ns = string\n\n  input line into array c of 10005 size\n  set int i to 0\n  set int lg to strlen(c)\n  set bool ok to 0\n  if i is less than lg then do\n    if isalpha is true\n      if ok = 0 and i is not equal to 0 and not isalpha(c[i - 1] then add a space character to s\n      s equals s plus c[i]\n      set ok to 0\n    else\n      set if (c[i] = ? or c[i] = ! or c[i] = , or c[i] = .) s += c[i] then add a c[i] to s and add a space to s, and make ok = 1\n    \n    add one to i\n  \n  output s\n  \n\n",
        "char c[10005];\nstring s;\nint main() {\n  cin.getline(c, 10005);\n  int i = 0;\n  int lg = strlen(c);\n  bool ok = 0;\n  while (i < lg) {\n    if (isalpha(c[i])) {\n      if (ok == 0 && i != 0 && !isalpha(c[i - 1])) s += ' ';\n      s += c[i];\n      ok = 0;\n    } else {\n      if (c[i] == '?' || c[i] == '!' || c[i] == ',' || c[i] == '.') s += c[i], s += ' ', ok = 1;\n    }\n    ++i;\n  }\n  cout << s << '\\n';\n  return 0;\n}\n"
    ],
    [
        "in function File\n  call freopen on \"output.txt\", \"w\" and stdout\n  call freopen on \"input.txt\", \"r\" and stdin\n\ndefine empty function fast\npi = const double with pi = 2 * acos of 0.0\nnn = const int with nn = 1e5 + 4\noo = const int with oo = 0x3f3f3f3f\nin function nCr taking two long longs n and r and returning a long long\n  if n is less than r then return 0\n  if r is 0 then return 1\n  return n * nCr of n - 1 and r - 1 / r\n\nin function gcd taking two long longs a and b and returning a long long\n  if b is 0 return a\n  return gcd of b and a mod b\n\n\n  call fast\n  s = string\n  call getline on cin and s\n  arr = char vector\n  if s[0] is a lower case letter then append s[0] to arr\n  for i = 1 to size of s\n    if s[i] is a lower case letter\n      if s[i - 1] is a lower case letter\n        append s[i] to arr\n      else\n        append ' ' then s[i] to arr\n    else if s[i] is ' '\n      continue loop\n    else\n      append s[i] to arr\n  \n  print all values of arr\n  print newline\n  \n\n",
        "void File() {\n  freopen(\"output.txt\", \"w\", stdout);\n  freopen(\"input.txt\", \"r\", stdin);\n}\nvoid fast() {}\nconst double pi = 2 * acos(0.0);\nconst int nn = 1e5 + 4;\nconst int oo = 0x3f3f3f3f;\nlong long nCr(long long n, long long r) {\n  if (n < r) return 0;\n  if (r == 0) return 1;\n  return n * nCr(n - 1, r - 1) / r;\n}\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nint main() {\n  fast();\n  string s;\n  getline(cin, s);\n  vector<char> arr;\n  if (s[0] >= 'a' && s[0] <= 'z') arr.push_back(s[0]);\n  for (int i = 1; i < ((int)((s).size())); i++) {\n    if (s[i] >= 'a' && s[i] <= 'z') {\n      if (s[i - 1] >= 'a' && s[i - 1] <= 'z')\n        arr.push_back(s[i]);\n      else\n        arr.push_back(' '), arr.push_back(s[i]);\n    } else if (s[i] == ' ')\n      continue;\n    else\n      arr.push_back(s[i]);\n  }\n  for (int i = 0; i < ((int)((arr).size())); i++) cout << arr[i];\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "s = string\nans = string array of size 111111\n\n  call getline of cin and s\n  n, p = int with n = size of s and p = 0\n  for i = 0 to n\n    if s[i] equals ',' or '.' or '!' or '?'\n      set ans[p] to \" \" then increment p\n      set ans[p - 1][0] to s[i]\n    else if s[i] is a lowercase character\n      j = int with j = i\n      loop while s[j] is a lowercase character and j is less than n increment j\n      set ans[p] to result of s.substr of i and j - i then increment p\n      set i to j - 1\n    \n  \n  l = int with l = 0\n  for i = 0 to p\n    if ans[i][0] is greater or equal to 'a'\n      if l equals 1 print ' '\n      print ans[i]\n      set l to 1\n    else\n      print ans[i] and ' '\n      set l to 0\n    \n  \n  print newline\n  \n\n",
        "string s;\nstring ans[111111];\nint main() {\n  getline(cin, s);\n  int n = s.size(), p = 0;\n  for (int i = 0; i < n; i++) {\n    if (s[i] == ',' || s[i] == '.' || s[i] == '!' || s[i] == '?') {\n      ans[p++] = \" \";\n      ans[p - 1][0] = s[i];\n    } else if (s[i] >= 'a' && s[i] <= 'z') {\n      int j = i;\n      for (; s[j] >= 'a' && s[j] <= 'z' && j < n;) { j++; }\n      ans[p++] = s.substr(i, j - i);\n      i = j - 1;\n    }\n  }\n  int l = 0;\n  for (int i = 0; i < p; i++) {\n    if (ans[i][0] >= 'a') {\n      if (l == 1) { cout << ' '; }\n      cout << ans[i];\n      l = 1;\n    } else {\n      cout << ans[i] << ' ';\n      l = 0;\n    }\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "create string in\ndeclare string n = \"\"\n\n  read line and store it into in\n  declare int m = length of in\n  declare boolean se = false\n  for i from 0 to m exclusive\n    if in[i] >= 'a' and in[i] <= 'z'\n      append n to in[i]\n    else if in[i] = ' '\n      if n is equal to \" \" continue the loop from the start\n      print n\n      assign ' ' to n\n      change se to true\n      continue the loop from the start\n    else\n      if se is true and n = \" \"\n        print in[i]\n        set n to ' '\n        set se to false\n        go to the start of the loop\n      \n      print n and in[i]\n      change n to ' '\n    \n  \n  print n if if n != \" \"\n  print a new line\n  \n\n",
        "string in;\nstring n = \"\";\nint main() {\n  getline(cin, in);\n  int m = in.size();\n  bool se = false;\n  for (int i = 0; i < m; i++) {\n    if (in[i] >= 'a' && in[i] <= 'z') {\n      n += in[i];\n    } else if (in[i] == ' ') {\n      if (n == \" \") { continue; }\n      cout << n;\n      n = ' ';\n      se = true;\n      continue;\n    } else {\n      if (se && n == \" \") {\n        cout << in[i];\n        n = ' ';\n        se = false;\n        continue;\n      }\n      cout << n << in[i];\n      n = ' ';\n    }\n  }\n  if (n != \" \") { cout << n; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variable s\n  loop when read data from input into s\n    declare string n = \"\"\n    declare integer d = length of s\n    for i = 0 to d exclusive incrementing i\n      if s[i] is equal to ' '\n        if n[n.length() - 1] is not ' ', incremen n by s[i]\n      else if s[i] = '.' || s[i] = ',' || s[i] = '!' || s[i] = '?'\n        if n[n.length() - 1] is not ' '\n          append s[i] + ' ' to n\n        else\n          remove n.length() - 1 elements from n\n          append s[i] + ' ' to n\n        \n      else\n        append s[i] to n\n      \n    \n    print all elements of n sequentially\n    print a new line\n  \n  \n\n",
        "int main() {\n  string s;\n  while (getline(cin, s)) {\n    string n = \"\";\n    int d = s.length();\n    for (int i = 0; i < d; i++) {\n      if (s[i] == ' ') {\n        if (n[n.length() - 1] != ' ') { n = n + s[i]; }\n      } else if (s[i] == '.' || s[i] == ',' || s[i] == '!' || s[i] == '?') {\n        if (n[n.length() - 1] != ' ') {\n          n = n + s[i] + ' ';\n        } else {\n          n.erase(n.length() - 1);\n          n = n + s[i] + ' ';\n        }\n      } else {\n        n = n + s[i];\n      }\n    }\n    for (int i = 0; i < n.length(); i++) cout << n[i];\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare isp with character c as argument, returning boolean\n  if c is '.' or c is ',' or c is '!' or c is '?', return true from function\n  return false from function\n\n\n  create string s\n  read line from cin to s\n  create integer len with len = size of s\n  create string s2\n  create integer lenn with lenn = len - 1\n  for i = 0 to lenn exclusive\n    if s[i] is ' ' and ( s[i+1] is ' ' or result of run isp with s[i+1] as argument is true ), break current loop iteration\n    increment s2 by s[i]\n    if result of run isp with s[i] as argument is true and s[i+1] is not ' ', increment s2 by ' '\n  \n  increment s2 by s[len - 1]\n  print s2 print newline\n\n",
        "bool isp(char c) {\n  if (c == '.' or c == ',' or c == '!' or c == '?') return true;\n  return false;\n}\nint main() {\n  string s;\n  getline(cin, s);\n  int len = s.size();\n  string s2;\n  int lenn = len - 1;\n  for (int i = 0; i < lenn; i++) {\n    if (s[i] == ' ' and (s[i + 1] == ' ' or isp(s[i + 1]))) continue;\n    s2 += s[i];\n    if (isp(s[i]) and s[i + 1] != ' ') s2 += ' ';\n  }\n  s2 += s[len - 1];\n  cout << s2 << endl;\n}\n"
    ],
    [
        "s = string\np = integer\nans = character array of size 111111\n\n  read s\n  n = integer with n = s.size()\n  for i = 0 to n exclusive\n    if s[i] >= a and s[i] <= z\n      ans[increment p] = s[i]\n    else if s[i] is , or s[i] is . or s[i] is ? or s[i] is !\n      for p and ans[p - 1] is character' ', decrement p\n      ans[increment p] = s[i]\n      ans[increment p] = character ' '\n    else if (s[i] is character ' '\n      if ans[p - 1] is not character ' ', ans[increment p] = s[i]\n    \n  \n  print ans\n  \n\n",
        "string s;\nint p;\nchar ans[111111];\nint main() {\n  getline(cin, s);\n  int n = s.size();\n  for (int i = 0; i < n; i++) {\n    if (s[i] >= 'a' && s[i] <= 'z') {\n      ans[p++] = s[i];\n    } else if (s[i] == ',' || s[i] == '.' || s[i] == '?' || s[i] == '!') {\n      for (; p && ans[p - 1] == ' ';) { p--; }\n      ans[p++] = s[i];\n      ans[p++] = ' ';\n    } else if (s[i] == ' ') {\n      if (ans[p - 1] != ' ') { ans[p++] = s[i]; }\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create const double PI = 3.1415926535897932384626433832795\ndeclare long long mod = 1e9 + 7\nfunction isp with char argument c that returns bool\n  return true if c = '.' || c = ',' || c = '?' || c = '!' and false otherwise\n\n\n  change output decimal precision to 12\n  change output decimal format to fixed\n  let s and ans be strings where ans = \"\"\n  read s and loop further\n    if length of s = 1 and isp of s[0] return true and size of ans > 0\n      assign s[0] to ans[ans.size() - 1] and append \" \" to ans\n    else\n      change ans to ans + s + \" \"\n  \n  create int sz = length of ans\n  create integers last and i = 0\n  for i = 0, last = 0 to sz - 1 exclusive\n    if ans[i] = ' ' and isp(ans[i + 1]) is true\n      print (substring of ans from position last to position i - last) + ans[i + 1] + \" \", set value of last to i + 2 and increment i\n    else if ans[i] = ' '\n      print substring of ans from position last with length of i - last + 1, then change last to i + 1\n    else if isp(ans[i]) is true\n      if ans[i + 1] != ' '\n        print substring of ans from position last with length of i - last + 1 and \" \", then change last to i + 1\n      else\n        print substring of ans from position last with length of i - last + 1 and \" \", then change last to i + 1\n  \n  print substring of ans from position last to i and '\\n'\n  \n\n",
        "const double PI = 3.1415926535897932384626433832795;\nlong long mod = 1e9 + 7;\nbool isp(char c) {\n  return (c == '.' || c == ',' || c == '?' || c == '!');\n}\nint main() {\n  cout.precision(12);\n  cout << fixed;\n  string s, ans = \"\";\n  while (cin >> s) {\n    if (s.size() == 1 && isp(s[0]) && ans.size())\n      ans[ans.size() - 1] = s[0], ans += \" \";\n    else\n      ans = ans + s + \" \";\n  }\n  int sz = ans.size();\n  int last = 0, i = 0;\n  for (i = 0, last = 0; i < sz - 1; ++i) {\n    if (ans[i] == ' ' && isp(ans[i + 1]))\n      cout << ans.substr(last, i - last) + ans[i + 1] + \" \", last = i + 2, i++;\n    else if (ans[i] == ' ')\n      cout << ans.substr(last, i - last + 1), last = i + 1;\n    else if (isp(ans[i]))\n      if (ans[i + 1] != ' ')\n        cout << ans.substr(last, i - last + 1) + \" \", last = i + 1;\n      else\n        cout << ans.substr(last, i - last + 1), last = i + 1;\n  }\n  cout << ans.substr(last, i - last) << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, dx\n  read n read dx\n  create string arrays a, b, c, d, with a size 1001, b size 1001, c size 1001, d size 1001\n  create integer array t with size 1001\n  create integer sum with sum = 0\n  for i = 0 to n exclusive, read a[i] read b[i] read t[i]\n  or i = 0 to n - 1 exclusive\n    for j = i + 1 to n exclusive\n      if t[j] - t[i] is greater than 0 and t[j] - t[i] is less than or equal to dx\n        if a[i] is b[j] and b[i] is a[j]\n          create integer flat with flat = 0\n          for k = 0 to sum exclusive\n            if a[i] is c[k] and b[i] is d[k] or a[i] is d[k] and b[i] is c[k]\n              set flat to 1\n              break loop\n            \n          if not flag\n            set c[sum] to a[i]\n            set d[sum] to b[i]\n            increment sum\n          \n        \n  print sum print newline\n  for i = 0 to sum exclusive, print c[i] print \" \" print d[i] print newline\n\n",
        "int main() {\n  int n, dx;\n  cin >> n >> dx;\n  string a[1001], b[1001], c[1001], d[1001];\n  int t[1001];\n  int sum = 0;\n  for (int i = 0; i < n; i++) cin >> a[i] >> b[i] >> t[i];\n  for (int i = 0; i < n - 1; i++)\n    for (int j = i + 1; j < n; j++)\n      if (t[j] - t[i] > 0 && t[j] - t[i] <= dx)\n        if (a[i] == b[j] && b[i] == a[j]) {\n          int flat = 0;\n          for (int k = 0; k < sum; k++)\n            if (a[i] == c[k] && b[i] == d[k] || a[i] == d[k] && b[i] == c[k]) {\n              flat = 1;\n              break;\n            }\n          if (!flat) {\n            c[sum] = a[i];\n            d[sum] = b[i];\n            sum++;\n          }\n        }\n  cout << sum << endl;\n  for (int i = 0; i < sum; i++) { cout << c[i] << \" \" << d[i] << endl; }\n}\n"
    ],
    [
        "let x and y be arrays of double of size 100000\nn and t = integers\ndefine function sorty\n  let i and k be integers\n  for i = 0 to n exclusive\n    create integer min with value x[i]\n    set integer pos to i\n    for k = i + 1 to n exclusive\n      if x[k] is less than min\n        set value of min to x[k]\n        set value of pos to k\n      \n    \n    invoke function swap with arguments x[i] and x[pos]\n    invoke function swap with arguments y[i] and y[pos]\n  \n\n\n  read n and t\n  let i be integer\n  for i = 0 to n exclusive\n    a and b = doubles\n    read a and b\n    x[i] = (a - (b / 2.0))\n    y[i] = (a + (b / 2.0))\n  \n  call sorty\n  create integer ct with value 2\n  for i = 0 to n - 1 exclusive\n    create double h with value y[i] + t\n    if x[i + 1] >= h increment ct\n    h = x[i + 1] - t\n    if y[i] is less than h increment ct\n  \n  print ct and a new line\n\n",
        "double x[100000], y[100000];\nint n, t;\nvoid sorty() {\n  int i, k;\n  for (i = 0; i < n; i++) {\n    int min = x[i];\n    int pos = i;\n    for (k = i + 1; k < n; k++) {\n      if (x[k] < min) {\n        min = x[k];\n        pos = k;\n      }\n    }\n    swap(x[i], x[pos]);\n    swap(y[i], y[pos]);\n  }\n}\nint main() {\n  cin >> n >> t;\n  int i;\n  for (i = 0; i < n; i++) {\n    double a, b;\n    cin >> a >> b;\n    x[i] = (a - (b / 2.0));\n    y[i] = (a + (b / 2.0));\n  }\n  sorty();\n  int ct = 2;\n  for (i = 0; i < n - 1; i++) {\n    double h = y[i] + t;\n    if (x[i + 1] >= h) { ct++; }\n    h = x[i + 1] - t;\n    if (y[i] < h) { ct++; }\n  }\n  cout << ct << endl;\n}\n"
    ],
    [
        "let a be an array of integers of length 10005\n\n  create integers n and t\n  read n and t\n  multiply t by 2\n  mi and mx are integers with mi = 5000 and mx = 0\n  invoke function memset with arguments a, 0 and size of a\n  while n--\n    let x and aa be integers\n    read x and aa\n    set integer ll to x * 2 + 4000 - aa;\n    set integer rr to x * 2 + 4000 + aa\n    for i = ll to rr inclusive\n      increase a[i]\n      set mx to max of mx, i\n      set value of mi to min of mi, i\n    \n  \n  len and ans are integers with len = 0 and ans = 2\n  for integer i = mi to mx inclusive\n    increase len\n    if a[i] is true\n      if len is greater than t\n        increase ans by 2\n      else if len is equal to t\n        increase ans by one\n      len = 0\n    \n  \n  if len is greater than t\n    increase ans by 2\n  else if len is equal to t\n    increment ans\n  print ans and a new line\n  \n\n",
        "int a[10005];\nint main() {\n  int n, t;\n  cin >> n >> t;\n  t *= 2;\n  int mi = 5000, mx = 0;\n  memset(a, 0, sizeof(a));\n  while (n--) {\n    int x, aa;\n    cin >> x >> aa;\n    int ll = x * 2 + 4000 - aa;\n    int rr = x * 2 + 4000 + aa;\n    for (int i = ll; i <= rr; ++i) {\n      a[i]++;\n      mx = max(mx, i);\n      mi = min(mi, i);\n    }\n  }\n  int len = 0, ans = 2;\n  for (int i = mi; i <= mx; ++i) {\n    len++;\n    if (a[i]) {\n      if (len > t)\n        ans += 2;\n      else if (len == t)\n        ans++;\n      len = 0;\n    }\n  }\n  if (len > t)\n    ans += 2;\n  else if (len == t)\n    ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "double constant PI is acos(-1.0)\n\n  let n and s be integers\n  read n and s\n  create integers x and size\n  create arrays of doubles start and end with size 1005\n  call memset with arguments start, 0 and sizeof(start)\n  call memset with arguments end, 0 and sizeof(end)\n  for integer i = 0 to n exclusive\n    read x and size\n    start[i] = x - size / 2.0\n    end[i] = x + size / 2.0\n  \n  sort n elements of array start\n  sort n elements of array end\n  res is integer = 2\n  for integer i = 0 to n - 1 exclusive\n    set double gap to start[i + 1] - end[i]\n    if s is less than gap increase res by 2\n    if s = gap increase res by 1\n  \n  print res and \"\\n\"\n  \n\n",
        "const double Pi = acos(-1.0);\nint main() {\n  int n, s;\n  cin >> n >> s;\n  int x, size;\n  double start[1005], end[1005];\n  memset(start, 0, sizeof(start));\n  memset(end, 0, sizeof(end));\n  for (int i = 0; i < n; i++) {\n    cin >> x >> size;\n    start[i] = x - size / 2.0;\n    end[i] = x + size / 2.0;\n  }\n  sort(start, start + n);\n  sort(end, end + n);\n  int res = 2;\n  for (int i = 0; i < n - 1; i++) {\n    double gap = start[i + 1] - end[i];\n    if (s < gap) { res += 2; }\n    if (s == gap) { res++; }\n  }\n  cout << res << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  let n, i and sum be integers with sum = 2\n  let x, y and t be doubles\n  a = array of doubles of length 2005\n  read n and t\n  for i = 0 to n + n exclusive looping by steps of 2\n    read x and y\n    a[i] = x - y * 0.5\n    a[i + 1] = x + y * 0.5\n  \n  sort a from the start to n + n\n  b = array of doubles of length 2005\n  for i = 1 to n exclusive\n    b[i] = a[i * 2] - a[i * 2 - 1]\n    if b[i] is equal to t\n      sum = sum + 1\n    else if b[i] is greater than t\n      sum = sum + 2\n  \n  print sum and a new line\n  \n\n",
        "int main() {\n  int n, i, sum = 2;\n  double x, y, t;\n  double a[2005];\n  cin >> n >> t;\n  for (i = 0; i < n + n; i = i + 2) {\n    cin >> x >> y;\n    a[i] = x - y * 0.5;\n    a[i + 1] = x + y * 0.5;\n  }\n  sort(a, a + n + n);\n  double b[2005];\n  for (i = 1; i < n; i++) {\n    b[i] = a[i * 2] - a[i * 2 - 1];\n    if (b[i] == t)\n      sum = sum + 1;\n    else if (b[i] > t)\n      sum = sum + 2;\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let x, d and c be doubles\n  assign value 0, n, t to the integer cnt\n  arr is an array of double double pairs\n  read n and t\n  for i = 0 to n exclusive\n    read x and d\n    divide d by 2\n    arr[i] = make_pair(x - d, x + d)\n  \n  sort arr\n  for integer i = 0 to n - 1 exclusive\n    c = first element of arr[i + 1] - second element\n    decrease c by t\n    if c = 0\n      increase cnt\n    else if c is greater than 0\n      increase cnt by 2\n  \n  print cnt + 2 and a new line\n  \n\n",
        "int main() {\n  double x, d, c;\n  int cnt = 0, n, t;\n  pair<double, double> arr[1500];\n  cin >> n >> t;\n  for (int i = 0; i < n; i++) {\n    cin >> x >> d;\n    d /= 2;\n    arr[i] = make_pair(x - d, x + d);\n  }\n  sort(arr, arr + n);\n  for (int i = 0; i < n - 1; i++) {\n    c = arr[i + 1].first - arr[i].second;\n    c -= t;\n    if (c == 0)\n      cnt++;\n    else if (c > 0)\n      cnt += 2;\n  }\n  cout << cnt + 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "create map mp from long long to long long\n\n  create integers n, t, c with c = 2\n  read n read t\n  create doubles x, y\n  create pair array p with double, double, size n\n  for i = 0 to n exclusive\n    read x read y\n    if x is greater than or equal to 0\n      set first element of p[i] to x - (y/2)\n      set second element of p[i] to x + (y/2)\n    else\n      set first element of p[i] to x - (y/2)\n      set second element of p[i] to x + (y/2)\n    \n  \n  sort elements from p to p + n\n  for i = 0 to n exclusive\n    set x to first element of p[i] - second element of p[i-1]\n    if x is t\n      increment c\n    else if x is greater than t\n      increment c by 2\n  \n  print c print newline\n  \n\n",
        "map<long long, long long> mp;\nint main() {\n  int n, t, c = 2;\n  cin >> n >> t;\n  double x, y;\n  pair<double, double> p[n];\n  for (int i = 0; i < n; i++) {\n    cin >> x >> y;\n    if (x >= 0) {\n      p[i].first = x - (y / 2);\n      p[i].second = x + (y / 2);\n    } else {\n      p[i].first = x - (y / 2);\n      p[i].second = x + (y / 2);\n    }\n  }\n  sort(p, p + n);\n  for (int i = 0; i < n; i++) {\n    x = p[i].first - p[i - 1].second;\n    if (x == t)\n      c++;\n    else if (x > t)\n      c += 2;\n  }\n  cout << c << endl;\n  return 0;\n}\n"
    ],
    [
        "let mp be a map from long long to long long\n\n  integers n, t and c with c = 2\n  read n and t\n  declare doubles called x and y\n  p is array of pairs of double, double with size n\n  for integer i = 0 to n exclusive\n    read x and y\n    if x >= 0\n      p[i].first = x - (y / 2)\n      p[i].second = x + (y / 2)\n    else\n      p[i].first = x - (y / 2)\n      p[i].second = x + (y / 2)\n    \n  \n  sort array p\n  for integer i = 0 to n exclusive\n    x = p[i].first - p[i - 1].second\n    if x is equal to t\n      increase c\n    else if x is greater than t\n      increase c by 2\n  \n  print c and a new line\n  \n\n",
        "map<long long, long long> mp;\nint main() {\n  int n, t, c = 2;\n  cin >> n >> t;\n  double x, y;\n  pair<double, double> p[n];\n  for (int i = 0; i < n; i++) {\n    cin >> x >> y;\n    if (x >= 0) {\n      p[i].first = x - (y / 2);\n      p[i].second = x + (y / 2);\n    } else {\n      p[i].first = x - (y / 2);\n      p[i].second = x + (y / 2);\n    }\n  }\n  sort(p, p + n);\n  for (int i = 0; i < n; i++) {\n    x = p[i].first - p[i - 1].second;\n    if (x == t)\n      c++;\n    else if (x > t)\n      c += 2;\n  }\n  cout << c << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers n, t\ncreate double vector coord\n\n  read n read t\n  for i = 0 to n exclusive\n    create integers x, a\n    read x read\n    add element 1.0 * x - 1.0 * a / 2 to end of coord\n    add element 1.0 * x + 1.0 * a / 2 to end of coord\n  \n  sort elements from beginning of coord to end of coord\n  create integer ans with ans = 2\n  for i = 1 to size of coord -1 exclusive, incrementing i by 2\n    create double x1, x2 with x1 = coord[i], x2 = coord[i+1]\n    if x2 - x1 is less than t\n      break current loop iteration\n    else if x2 - x1 is t\n      increment ans by 1\n    else\n      increment ans by 2\n  \n  print ans print \"\\n\"\n\n",
        "int n, t;\nvector<double> coord;\nint main() {\n  cin >> n >> t;\n  for (int i = 0; i < n; ++i) {\n    int x, a;\n    cin >> x >> a;\n    coord.push_back(1.0 * x - 1.0 * a / 2);\n    coord.push_back(1.0 * x + 1.0 * a / 2);\n  }\n  sort(coord.begin(), coord.end());\n  int ans = 2;\n  for (int i = 1; i < coord.size() - 1; i += 2) {\n    double x1 = coord[i], x2 = coord[i + 1];\n    if (x2 - x1 < t)\n      continue;\n    else if (x2 - x1 == t)\n      ans += 1;\n    else\n      ans += 2;\n  }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "create integers n and t\ncoord = vector of doubles\n\n  read n and t\n  for integer i = 0 to n exclusive\n    declare integers called x and a\n    read x and a\n    push 1.0 * x - 1.0 * a / 2 into coord\n    push 1.0 * x + 1.0 * a / 2 into coord\n  \n  sort coord\n  create integer ans with value 2\n  for i = 1 to the length of coord - 1 exclusive with increments of 2\n    let double x1 = coord[i] and double x2 = coord[i + 1]\n    if x2 - x1 is less than t\n      go to the start of the loop\n    else if x2 - x1 is equal to t\n      increase ans by 1\n    else\n      increase ans by 2\n  \n  print ans and \"\\n\"\n\n",
        "int n, t;\nvector<double> coord;\nint main() {\n  cin >> n >> t;\n  for (int i = 0; i < n; ++i) {\n    int x, a;\n    cin >> x >> a;\n    coord.push_back(1.0 * x - 1.0 * a / 2);\n    coord.push_back(1.0 * x + 1.0 * a / 2);\n  }\n  sort(coord.begin(), coord.end());\n  int ans = 2;\n  for (int i = 1; i < coord.size() - 1; i += 2) {\n    double x1 = coord[i], x2 = coord[i + 1];\n    if (x2 - x1 < t)\n      continue;\n    else if (x2 - x1 == t)\n      ans += 1;\n    else\n      ans += 2;\n  }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "mod = int with mod = 1e9 + 7\nn = int\nN = const int with N = 50\np, t = int array of size N each\nin function compare taking int a, int b and returning bool\n  if p[a] > p[b] return 1\n  if p[a] is p[b] and t[a] <= t[b] return 1\n  \n\nin function eq taking int a, int b and returning bool\n  if p[a] is p[b] and t[a] is t[b] return 1\n  \n\n\n  k = int\n  read n then k\n  a = int array of size n\n  for i = 0 to n\n    read p[i] then t[i]\n    set a[i] to i\n  \n  call stable_sort on a, a + n, compare\n  c = int with c = 1\n  i = int with i = k - 2\n  loop while i >= 0 and eq of a[k - 1], a[i]\n    increment c\n    decrement i\n  \n  set to k\n  loop while i < n and eq of a[k - 1], a[i]\n    increment c\n    increment i\n  \n  print c\n\n",
        "int mod = (1e9) + 7;\nint n;\nconst int N = 50;\nint p[N], t[N];\nbool compare(int a, int b) {\n  if (p[a] > p[b]) return 1;\n  if (p[a] == p[b] && t[a] <= t[b]) return 1;\n  return 0;\n}\nbool eq(int a, int b) {\n  if (p[a] == p[b] && t[a] == t[b]) return 1;\n  return 0;\n}\nint main() {\n  int k;\n  cin >> n >> k;\n  int a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> p[i] >> t[i];\n    a[i] = i;\n  }\n  stable_sort(a, a + n, compare);\n  int c = 1;\n  int i = k - 2;\n  while (i >= 0 && eq(a[k - 1], a[i])) {\n    c++;\n    i--;\n  }\n  i = k;\n  while (i < n && eq(a[k - 1], a[i])) {\n    c++;\n    i++;\n  }\n  cout << c << endl;\n}\n"
    ],
    [
        "create ints n, i, p, t, and k and int array a of size 111111\n\n  read n and k\n  for i = 0 to n exclusive\n    read p and t\n    increment a[p * 50 - t]\n  \n  set t to 10000\n  while a[t] is less than k, set k to k - a[t--]\n  print a[t]\n  \n\n",
        "int n, i, a[111111], p, t, k;\nint main() {\n  cin >> n >> k;\n  for (i = 0; i < n; i++) {\n    cin >> p >> t;\n    a[p * 50 - t]++;\n  }\n  t = 10000;\n  while (a[t] < k) k -= a[t--];\n  cout << a[t] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  i, j, n, a, k = int\n  arr = two dimensional int array of sizes 55 and 2\n  read n then k\n  for i = 0 to n\n    for j = 0 to 2 read arr[i][j]\n  \n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] > arr[j][0]\n        tmp = int with tmp = arr[i][0]\n        set arr[i][0] to arr[j][0]\n        set arr[j][0] to tmp\n        set tmp to arr[i][1]\n        set arr[i][1] to arr[j][1]\n        set arr[j][1] to tmp\n      \n    \n  \n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0]\n        if arr[i][1] < arr[j][1]\n          tmp = int with tmp = arr[i][1]\n          set arr[i][1] to arr[j][1]\n          set arr[j][1] to tmp\n        \n      \n    \n  \n  p = int with p = 0 and frr = int array of size 55\n  for i = 0 to n set frr[i] to 0\n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0] and arr[i][1] is arr[j][1] increment frr[p]\n    \n    increment p\n  \n  print frr[k - 1]\n  \n\n",
        "int main() {\n  int i, j, n, a, k;\n  int arr[55][2];\n  cin >> n >> k;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < 2; j++) { cin >> arr[i][j]; }\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] > arr[j][0]) {\n        int tmp = arr[i][0];\n        arr[i][0] = arr[j][0];\n        arr[j][0] = tmp;\n        tmp = arr[i][1];\n        arr[i][1] = arr[j][1];\n        arr[j][1] = tmp;\n      }\n    }\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] == arr[j][0]) {\n        if (arr[i][1] < arr[j][1]) {\n          int tmp = arr[i][1];\n          arr[i][1] = arr[j][1];\n          arr[j][1] = tmp;\n        }\n      }\n    }\n  }\n  int frr[55], p = 0;\n  for (i = 0; i < n; i++) { frr[i] = 0; }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] == arr[j][0] && arr[i][1] == arr[j][1]) { frr[p]++; }\n    }\n    p++;\n  }\n  cout << frr[k - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create new integers n and k\n  read n and k\n  create an array of int int pairs A witn n + 1 element\n  for integer i = 1 to n inclusive\n    read input to A[i].first and A[i].second\n    invert the sign of A[i].first\n  \n  sort A from position 1 to n + 1\n  create integer ans = 0\n  for i = 1 to n inclusive incrementing i\n    if A[i] = A[k], increment ans by one\n  print ans and '\\n'\n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  pair<int, int> A[n + 1];\n  for (int i = 1; i <= n; i++) {\n    cin >> A[i].first >> A[i].second;\n    A[i].first *= -1;\n  }\n  sort(A + 1, A + n + 1);\n  int ans = 0;\n  for (int i = 1; i <= n; i++)\n    if (A[i] == A[k]) ans++;\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  i, j, n, a, k = int\n  arr = two dimensional int array of sizes 55 and 2\n  read n then k\n  for i = 0 to n\n    for j = 0 to 2 read arr[i][j]\n  \n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0]\n        tmp = int with tmp = arr[i][0]\n        set arr[i][0] to arr[j][0]\n        set arr[j][0] to tmp\n        set tmp to arr[i][1]\n        set arr[i][1] to arr[j][1]\n        set arr[j][1] to tmp\n      \n    \n  \n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0]\n        if arr[i][1] < arr[j][1]\n          tmp = int with tmp = arr[i][1]\n          set arr[i][1] to arr[j][1]\n          set arr[j][1] to tmp\n        \n      \n    \n  \n  p = int with p = 0 and frr = int array of size 55\n  for i = 0 to n set frr[i] to 0\n  for i = 0 to n\n    for j = 0 to n\n      if arr[i][0] is arr[j][0] and arr[i][1] is arr[j][1] incrment frr[p]\n    \n    increment p\n  \n  print frr[k - 1]\n\n",
        "int main() {\n  int i, j, n, a, k;\n  int arr[55][2];\n  cin >> n >> k;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < 2; j++) { cin >> arr[i][j]; }\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] > arr[j][0]) {\n        int tmp = arr[i][0];\n        arr[i][0] = arr[j][0];\n        arr[j][0] = tmp;\n        tmp = arr[i][1];\n        arr[i][1] = arr[j][1];\n        arr[j][1] = tmp;\n      }\n    }\n  }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] == arr[j][0]) {\n        if (arr[i][1] < arr[j][1]) {\n          int tmp = arr[i][1];\n          arr[i][1] = arr[j][1];\n          arr[j][1] = tmp;\n        }\n      }\n    }\n  }\n  int frr[55], p = 0;\n  for (i = 0; i < n; i++) { frr[i] = 0; }\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      if (arr[i][0] == arr[j][0] && arr[i][1] == arr[j][1]) { frr[p]++; }\n    }\n    p++;\n  }\n  cout << frr[k - 1] << endl;\n}\n"
    ],
    [
        "\n  create ints i, j, n, k, ans1, ans2, and c and int arrays a of size 10000 and b of size 10000\n  read n and k\n  Enter integers for every index of arrays a and b\n  for i = 0 to n exclusive\n    for j = n - 1 to i exclusive\n      if a[j] is greater than a[j - 1]\n        swap the values of a[j] and a[j - 1]\n        swap the values of b[j] and b[j - 1]\n      \n      if a[j] is equal to a[j - 1] and b[j] is less than a[j - 1], swap the values of b[j] and b[j -1]\n    \n  \n  set ans1 to a[k - 1]\n  set ans2 to b[k - 1]\n  for i = 0 and c = 0 to n exclusive\n    if ans1 is equal to a[i] and ans2 is equal to b[i], increment c++\n  \n  print c\n\n",
        "int main() {\n  int a[10000], b[10000], i, j, n, k, ans1, ans2, c;\n  cin >> n >> k;\n  for (i = 0; i < n; i++) cin >> a[i] >> b[i];\n  for (i = 0; i < n; i++) {\n    for (j = n - 1; j > i; j--) {\n      if (a[j] > a[j - 1]) {\n        swap(a[j], a[j - 1]);\n        swap(b[j], b[j - 1]);\n      }\n      if (a[j] == a[j - 1] && b[j] < b[j - 1]) swap(b[j], b[j - 1]);\n    }\n  }\n  ans1 = a[k - 1];\n  ans2 = b[k - 1];\n  for (i = 0, c = 0; i < n; i++) {\n    if (ans1 == a[i] && ans2 == b[i]) c++;\n  }\n  cout << c << endl;\n}\n"
    ],
    [
        "declare const int N = 50 + 5\ncreate integers n, k and res\ncreate an array of int-int pairs a with size N\ndeclare boolean function cmp that takes pairs of int-int a and b as an arguments\n  if a.first is greater than b.first\n    return true\n  else if a.first is equal to b.first\n    if a.second is less than b.second, return true\n    return false\n  else\n    return false\n\ndefine function Input\n  read n and k\n  for i from 1 to n inclusive, read input to a[i].first and a[i].second\n  sort a from position 1 to n + 1 using cmp as a comparator method\n\nfunction Solve\n  declare int problems = a[k].first and penalty=a[k].second\n  for i from 1 to n inclusive\n    if a[i].first = problems and a[i].second is equal to penalty, increment res\n  \n  print res and '\\n'\n\n\n  call Input()\n  call Solve()\n  \n\n",
        "const int N = 50 + 5;\nint n, k, res;\npair<int, int> a[N];\nbool cmp(pair<int, int> a, pair<int, int> b) {\n  if (a.first > b.first)\n    return true;\n  else if (a.first == b.first) {\n    if (a.second < b.second) return true;\n    return false;\n  } else\n    return false;\n}\nvoid Input() {\n  cin >> n >> k;\n  for (int i = 1; i <= n; i++) cin >> a[i].first >> a[i].second;\n  sort(a + 1, a + n + 1, cmp);\n}\nvoid Solve() {\n  int problems = a[k].first, penalty = a[k].second;\n  for (int i = 1; i <= n; i++) {\n    if (a[i].first == problems && a[i].second == penalty) res++;\n  }\n  cout << res << '\\n';\n}\nint main() {\n  Input();\n  Solve();\n  return 0;\n}\n"
    ],
    [
        "create int array a of size 100 containing array of size 100\ndeclare margesort taking in ints l and r and int arrays p and t\ndeclare marge taking in int l, m, and r and int arrays p and t\n\n  let ints n and k and int arrays p of size 100 and t of size 100\n  read n and k\n  for i - 0 to n exclusive\n    read p[i] and t[i]\n    increment a[p[i]][t[i]]\n  \n  call margesort with arguments p, t, 0, and n - 1\n  print a[p[k - 1]][t[k - 1]]\n  \n\ndecalre margesort taking in ints l and r and int arrays p and t\n  if l is less than r\n    let int m = (l + r - 1) / 2\n    call margesort(p, t, l, m)\n    call margesort(p, t, m + 1, r)\n    call margesort with arguments p, t, l, m, and r\n  \n\ndeclare marge taking in ints l, m, and r and int arrays p and t\n  let ints i, j, and k\n  create integer n1 = m - l + 1\n  let integer n2 = r - m\n  create int arrays L of size n1, R of size n2, ll of size n1, and rr of size n2\n  for i = 0 to n1 exclusive\n    set L[i] to p[l + i]\n    set ll[i] to t[l + i]\n  \n  for j = 0 to n2 exclusive\n    set R[j] to p[m + 1 + j]\n    set rr[j] to t[m + 1 + j]\n  \n  set i to 0\n  set j to 0\n  set k to l\n  while i is less than n1 and j is less than n2\n    if L[i] is greater than R[j]\n      set p[k] to L[i]\n      set t[k] to ll[i]\n      increase i by 1\n    else if L[i] is equal to R[j] and ll[i] is less than or equal to rr[j]\n      set p[k] to L[i]\n      set t[k] to ll[i]\n      increment i\n    else\n      set p[k] to R[j]\n      set t[k] to rr[j]\n      increment j\n    \n    increase k by 1\n  \n  while i is less than n1\n    set p[k] to L[i]\n    set t[k] to ll[i]\n    increment i\n    increment k\n  \n  while j is less than n2\n    set p[k] to R[j]\n    set t[k] to rr[j]\n    increment j\n    add 1 to k\n  \n\n",
        "int a[100][100];\nvoid margesort(int p[], int t[], int l, int r);\nvoid marge(int p[], int t[], int l, int m, int r);\nint main() {\n  int n, k, p[100], t[100];\n  cin >> n >> k;\n  for (int i = 0; i < n; i++) {\n    cin >> p[i] >> t[i];\n    a[p[i]][t[i]]++;\n  }\n  margesort(p, t, 0, n - 1);\n  cout << a[p[k - 1]][t[k - 1]] << endl;\n  return 0;\n}\nvoid margesort(int p[], int t[], int l, int r) {\n  if (l < r) {\n    int m = (l + r - 1) / 2;\n    margesort(p, t, l, m);\n    margesort(p, t, m + 1, r);\n    marge(p, t, l, m, r);\n  }\n}\nvoid marge(int p[], int t[], int l, int m, int r) {\n  int i, j, k;\n  int n1 = m - l + 1;\n  int n2 = r - m;\n  int L[n1], R[n2], ll[n1], rr[n2];\n  for (i = 0; i < n1; i++) {\n    L[i] = p[l + i];\n    ll[i] = t[l + i];\n  }\n  for (j = 0; j < n2; j++) {\n    R[j] = p[m + 1 + j];\n    rr[j] = t[m + 1 + j];\n  }\n  i = 0;\n  j = 0;\n  k = l;\n  while (i < n1 && j < n2) {\n    if (L[i] > R[j]) {\n      p[k] = L[i];\n      t[k] = ll[i];\n      i++;\n    } else if (L[i] == R[j] && ll[i] <= rr[j]) {\n      p[k] = L[i];\n      t[k] = ll[i];\n      i++;\n    } else {\n      p[k] = R[j];\n      t[k] = rr[j];\n      j++;\n    }\n    k++;\n  }\n  while (i < n1) {\n    p[k] = L[i];\n    t[k] = ll[i];\n    i++;\n    k++;\n  }\n  while (j < n2) {\n    p[k] = R[j];\n    t[k] = rr[j];\n    j++;\n    k++;\n  }\n}\n"
    ],
    [
        "\n  declare integers n, k\n  read n read k\n  declare pair of integer, integer array a size 50\n  for i = 0 to n exclusive\n    read first element for a[i], second element of a[i]\n    let first element of a[i] be first element of a[i] * -1\n  \n  sort elements from a to a + n\n  print result of run count with a, a + n, a[k - 1] as arguments, newline\n  return 0 from function\n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  pair<int, int> a[50];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i].first >> a[i].second;\n    a[i].first *= -1;\n  }\n  sort(a, a + n);\n  cout << count(a, a + n, a[k - 1]) << endl;\n  return (0);\n}\n"
    ],
    [
        "n, i, p, t, k = int and a = int array of size 111111\n\n  read n then k\n  for i = 0 to n\n    read p then t\n    increment a[p * 50 - t]\n  \n  set t to 2500\n  loop while a[t] is less than k decrement k by a[t] then decrement t\n  print a[t]\n  \n\n",
        "int n, i, a[111111], p, t, k;\nint main() {\n  cin >> n >> k;\n  for (i = 0; i < n; i++) {\n    cin >> p >> t;\n    a[p * 50 - t]++;\n  }\n  t = 2500;\n  while (a[t] < k) k -= a[t--];\n  cout << a[t] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m, i, j, k, a, b, create integer array x with size 51\n  while read n read m\n    set j to 0\n    for i = 0 to n exclusive\n      read a read b\n      set x[i] to a * 50 - b\n    \n    sort elements from x to x + n\n    for i = 0 to n exclusive\n      if x[i] is x[n-m], increment j\n    \n    print j print newline\n  \n  \n\n",
        "int main() {\n  int n, m, x[51], i, j, k, a, b;\n  while (cin >> n >> m) {\n    j = 0;\n    for (i = 0; i < n; i++) {\n      cin >> a >> b;\n      x[i] = a * 50 - b;\n    }\n    sort(x, x + n);\n    for (i = 0; i < n; i++) {\n      if (x[i] == x[n - m]) { j++; }\n    }\n    cout << j << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare int variables n and d\n  declare double variable a\n  read n, a and d\n  create an arrays of long longs t and v with n elements\n  loop i from 0 to n exclusive, read t[i] and v[i]\n  declare long double T = 0\n  loop i from 0 to n exclusive\n    if v[i] * v[i] >= 2 * a * d\n      T = max of t[i] + sqrt((2.0 * d) / a and T\n    else\n      create long double t1 = v[i] / a\n      create long double s = (v[i] * v[i]) / (2 * a)\n      T = max of T and t[i] + t1 + ((d - s) / v[i])\n    \n    set output decimal precision to 12 and print T\n  \n\n",
        "int main() {\n  int n, d;\n  double a;\n  cin >> n >> a >> d;\n  long long t[n], v[n];\n  for (int i = 0; i < n; i++) cin >> t[i] >> v[i];\n  long double T = 0;\n  for (int i = 0; i < n; i++) {\n    if (v[i] * v[i] >= 2 * a * d) {\n      T = max((long double)t[i] + sqrt((2.0 * d) / a), T);\n    } else {\n      long double t1 = v[i] / a;\n      long double s = (v[i] * v[i]) / (2 * a);\n      T = max(T, (long double)t[i] + t1 + ((d - s) / v[i]));\n    }\n    cout << setprecision(12) << T << endl;\n  }\n}\n"
    ],
    [
        "maxn = const int with maxn = 2e5 + 10\nn, a, b = int and arr = int array of size maxn\n\n  read n then a then b\n  read n values into arr\n  sort arr\n  print arr[b] - arr[b - 1]\n\n",
        "const int maxn = 2e5 + 10;\nint arr[maxn], n, a, b;\nint main() {\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  sort(arr, arr + n);\n  cout << arr[b] - arr[b - 1] << endl;\n}\n"
    ],
    [
        "\n  n =integer with 0\n  a =integer with 0\n  b =integer with 0\n  Read n\n  Read a\n  Read b\n  h = array of 2000 integers\n  Read n values into array h\n  sort array elements of h in ascending order\n  print h[b] - h[b - 1] and a new line\n  \n\n",
        "int main() {\n  int n = 0;\n  int a = 0;\n  int b = 0;\n  cin >> n;\n  cin >> a;\n  cin >> b;\n  int h[2000];\n  for (int i = 0; i < n; i++) cin >> h[i];\n  sort(h, h + n);\n  cout << h[b] - h[b - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array arr of length 2005\n\n  create integers a, b, and c\n  read a, b, and c\n  for i = 0 to a exclusive, read arr[i]\n  sort array arr\n  create integer mn = arr[c - 1]\n  create integer mx = arr[c] - 1\n  print the max of 0 and mx - mn + 1\n\n",
        "int arr[2005];\nint main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  for (int i = 0; i < a; i++) { cin >> arr[i]; }\n  sort(arr, arr + a);\n  int mn = arr[c - 1];\n  int mx = arr[c] - 1;\n  cout << max(0, mx - mn + 1) << endl;\n}\n"
    ],
    [
        "\n  n, a, b, i = long long int\n  read n then a then b\n  p = long long int array of size n\n  read n values into p\n  sort p\n  x = long long int with x = p[n - a] - p[b - 1]\n  print x\n\n",
        "int main() {\n  long long int n, a, b, i;\n  cin >> n >> a >> b;\n  long long int p[n];\n  for (i = 0; i < n; i++) cin >> p[i];\n  sort(p, p + n);\n  long long int x = p[n - a] - p[b - 1];\n  cout << x << endl;\n}\n"
    ],
    [
        "create ints n, a and b\ndeclare integer array x with 2005 elements\n\n  read n, a and b\n  for i from 0 to n exclusive, read input to x[i]\n  sort x\n  print x[b] - x[b - 1] and '\\n'\n\n",
        "int n, a, b;\nint x[2005];\nint main() {\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) cin >> x[i];\n  sort(x, x + n);\n  cout << x[b] - x[b - 1] << '\\n';\n}\n"
    ],
    [
        "\n  create integers n, a, b\n  read n read a read b\n  create integer array p with size n\n  for i = 0 to n exclusive, read p[i]\n  sort elements from p to p + n\n  create long long count with count = 0\n  if p[b-1] is not p[b]\n    increment count by p[b] - p[b-1]\n    print count print newline\n  else\n    print \"0\" print newline\n  \n  \n\n",
        "int main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  int p[n];\n  for (int i = 0; i < n; i++) { cin >> p[i]; }\n  sort(p, p + n);\n  long long count = 0;\n  if (p[b - 1] != p[b]) {\n    count += p[b] - p[b - 1];\n    cout << count << endl;\n  } else {\n    cout << \"0\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create string T\ncreate long long N, K, M, A, B, C[2005], D, sum\n\n  read N, A and B\n  for i=1 to N inclusive, read C[i]\n  sort elements between C+1 and C + N + 1\n  print C[B + 1] - C[B] and a newline\n\n",
        "string T;\nlong long N, K, M, A, B, C[2005], D, sum;\nint main() {\n  cin >> N >> A >> B;\n  for (int i = 1; i <= N; i++) { cin >> C[i]; }\n  sort(C + 1, C + N + 1);\n  cout << C[B + 1] - C[B] << '\\n';\n}\n"
    ],
    [
        "\n  create ints n, a, b and way\n  read n, a and b\n  create int pointer *chore to the new array of int with n elements\n  loop i from 0 to n exclusive, read chore[i]\n  sort chore\n  declare int j = n - 1\n  decrement j while j > n - a\n  if chore[j] = chore[j - 1]\n    print 0 and \"\\n\"\n  else\n    print chore[j] - chore[j - 1] and \"\\n\"\n  \n\n",
        "int main() {\n  int n, a, b, way;\n  cin >> n >> a >> b;\n  int *chore = new int[n];\n  for (int i = 0; i < n; i++) cin >> chore[i];\n  sort(chore, chore + n);\n  int j = n - 1;\n  while (j > n - a) { j--; }\n  if (chore[j] == chore[j - 1])\n    cout << 0 << \"\\n\";\n  else\n    cout << chore[j] - chore[j - 1] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "define int constant maxn, set to 5e3 + 5\ndefine unsigned integer constant base, set to 311\ndefine unsigned integer array A to be of maxn elements\n\n  define integer N\n  read N\n  define integers a and b\n  read a, b\n  for int i from 1 to N by 1, read A[i]\n  sort(A + 1, A + N + 1)\n  print A[b + 1] - A[b] and a newline\n  \n\n",
        "const int maxn = 5e3 + 5;\nconst unsigned long long base = 311;\nunsigned long long A[maxn];\nint main() {\n  int N;\n  cin >> N;\n  int a, b;\n  cin >> a >> b;\n  for (int i = (1); i <= (N); i += (1)) cin >> A[i];\n  sort(A + 1, A + N + 1);\n  cout << A[b + 1] - A[b] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create int a, b, n, i, au, nx\n  read n\n  read a and b\n  create vector int c\n  for i=0 to n exclusive\n    read au\n    put au at the end of c\n  \n  sort c\n  set nx to c[b] - c[b - 1]\n  print nx and a newline\n  \n\n",
        "int main() {\n  int a, b, n, i, au, nx;\n  cin >> n;\n  cin >> a >> b;\n  vector<int> c;\n  for (i = 0; i < n; i++) {\n    cin >> au;\n    c.push_back(au);\n  }\n  sort(c.begin(), c.end());\n  nx = c[b] - c[b - 1];\n  cout << nx << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b, i, ans = int\n  read n then a then b\n  f = int vector of size n\n  read n values into f\n  sort f from rbegin to rend\n  set ans to n, a, b, i, ans\n  print ans\n  \n\n",
        "int main() {\n  int n, a, b, i, ans;\n  cin >> n >> a >> b;\n  vector<int> f(n);\n  for (i = 0; i < n; i++) cin >> f[i];\n  sort(f.rbegin(), f.rend());\n  ans = -(f[a] - f[a - 1]);\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b = int\n  read n then a then b\n  V = int vector of size n\n  read n values into V\n  sort V\n  print V[b] - V[b - 1]\n  \n\n",
        "int main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  vector<int> V(n);\n  for (int i = 0; i < n; ++i) cin >> V[i];\n  sort(V.begin(), V.end());\n  cout << V[b] - V[b - 1] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "N=1000055\nM=1000000007\nn,a,b=int\nv=vector of int\n\n  read n,a,b\n  for i=1 to n inclusive\n    q=int\n    read q\n    add q to end of v\n  \n  sort v\n  q=v[n-1]-v[n-a-1]\n  if q <= 0\n    print 0\n    exit\n  \n  print q\n  \n\n",
        "const int N = 1e6 + 55;\nconst int M = 1e9 + 7;\nint n, a, b;\nvector<int> v;\nint main() {\n  cin >> n >> a >> b;\n  for (int i = 1; i <= n; ++i) {\n    int q;\n    cin >> q;\n    v.push_back(q);\n  }\n  sort(v.begin(), v.end());\n  int q = v[n - a] - v[n - a - 1];\n  if (q <= 0) {\n    cout << 0 << endl;\n    exit(0);\n  }\n  cout << q << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  a = int\n  b = int\n  complexity = int vector\n  read n then a then b\n  i = int with i = 0\n  loop while i is less than n incrementing i each time\n    tmp = int\n    read tmp\n    append tmp to complexity\n  \n  sort complexity\n  cnt = int with cnt = 0\n  for i = complexity[b - 1] to complexity[b] increment cnt\n  print cnt\n\n",
        "int main() {\n  int n;\n  int a;\n  int b;\n  vector<int> complexity;\n  cin >> n >> a >> b;\n  int i = 0;\n  for (; i < n; i++) {\n    int tmp;\n    cin >> tmp;\n    complexity.push_back(tmp);\n  }\n  sort(complexity.begin(), complexity.end());\n  int cnt = 0;\n  for (i = complexity[b - 1]; i < complexity[b]; i++) { cnt++; }\n  cout << cnt << endl;\n}\n"
    ],
    [
        "\n  let n, a, b, i be long integers\n  read n , a, b\n  let c[n] be long integer\n  for i = 0 to n exclusive , read ith element of c\n  sort the values of c and c + n\n  print c[b] - c[b - 1] and newline\n  \n\n",
        "int main() {\n  long long n, a, b, i;\n  cin >> n >> a >> b;\n  long long c[n];\n  for (i = 0; i < n; i++) { cin >> c[i]; }\n  sort(c, c + n);\n  cout << c[b] - c[b - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, a, b\n  create integer vector h\n  read n read a read b\n  resize vector to size n\n  for i = 0 to n exclusive, read h[i]\n  sort elements from beginning of h to end of h using integer greater function to compare\n  create integer min_petya with min_petya = h[a-1]\n  create max_vasya with max_vasya = h[a]\n  if min_petya is max_vasya\n    print 0 print newline\n  else\n    print min_petya - max_vasya print newline\n  \n  \n\n",
        "int main() {\n  int n, a, b;\n  vector<int> h;\n  cin >> n >> a >> b;\n  h.resize(n);\n  for (int i = 0; i < n; i++) { cin >> h[i]; }\n  sort(h.begin(), h.end(), greater<int>());\n  int min_petya = h[a - 1];\n  int max_vasya = h[a];\n  if (min_petya == max_vasya) {\n    cout << 0 << endl;\n  } else {\n    cout << min_petya - max_vasya << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "N = const long long with N = 1e9 + 3\nMN = const long long with MN = 1e9 + 7\nMX = const long long with MX = -1e9 - 7\nn, a, b, x, c1, c2, cnt = long long\ns, s1 = string\nbl = bool with bl = false\nc = long long\npr = pair of long long and long long\nv = vector of long long\nmp = map from long long to long long\nst = set of long long\niterator it = set of long long\n\n  read n, a, b\n  for i = 0 to n exclusive\n    read x\n    append x in v\n  \n  sort v.begin() and v.end()\n  if v[b - 1] is v[b]\n    print 0\n  else\n    print v[b] - v[b - 1]\n  \n  print new line\n  \n\n",
        "const long long N = 1e9 + 3;\nconst long long MN = 1e9 + 7;\nconst long long MX = -1e9 - 7;\nlong long n, a, b, x, c1, c2, cnt;\nstring s, s1;\nbool bl = false;\nlong long c;\npair<long long, long long> pr;\nvector<long long> v;\nmap<long long, long long> mp;\nset<long long> st;\nset<long long>::iterator it;\nint main() {\n  cin >> n >> a >> b;\n  for (long long i = 0; i < n; i++) {\n    cin >> x;\n    v.push_back(x);\n  }\n  sort(v.begin(), v.end());\n  if (v[b - 1] == v[b]) {\n    cout << 0;\n  } else {\n    cout << v[b] - v[b - 1];\n  }\n  cout << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integer vector h\n  create integers a, b, n, num\n  read n read a read b\n  for i = 0 to n exclusive\n    read num\n    add element num to end of h\n  \n  sort elements from beginning of h to end of h\n  if h[b-1] is h[b]\n    print 0 print newline\n  else\n    print h[b] - h[b-1] print newline\n  \n\n",
        "int main() {\n  vector<int> h;\n  int a, b, n, num;\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) {\n    cin >> num;\n    h.push_back(num);\n  }\n  sort(h.begin(), h.end());\n  if (h[b - 1] == h[b])\n    cout << 0 << endl;\n  else\n    cout << h[b] - h[b - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long int n, a, b, kount, x, set kount = 0\n  create vector long long int h\n  read n, a and b\n  for i=0 to n exclusive\n    read x\n    add x to end of h\n  \n  sort h\n  if h[b - 1] different from h[b], set kount to h[b] - h[b - 1]\n  print kount\n  \n\n",
        "int main() {\n  long long int n, a, b, kount = 0, x;\n  vector<long long int> h;\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    h.push_back(x);\n  }\n  sort(h.begin(), h.end());\n  if (h[b - 1] != h[b]) { kount = h[b] - h[b - 1]; }\n  cout << kount << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, a and b\n  read n, a and b\n  create vector int h(n)\n  for i=0 to n exclusive, read h[i]\n  sort vector h\n  print h[b] - h[b - 1] and a newline\n  \n\n",
        "int main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  vector<int> h(n);\n  for (int i = 0; i < n; i++) { cin >> h[i]; }\n  sort(h.begin(), h.end());\n  cout << h[b] - h[b - 1] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "integer function selsort with an array of long long argument arr and int argument n\n  loop i from 0 to n - 1 exclusive\n    declare integer min = i\n    for j = to n exclusive\n      if arr[j] is less than arr[min], set min to j\n    \n    create long long t with value arr[i]\n    set arr[i] to arr[min]\n    assign t to arr[min]\n  \n\n\n  declare integers n, a and b\n  read n, a and b\n  let arr be long long array with size n\n  loop i from 0 to n exclusive, read input to arr[i]\n  call selsort(arr, n)\n  print arr[n - a] - arr[n - a - 1] and \"\\n\"\n\n",
        "int selsort(long long arr[], int n) {\n  for (int i = 0; i < n - 1; i++) {\n    int min = i;\n    for (int j = i + 1; j < n; j++) {\n      if (arr[j] < arr[min]) { min = j; }\n    }\n    long long t = arr[i];\n    arr[i] = arr[min];\n    arr[min] = t;\n  }\n}\nint main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  long long arr[n];\n  for (int i = 0; i < n; i++) { cin >> arr[i]; }\n  selsort(arr, n);\n  cout << arr[n - a] - arr[n - a - 1] << \"\\n\";\n}\n"
    ],
    [
        "create integer array h with size 2000\n\n  create integers n, a, b\n  read n read a read b\n  for i = 0 to n exclusive, read h[i]\n  sort elements from h to h + n\n  create integer ans with ans = h[b] - h[b-1]\n  print ans print newline\n  \n\n",
        "int h[2000];\nint main() {\n  int n, a, b;\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) { cin >> h[i]; }\n  sort(h, h + n);\n  int ans = h[b] - h[b - 1];\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, n, i =integers\n  Read a, b, n\n  C = array of n integers\n  Read n values into array C\n  sort array elements of C in ascending order\n  print C[b] - C[b - 1] and a new line\n\n",
        "int main() {\n  int a, b, n, i;\n  cin >> n >> a >> b;\n  int C[n];\n  for (i = 0; i < n; i++) cin >> C[i];\n  sort(C, C + n);\n  cout << C[b] - C[b - 1] << endl;\n}\n"
    ],
    [
        "create integers n, a, and b\nlet chores be an array of integers of length 2000\n\n  read n, a, and b\n  for i to n exclusive, read chores[i]\n  sort arrary chores\n  output chores[b] - chores[b - 1] and new line\n\n",
        "int n, a, b;\nint chores[2000];\nint main() {\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) { cin >> chores[i]; }\n  sort(chores, chores + n);\n  cout << chores[b] - chores[b - 1] << '\\n';\n}\n"
    ],
    [
        "\n  n, a, b, m =integers and c = array of 2555 integers\n  Read n, a, b\n  Read n values into array c\n  sort array elements of c in ascending order\n  set m to c[b] - c[b - 1]\n  print m and a new line\n\n",
        "int main() {\n  long long int n, a, b, c[2555], m;\n  cin >> n >> a >> b;\n  for (int i = 0; i < n; i++) cin >> c[i];\n  sort(c, c + n);\n  m = c[b] - c[b - 1];\n  cout << m << endl;\n}\n"
    ],
    [
        "\n  n and b = integers\n  read n and b\n  create vector of integers V with n elements\n  read n elements into V\n  assign value b to the integer total\n  for integer i = 0 to n exclusive, add V[i] to the total\n  double t = total / n\n  create vector of doubles ans with n elements\n  for integer i = 0 to n exclusive\n    if V[i] is greater than t\n      print \"-1\\n\"\n      \n    \n    assign value of t - V[i] to the ans[i]\n  \n  print fixed and set decimal precision to 10\n  for integer i = 0 to n exclusive print ans[i]\n  \n\n",
        "int main() {\n  int n, b;\n  cin >> n >> b;\n  vector<int> V(n);\n  for (int i = 0; i < n; ++i) cin >> V[i];\n  int total = b;\n  for (int i = 0; i < n; ++i) total += V[i];\n  double t = (double)total / n;\n  vector<double> ans(n);\n  for (int i = 0; i < n; ++i) {\n    if (V[i] > t) {\n      cout << \"-1\\n\";\n      return 0;\n    }\n    ans[i] = t - V[i];\n  }\n  cout << fixed << setprecision(10);\n  for (int i = 0; i < n; ++i) cout << ans[i] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create integer arrays p of size 101 within an array of size 101, ai of size 1000, bi of size 1000\ncreate unsigned integer array ci of size 1000\n\n  created unsigned integers n, m, and k\n  read n, m, and k\n  create string u\n  create unsigned integer o = 0\n  for i = 0 to n exclusive\n    read u\n    for j = 0 to m exclusive\n      create unsigned integer ix = o + j\n      read ai[ix], bi [ix], ci[ix]\n    \n    set o to the result of o + m\n  \n  created unsigned integer e = n * m\n  create integer ma = 0\n  for u = 0 to e exclusive in increments of m\n    for v = 0 to e exclusive in increments of m\n      if u is equal to v, continue to next loop iteration\n      for i = 1 to m inclusive\n        created unsigned integer ix = u + i -1\n        for j = 1 to k inclusive\n          create integer mx = p[j][i - 1]\n          for x = 1 to ci[ix] inclusive and j inclusive\n            create integer mm = p[j - x][i - 1] + (bi[v + i - 1] - ai[ix]) * x\n            if mm is greater than mx, set mx to mm\n          \n          set p[j][i] to mx\n        \n      \n      if p[k][m] is greater than ma, set ma to p[k][m]\n    \n  \n  print ma\n  \n\n",
        "int p[101][101], ai[1000], bi[1000];\nunsigned int ci[1000];\nint main() {\n  unsigned int n, m, k;\n  cin >> n >> m >> k;\n  string u;\n  unsigned int o = 0;\n  for (unsigned int i = 0; i < n; ++i) {\n    cin >> u;\n    for (unsigned int j = 0; j < m; ++j) {\n      unsigned int ix = o + j;\n      cin >> ai[ix] >> bi[ix] >> ci[ix];\n    }\n    o += m;\n  }\n  unsigned int e = n * m;\n  int ma = 0;\n  for (unsigned int u = 0; u < e; u += m) {\n    for (unsigned int v = 0; v < e; v += m) {\n      if (u == v) continue;\n      for (unsigned int i = 1; i <= m; ++i) {\n        unsigned int ix = u + i - 1;\n        for (unsigned int j = 1; j <= k; ++j) {\n          int mx = p[j][i - 1];\n          for (unsigned int x = 1; x <= ci[ix] && x <= j; ++x) {\n            int mm = p[j - x][i - 1] + (bi[v + i - 1] - ai[ix]) * x;\n            if (mm > mx) mx = mm;\n          }\n          p[j][i] = mx;\n        }\n      }\n      if (p[k][m] > ma) ma = p[k][m];\n    }\n  }\n  cout << ma << endl;\n  return 0;\n}\n"
    ],
    [
        "create 2d array of integers a with size 15 by 105\ncreate 2d array of integers b with size 15 by 105\ncreate 2d array of integers c with size 15 by 105\ndeclare boolean array vis with 105 elements\ndeclare ints n, m and k\nfunction Cal with int arguments x and y that returns int\n  set first sizeof vis bytes at the pointer vis to 0\n  if x = y, return -1\n  declare int variable cost = k\n  create int ans = 0\n  while cost != 0\n    create integer flag\n    declare integer maxgas = 0\n    declare integer variable dp = 1\n    for integer i = 1 to m inclusive\n      if vis[i] is true, skip the rest of the loop\n      if b[y][i] - a[x][i] is greater than maxgas\n        assign 0 to dp\n        assign b[y][i] - a[x][i] to maxgas\n        change flag to i\n      \n    \n    if dp is true, break the loop\n    set vis[flag] to 1\n    add min of cost and c[x][flag] * maxgas to ans\n    decrease cost by min of cost and c[x][flag]\n  \n  return ans\n\n\n  set first sizeof vis bytes at the pointer vis to 0\n  read n, m and k\n  for i = 1 to n inclusive\n    create string s\n    read input to s\n    for j from 1 to m inclusive, read a[i][j], b[i][j] and c[i][j]\n  \n  declare int variable ans = 0\n  change i from 1 to n inclusive in a loop\n    change j from 1 to n inclusive in a loop, setting ans to max of ans and Cal(i, j)\n  \n  print ans\n\n",
        "int a[15][105];\nint b[15][105];\nint c[15][105];\nbool vis[105];\nint n, m, k;\nint Cal(int x, int y) {\n  memset(vis, 0, sizeof vis);\n  if (x == y) return -1;\n  int cost = k;\n  int ans = 0;\n  while (cost) {\n    int flag;\n    int maxgas = 0;\n    int dp = 1;\n    for (int i = 1; i <= m; i++) {\n      if (vis[i]) continue;\n      if (b[y][i] - a[x][i] > maxgas) {\n        dp = 0;\n        maxgas = b[y][i] - a[x][i];\n        flag = i;\n      }\n    }\n    if (dp) break;\n    vis[flag] = 1;\n    ans += min(cost, c[x][flag]) * maxgas;\n    cost -= min(cost, c[x][flag]);\n  }\n  return ans;\n}\nint main() {\n  memset(vis, 0, sizeof vis);\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++) {\n    string s;\n    cin >> s;\n    for (int j = 1; j <= m; j++) { cin >> a[i][j] >> b[i][j] >> c[i][j]; }\n  }\n  int ans = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) { ans = max(ans, Cal(i, j)); }\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "n,m,k=int\na,b,c=array of 11 by 111 int\nf=array of 111 int\n\n  read n,m,k\n  for i=0 to n exclusive\n    name=string\n    read name\n    for j=0 to m exclusive read a[i][j], b[i][j], c[i][j]\n  \n  ans=0\n  for st=0 to n exclusive\n    for fn=0 to n exclusive\n      if st is not fn\n        cst and num=array of 111 int\n        for j=0 to m exclusive\n          cst[j]=b[fn][j]-a[st][j]\n          num[j]=c[st][j]\n        \n        fill f with -1\n        f[0]=0\n        for j=0 to m exclusive\n          for cnt=0 to num[j] exclusive\n            for pos=k-1 down to 0 inclusive\n              if f[pos] >= 0 f[pos+1] = max(f[pos+1], f[pos]+cst[j])\n        ans=max(ans, element pointed by max_element(f, f+k+1))\n      \n  pritn ans\n\n",
        "int n, m, k;\nint a[11][111], b[11][111], c[11][111];\nint f[111];\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; ++i) {\n    string name;\n    cin >> name;\n    for (int j = 0; j < m; ++j) { cin >> a[i][j] >> b[i][j] >> c[i][j]; }\n  }\n  int ans = 0;\n  for (int st = 0; st < n; ++st)\n    for (int fn = 0; fn < n; ++fn)\n      if (st != fn) {\n        int cst[111], num[111];\n        for (int j = 0; j < m; ++j) {\n          cst[j] = b[fn][j] - a[st][j];\n          num[j] = c[st][j];\n        }\n        memset(f, -1, sizeof(f));\n        f[0] = 0;\n        for (int j = 0; j < m; ++j)\n          for (int cnt = 0; cnt < num[j]; ++cnt)\n            for (int pos = k - 1; pos >= 0; --pos)\n              if (f[pos] >= 0) f[pos + 1] = max(f[pos + 1], f[pos] + cst[j]);\n        ans = max(ans, *max_element(f, f + k + 1));\n      }\n  cout << ans << endl;\n}\n"
    ],
    [
        "let a, b, c be int matrices of size 11x101, and d, e int arrays of length 101\nlet x, y be ints\nlet n, m, kkk, maxn be ints\nin boolean function cmp that takes int x, int y\n  return d[x] > d[y]\n\n\n  read n, m, kkk\n  for i = 0 to n exclusive\n    cc = string\n    read cc\n    for j = 0 to m exclusive, read a[i][j], b[i][j], c[i][j]\n  \n  for i = 0 to n exclusive\n    let ans be an int\n    for j = 0 to n exclusive\n      set ans to 0\n      if i is different from j\n        reset d to all 0\n        for k = 0 to m exclusive set e[k] to k\n        for k = 0 to m exclusive, set d[k] to b[j][k] - a[i][k]\n        sort the first m elements of e using cmp\n        let kk = kkk be an int\n        let p be an integer\n        set p = 0\n        while p < m and kk is positive\n          if d[e[p]] is negative or zero\n            set kk to 0\n            exit loop\n          \n          if c[i][e[p]] <= kk\n            increment ans by c[i][e[p]] * d[e[p]]\n            decrement kk by c[i][e[p]]\n            increment p\n          else\n            increment ans by kk * d[e[p]]\n            set kk to 0\n          \n        \n        if ans > maxn\n          set maxn to ans\n          set x = i\n          set y = j\n        \n      \n    \n  \n  print maxn\n\n",
        "int a[11][101], b[11][101], c[11][101], d[101], e[101];\nint x, y;\nint n, m, kkk, maxn;\nbool cmp(int x, int y) {\n  return d[x] > d[y];\n}\nint main() {\n  cin >> n >> m >> kkk;\n  for (int i = 0; i < n; i++) {\n    string cc;\n    cin >> cc;\n    for (int j = 0; j < m; j++) cin >> a[i][j] >> b[i][j] >> c[i][j];\n  }\n  for (int i = 0; i < n; i++) {\n    int ans;\n    for (int j = 0; j < n; j++) {\n      ans = 0;\n      if (i != j) {\n        memset(d, 0, sizeof(d));\n        for (int k = 0; k < m; k++) e[k] = k;\n        for (int k = 0; k < m; k++) { d[k] = b[j][k] - a[i][k]; }\n        sort(e, e + m, cmp);\n        int kk = kkk;\n        int p;\n        p = 0;\n        while ((p < m) && (kk > 0)) {\n          if (d[e[p]] <= 0) {\n            kk = 0;\n            break;\n          }\n          if (c[i][e[p]] <= kk) {\n            ans = ans + c[i][e[p]] * d[e[p]];\n            kk = kk - c[i][e[p]];\n            p = p + 1;\n          } else {\n            ans = ans + kk * d[e[p]];\n            kk = 0;\n          }\n        }\n        if (ans > maxn) {\n          maxn = ans;\n          x = i;\n          y = j;\n        }\n      }\n    }\n  }\n  cout << maxn << endl;\n}\n"
    ],
    [
        "declare const int MOD = 1e9 + 7\ncreate integers n, m and k\ncreate 2d arrays of integers a, b and c with size 10 by 100\ninteger function solve with int arguments u and v\n  create vector of integers profits\n  for i = 0 to m exclusive\n    loop j from 0 to c[u][i] exclusive, push max of 0 and b[v][i]-a[u][i] into profits\n  sort profits\n  declare integer variable ans = 0\n  for i = 0 to min of k and length of profits exclusive, increase ans by profits[i]\n  return ans\n\n\n  read n, m and k\n  for i = 0 to n exclusive\n    declare string variable name\n    read name\n    loop j from 0 to m exclusive, read a[i][j], b[i][j] and c[i][j]\n  \n  create integer ans = 0\n  for i from 0 to n exclusive\n    for j from 0 to n exclusive, assign max of ans and solve(i, j) to ans\n  print ans and '\\n'\n\n",
        "const int MOD = 1e9 + 7;\nint n, m, k;\nint a[10][100], b[10][100], c[10][100];\nint solve(int u, int v) {\n  vector<int> profits;\n  for (int i = 0; i < m; ++i)\n    for (int j = 0; j < c[u][i]; ++j) profits.push_back(max(0, b[v][i] - a[u][i]));\n  sort(profits.rbegin(), profits.rend());\n  int ans = 0;\n  for (int i = 0; i < min(k, (int)profits.size()); ++i) ans += profits[i];\n  return ans;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < n; ++i) {\n    string name;\n    cin >> name;\n    for (int j = 0; j < m; ++j) cin >> a[i][j] >> b[i][j] >> c[i][j];\n  }\n  int ans = 0;\n  for (int i = 0; i < n; ++i)\n    for (int j = 0; j < n; ++j) ans = max(ans, solve(i, j));\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "declare arrays of integers a, b and c with size 105 by 105 and integer variables n, m and k\nfunction buy with int arguments x and y that returns int\n  create an array of integers v with size 105\n  let ans and i be integers with ans = 0\n  declare integer variable last = k\n  while last is not 0\n    declare integer variable maxn = 0\n    declare int maxi\n    declare integer variable num\n    for i from 1 to m inclusive\n      if v[i] is true, skip the rest of the loop\n      if b[y][i] - a[x][i] is greater than maxn\n        assign i to maxi\n        set maxn to b[y][i] - a[x][i]\n      \n    \n    if maxn = 0, stop the loop\n    change num to min of last and c[x][maxi]\n    add num * maxn to ans\n    assign 1 to v[maxi]\n    decrease last by num\n  \n  return ans\n\n\n  declare ints i and j\n  declare string variable s\n  read n, m and k\n  loop i from 1 to n inclusive\n    read input to s\n    read a[i][j], b[i][j] and c[i][j] m times\n  \n  create int ans = 0\n  for i = 1 to n inclusive\n    loop j from 1 to n inclusive, change ans to max of ans and buy(i, j)\n  \n  print ans\n  \n\n",
        "int a[105][105], b[105][105], c[105][105], n, m, k;\nint buy(int x, int y) {\n  int v[105] = {0};\n  int ans = 0, i;\n  int last = k;\n  while (last) {\n    int maxn = 0;\n    int maxi;\n    int num;\n    for (i = 1; i <= m; i++) {\n      if (v[i]) continue;\n      if (b[y][i] - a[x][i] > maxn) {\n        maxi = i;\n        maxn = b[y][i] - a[x][i];\n      }\n    }\n    if (maxn == 0) break;\n    num = min(last, c[x][maxi]);\n    ans += num * maxn;\n    v[maxi] = 1;\n    last -= num;\n  }\n  return ans;\n}\nint main() {\n  int i, j;\n  string s;\n  cin >> n >> m >> k;\n  for (i = 1; i <= n; i++) {\n    cin >> s;\n    for (j = 1; j <= m; j++) { cin >> a[i][j] >> b[i][j] >> c[i][j]; }\n  }\n  int ans = 0;\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= n; j++) { ans = max(ans, buy(i, j)); }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integers Maxn, Maxm with Maxn = 15, Maxm = 100 + 5\ncreate integers n, m, k, ans create 2d integer arrays a, b, c, with a size Maxn by Maxm, b size Maxn by Maxm, c size Maxn by Maxm\n\n  read n read m read k\n  create string s\n  for i = 0 to n exclusive\n    read s\n    for j = 0 to m exclusive, read a[i][j] read b[i][j] read c[i][j]\n  \n  create pair of integer, integer array d with size Maxm\n  for i = 0 to n exclusive\n    for j = 0 to n exclusive\n      for l = 0 to m exclusive, set d[l] to make pair from ( b[j][l] - a[i][l] and c[i][l] )\n      sort elements from d to d + m\n      reverse sort elements from d to d + m\n      create integers num, p, cnt with num = 0, p = 0, cnt = 0\n      while p is less than m and cnt + second element of d[p] is less than or equal to k\n        if first element of d[p] is less than 0, break loop\n        increment cnt by second element of d[p]\n        increment num by first element of d[p] * second eleement of d[p]\n        increment p\n      \n      if first element of d[p] is greater than 0, increment num by first element of d[p] * ( k - cnt )\n      set ans to maximum of ans and num\n    \n  \n  print ans print newline\n  \n\n",
        "const int Maxn = 15, Maxm = 100 + 5;\nint n, m, k, a[Maxn][Maxm], b[Maxn][Maxm], c[Maxn][Maxm], ans;\nint main() {\n  cin >> n >> m >> k;\n  string s;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    for (int j = 0; j < m; j++) cin >> a[i][j] >> b[i][j] >> c[i][j];\n  }\n  pair<int, int> d[Maxm];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      for (int l = 0; l < m; l++) d[l] = make_pair(b[j][l] - a[i][l], c[i][l]);\n      sort(d, d + m);\n      reverse(d, d + m);\n      int num = 0, p = 0, cnt = 0;\n      while (p < m && cnt + d[p].second <= k) {\n        if (d[p].first < 0) break;\n        cnt += d[p].second;\n        num += d[p].first * d[p].second;\n        p++;\n      }\n      if (d[p].first > 0) num += d[p].first * (k - cnt);\n      ans = max(ans, num);\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create 2d long long array a with size 11 by 105\ncreate 2d long long array b with size 11 by 105\ncreate 2d long long array c with size 11 by 105\ndeclare boolean array vis with 105 elements\ndeclare long longs n, m and k\ncal is a long long function with int arguments x and y\n  create long long last = k\n  create long long ans = 0\n  set sizeof(vis) bytes at the pointer vis to 0\n  while last != 0\n    declare long long v = 0\n    declare long long p\n    declare long long flag = 0\n    for integer i = 1 to m inclusive\n      if vis[i] is false\n        if b[y][i] - a[x][i] is greater than v\n          assign b[y][i] - a[x][i] to v\n          set p to i\n          assign 1 to flag\n        \n      \n    \n    if flag = 0, break\n    set vis[p] to 1\n    if last >= c[x][p]\n      increase ans by c[x][p] * v\n      decrease last by c[x][p]\n    else\n      increase ans by last * v\n      change last to 0\n    \n  \n  return ans\n\n\n  read n, m and k\n  for i from 1 to n inclusive\n    declare string s\n    read input to s\n    for j from 1 to m inclusive, read input to a[i][j], b[i][j] and c[i][j]\n  \n  declare long long variable ans = 0\n  loop i from 1 to n inclusive\n    for int j = 1 to n inclusive, change ans to max of ans and cal(i, j)\n  print ans and \"\\n\"\n\n",
        "long long a[11][105];\nlong long b[11][105];\nlong long c[11][105];\nbool vis[105];\nlong long n, m, k;\nlong long cal(int x, int y) {\n  long long last = k;\n  long long ans = 0;\n  memset(vis, 0, sizeof(vis));\n  while (last) {\n    long long v = 0;\n    long long p;\n    long long flag = 0;\n    for (int i = 1; i <= m; i++) {\n      if (!vis[i]) {\n        if (b[y][i] - a[x][i] > v) {\n          v = b[y][i] - a[x][i];\n          p = i;\n          flag = 1;\n        }\n      }\n    }\n    if (flag == 0) break;\n    vis[p] = 1;\n    if (last >= c[x][p]) {\n      ans += c[x][p] * v;\n      last -= c[x][p];\n    } else {\n      ans += last * v;\n      last = 0;\n    }\n  }\n  return ans;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 1; i <= n; i++) {\n    string s;\n    cin >> s;\n    for (int j = 1; j <= m; j++) cin >> a[i][j] >> b[i][j] >> c[i][j];\n  }\n  long long ans = 0;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++) { ans = max(ans, cal(i, j)); }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "\n  declare n as long long, a as long long array with size 100100\n  read n\n  for i = 0 to n exclusive, read a[i]\n  declare s as long long = 0\n  for k = 0 to n - 1 exclusive\n    declare integer t = 0\n    while k + ( 1 bitshift left t + 1 ) is less than n, increment i\n    increment s by a[k], a[k + (1 << t)] by a[k]\n    print s, newline\n  \n  \n\n",
        "int main() {\n  long long n, a[100100];\n  cin >> n;\n  for (int i = 0; i < n; ++i) cin >> a[i];\n  long long s = 0;\n  for (int k = 0; k < n - 1; ++k) {\n    int t = 0;\n    while (k + (1 << t + 1) < n) ++t;\n    s += a[k], a[k + (1 << t)] += a[k];\n    cout << s << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "MaxN = const int with MaxN = 1E5 + 10\na = int array of size MaxN\n\n  n = int\n  read n\n  read n values into a\n  ans = int with ans = 0\n  for i = 0 to n - 1\n    lg = int with lg = log2 of n - i - 1\n    increment ans by a[i]\n    increment a[i + (1 bitshift left by lg)] by a[i]\n    print ans\n  \n\n",
        "const int MaxN = 1E5 + 10;\nint a[MaxN];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; ++i) cin >> a[i];\n  int ans = 0;\n  for (int i = 0; i < n - 1; ++i) {\n    int lg = log2(n - i - 1);\n    ans += a[i];\n    a[i + (1 << lg)] += a[i];\n    cout << ans << endl;\n  }\n}\n"
    ],
    [
        "n, i, a, ans, d = integers with ans = 0, a, d = integer array of size 1111111\n\n  read n\n  for i = 0 to n exclusive, read a[i]\n  d[1] = 1\n  for i = 2 to n exclusive, d[i] = d[i / 2] * 2\n  for i = 0 to i + 1 < n\n    a[i + d[n - i - 1]] = a[i + d[n - i - 1]] + a[i]\n    ans = ans + a[i]\n    print ans\n  \n  \n\n",
        "int n, i, a[1111111], ans = 0, d[1111111];\nint main() {\n  cin >> n;\n  for (i = 0; i < n; i++) cin >> a[i];\n  d[1] = 1;\n  for (i = 2; i < n; i++) d[i] = d[i / 2] * 2;\n  for (i = 0; i + 1 < n; i++) {\n    a[i + d[n - i - 1]] += a[i];\n    ans += a[i];\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  create long long int array arr[n]\n  read every index of arr\n  create long long N = 0\n  for i = 0 to n - 1 exclusive\n    let integer t = floor(log2(n - i - 1))\n    set N to N + arr[i]\n    create int j = i + pow(2, t)\n    set arr[j] to arr[j] + arr[i]\n    set arr[i] to 0\n    print N\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long arr[n];\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  long long N = 0;\n  for (int i = 0; i < n - 1; i++) {\n    int t = floor(log2(n - i - 1));\n    N = N + arr[i];\n    int j = i + pow(2, t);\n    arr[j] += arr[i];\n    arr[i] = 0;\n    cout << N << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "a = integer array of size 100001\n\n  n = integer\n  read n\n  for i = 1 to n + 1 exclusive, read a[i]\n  res = long long with res = 0\n  t = integer\n  for i = 1 to n exclusive\n    for t = 1, i + t <= n, t = t * 2\n      ;\n    t = right shift t 1 place\n    res = res + a[i]\n    a[i + t] = a[i + t] + a[i]\n    print res\n  \n  \n\n",
        "int a[100001];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i < n + 1; i++) cin >> a[i];\n  long long res = 0;\n  int t;\n  for (int i = 1; i < n; i++) {\n    for (t = 1; i + t <= n; t *= 2)\n      ;\n    t >>= 1;\n    res += a[i];\n    a[i + t] += a[i];\n    cout << res << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long int n\n  read n\n  create long long int a[n + 5]\n  for i=0 to n inclusive, read a[i]\n  set c to 0\n  for i=0 to n exclusive\n    set c to c + a[i]\n    print c and a newline\n    j=1\n    while ( - 1 + j * 2 < n, set j to j*2\n    set a[i + j] to a[i + j] + a[i]\n  \n\n",
        "int main() {\n  long long int n;\n  cin >> n;\n  long long int a[n + 5];\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  long long int c = 0;\n  for (int i = 1; i < n; i++) {\n    c += a[i];\n    cout << c << \"\\n\";\n    long long int j = 1;\n    while ((i - 1) + j * 2 < n) j *= 2;\n    a[i + j] += a[i];\n  }\n}\n"
    ],
    [
        "power2 is a long long function with long long arguments pow and mod\n  declare long longs res = 1ll and x = 2ll\n  while pow > 0\n    if pow & 1 is true, set res to (res * x) modulo mod\n    pow >>= 1\n    assign (x * x) modulo mod to x\n  \n  return res\n\n\n  create long long n\n  read n\n  if n is true\n    declare long long M = 1 * 1000 * 1000 * 1000 + 7\n    declare long long variable sol\n    assign power2(2 * n - 1, M) to sol\n    increase sol by power2(n - 1, M)\n    sol = sol modulo M\n    print sol\n  else\n    print 1\n  \n  \n\n",
        "long long power2(long long pow, long long mod) {\n  long long res = 1ll, x = 2ll;\n  while (pow > 0) {\n    if (pow & 1) res = (res * x) % mod;\n    pow >>= 1;\n    x = (x * x) % mod;\n  }\n  return res;\n}\nint main() {\n  long long n;\n  cin >> n;\n  if (n) {\n    long long M = 1 * 1000 * 1000 * 1000 + 7;\n    long long sol;\n    sol = power2(2 * n - 1, M);\n    sol += power2(n - 1, M);\n    sol %= M;\n    cout << sol << endl;\n  } else {\n    cout << 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare int variables a, n and p where p = 1000000007\nlong long function fastmod with long long arguments a and n\n  if n is equal to 1, return a\n  declare long long variable ans = fastmod(a, n / 2) modulo p\n  if n is even\n    return ans % p * ans % p\n  else{\n    return ans % p * ans % p * a % p\n  \n\n\n  declare long long variable k\n  read k\n  if k >= 2\n    declare long long variable t = fastmod(2, k - 1)\n    print (t + 2 * t * t % p) % p\n  else if k = 1\n    print 3\n  else\n    print 1\n  \n  \n\n",
        "int a, n, p = 1000000007;\nlong long fastmod(long long a, long long n) {\n  if (n == 1) { return a; }\n  long long ans = fastmod(a, n / 2) % p;\n  if (n % 2 == 0) {\n    return ans % p * ans % p;\n  } else {\n    return ans % p * ans % p * a % p;\n  }\n}\nint main() {\n  long long k;\n  cin >> k;\n  if (k >= 2) {\n    long long t = fastmod(2, k - 1);\n    cout << (t + 2 * t * t % p) % p << endl;\n  } else if (k == 1) {\n    cout << 3 << endl;\n  } else {\n    cout << 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "mod = constant long long with value of 1e9 + 7\nin function qpow2 that returns a long long and takes argument p = long long\n  a = long long with value of 2\n  res = long long with value of 1\n  while p\n    if p bitwise and 1\n      set res to res * a\n      set res to res modulo mod\n    \n    set a to a * a\n    set a to a modulo mod\n    set p to right shift p by 1\n  \n  return res\n\n\n  n = long long\n  read n\n  if n equals 0\n    print 1\n  else\n    print (call qpow2 with argument n-1 plus call qpow2 with argument 2*n-1) modulo mod\n  \n  \n\n",
        "const long long mod = 1e9 + 7;\nlong long qpow2(long long p) {\n  long long a = 2;\n  long long res = 1;\n  while (p) {\n    if (p & 1) {\n      res *= a;\n      res %= mod;\n    }\n    a *= a;\n    a %= mod;\n    p >>= 1;\n  }\n  return res;\n}\nint main() {\n  long long n;\n  cin >> n;\n  if (n == 0) {\n    cout << 1 << endl;\n  } else {\n    cout << (qpow2(n - 1) + qpow2(2 * n - 1)) % mod << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "oo=1000000000, MD=1000000007\nfunction fastExp (get long long b and e, return long long)\n  ans=1\n  while e > 0\n    if e and 1 ans = (ans*b) modulo MD\n    b = (b*b) modulo MD\n    right shift e\n  \n  return ans\n\n\n  n=long long\n  read n\n  ans=(fastExp(4,n) + fastExp(2,n)) modulo MD\n  ans = (ans*fastExp(2,MD-2)) modulo MD\n  print ans\n  \n\n",
        "const int oo = 1e9, MD = 1e9 + 7;\nlong long fastExp(long long b, long long e) {\n  long long ans = 1;\n  while (e > 0) {\n    if (e & 1) ans = (ans * b) % MD;\n    b = (b * b) % MD;\n    e >>= 1;\n  }\n  return ans;\n}\nint main() {\n  long long n;\n  cin >> n;\n  long long ans = (fastExp(4, n) + fastExp(2, n)) % MD;\n  ans = (ans * fastExp(2, MD - 2)) % MD;\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "mul is a long long function with long long arguments x and p\n  declare long long ans = 1\n  while p is not 0\n    if p & 1 != 0, assign ans * x % 1000000007 to ans\n    set x to x * x % 1000000007\n    assign p >> 1 to p\n  \n  return ans\n\n\n  declare long long variable n\n  read n\n  if n is equal to 0\n    print 1\n  else\n    declare long long variable w = mul(2, n - 1) % 1000000007\n    print (w + w * w % 1000000007 * 2 % 1000000007) % 1000000007\n  \n  \n\n",
        "long long mul(long long x, long long p) {\n  long long ans = 1;\n  while (p) {\n    if (p & 1) ans = ans * x % 1000000007;\n    x = x * x % 1000000007;\n    p = p >> 1;\n  }\n  return ans;\n}\nint main() {\n  long long n;\n  cin >> n;\n  if (n == 0)\n    cout << 1 << endl;\n  else {\n    long long w = mul(2, n - 1) % 1000000007;\n    cout << (w + w * w % 1000000007 * 2 % 1000000007) % 1000000007 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "MOD = 1000000007\nmod = 1000000007\nN = 100005\ninv = array of 100005 long long\nfunction powmod (get long long a and b, return long long)\n  res = 1\n  a = a modulo mod\n  while b = b >> 1\n    if b and 1 multiply res by a modulo mod\n    multiply a by a modulo mod\n  \n  return res\n\n\n  n = long long\n  read n\n  inv[1] = 1\n  for i=2 to N exclusive inv[i] = (MOD-MOD/i)*inv[MOD modulo i] modulo MOD\n  d=powmod(2, n)\n  ans = d*(d+1) modulo mod * inv[2] modulo mod\n  print ans\n\n",
        "long long MOD = 1e9 + 7;\nlong long mod = 1e9 + 7;\nconst int N = 100005;\nlong long inv[100005];\nlong long powmod(long long a, long long b) {\n  long long res = 1;\n  a %= mod;\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nint main() {\n  long long n;\n  cin >> n;\n  inv[1] = 1;\n  for (int i = 2; i < N; i++) { inv[i] = (MOD - MOD / i) * inv[MOD % i] % MOD; }\n  long long d = powmod(2, n);\n  long long ans = d * (d + 1) % mod * inv[2] % mod;\n  cout << ans << endl;\n}\n"
    ],
    [
        "create constant long long INF with INF = (1ll bitshift left 62) - 1\ncreate constant long long M with M = 1e9 + 7\ndeclare modularExponentiation with long longs x, y as arguments, returning long long\n  create integer res with res = 1\n  while y is greater than 0\n    if y bitwise and 1, set res to ( res * x ) % M\n    set y to y bitshift right 1\n    set x to ( x * x ) % M\n  \n  return res from function\n\n\n  create long long n\n  read n\n  create long long ans with ans = result of run modularExponentiation with 2, n as arguments\n  set ans to ( ans + ( ans * ans )) / 2\n  print ans % M print newline\n\n",
        "const long long INF = (1ll << 62) - 1;\nconst long long M = 1e9 + 7;\nlong long modularExponentiation(long long x, long long y) {\n  int res = 1;\n  while (y > 0) {\n    if (y & 1) res = (res * x) % M;\n    y = y >> 1;\n    x = (x * x) % M;\n  }\n  return res;\n}\nint main() {\n  long long n;\n  cin >> n;\n  long long ans = modularExponentiation(2, n);\n  ans = (ans + (ans * ans)) / 2;\n  cout << ans % M << endl;\n}\n"
    ],
    [
        "\n  n, a, b, c = int\n  read n then a then b then c\n  ans = int with ans = 0\n  for i = 0 to 4000 inclusive\n    for k = 0 to 4000 inclusive\n      sum = int with sum = a * i + b * k\n      if sum is greater than n then continue inner loop\n      if (n - sum) mod c equals 0 then set ans to max of ans and (i + k + (n - sum) / c)\n    \n  \n  print ans\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int ans = 0;\n  for (int i = 0; i <= 4000; i++) {\n    for (int k = 0; k <= 4000; k++) {\n      int sum = a * i + b * k;\n      if (sum > n) continue;\n      if ((n - sum) % c == 0) { ans = max(ans, (i + k + (n - sum) / c)); }\n    }\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "a = int array of size 3 with all values set to 0\ndp = int array of size 10000\n\n  n = int\n  read n then a[0] then a[1] then a[2]\n  set all values of dp to -100\n  set dp[0] to 0\n  for i = 0 to 3\n    for j = a[i] to n inclusive set dp[j] to max of dp[j] and dp[j - a[i]] + 1\n  \n  print dp[n]\n  \n\n",
        "int a[3] = {0};\nint dp[10000];\nint main() {\n  int n;\n  cin >> n >> a[0] >> a[1] >> a[2];\n  memset(dp, -100, sizeof(dp));\n  dp[0] = 0;\n  for (int i = 0; i < 3; i++) {\n    for (int j = a[i]; j <= n; j++) { dp[j] = max(dp[j], dp[j - a[i]] + 1); }\n  }\n  cout << dp[n] << endl;\n  return 0;\n}\n"
    ],
    [
        "create ints n, a, b and c\n\n  read n\n  declare integer array w with size 5\n  loop i from 1 to 3 inclusive, read input to w[i]\n  let e be int array with size 5000\n  set sizeof(e) bytes at the pointer e to -40\n  assign 0 to e[0]\n  loop i from 1 to 3 inclusive\n    for j = w[i] to n inclusive, assign max of e[j - w[i]] + 1 and e[j] to e[j]\n  \n  print e[n]\n\n",
        "int n, a, b, c;\nint main() {\n  cin >> n;\n  int w[5];\n  for (int i = 1; i <= 3; i++) cin >> w[i];\n  int e[5000];\n  memset(e, -40, sizeof(e));\n  e[0] = 0;\n  for (int i = 1; i <= 3; i++) {\n    for (int j = w[i]; j <= n; j++) { e[j] = max(e[j - w[i]] + 1, e[j]); }\n  }\n  cout << e[n] << endl;\n}\n"
    ],
    [
        "integers = a array that is size 4\nintegers = dp array size 4001\n\n  integers = n\n  read n,a[1],a[2],a[3]\n  create memset dp with a size of dp\n  set dp[0] to 0\n  for i = 1 to less than or equal to 3 do the following\n    for j = a[i] to less than or equal to n then dp[j] = the maximum out of dp[j] and dp[j-a[i]+1\n  \n  output dp[n]\n\n",
        "int a[4];\nint dp[4001];\nint main() {\n  int n;\n  cin >> n >> a[1] >> a[2] >> a[3];\n  memset(dp, -42, sizeof(dp));\n  dp[0] = 0;\n  for (int i = 1; i <= 3; i++) {\n    for (int j = a[i]; j <= n; j++) { dp[j] = max(dp[j], dp[j - a[i]] + 1); }\n  }\n  cout << dp[n] << endl;\n}\n"
    ],
    [
        "let a be int array with size 3 fileld with 0\ndeclare integer array dp with size 10000\n\n  declare integer variable n\n  read input to n, a[0], a[1] and a[2]\n  set sizeof(dp) bytes at the pointer dp to -9999\n  set dp[0] to 0\n  loop i from 0 to 3 exclusive\n    loop j from a[i] to n inclusive incrementing j, change dp[j] to max of dp[j] and dp[j - a[i]] + 1\n  \n  print dp[n]\n  \n\n",
        "int a[3] = {0};\nint dp[10000];\nint main() {\n  int n;\n  cin >> n >> a[0] >> a[1] >> a[2];\n  memset(dp, -9999, sizeof(dp));\n  dp[0] = 0;\n  for (int i = 0; i < 3; i++) {\n    for (int j = a[i]; j <= n; j++) { dp[j] = max(dp[j], dp[j - a[i]] + 1); }\n  }\n  cout << dp[n] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b, c = integers\n  read n, a, b, c\n  mx = integer with mx = -1\n  for i = n / a down to 0\n    for j = n / b down to 0\n      x = integer with x = n - (i * a + j * b)\n      if x modulo c is 0 and x >= 0, mx = max of mx and i + j + x / c\n    \n  \n  print mx\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int mx = -1;\n  for (int i = n / a; i >= 0; --i) {\n    for (int j = n / b; j >= 0; --j) {\n      int x = n - (i * a + j * b);\n      if (x % c == 0 and x >= 0) { mx = max(mx, i + j + x / c); }\n    }\n  }\n  cout << mx << endl;\n}\n"
    ],
    [
        "\n  n, a, b, c =integers\n  Read n, a, b, c\n  res = integer with 0\n  for i = 0 to n / a exclusive\n    for i = 0 to n / b exclusive\n      set k to n - i * a - j * b\n      if k is greater than 0 and k modulo c is 0, then set res to maximum value of res and i + j + k / c\n    \n  \n  print res and a new line\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int res = 0;\n  for (int i = 0; i <= n / a; i++) {\n    for (int j = 0; j <= n / b; j++) {\n      int k = n - i * a - j * b;\n      if (k >= 0 && k % c == 0) res = max(res, i + j + k / c);\n    }\n  }\n  cout << res << \"\\n\";\n}\n"
    ],
    [
        "\n  create integers n, a ,b, c, max with max = 0\n  read n read a read b read c\n  for x = 0 to a * x is less than or equal to n, incrementing x\n    for y = 0 to ( y * b ) + ( a * x ) is less than or equal to n, incrementing y\n      create integer z with z = (n - a * x - b * y) / c\n      if a * x + b * y + z * c is n\n        if x + y + z is greater than max, set max to x + y + z\n      \n    \n  \n  print max print newline\n  \n\n",
        "int main() {\n  int n, a, b, c, max = 0;\n  cin >> n >> a >> b >> c;\n  for (int x = 0; a * x <= n; x++) {\n    for (int y = 0; (y * b) + (a * x) <= n; y++) {\n      int z = (n - a * x - b * y) / c;\n      if (a * x + b * y + z * c == n) {\n        if (x + y + z > max) max = x + y + z;\n      }\n    }\n  }\n  cout << max << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, a, b, c be integers\n  read n, a, b, c\n  let x, y, z, p , i be integers with p = 0\n  i is equal to minimum of a , minimum of b and c\n  i is equal to n / i\n  for x is equal to i , x >= 0 , decrease x by 1\n    for y = 0 to i inclusive\n      z is equal to absolute value of (n - (a * x + b * y)) / c\n      if a * x + b * y + c * z is equal to n , p = maximum of p and x + y + z\n    \n  \n  print p and newline\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  int x, y, z, p = 0, i;\n  i = min(a, min(b, c));\n  i = n / i;\n  for (x = i; x >= 0; x--) {\n    for (y = 0; y <= i; y++) {\n      z = abs((n - (a * x + b * y)) / c);\n      if ((a * x + b * y + c * z) == n) { p = max(p, x + y + z); }\n    }\n  }\n  cout << p << endl;\n}\n"
    ],
    [
        "arr = integer array of size 5, n = integer\ndp = integer array of size 4004, mn = integer\nin the function fun that takes integer rem and returns integer\n  if rem is 0, return 0\n  if rem < mn, return -11111111\n  if dp[rem] is not -1, return dp[rem]\n  ret = integer with ret = -11111111\n  for i = 0 to 3, ret = max(ret, 1 + fun(rem - arr[i]))\n  return dp[rem] = ret\n\n\n  set all contents of dp to -1\n  read n\n  mn = 100000000\n  for i = 0 to 2\n    read arr[i]\n    mn = min of arr[i] and mn\n  \n  print fun(n)\n\n",
        "int arr[5], n;\nint dp[4004], mn;\nint fun(int rem) {\n  if (rem == 0) return 0;\n  if (rem < mn) return -11111111;\n  if (dp[rem] != -1) return dp[rem];\n  int ret = -11111111;\n  for (int i = 0; i < 3; i++) { ret = max(ret, 1 + fun(rem - arr[i])); }\n  return dp[rem] = ret;\n}\nint main() {\n  memset(dp, -1, sizeof dp);\n  cin >> n;\n  mn = 100000000;\n  for (int i = 0; i < 3; i++) {\n    cin >> arr[i];\n    mn = min(arr[i], mn);\n  }\n  cout << fun(n) << endl;\n}\n"
    ],
    [
        "create long longs n, a, b and c\nlet dp be 2d long long array with size 5006 by 5005\nlong long function result with long long arguments total and cnt\n  if total = 0 return cnt\n  declare long long variables d, e and f = 0\n  if dp[total][cnt] is not -1m return dp[total][cnt]\n  if a <= total, assign result(total - a, cnt + 1) to d\n  if b <= total, assign result(total - b, cnt + 1) to e\n  if c <= total, assign result(total - c, cnt + 1) to f\n  return dp[total][cnt] = max of d and max(e, f)\n\n\n  set value of sizeofdp bytes at the pointer dp to -1\n  read input to n, a, b and c\n  declare long long variable ans = result(n, 0)\n  print ans\n\n",
        "long long n, a, b, c;\nlong long dp[5006][5005];\nlong long result(long long total, long long cnt) {\n  if (total == 0) return cnt;\n  long long d = 0, e = 0, f = 0;\n  if (dp[total][cnt] != -1) return dp[total][cnt];\n  if (a <= total) d = result(total - a, cnt + 1);\n  if (b <= total) e = result(total - b, cnt + 1);\n  if (c <= total) f = result(total - c, cnt + 1);\n  return dp[total][cnt] = max(d, max(e, f));\n}\nint main() {\n  memset(dp, -1, sizeof dp);\n  cin >> n >> a >> b >> c;\n  long long ans = result(n, 0);\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  create integer n, create integer array a with size 3\n  read n read a[0] read a[1] read a[2]\n  sort elements from a to a + 3\n  create integers i, j, k, ans with i = 0, j = 0, k = 0, ans = -1\n  for i = 0 to a * a[2] is less than n + 1, incrementing i\n    for j = 0 to i * a[2] + j * a[1] is less than n + 1, incrementing j\n      if (n - i * a[2] - j * a[1]) % a[0] is 0, set ans to maximum of ans and i + j + (n - i * a[2] - j * a[1]) / a[0])\n    \n  \n  print ans print newline\n\n",
        "int main() {\n  int n, a[3];\n  cin >> n >> a[0] >> a[1] >> a[2];\n  sort(a, a + 3);\n  int i = 0, j = 0, k = 0, ans = -1;\n  for (i = 0; i * a[2] < n + 1; i++) {\n    for (j = 0; i * a[2] + j * a[1] < n + 1; j++) {\n      if ((n - i * a[2] - j * a[1]) % a[0] == 0) { ans = max(ans, i + j + (n - i * a[2] - j * a[1]) / a[0]); }\n    }\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "declare const int N = 4005\ndeclare const int inf = 1e9\ncreate const long long INF = 1e18\ndeclare const double PI = acos(-1.0)\ndeclare const double EPS = 1e-8\ncreate const int MOD = 1000000007\ndeclare integer variables n, a, b and c\ndeclare int array dp with size N\n\n  read n, a, b and c\n  loop i from 0 to n inclusive, assign -inf to dp[i]\n  assign 0 to dp[0]\n  for i = 1 to n inclusive\n    if a <= i, set dp[i] to max of dp[i] and dp[i - a] + 1\n    if b <= i, assign max of dp[i] and dp[i - b] + 1 to dp[i]\n    if c <= i, change dp[i] to max of dp[i] and dp[i - c] + 1\n  \n  print dp[n] and \"\\n\"\n  \n\n",
        "const int N = 4005;\nconst int inf = 1e9;\nconst long long INF = 1e18;\nconst double PI = acos(-1.0);\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint n, a, b, c;\nint dp[N];\nint main() {\n  cin >> n >> a >> b >> c;\n  for (int i = 0; i <= n; i++) dp[i] = -inf;\n  dp[0] = 0;\n  for (int i = 1; i <= n; i++) {\n    if (a <= i) dp[i] = max(dp[i], dp[i - a] + 1);\n    if (b <= i) dp[i] = max(dp[i], dp[i - b] + 1);\n    if (c <= i) dp[i] = max(dp[i], dp[i - c] + 1);\n  }\n  cout << dp[n] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "N = constant integer with N = 1e5 + 7\narr = array of size N\n\n  n, a, b, c = integers\n  read n, a, b, c\n  set all contents of arr to 0 after casting to integer\n  arr[a] = arr[b] = arr[c] = 1\n  for i = (cast to integer)(1) to (cast to integer)(n)\n    if i >= a and arr[i - a], arr[i] = max(arr[i], arr[i - a] + 1)\n    if i >= b and arr[i - b], arr[i] = max(arr[i], arr[i - b] + 1)\n    if i >= c and arr[i - c], arr[i] = max(arr[i], arr[i - c] + 1)\n  \n  print arr[n]\n\n",
        "const int N = 1e5 + 7;\nint arr[N];\nint main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  memset(arr, (int)(0), sizeof(arr));\n  arr[a] = arr[b] = arr[c] = 1;\n  for (int i = (int)(1); i <= (int)(n); i++) {\n    if (i >= a and arr[i - a]) arr[i] = max(arr[i], arr[i - a] + 1);\n    if (i >= b and arr[i - b]) arr[i] = max(arr[i], arr[i - b] + 1);\n    if (i >= c and arr[i - c]) arr[i] = max(arr[i], arr[i - c] + 1);\n  }\n  cout << arr[n] << endl;\n}\n"
    ],
    [
        "p = array of 3 integers\ndp = 2d array of size [4010][4010]\n\n  n = integer\n  read n\n  for i = 0 to 2, read p[i]\n  minp, maxp = integers with minp = min(min(p[0], p[1]), p[2]), maxp = max(max(p[0], p[1]), p[2])\n  dp[0][0] = true\n  for i = minp to n\n    for k = 1 to i / minp\n      for j = 0 to 2\n        if i >= p[j], dp[i][k] = dp[i][k] binary or dp[i - p[j]][k - 1]\n  for i = n / minp down to 1\n    if dp[n][i]\n      print i\n      break loop\n    \n\n",
        "int p[3];\nbool dp[4000 + 10][4000 + 10];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < 3; i++) cin >> p[i];\n  int minp = min(min(p[0], p[1]), p[2]), maxp = max(max(p[0], p[1]), p[2]);\n  dp[0][0] = true;\n  for (int i = minp; i <= n; i++)\n    for (int k = 1; k <= i / minp; k++)\n      for (int j = 0; j < 3; j++)\n        if (i >= p[j]) dp[i][k] |= dp[i - p[j]][k - 1];\n  for (int i = n / minp; i >= 1; i--)\n    if (dp[n][i]) {\n      cout << i << endl;\n      break;\n    }\n}\n"
    ],
    [
        "create integers a, b and c\ndeclare int array memo with size 4001\nfunction solve with int argument i that returns integer\n  if i = 0, return 0\n  if memo[i] != - 1, return memo[i]\n  create integers opt1, opt2 and opt3 = -1e9\n  if i >= a, change opt1 to solve(i - a) + 1\n  if i >= b, change opt2 to solve(i - b) + 1\n  if i >= c, change opt3 to solve(i - c) + 1\n  return memo[i] = max of opt1 and (max of opt2 and opt3)\n\n\n  set first sizeof memo bytes at the pointer memo to -1\n  declare integer variable n\n  read n, a, b and c\n  print result of solve(n)\n  \n\n",
        "int a, b, c;\nint memo[4001];\nint solve(int i) {\n  if (i == 0) return 0;\n  if (memo[i] != -1) return memo[i];\n  int opt1 = -1e9, opt2 = -1e9, opt3 = -1e9;\n  if (i >= a) { opt1 = solve(i - a) + 1; }\n  if (i >= b) { opt2 = solve(i - b) + 1; }\n  if (i >= c) { opt3 = solve(i - c) + 1; }\n  return memo[i] = max(opt1, max(opt2, opt3));\n}\nint main() {\n  memset(memo, -1, sizeof memo);\n  int n;\n  cin >> n >> a >> b >> c;\n  cout << solve(n) << endl;\n  return 0;\n}\n"
    ],
    [
        "declare cut_ribbon with integers n, a, b, c as arguments\n  create integer array arr with size n + 1\n  set bytes from arr to size of arr to value 0\n  if a is less than or equal to n, set arr[a] to 1\n  if b is less than or equal to n, set arr[b] to 1\n  if c is less than or equal to n, set arr[c] to 1\n  for i = 0 to n inclusive\n    if i is greater than a and arr[i-a] is not 0, set arr[i] to maximum of arr[i] and arr[i-a]+1\n    if i is greater than b and arr[i-b] is not 0, set arr[i] to maximum of arr[i] and arr[i-b]+1\n    if i is greater than c and arr[i-c] is not 0, set arr[i] to maximum of arr[i] and arr[i-c] + 1\n  \n  return arr[n] from function\n\n\n  create integers n, a, b, c\n  read n read a read b read c\n  print result of run cut_ribbon with n, a, b, c as arguments, print newline\n  \n\n",
        "int cut_ribbon(int n, int a, int b, int c) {\n  int arr[n + 1];\n  memset(arr, 0, sizeof(arr));\n  if (a <= n) { arr[a] = 1; }\n  if (b <= n) { arr[b] = 1; }\n  if (c <= n) { arr[c] = 1; }\n  for (int i = 0; i <= n; i++) {\n    if (i > a && arr[i - a] != 0) { arr[i] = max(arr[i], arr[i - a] + 1); }\n    if (i > b && arr[i - b] != 0) { arr[i] = max(arr[i], arr[i - b] + 1); }\n    if (i > c && arr[i - c] != 0) { arr[i] = max(arr[i], arr[i - c] + 1); }\n  }\n  return arr[n];\n}\nint main() {\n  int n, a, b, c;\n  cin >> n >> a >> b >> c;\n  cout << cut_ribbon(n, a, b, c) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  x, y, r, ans = integers\n  read x, y, r\n  if 2 * r > min(x, y)\n    print Second\n  else\n    print First\n  \n\n",
        "int main() {\n  int x, y, r, ans;\n  cin >> x >> y >> r;\n  if (2 * r > min(x, y))\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  l, b, r = integers\n  read l, b, r\n  d, plates = integers with d = 2 * r, plates = 0\n  if min(l, b) < d\n    print Second\n  else\n    print First\n\n",
        "int main() {\n  int l, b, r;\n  cin >> l >> b >> r;\n  int d = 2 * r, plates = 0;\n  if (min(l, b) < d)\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n}\n"
    ],
    [
        "\n  a, b, c = int\n  read a then b then c\n  if a and b are both greater or equal to 2 * c\n    print \"First\"\n  else\n    print \"Second\"\n  print newline\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  if (a >= 2 * c && b >= 2 * c)\n    cout << \"First\";\n  else\n    cout << \"Second\";\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAXN with MAXN = 100000 + 7\ncreate constant integer mod with mod = 23333333\ncreate integers a, b, r\n\n  read a read b read r\n  if a is less than 2 * r or b is less than 2 * r\n    print \"Second\" print newline\n  else\n    print \"First\" print newline\n  \n\n",
        "const int MAXN = 100000 + 7;\nconst int mod = 23333333;\nint a, b, r;\nint main() {\n  cin >> a >> b >> r;\n  if (a < 2 * r || b < 2 * r)\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n  return 0;\n}\n"
    ],
    [
        "str=array of 30100 strings\na,b,r=int\n\n  read a,b,r\n  multiply r by 2\n  if r <= a and r <= b\n    print \"First\"\n  else\n    print \"Second\"\n\n",
        "string str[30100];\nint a, b, r;\nint main() {\n  cin >> a >> b >> r;\n  r *= 2;\n  if (r <= a && r <= b)\n    puts(\"First\");\n  else\n    puts(\"Second\");\n}\n"
    ],
    [
        "integers = t integer pi = 3.14\n\n  integers = a,b,r\n  read a,b,r\n  if 2 * r is greater than min(a, b then do the following\n    output Second\n  else\n    integers = cnt = 0\n    integers = ans = max(a,b)\n    integers = res = min(a,b)\n    if 1 is true do the following\n      set ans to maximum of ans and res\n      set res to minimum and ans and res\n      cnt equals cnt plus res / (2 * r)\n      subtract (res / (2 * r)) * 2 * r from ans\n      integers = minn = minimum of ans or res\n      if minn is less than 2 * r then do the following break\n    \n    if cnt is greater than or equal to 1 then do the following\n      output First\n    else\n      output Second\n  \n  \n\n",
        "const int pi = 3.14;\nint main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (2 * r > min(a, b)) {\n    cout << \"Second\" << endl;\n  } else {\n    int cnt = 0;\n    int ans = max(a, b);\n    int res = min(a, b);\n    while (1) {\n      ans = max(ans, res);\n      res = min(ans, res);\n      cnt += res / (2 * r);\n      ans -= (res / (2 * r)) * 2 * r;\n      int minn = min(ans, res);\n      if (minn < 2 * r) break;\n    }\n    if (cnt >= 1)\n      cout << \"First\" << endl;\n    else\n      cout << \"Second\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n,k,l = long long integers\n  input n,k,l\n  if 2 * l is less than or equal to minimum of n and k then do the following\n    output First\n  else\n    output Second\n  \n\n",
        "int main() {\n  long long int n, k, l;\n  cin >> n >> k >> l;\n  if (2 * l <= min(n, k))\n    cout << \"First\" << endl;\n  else\n    cout << \"Second\" << endl;\n  return 0;\n}\n"
    ],
    [
        "a, b, r = integers\n\n  Read a, b, r\n  if a is less than 2 * r OR b is less than 2 * r\n    print Second and a new line\n  else do the following\n    print First and a new line\n  \n\n",
        "int a, b, r;\nint main() {\n  cin >> a >> b >> r;\n  if (a < 2 * r || b < 2 * r)\n    cout << \"Second\\n\";\n  else\n    cout << \"First\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n1, n2, r\n  read n1 read n2 read r\n  create integer r2 with r2 = r + r\n  if n1 is greater than or equal to r2 and n2 is greater than or equal to r2\n    print \"First\\n\"\n  else\n    print \"Second\\n\"\n  \n\n",
        "int main() {\n  int n1, n2, r;\n  cin >> n1 >> n2 >> r;\n  int r2 = r + r;\n  if (n1 >= r2 && n2 >= r2)\n    cout << \"First\\n\";\n  else\n    cout << \"Second\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, r = int\n  read a then b then r\n  set r to r * 2\n  if a or b is less than r\n    print \"Second\"\n  else\n    print \"First\"\n  \n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  r *= 2;\n  if (a < r || b < r) {\n    cout << \"Second\" << endl;\n  } else {\n    cout << \"First\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, r, m\n  read a read b read r\n  if a is greater than b\n    set m to b\n  else\n    set m to a\n  if m is greater than or equal to 2 * r\n    print \"First\" print newline\n  else\n    print \"Second\" print newline\n  \n\n",
        "int main() {\n  int a, b, r, m;\n  cin >> a >> b >> r;\n  if (a > b)\n    m = b;\n  else\n    m = a;\n  if (m >= 2 * r)\n    cout << \"First\" << endl;\n  else\n    cout << \"Second\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, r =integers\n  Read a, b, r\n  if minimum value of a and b is greater than or equal to 2 * r\n    print First and a new line\n  else do the following\n    print Second and a new line\n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (min(a, b) >= 2 * r) {\n    cout << \"First\" << endl;\n  } else\n    cout << \"Second\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int min, height, width, radius\n  while read height, width, radius\n    if heigth less than width\n      set min to height\n    else\n      min = width\n    assign radius * 2 to radius\n    if min >= radius\n      print First\n    else\n      print Second\n  \n  \n\n",
        "int main() {\n  int min, height, width, radius;\n  while (cin >> height >> width >> radius) {\n    if (height < width)\n      min = height;\n    else\n      min = width;\n    radius = radius * 2;\n    if (min >= radius)\n      cout << \"First\" << endl;\n    else\n      cout << \"Second\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  define ints a, b, and r\n  read a, b, r\n  if 2 r <= a and 2 r <= b\n    print First and newline\n  else...\n    print Second followed by newline\n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (2 * r <= a && 2 * r <= b)\n    cout << \"First\\n\";\n  else\n    cout << \"Second\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  integers = a,b,r\n  read a,b,r\n  multiply r by 2\n  if r is greater than minimum of a or b then proceed with the following\n    output Second\n  else\n    output First\n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  r *= 2;\n  if (r > min(a, b))\n    cout << \"Second\" << '\\n';\n  else\n    cout << \"First\" << '\\n';\n}\n"
    ],
    [
        "\n  define ints n, a, b, c\n  read a, b, c\n  if a < c * 2 or b < c * 2\n    print \"Second\" and newline\n  otherwise\n    print \"First\" and a newline\n\n",
        "int main() {\n  int n, a, b, c;\n  cin >> a >> b >> c;\n  if (a < c * 2 || b < c * 2)\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n}\n"
    ],
    [
        "\n  n, m, r = integers\n  while read n, m, r\n    if r * 2 <= n and r * 2 <= m\n      print First\n    else\n      print Second\n  \n\n",
        "int main() {\n  int n, m, r;\n  while (cin >> n >> m >> r) {\n    if (r * 2 <= n && r * 2 <= m)\n      cout << \"First\" << endl;\n    else\n      cout << \"Second\" << endl;\n  }\n}\n"
    ],
    [
        "a, b, r = integers\n\n  Read a, b, r\n  if a is less than r * 2 OR b is less than r * 2\n    print Second and a new line\n  else do the following\n    print First and a new line\n  \n\n",
        "int a, b, r;\nint main() {\n  cin >> a >> b >> r;\n  if (a < r * 2 || b < r * 2)\n    cout << \"Second\" << endl;\n  else\n    cout << \"First\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, r\n  read a read b read r\n  if a is greater than or equal to b\n    if ( 2 * r is less than or equal to b )\n      print \"First\\n\"\n    else\n      print \"Second\\n\"\n  else\n    if ( 2 * r is less than or equal to a )\n      print \"First\\n\"\n    else\n      print \"Second\\n\"\n  \n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (a >= b) {\n    if (2 * r <= b)\n      cout << \"First\\n\";\n    else\n      cout << \"Second\\n\";\n  } else {\n    if (2 * r <= a)\n      cout << \"First\\n\";\n    else\n      cout << \"Second\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  x, y, r = integers\n  read x, y, r\n  if x < r * 2 or y < r * 2\n    print Second\n  else\n    print First\n  \n\n",
        "int main() {\n  int x, y, r;\n  cin >> x >> y >> r;\n  if (x < r * 2 || y < r * 2)\n    cout << \"Second\\n\";\n  else\n    cout << \"First\\n\";\n  return 0;\n}\n"
    ],
    [
        "create long long int mod = 1000000007\n\n  let a, b and r be integers\n  read a, b and r\n  if 2 * r is greater than min(a, b)\n    print Second\n  else\n    print First\n  \n  \n\n",
        "long long int mod = 1000000007;\nint main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (2 * r > min(a, b)) {\n    cout << \"Second\" << endl;\n  } else {\n    cout << \"First\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, r = integers\n  read a, b, r\n  if 2 * r <= min(a, b)\n    print First\n  else\n    print Second\n  \n\n",
        "int main() {\n  int a, b, r;\n  cin >> a >> b >> r;\n  if (2 * r <= min(a, b))\n    cout << \"First\" << endl;\n  else\n    cout << \"Second\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let k, b, n, t be long integers\n  read k, b, n, t\n  let the value of long integer z is equal to k + b\n  let g be a integer with value g is equal to n\n  while (z is less than t and g is greater than 0)\n    decrease g by 1\n    let the value of z is equal to z * k + b\n  \n  if (z is equal to t) , decrease g by 1\n  print g and newline\n\n",
        "int main() {\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long z = k + b;\n  int g = n;\n  while (z < t && g > 0) {\n    g--;\n    z = z * k + b;\n  }\n  if (z == t) { g--; }\n  cout << g << endl;\n}\n"
    ],
    [
        "\n  create long long u = 1\n  create long long k, b, n and t\n  read k, b, n and t\n  if k = 1\n    create long long x = 1\n    for i = 1 to n inclusive\n    create long long variable r = t\n    create long long variable ans = 0\n    while r is less than x\n      increase ans by one\n      increase r by b\n    \n    print ans\n    \n  \n  create long long r = 0\n  while u * (k - 1 + b) <= (k * t - t + b)\n    multiply u by k\n    increase r by one\n  \n  print max of n - r + 1 and 0LL\n\n",
        "int main() {\n  long long u = 1;\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  if (k == 1) {\n    long long x = 1;\n    for (long long i = 1; i <= n; i++) x += b;\n    long long r = t;\n    long long ans = 0;\n    while (r < x) {\n      ans++;\n      r += b;\n    }\n    cout << ans << endl;\n    return 0;\n  }\n  long long r = 0;\n  while (u * (k - 1 + b) <= (k * t - t + b)) {\n    u *= k;\n    r++;\n  }\n  cout << max(n - r + 1, 0LL) << endl;\n}\n"
    ],
    [
        "\n  l, b, n, t = long long\n  read k, b, n, t\n  set x = 1 and cnt = -1\n  for i = 1 to n inclusive\n    set x = k * x + b\n    if x is greater than t\n      set cnt = i - 1\n      stop the loop\n    \n  \n  if cnt is equal to -1\n    print 0\n  otherwise\n    print n - cnt\n  \n\n",
        "int main() {\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long x = 1, cnt = -1;\n  for (long long i = 1; i <= n; ++i) {\n    x = k * x + b;\n    if (x > t) {\n      cnt = i - 1;\n      break;\n    }\n  }\n  if (cnt == -1)\n    cout << 0 << endl;\n  else\n    cout << n - cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long k, b, n, z\n  read k, b, n and z\n  set x = 1\n  while n and k*x+b equal to or greater than z\n    assign k*x+b to x\n    decrement n\n  \n  print n and a new line\n  \n\n",
        "int main() {\n  long long k, b, n, z;\n  cin >> k >> b >> n >> z;\n  int x = 1;\n  while (n && k * x + b <= z) {\n    x = k * x + b;\n    n--;\n  }\n  cout << n << endl;\n  return 0;\n}\n"
    ],
    [
        "k, b, n, t, ans = integers\nassign 1 to m\n\n  read k, b, n, t\n  while m equal to or greater than t, assign m*k+b to m, increment ans\n  if n >= ans\n    print n - ans + 1\n  otherwise\n    print 0 and a new line\n  \n\n",
        "int k, b, n, t, ans;\nlong long m = 1;\nint main() {\n  cin >> k >> b >> n >> t;\n  while (m <= t) m = m * k + b, ans++;\n  if (n >= ans)\n    cout << n - ans + 1 << endl;\n  else\n    cout << 0 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare double variables k, b, n and t\n  read k, b, n and t\n  declare integer x = 0\n  declare double variable dub = (t *(k - 1) + b) / (b + k - 1)\n  if k = 1\n    dub = (t - 1) / b\n    set value of x to dub casted to integer\n    if x is greater than n\n  else\n    for i = 1 to n + 1 inclusive\n      if pow(k, i) >= dub + 1\n        set value of x to i - 1\n        stop the loop\n      \n      if i = n + 1, assign value of n to x\n    \n  \n  create integer ans = n - x\n  print ans\n  \n\n",
        "int main() {\n  double k, b, n, t;\n  cin >> k >> b >> n >> t;\n  int x = 0;\n  double dub = (t * (k - 1) + b) / (b + k - 1);\n  if (k == 1) {\n    dub = (t - 1) / b;\n    x = (int)dub;\n    if (x > n) { x = n; }\n  } else {\n    for (int i = 1; i <= n + 1; i++) {\n      if (pow(k, i) >= (int)dub + 1) {\n        x = i - 1;\n        break;\n      }\n      if (i == n + 1) { x = n; }\n    }\n  }\n  int ans = n - x;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let c1, c2, x, k, i, b, n, t, cnt be long long with cnt = 0\n  read k, b, n, t\n  set c1 = b + t * (k - 1)\n  set c2 = b + k - 1\n  set cnt = 1\n  set x = n\n  if k not equal to 1 do the following\n    for i = n iterate while i is less than or equal to 0 having i decrease by 1 after each iteration\n      if c1 is greater or equal to cnt * c2 do the following\n        set x = i\n      else do the following\n        break out of the iteration loop\n      set cnt = cnt * k\n    \n    print x and one newline\n  else do the following\n    for i = 0 to n inclusive\n      if i * b is greater or equal to 1 + n * b - t break out of the iteration loop\n    \n    print i and one newline\n  \n  \n\n",
        "int main() {\n  long long c1, c2, x, k, i, b, n, t, cnt = 0;\n  cin >> k >> b >> n >> t;\n  c1 = b + t * (k - 1);\n  c2 = b + k - 1;\n  cnt = 1;\n  x = n;\n  if (k != 1) {\n    for (i = n; i >= 0; i--) {\n      if (c1 >= cnt * c2)\n        x = i;\n      else\n        break;\n      cnt *= k;\n    }\n    cout << x << endl;\n  } else {\n    for (i = 0; i <= n; i++) {\n      if (i * b >= 1 + n * b - t) break;\n    }\n    cout << i << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in the function solve that takes long long k, b, n, t and returns long long\n  if k is 1\n    low, high = long long with low = -1, high = n\n    while high - low > 1\n      mid = long long with mid = (low + high) / 2\n      if 1 - t + b * (n - mid) <= 0\n        high = mid\n      else\n        low = mid\n      \n    \n    return high\n  \n  answ = long long with answ = n\n  pow = __float128 with pow = 1\n  while answ > 0 and (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0\n    pow = pow * k\n    decrement answ\n  \n  return answ\n\n\n  k, b, n, t = long long\n  while read k, b, n, t, print solve(k, b, n, t)\n  \n\n",
        "long long solve(long long k, long long b, long long n, long long t) {\n  if (k == 1) {\n    long long low = -1, high = n;\n    while (high - low > 1) {\n      long long mid = (low + high) / 2;\n      if (1 - t + b * (n - mid) <= 0) {\n        high = mid;\n      } else {\n        low = mid;\n      }\n    }\n    return high;\n  }\n  long long answ = n;\n  __float128 pow = 1;\n  while (answ > 0 && (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0) {\n    pow *= k;\n    answ--;\n  }\n  return answ;\n}\nint main() {\n  long long k, b, n, t;\n  while (cin >> k >> b >> n >> t) { cout << solve(k, b, n, t) << endl; }\n  return 0;\n}\n"
    ],
    [
        "\n  k, b, n, t, i, j, m, ans, r, x, xx = long long int with m = 0, x = 1, xx = 0\n  read k, b, n, t\n  for i = 1 increment i\n    r = (x * k) + b\n    if r <= t\n      increment m\n    else\n      break loop\n    x = r\n  \n  ans = n - m\n  ans = max of xx and ans\n  print ans\n\n",
        "int main() {\n  long long int k, b, n, t, i, j, m = 0, ans, r, x = 1, xx = 0;\n  cin >> k >> b >> n >> t;\n  for (i = 1;; i++) {\n    r = (x * k) + b;\n    if (r <= t)\n      m++;\n    else\n      break;\n    x = r;\n  }\n  ans = n - m;\n  ans = max(xx, ans);\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  create long long integers k, b, n and t\n  read k, b, n and t\n  declare long long integer variable num = 1\n  declare long long integer variable index = 0\n  while num <= t\n    num = k * num + b\n    increment index\n  \n  decrease index\n  print max of 0ll and n - index and '\\n'\n\n",
        "int main() {\n  long long int k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long int num = 1;\n  long long int index = 0;\n  while (num <= t) {\n    num = k * num + b;\n    index++;\n  }\n  index--;\n  cout << max(0ll, n - index) << '\\n';\n}\n"
    ],
    [
        "set constant integer M = 100 + 10\n\n  create long long integer k, b, n, t\n  read k, b, n, t\n  if k = 1\n    set z = 1 + n*b\n    if z is equal to or less than t\n      print 0\n    otherwise\n      set res = z - t\n      ans = res / b + (res modulo b different from 0)\n      print and and a new line\n    \n  otherwise\n    set long long integer num1 = t * (k - 1) + b\n    num2= k - 1 + b\n    set num3 = num1/num2\n    set num1 equal to 1\n    set integer tm = 0\n    while num*k is equal to or less than num3\n      set num = num * k\n      increment tm\n    \n    set m = n - tm\n    m = max between m and 0\n    print m\n  \n  \n\n",
        "const int M = 100 + 10;\nint main() {\n  long long int k, b, n, t;\n  cin >> k >> b >> n >> t;\n  if (k == 1) {\n    long long int z = 1 + n * b;\n    if (z <= t) {\n      cout << \"0\" << endl;\n    } else {\n      long long int res = z - t;\n      long long int ans = res / b + (res % b != 0);\n      cout << ans << endl;\n    }\n  } else {\n    long long int num1 = t * (k - 1) + b;\n    long long int num2 = k - 1 + b;\n    long long int num3 = num1 / num2;\n    long long int num = 1;\n    int tm = 0;\n    while (num * k <= num3) {\n      num = num * k;\n      tm++;\n    }\n    int m = n - tm;\n    m = max(m, 0);\n    cout << m << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create long long ans, set k, b, n, t, x to 1\n\n  read k, b, n and t\n  while x <=t, set x=x * k + b, increment ans\n  print max between 011 and n - ans + 1\n  \n\n",
        "long long k, b, n, t, x = 1, ans;\nint main() {\n  cin >> k >> b >> n >> t;\n  while (x <= t) x = x * k + b, ans++;\n  cout << max(0ll, n - ans + 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  k, b, n, t = long longs\n  read k, b, n and t\n  declare cnt as long long set to 1\n  while c less than or equal to t\n    set cnt to cnt * k + b\n    decrement n\n  \n  print max(0LL, n + 1)\n  \n\n",
        "int main() {\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long cnt = 1;\n  while (cnt <= t) {\n    cnt = cnt * k + b;\n    n--;\n  }\n  cout << max(0LL, n + 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "long long function bigmod with long long arguments a, b and m\n  if b = 0\n  x = bigmod of a, b / 2 and m\n  x = (x % m * x % m) % m\n  if b % 2) x = (x % m * a % m\n  return x % m\n\nlong long function po with long long arguments a and b\n  return 1 if a = 1\n  declare long long r = 1\n  decrement b and loop, while b > 0; multiply r by a in that loop\n  return r\n\n\n  declare long long variables k, b, n, t and s where s = 0\n  read k, b, n and t\n  for i = 0 to n inclusive\n    assign value of s + po(k, i) to new long long v\n    if v >= t\n      if v is greater than t\n        print n - i + 1\n      else\n        print n - i\n      \n    \n    increase s by b * po(k, i)\n  \n  print \"0\"\n\n",
        "long long bigmod(long long a, long long b, long long m) {\n  if (b == 0) return 1 % m;\n  long long x = bigmod(a, b / 2, m);\n  x = (x % m * x % m) % m;\n  if (b % 2) x = (x % m * a % m) % m;\n  return x % m;\n}\nlong long po(long long a, long long b) {\n  if (a == 1) return 1;\n  long long r = 1;\n  while (b--) r *= a;\n  return r;\n}\nint main() {\n  long long k, b, n, t, s = 0;\n  cin >> k >> b >> n >> t;\n  for (int i = 0; i <= n; i++) {\n    long long v = s + po(k, i);\n    if (v >= t) {\n      if (v > t)\n        cout << n - i + 1 << endl;\n      else\n        cout << n - i << endl;\n      return 0;\n    }\n    s += b * po(k, i);\n  }\n  puts(\"0\");\n}\n"
    ],
    [
        "\n  k, b, n, t =integers\n  Read k, b, n, t\n  sum=integer with 1\n  cnt=integer with 0\n  while sum is less than or equal to t\n    set sum to sum * k + b\n    increment cnt\n  \n  if cnt is greater than n\n    print 0 and a new line\n  else do the following\n    print n - cnt + 1 and a new line\n  \n\n",
        "int main() {\n  long long k, b, n, t;\n  cin >> k >> b >> n >> t;\n  long long sum = 1;\n  int cnt = 0;\n  while (sum <= t) {\n    sum = sum * k + b;\n    cnt++;\n  }\n  if (cnt > n)\n    cout << 0 << endl;\n  else\n    cout << n - cnt + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "long long function solve with long long arguments k, b, n and t\n  if k = 1\n    declare long longs low = -1 and high = n\n    while high - low is greater than 1\n      declare long long variable mid = (low + high) / 2\n      if 1 - t + b * (n - mid) <= 0\n        assign value of mid to high\n      else\n        assign value of mid to low\n      \n    \n    return high\n  \n  declare long long variable answ = n\n  declare __float128 variable pow = 1\n  while answ > 0 && (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0\n    multiply pow by k\n    decrease answ\n  \n  return answ\n\n\n  declare long long variables k, b, n and t\n  while car read k, b, n and t, print solve(k, b, n, t)\n  \n\n",
        "long long solve(long long k, long long b, long long n, long long t) {\n  if (k == 1) {\n    long long low = -1, high = n;\n    while (high - low > 1) {\n      long long mid = (low + high) / 2;\n      if (1 - t + b * (n - mid) <= 0) {\n        high = mid;\n      } else {\n        low = mid;\n      }\n    }\n    return high;\n  }\n  long long answ = n;\n  __float128 pow = 1;\n  while (answ > 0 && (k - 1) * (pow * k - t) + b * (pow * k - 1) <= 0) {\n    pow *= k;\n    answ--;\n  }\n  return answ;\n}\nint main() {\n  long long k, b, n, t;\n  while (cin >> k >> b >> n >> t) { cout << solve(k, b, n, t) << endl; }\n  return 0;\n}\n"
    ],
    [
        "point, num_diff and num are maps from string to int\ndeclare string variable s\nname is an array of strings with size 56\nboolean function cmp with string arguments s1 and s2\n  if point[s1] != point[s2] return point[s1] > point[s2]\n  if num_diff[s1] != num_diff[s2] return num_diff[s1] > num_diff[s2]\n  return num[s1] > num[s2]\n\nlet s1 and s2 be strings\ndeclare integer variable n\nnum1 and num2 are integers\nc = character\n\n  read n\n  for i = 1 to n inclusive read name[i]\n  for integer i = 1 to (n * (n - 1)) >> 1 inclusive\n    read s, num1, c and num2\n    s1 = substring of s from the start to the first character '-'\n    s2 = substring of s from the first character '-' to the end\n    if num1 is greater than num2, add 3 to point[s1]\n    if num1 is less than num2, add 3 to point[s2]\n    if num1 = num2\n      increase point[s1]\n      increase point[s2]\n    \n    increase num[s1] by num1\n    increase num[s2] by num2\n    increase num_diff[s1] by num1 - num2\n    increase num_diff[s2] by num2 - num1\n  \n  sort name from name + 1 to name + n + 1 using comparator cmp\n  sort name from name + 1 to name + (n / 2 + 1) using comparator cmp\n  for integer i = 1 to (n >> 1) inclusive print name[i] and a new line\n  \n\n",
        "map<string, int> point, num_diff, num;\nstring s;\nstring name[56];\nbool cmp(string s1, string s2) {\n  if (point[s1] != point[s2]) return point[s1] > point[s2];\n  if (num_diff[s1] != num_diff[s2]) return num_diff[s1] > num_diff[s2];\n  return num[s1] > num[s2];\n}\nstring s1, s2;\nint n;\nint num1, num2;\nchar c;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) { cin >> name[i]; }\n  for (int i = 1; i <= (n * (n - 1)) >> 1; i++) {\n    cin >> s >> num1 >> c >> num2;\n    s1 = s.substr(0, s.find(\"-\"));\n    s2 = s.substr(s.find(\"-\") + 1);\n    if (num1 > num2) { point[s1] += 3; }\n    if (num1 < num2) { point[s2] += 3; }\n    if (num1 == num2) {\n      point[s1]++;\n      point[s2]++;\n    }\n    num[s1] += num1;\n    num[s2] += num2;\n    num_diff[s1] += num1 - num2;\n    num_diff[s2] += num2 - num1;\n  }\n  sort(name + 1, name + n + 1, cmp);\n  sort(name + 1, name + (n / 2 + 1));\n  for (int i = 1; i <= (n >> 1); i++) { cout << name[i] << endl; }\n  return 0;\n}\n"
    ],
    [
        "scored, conceed, points are maps of string to int\nvec and a are vectors of strings\nboolean function cmp with string arguments a and b\n  if points[b] is greater than points[a]\n    return 1\n  else if points[b] is less than points[a]\n    \n  else\n    dif1 is an integer = scored[a] - conceed[a]\n    dif2 is an integer = scored[b] - conceed[b]\n    if dif1 is less than dif2\n      return 1\n    else if dif1 is greater than dif2\n      \n    else\n      if scored[a] is greater than scored[b]\n        \n      else if scored[a] is less than scored[b]\n        return 1\n    \n  \n\n\n  set integer n to 0\n  st = string\n  read n\n  m and k are integers with m = n and k = n / 2\n  while m--\n    read st\n    push st into vec\n  \n  n = (n * n - 1) / 2\n  st = \"\"\n  read character from the input\n  while n--\n    let i be integer\n    team1 and team2 are empty strings\n    read line from input into st\n    for i = 0 to length of st exclusive\n      if st[i] is equal to '-'\n        increase i by one\n        break the loop\n      \n      increase team1 by st[i]\n    \n    loop through i while i < length of st, incrementing i\n      if st[i] is equal to ' '\n        increase i\n        stop the loop\n      \n      increase team2 by st[i]\n    \n    let j and sum1 be integers with j = 1 and sum1 = 0\n    loop through i while i < length of st, incrementing i\n      if st[i] is equal to ':'\n        increase i by one\n        break the loop\n      \n      create integer c with value st[i] - 48\n      sum1 = (sum1 * j) + c\n      multiply j by 10\n    \n    increase scored[team1] by sum1\n    increase conceed[team2] by sum1\n    create integer sum2 with value 0\n    set value of j to 1\n    loop through i while i < length of st, incrementing i\n      create integer c with value st[i] - 48\n      sum2 = (sum2 * j) + c\n      multiply j by 10\n    \n    increase scored[team2] by sum2\n    increase conceed[team1] by sum2\n    if sum1 is greater than sum2\n      increase points[team1] by 3\n    else if sum1 is less than sum2\n      increase points[team2] by 3\n    else\n      increment points[team1]\n      increment points[team2]\n    \n  \n  sort vec using cmp as comparator function\n  for i = length of vec - 1 to k inclusive, decrementing i, push i into vec\n  sort a\n  for i = 0 to length of a exclusive print a[i]\n\n",
        "map<string, int> scored, conceed, points;\nvector<string> vec, a;\nbool cmp(string a, string b) {\n  if (points[b] > points[a])\n    return 1;\n  else if (points[b] < points[a])\n    return 0;\n  else {\n    int dif1 = scored[a] - conceed[a];\n    int dif2 = scored[b] - conceed[b];\n    if (dif1 < dif2)\n      return 1;\n    else if (dif1 > dif2)\n      return 0;\n    else {\n      if (scored[a] > scored[b])\n        return 0;\n      else if (scored[a] < scored[b])\n        return 1;\n    }\n  }\n}\nint main() {\n  int n = 0;\n  string st;\n  cin >> n;\n  int m = n, k = n / 2;\n  while (m--) {\n    cin >> st;\n    vec.push_back(st);\n  }\n  n = (n * n - 1) / 2;\n  st = \"\";\n  getchar();\n  while (n--) {\n    int i;\n    string team1 = \"\", team2 = \"\";\n    getline(cin, st);\n    for (i = 0; i < st.size(); i++) {\n      if (st[i] == '-') {\n        i++;\n        break;\n      }\n      team1 += st[i];\n    }\n    for (; i < st.size(); i++) {\n      if (st[i] == ' ') {\n        i++;\n        break;\n      }\n      team2 += st[i];\n    }\n    int j = 1, sum1 = 0;\n    for (; i < st.size(); i++) {\n      if (st[i] == ':') {\n        i++;\n        break;\n      }\n      int c = st[i] - 48;\n      sum1 = (sum1 * j) + c;\n      j *= 10;\n    }\n    scored[team1] += sum1;\n    conceed[team2] += sum1;\n    int sum2 = 0;\n    j = 1;\n    for (; i < st.size(); i++) {\n      int c = st[i] - 48;\n      sum2 = (sum2 * j) + c;\n      j *= 10;\n    }\n    scored[team2] += sum2;\n    conceed[team1] += sum2;\n    if (sum1 > sum2)\n      points[team1] += 3;\n    else if (sum1 < sum2)\n      points[team2] += 3;\n    else {\n      points[team1]++;\n      points[team2]++;\n    }\n  }\n  sort(vec.begin(), vec.end(), cmp);\n  for (int i = vec.size() - 1; i >= k; i--) a.push_back(vec[i]);\n  sort(a.begin(), a.end());\n  for (int i = 0; i < a.size(); i++) cout << a[i] << endl;\n}\n"
    ],
    [
        "create maps pt, sc, mi from string to integer\ncreate string array name with size 50\ndeclare cmp with strings s1, s2 as arguments, returning boolean\n  if pt[s1] is not pt[s2], return pt[s1] is greater than pt[s2] from function\n  if mi[s1] is not mi[s2]\n    return mi[s1] is greater than mi[s2] from function\n  else\n    return sc[s1] is greater than sc[s2] from function\n\n\n  create integer n\n  read n\n  for i = 0 to n exclusive, read name[i]\n  discard characters from stdin\n  for i = 0 to n * (n-1) /2 exclusive\n    create strings A, B\n    read line from cin to A with '-' as delimiter\n    read line from cin to B with ' ' as delimiter\n    create character ch\n    create integers pA, pB\n    read pA read ch read pB\n    discard characters from stdin\n    if pA is less than pB, increment pt[B] by 3\n    if pA is greater than pB, increment pt[A] by 3\n    if pA is pB, increment pt[A], increment pt[B]\n    increment sc[A] by pA\n    increment mi[A] by pA - pB\n    increment sc[B] by pB\n    increment mi[B] by pB - pA\n  \n  sort elements from name to name + n using cmp function to compare\n  sort elements from name to name + n / 2\n  for i = 0 to n / 2 exclusive, print name[i] print newline\n  \n\n",
        "map<string, int> pt, sc, mi;\nstring name[50];\nbool cmp(string s1, string s2) {\n  if (pt[s1] != pt[s2]) return pt[s1] > pt[s2];\n  if (mi[s1] != mi[s2])\n    return mi[s1] > mi[s2];\n  else\n    return sc[s1] > sc[s2];\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> name[i];\n  cin.ignore();\n  for (int i = 0; i < n * (n - 1) / 2; i++) {\n    string A, B;\n    getline(cin, A, '-');\n    getline(cin, B, ' ');\n    char ch;\n    int pA, pB;\n    cin >> pA >> ch >> pB;\n    cin.ignore();\n    if (pA < pB) pt[B] += 3;\n    if (pA > pB) pt[A] += 3;\n    if (pA == pB) pt[A]++, pt[B]++;\n    sc[A] += pA;\n    mi[A] += pA - pB;\n    sc[B] += pB;\n    mi[B] += pB - pA;\n  }\n  sort(name, name + n, cmp);\n  sort(name, name + n / 2);\n  for (int i = 0; i < n / 2; i++) cout << name[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "n=int, wp, dg and sg=array of 55 int\nname=array of 55 string\nfunction cmp (get int a and b, return bool)\n  if wp[a] is not wp[b] return wp[a] > wp[b]\n  if dg[a] is not dg[b] return dg[a] > dg[b]\n  return sg[a] > sg[b]\n\n\n  read n\n  for i=0 to n exclusive read name[i]\n  for i=0 to n*(n-1)/2 exclusive\n    s,a,b=string\n    p,q=int\n    c=char\n    read s,p,c,q\n    a=left portion of s before '-'\n    b=right portion of s after '-'\n    a1=find(name, name+n, a)-name, b1=find(name, name+n, b)-name\n    if p>q\n      add 3 to wp[a1]\n    else if q is p\n      increment wp[a1]\n      increment wp[b1]\n    else\n      add 3 to wp[b1]\n    \n    add p-q to dg[a1]\n    add p to sg[a1]\n    add q-p to dg[b1]\n    add q to sg[b1]\n  \n  a=array of 55 int\n  for i=0 to n exclusive a[i]=i\n  sort first n items of a using function cmp\n  ans=array of 55 string\n  for i=0 to n/2 exclusive ans[i]=name[a[i]]\n  sort first n/2 items of ans\n  for i=0 to n/2 exclusive print ans[i]\n  \n\n",
        "int n, wp[55], dg[55], sg[55];\nstring name[55];\nbool cmp(int a, int b) {\n  if (wp[a] != wp[b]) { return wp[a] > wp[b]; }\n  if (dg[a] != dg[b]) { return dg[a] > dg[b]; }\n  return sg[a] > sg[b];\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> name[i]; }\n  for (int i = 0; i < n * (n - 1) / 2; i++) {\n    string s, a, b;\n    int p, q;\n    char c;\n    cin >> s >> p >> c >> q;\n    a = s.substr(0, s.find('-'));\n    b = s.substr(s.find('-') + 1);\n    int a1 = find(name, name + n, a) - name, b1 = find(name, name + n, b) - name;\n    if (p > q) {\n      wp[a1] += 3;\n    } else if (q == p) {\n      wp[a1]++;\n      wp[b1]++;\n    } else {\n      wp[b1] += 3;\n    }\n    dg[a1] += p - q;\n    sg[a1] += p;\n    dg[b1] += q - p;\n    sg[b1] += q;\n  }\n  int a[55];\n  for (int i = 0; i < n; i++) { a[i] = i; }\n  sort(a, a + n, cmp);\n  string ans[55];\n  for (int i = 0; i < n / 2; i++) { ans[i] = name[a[i]]; }\n  sort(ans, ans + n / 2);\n  for (int i = 0; i < n / 2; i++) { cout << ans[i] << endl; }\n  return 0;\n}\n"
    ],
    [
        "create string array nam of size 50\nlet int n and int arrays wp of size 50, dg of size 50, and sg of size 50\ndeclare comp taking in ints a and b and returning bool\n  if wp[a] is not equal to wp[b]\n    return wp[a] > wp[b]\n  else if dg[a] is not equal to dg[b]\n    return the result of dg[a] > dg[b]\n  else do\n    return sg[a] > sg[b]\n\n\n  read n\n  for i = 0 to n exclusive, read nam[i]\n  for i = 0 to n * (n - 1) / 2 exclusive\n    create strings tmp, a, and b\n    make ints p and q\n    create char c\n    read tmp, p, c, and q\n    set a to tmp.substr(0, tmp.find('-'))\n    set b to tmp.substr(tmp.find('-') + 1)\n    create ints ai = find(nam, nam + n, a) - nam and bi = find(nam, nam + n, b) - nam\n    if p is more than q\n      set wp[ai] to wp[ai] + 3\n    else if p is less than q\n      set wp[bi] to wp[bi] + 3\n    else\n      add 1 to wp[ai] and ap[bi]\n    set dg[ai] to ad[ai] + p - q, add p to sg[ai], add q - p to dg[bi], and add q to sg[bi]\n  \n  create integer array a of size 50\n  for i = 0 to n exclusive, set a[i] to i\n  sort a using a + n and comp\n  create string array names of size 50\n  for i = 0 to n / 2 exclusive, set names[i] to nam[a[i]]\n  sort names using names + n / 2\n  for i = 0 to n / 2 exclusive, print names[i]\n  \n\n",
        "string nam[50];\nint n, wp[50], dg[50], sg[50];\nbool comp(int a, int b) {\n  if (wp[a] != wp[b])\n    return wp[a] > wp[b];\n  else if (dg[a] != dg[b])\n    return dg[a] > dg[b];\n  else\n    return sg[a] > sg[b];\n}\nint main() {\n  cin >> n;\n  for (int i = 0; i < (int)(n); i++) cin >> nam[i];\n  for (int i = 0; i < (int)(n * (n - 1) / 2); i++) {\n    string tmp, a, b;\n    int p, q;\n    char c;\n    cin >> tmp >> p >> c >> q;\n    a = tmp.substr(0, tmp.find('-'));\n    b = tmp.substr(tmp.find('-') + 1);\n    int ai = find(nam, nam + n, a) - nam, bi = find(nam, nam + n, b) - nam;\n    if (p > q)\n      wp[ai] += 3;\n    else if (p < q)\n      wp[bi] += 3;\n    else\n      wp[ai]++, wp[bi]++;\n    dg[ai] += p - q, sg[ai] += p, dg[bi] += q - p, sg[bi] += q;\n  }\n  int a[50];\n  for (int i = 0; i < (int)(n); i++) a[i] = i;\n  sort(a, a + n, comp);\n  string names[50];\n  for (int i = 0; i < (int)(n / 2); i++) names[i] = nam[a[i]];\n  sort(names, names + n / 2);\n  for (int i = 0; i < (int)(n / 2); i++) cout << names[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "declare integers n, m, a, b and 2d array of integers v of size 2100 by 2100\ndeclare integers k, x, y and 2d array of integers d of size 2100 by 2100\nboolean function solve with integer arguments x, y and k\n  create ingteger variables t, l = max of 1 and x - k; r = min of x + k and n\n  for integer i = l to r inclusive\n    set t to k - abs(i - x)\n    if y - t is greater than 0 && !v[i][y - t]\n      set a to i\n      set value of b to y - t\n      return 1\n    \n    if y + t <= m && !v[i][y + t]\n      a = i\n      b = y + t\n      return 1\n    \n  \n  \n\n\n  read n, m and k\n  for i = 0 to k exclusive\n    read x and y\n    for integer j = -2 to 2 inclusive\n      for integer k = -2 to 2 inclusive\n        if x + j < 1 || x + j > n || y + k < 1 || y + k is greater than m, continue the loop\n        d[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k))\n      \n    while solve(x, y, d[x][y]) is false, increment d[x][y]\n    v[a][b] = 1\n    print a, \" \", b and a new line\n  \n\n",
        "int n, m, a, b, v[2100][2100];\nint k, d[2100][2100], x, y;\nbool solve(int x, int y, int k) {\n  int l = max(1, x - k), r = min(x + k, n), t;\n  for (int i = l; i <= r; i++) {\n    t = k - abs(i - x);\n    if (y - t > 0 && !v[i][y - t]) {\n      a = i;\n      b = y - t;\n      return 1;\n    }\n    if (y + t <= m && !v[i][y + t]) {\n      a = i;\n      b = y + t;\n      return 1;\n    }\n  }\n  return 0;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> x >> y;\n    for (int j = -2; j <= 2; j++)\n      for (int k = -2; k <= 2; k++) {\n        if (x + j < 1 || x + j > n || y + k < 1 || y + k > m) continue;\n        d[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k));\n      }\n    while (!solve(x, y, d[x][y])) d[x][y]++;\n    v[a][b] = 1;\n    cout << a << \" \" << b << endl;\n  }\n}\n"
    ],
    [
        "create integers n, m, a, b, create 2d integer array v with size 2100 by 2100\ncreate integers k, x, y, create 2d integer array d with size 2100 by 2100\ndeclare solve with integers x, y, k as arguments, returning boolean\n  create integers l, r, t with l = maximum of ( 1 and x - k ), r = minimum of ( x + k and n )\n  for i = l to r inclusive\n    set t to k - absolute value of ( i - x )\n    if y - t is greater than 0 and v[i][y-t] is false\n      set a to i\n      set b to y - t\n      return 1 from function\n    \n    if y + t is less than or equal to m and v[i][y+t] is false\n      set a to i\n      set b to y + t\n      return 1\n    \n  \n  \n\n\n  read n read m read k\n  for i = 0 to k exclusive\n    read x read y\n    for j = -2 to 2 inclusive\n      for k = -2 to 2 inclusive\n        if x + j is less than 1 or x + j is greater than n or y + k is less than 1 or y + k is greater than m, break current loop iteration\n        set d[x][y] to maximum of ( d[x][y] and d[x+j][y+k] - absolute value of j - absolute value of k )\n      \n    while result of run solve with x, y, d[x][y] as arguments is false, increment d[x][y]\n    set v[a][b] to 1\n    print a print \" \" print b print newline\n  \n\n",
        "int n, m, a, b, v[2100][2100];\nint k, d[2100][2100], x, y;\nbool solve(int x, int y, int k) {\n  int l = max(1, x - k), r = min(x + k, n), t;\n  for (int i = l; i <= r; i++) {\n    t = k - abs(i - x);\n    if (y - t > 0 && !v[i][y - t]) {\n      a = i;\n      b = y - t;\n      return 1;\n    }\n    if (y + t <= m && !v[i][y + t]) {\n      a = i;\n      b = y + t;\n      return 1;\n    }\n  }\n  return 0;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> x >> y;\n    for (int j = -2; j <= 2; j++)\n      for (int k = -2; k <= 2; k++) {\n        if (x + j < 1 || x + j > n || y + k < 1 || y + k > m) continue;\n        d[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k));\n      }\n    while (!solve(x, y, d[x][y])) d[x][y]++;\n    v[a][b] = 1;\n    cout << a << \" \" << b << endl;\n  }\n}\n"
    ],
    [
        "create integers n, m, a and b, and 2d array of integers v 2100 by 2100\ncreate integers k, x and y, and 2d array of integers d 2100 by 2100\nboolean method solve with integer arguments x, y and k\n  declare integers t, l = max of 1 and x - k and r = min of x + k and n\n  for integer i = l to r inclusive\n    set value of t to k - abs(i - x)\n    if y - t is greater than 0 and !v[i][y - t]\n      set a to i\n      set value of b to y - t\n      return 1\n    \n    if y + t <= m and !v[i][y + t]\n      assign value of i to the a\n      set b to y + t\n      return 1\n    \n  \n  \n\n\n  read n, m and k\n  for i = 0 to k exclusive\n    read x and y\n    for integer j = -2 to 2 inclusive\n      for integer k = -2 to 2 inclusive\n        if x + j < 1 or x + j > n or y + k < 1 or y + k > m, continue the loop\n        set d[x][y] = max of d[x][y] and d[x + j][y + k] - abs(j) - abs(k))\n      \n    while solve(x, y, d[x][y]) is 0, increment d[x][y]\n    set value of v[a][b] to 1\n    print a, \" \", b and a new line\n  \n\n",
        "int n, m, a, b, v[2100][2100];\nint k, d[2100][2100], x, y;\nbool solve(int x, int y, int k) {\n  int l = max(1, x - k), r = min(x + k, n), t;\n  for (int i = l; i <= r; i++) {\n    t = k - abs(i - x);\n    if (y - t > 0 && !v[i][y - t]) {\n      a = i;\n      b = y - t;\n      return 1;\n    }\n    if (y + t <= m && !v[i][y + t]) {\n      a = i;\n      b = y + t;\n      return 1;\n    }\n  }\n  return 0;\n}\nint main() {\n  cin >> n >> m >> k;\n  for (int i = 0; i < k; i++) {\n    cin >> x >> y;\n    for (int j = -2; j <= 2; j++)\n      for (int k = -2; k <= 2; k++) {\n        if (x + j < 1 || x + j > n || y + k < 1 || y + k > m) continue;\n        d[x][y] = max(d[x][y], d[x + j][y + k] - abs(j) - abs(k));\n      }\n    while (!solve(x, y, d[x][y])) d[x][y]++;\n    v[a][b] = 1;\n    cout << a << \" \" << b << endl;\n  }\n}\n"
    ],
    [
        "a = array of pair of size 200020 of int and int\nn, k, c, x, y, m, z, ac, t, b, i = long long\n\n  for (read n, increment i, decrement n\n    for read k, c, x, y, m and t = 0, decrement k, z = max(z, t)\n      if ac <= 200000, a[increment ac] = make_pair(pair of int to int (t, c), i)\n      b = (c * x + y) modulo m\n      if b < c and k, increment t\n      c = b\n    \n  print z\n  if ac < 200001\n    sort a and a + ac\n    for i = 0 to ac, print first.second of a[i],\" \", second of a[i] + 1\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "a1, a2, n, k, second, ans, ans1 = long long with second = 0 and ans = 0\nh = pair of long long and pair of long long and long long vector\nin function read\n  read n\n  x, y, m = int then for i = 0 to n\n    read k\n    add k to second\n    read a1\n    t = long long with t = a1\n    read x then y then m\n    append make_pair of 0 and make_pair of a1 and i + 1 to h\n    set ans1 to 0\n    for j = 1 to k\n      set a2 to (a1 * x + y) mod m\n      if a2 is less than a1 then increment ans1\n      set a1 to a2\n      set t to max of t and a1\n      if size of h is less or equal to 200000 then append make_pair of ans1 and make_pair of a1 and i + 1 to h\n    \n    set ans to max of ans and ans1\n  \n  sort vector h\n  print ans\n  if second is less or equal to 200000\n    for i = 0 to second print h[i].second.first and h[i].second.second\n\n\n  call read\n  \n\n",
        "long long a1, a2, n, k, second = 0, ans = 0, ans1;\nvector<pair<long long, pair<long long, long long>>> h;\nvoid read(void) {\n  cin >> n;\n  for (int i = 0, x, y, m; i < n; ++i) {\n    cin >> k;\n    second += k;\n    cin >> a1;\n    long long t = a1;\n    cin >> x >> y >> m;\n    h.push_back(make_pair(0, make_pair(a1, i + 1)));\n    ans1 = 0;\n    for (int j = 1; j < k; ++j) {\n      a2 = (a1 * x + y) % m;\n      if (a2 < a1) ans1++;\n      a1 = a2;\n      t = max(t, a1);\n      if (h.size() <= 200000) h.push_back(make_pair(ans1, make_pair(a1, i + 1)));\n    }\n    ans = max(ans, ans1);\n  }\n  sort(h.begin(), h.end());\n  cout << ans << \"\\n\";\n  if (second <= 200000)\n    for (int i = 0; i < second; ++i) cout << h[i].second.first << \" \" << h[i].second.second << \"\\n\";\n}\nint main() {\n  read();\n  return 0;\n}\n"
    ],
    [
        "a = pair of pair of int and int and int of size 200020\nn, k, c, x, y, m, z, ac, t, b, i = long long\n\n  read n then loop n times decrementing n and incrementing i each time\n    read k then c then x then y then m and set t to 0 then loop k times decrementing k and setting z to max of z and t each time\n      if ac is less or equal to 200000 then set a[ac] to value of make_pair of pair of int and int of t and c and i then increment ac\n      set b to (c * x + y) mod m\n      if b is less than c and k is not 0 then increment t\n      set c to b\n    \n  print z\n  if ac is less than 200001\n    call sort on a and a + ac\n    for i = 0 to ac print a[i].first.second and a[i].second + 1\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "let a = array of integers of length 200020, pair of integets\nlet n, k, c, x, y, m, z, ac, t, b, i be long integers\n\n  for read n, n is decreased by 1, i is increased by 1\n    for read the values k, c, x, y, m, t , t = 0 , k value is decreased by 1, z = maximum of z and t\n      if ac <= 200000, a[ac++] = make_pair(pair<int, int>(t, c), i\n      let the value of b is equal to c * x + y modulo m\n      if b is less than c and k, increase t by 1\n      the value of b is assigned to c\n    \n  print z and newline\n  if ac is less than 200001\n    sort the values a and a + ac\n    for i = 0 to ac exclusive, print a[i].first.second and a[i].second + 1 and newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair array a with size 200020 with pair of ( pair of ( integer and integer) and integer )\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n, decrement n, incrementing i\n    for read k read c read x read y read m, t = 0, deecrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to make pair from ( pair of ( integer and integer ) initialized with ( t, c ), and integer )\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "\n  create long longs n, count with count = 0\n  read n\n  create constant integer max_i with max_i = 2e5\n  create integer counter with counter = 0\n  create tuple array data with integer, integer, integer, with size max_i + 9\n  for i = 0 to n exclusive\n    create long longs k, a0, x, y, m, t, a, with t = 0, a = 0\n    read k read a0 read x read y read m\n    for j = 0 to k exclusive\n      if counter is less than or equal to max_i, set data[increment counter] to make tuple from t, a0, i\n      set a to (a0 * x + y) % m\n      if a is less than a0 and j is not k - 1, increment t\n      set a0 to a\n    \n    set count to maximum of count and t\n  \n  print count print newline\n  if counter is less than or equal to max_i\n    sort elements from data to data + counter\n    for i = 0 to counter exclusive, print get element 1 from data[i] print \" \" print get element 2 from data[i] + 1 print newline\n  \n\n",
        "int main() {\n  long long n, count = 0;\n  cin >> n;\n  const int max_i = 2e5;\n  int counter = 0;\n  tuple<int, int, int> data[max_i + 9];\n  for (int i = 0; i < n; i++) {\n    long long k, a0, x, y, m, t = 0, a = 0;\n    cin >> k >> a0 >> x >> y >> m;\n    for (int j = 0; j < k; j++) {\n      if (counter <= max_i) { data[counter++] = make_tuple(t, a0, i); }\n      a = (a0 * x + y) % m;\n      if (a < a0 && j != k - 1) { t++; }\n      a0 = a;\n    }\n    count = max(count, t);\n  }\n  cout << count << endl;\n  if (counter <= max_i) {\n    sort(data, data + counter);\n    for (int i = 0; i < counter; i++) { cout << get<1>(data[i]) << \" \" << get<2>(data[i]) + 1 << endl; }\n  }\n}\n"
    ],
    [
        "MAX = const int with MAX = 2e5\na = pair of pair of long long and long long and long long array of size MAX + 9\nn, k, a0, x, y, m, ans, cnt, t, tmp = long long\n\n  read n\n  for i = 0 to n\n    read k then a0 then x then y then m then set t to 0\n    for j = 0 to k\n      if cnt is less or equal to MAX then set a[cnt] to {{t, a0}, i} then increment cnt\n      set tmp to (a0 * x + y) mod m\n      if tmp is less than a0 and j is not k - 1 increment t\n      set a0 to tmp\n    \n    set ans to max of ans and t\n  \n  print ans\n  if cnt is less than MAX\n    call sort on a and a + cnt\n    for i = 0 to cnt print a[i].first.second and a[i].second + 1\n  \n\n",
        "const int MAX = 2e5;\npair<pair<long long, long long>, long long> a[MAX + 9];\nlong long n, k, a0, x, y, m, ans, cnt, t, tmp;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> k >> a0 >> x >> y >> m, t = 0;\n    for (int j = 0; j < k; j++) {\n      if (cnt <= MAX) a[cnt++] = {{t, a0}, i};\n      tmp = (a0 * x + y) % m;\n      if (tmp < a0 && j != k - 1) t++;\n      a0 = tmp;\n    }\n    ans = max(ans, t);\n  }\n  cout << ans << '\\n';\n  if (cnt <= MAX) {\n    sort(a, a + cnt);\n    for (int i = 0; i < cnt; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << '\\n';\n  }\n}\n"
    ],
    [
        "create pair a with pair of ( integer, integer), integer, with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n to decrement n, incrementing i\n    for read k read c read x read y read m, t = 0 to decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to create pair from ( pair of integer and integer initialized with ( t, c ) and i\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair of ( pair of ( integer and integer ) and integer ) array a with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n to decrement n, incrementing i\n    for read k read c read x read y read m, t = 0 to decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to make pair of ( pair of ( integer and integer) initialized with (t, c ) and i )\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair of ( pair of ( integer, integer ), integer ) array a with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n to derement n, incrementing i\n    for read k read c read x read y read m, t = 0 to decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000 set a[increment ac] to make pair from ( pair of (integer, integer ) initialized with (t, c ), i )\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair array of pair of ( pair of ( integer, integer ), integer ) a with size 200020\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n, decrement n, incrementing i\n    for read k read c read x read y read m, t = 0, to decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to make pair with ( (pair of integer, integer initialized with ( t, c ) ), i\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "create pair array a with size 200020 with pair of ( pair of (integer and integer) and integer )\ncreate long longs n, k, c, x, y, m, z, ac, t, b, i\n\n  for read n, decrement n, incrementing i\n    for read k read c read x read y read m, t = 0, decrement k, setting z to maximum of z and t\n      if ac is less than or equal to 200000, set a[increment ac] to new pair from ( pair of ( integer and integer ) initialized with (t, c) and i )\n      set b to (c * x + y) % m\n      if b is less than c and k, increment t\n      set c to b\n    \n  print z print newline\n  if ac is less than 200001\n    sort elements from a to a + ac\n    for i = 0 to ac exclusive, print second element of first element of a[i] print \" \" print second element of a[i] + 1 print newline\n  \n\n",
        "pair<pair<int, int>, int> a[200020];\nlong long n, k, c, x, y, m, z, ac, t, b, i;\nint main() {\n  for (cin >> n; n--; i++)\n    for (cin >> k >> c >> x >> y >> m, t = 0; k--; z = max(z, t)) {\n      if (ac <= 200000) a[ac++] = make_pair(pair<int, int>(t, c), i);\n      b = (c * x + y) % m;\n      if (b < c && k) t++;\n      c = b;\n    }\n  cout << z << endl;\n  if (ac < 200001) {\n    sort(a, a + ac);\n    for (int i = 0; i < ac; i++) cout << a[i].first.second << \" \" << a[i].second + 1 << endl;\n  }\n}\n"
    ],
    [
        "\n  create integers a, b and c\n  read input to a, b and c\n  if b is greater than c, swap b and c\n  print (2 * a + b - 1) * b + (c - b - 1) * (a + b - 1)\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  if (b > c) { swap(b, c); }\n  cout << (2 * a + b - 1) * b + (c - b - 1) * (a + b - 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "oo = constant integer = 1e9\n\n  a, b, c = integer\n  read a, b, c\n  ans = integer = b * c + (a - 1) * (b + c - 1)\n  print ans\n  \n\n",
        "const int oo = 1e9;\nint main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  int ans = b * c + (a - 1) * (b + c - 1);\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c =integers\n  Read a, b, c\n  print a * b + b * c + c * a - (a + b + c) + 1 and a new line\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << a * b + b * c + c * a - (a + b + c) + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long longs x, y and z\n\n  read x, y and z\n  print x * y + y * z + x * z - x - z - y + 1\n  \n\n",
        "long long x, y, z;\nint main() {\n  cin >> x >> y >> z;\n  cout << x * y + y * z + x * z - x - z - y + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "let gcd be a function which accepts integers a and b\n  return gcd(b, a modulo b) if b else a\n\n\n  let n, m, c be integers\n  read n, m, c\n  print n * m * c - (n - 1) * (m - 1) * (c - 1) and newline\n\n",
        "int gcd(int a, int b) {\n  return b ? gcd(b, a % b) : a;\n}\nint main() {\n  int n, m, c;\n  cin >> n >> m >> c;\n  cout << n * m * c - (n - 1) * (m - 1) * (c - 1) << endl;\n}\n"
    ],
    [
        "\n  create integers a, b, c\n  read a read b read c\n  print a * b + b * c + a * c - a - b - c + 1 print newline\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << a * b + b * c + a * c - a - b - c + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, c\n  read a read b read c\n  print a * b + b * c + c * a - a - b - c + 1 print newline\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << a * b + b * c + c * a - a - b - c + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let a, b, c be int\n  read a and b and c\n  print a * b + b * c + c * a - a - b - c + 1\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << a * b + b * c + c * a - a - b - c + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers a, b, c\n\n  read a read b read c\n  print a * b + b * c + c * a - a - b - c + 1 print newline\n\n",
        "int a, b, c;\nint main() {\n  cin >> a >> b >> c;\n  cout << a * b + b * c + c * a - a - b - c + 1 << endl;\n}\n"
    ],
    [
        "\n  create long longs a, b, c\n  read a read b read c\n  create long long ans with ans = (c + a - 1) * (b + a - 1) - a * (a - 1)\n  print ans print newline\n  \n\n",
        "int main() {\n  long long a, b, c;\n  cin >> a >> b >> c;\n  long long ans = (c + a - 1) * (b + a - 1) - a * (a - 1);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant long long OO with OO = 1e5 + 555\ndeclare rakm with character x as argument, returning long long\n  return x - 48 from function\n\ndeclare _7rf with long long x as argument, returning character\n  return x + 48 from function\n\ndeclare odd with long long x as argument, returning boolean\n  return x % 2\n\ndeclare even with long long x as argument, returning boolean\n  return 1 - x % 2\n\ndeclare factorial with long long x as argument, returning long long\n  if x is 0 or x is 1\n    return 1 from function\n  else\n    return x * result of run factorial with x - 1 as argument\n  \n\ndeclare ss with long long x as argument, returning long long\n  create long long sum with sum = 0\n  while x is greater than 0\n    increment sum by x % 10\n    set x to x / 10\n  \n  return sum from function\n\ndeclare a3ks with long long x as argument, returning long long\n  create long longs b, u, with b = 0, u = x\n  while u is greater than 0\n    set b to ( b * 10 ) + u % 10\n    set u to u / 10\n  \n  return b from function\n\ndeclare prime with long long x as argument, returning boolean\n  for i = 2 to x exclusive\n    if x % i is 0, return 0 from function\n  \n  return 1 from function\n\n\n  create integers a, b, c\n  read a read b read c\n  print (a * b * c) - ((a - 1) * (b - 1) * (c - 1)) print newline\n\n",
        "const long long OO = 1e5 + 555;\nlong long rakm(char x) {\n  return x - 48;\n}\nchar _7rf(long long x) {\n  return x + 48;\n}\nbool odd(long long x) {\n  return x % 2;\n}\nbool even(long long x) {\n  return 1 - x % 2;\n}\nlong long factorial(long long x) {\n  if (x == 0 || x == 1) {\n    return 1;\n  } else {\n    return x * factorial(x - 1);\n  }\n}\nlong long ss(long long x) {\n  long long sum = 0;\n  while (x > 0) {\n    sum += x % 10;\n    x /= 10;\n  }\n  return sum;\n}\nlong long a3ks(long long x) {\n  long long b = 0, u = x;\n  while (u > 0) {\n    b = (b * 10) + u % 10;\n    u /= 10;\n  }\n  return b;\n}\nbool prime(long long x) {\n  for (int i = 2; i < x; i++) {\n    if (x % i == 0) { return 0; }\n  }\n  return 1;\n}\nint main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << (a * b * c) - ((a - 1) * (b - 1) * (c - 1)) << endl;\n}\n"
    ],
    [
        "\n  declare integer variables a, b and c\n  read a, b and c\n  print (a * b) + (b * c) + (c * a) - a - b - c + 1\n  \n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << (a * b) + (b * c) + (c * a) - a - b - c + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "declare constant int N = 1e5 + 100\ncreate ints a, b and c\ndeclare vector of integers called v\n\n  read input to a, b and c\n  print (a * b * c) - (a - 1) * (b - 1) * (c - 1)\n  \n\n",
        "const int N = 1e5 + 100;\nint a, b, c;\nvector<int> v;\nint main() {\n  cin >> a >> b >> c;\n  cout << (a * b * c) - (a - 1) * (b - 1) * (c - 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAX with MAX = 5e4 + 5\ncreate constant long long MAX2 with MAX2 = 11\ncreate constant integer MOD with MOD = 1000000000 + 7\ncreate constant long long INF with INF = 20000\ncreate constant integer array dr with dr = {1, 0, -1, 0, 1, 1, -1, -1}\ncreate constant integer array dc with dc = {0, 1, 0, -1, 1, -1, 1, -1}\ncreate constant double pi with pi = acosign of -1\ncreate integer a, b, c\n\n  read a read b read c\n  print a * b + (a + b - 1) * (c - 1) print \"\\n\"\n  \n\n",
        "const int MAX = 5e4 + 5;\nconst long long MAX2 = 11;\nconst int MOD = 1000000000 + 7;\nconst long long INF = 20000;\nconst int dr[] = {1, 0, -1, 0, 1, 1, -1, -1};\nconst int dc[] = {0, 1, 0, -1, 1, -1, 1, -1};\nconst double pi = acos(-1);\nint a, b, c;\nint main() {\n  cin >> a >> b >> c;\n  cout << a * b + (a + b - 1) * (c - 1) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "N=100100\na,b,c=int\nv=vector of int\n\n  read a,b,c\n  print (b*c)+(a-1)*(b+c-1)\n  \n\n",
        "const int N = 1e5 + 100;\nint a, b, c;\nvector<int> v;\nint main() {\n  cin >> a >> b >> c;\n  cout << (b * c) + (a - 1) * (b + c - 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c =integers\n  Read a, b, c\n  ans = integer, set to (c + a - 1) * (b + a - 1) - a * (a - 1)\n  print ans and a new line\n  \n\n",
        "int main() {\n  long long a, b, c;\n  cin >> a >> b >> c;\n  long long ans = (c + a - 1) * (b + a - 1) - a * (a - 1);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long a, b, c\n  read a, b, c\n  print (a * b * c) - ((a - 1) * (b - 1) * (c - 1))\n  \n\n",
        "int main() {\n  long long a, b, c;\n  cin >> a >> b >> c;\n  cout << (a * b * c) - ((a - 1) * (b - 1) * (c - 1)) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c = integer\n  read a, b, c\n  print the result of b * c + (a - 1) * (b + c - 1)\n\n",
        "int main() {\n  int a, b, c;\n  cin >> a >> b >> c;\n  cout << b * c + (a - 1) * (b + c - 1) << endl;\n}\n"
    ],
    [
        "create constant integer INF with INF = 0x3f3f3f3f\ncreate constant long long INFLL with INFLL = 0x3f3f3f3f3f3f3f3fLL\n\n  create long longs a, b, c\n  read a read b read c\n  create long long ans with ans = (c + a - 1) * (b + a - 1) - a * (a - 1)\n  print ans print newline\n  \n\n",
        "const int INF = 0x3f3f3f3f;\nconst long long INFLL = 0x3f3f3f3f3f3f3f3fLL;\nint main() {\n  long long a, b, c;\n  cin >> a >> b >> c;\n  long long ans = (c + a - 1) * (b + a - 1) - a * (a - 1);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variables str, str2 and s\n  declare integer variables num and i\n  read num and str and loop further\n    sort str\n    for i from 0 to length of str exclusive adding num to i, append str[i] to str2\n    for i = 0 to num exclusive, append str2 to s\n    assign s to str2\n    sort str2\n    if str2 != str\n      print -1\n      \n    else\n      print s\n    \n  \n  \n\n",
        "int main() {\n  string str, str2, s;\n  int num, i;\n  while (cin >> num >> str) {\n    sort(str.begin(), str.end());\n    for (i = 0; i < str.size(); i += num) { str2 += str[i]; }\n    for (i = 0; i < num; i++) { s += str2; }\n    str2 = s;\n    sort(str2.begin(), str2.end());\n    if (str2 != str) {\n      cout << -1 << endl;\n      ;\n    } else {\n      cout << s << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create constant double PI with PI = acosign of -1\ncreate constant integer MAX with MAX = 2e9 + 7\ncreate constant long long MOD with MOD = 1e9 + 7\ncreate map m from character to integer\ndeclare solve with no arguments, returning void\n  create integer k\n  read k\n  create string s\n  read s\n  create integer n with n = size of s\n  if n % k is not 0\n    print -1 print newline\n    return false from function\n  \n  create integer need with need = n / k\n  for i = 0 to n exclusive, increment m[s[i]]\n  create string t with t = \"\"\n  for i = 97 to 123 exclusive\n    if m[character casted i] % k is 0\n      for j = 0 to m[character casted i] / k exclusive, increment by character casted i\n    else\n      print -1 print newline\n      return false from function\n    \n  \n  for i = 0 to k exclusive, print t\n  print newline\n\n\n  run solve\n  \n\n",
        "const double PI = acos(-1);\nconst int MAX = 2e9 + 7;\nconst long long MOD = 1e9 + 7;\nmap<char, int> m;\nvoid solve() {\n  int k;\n  cin >> k;\n  string s;\n  cin >> s;\n  int n = s.size();\n  if (n % k != 0) {\n    cout << -1 << endl;\n    return;\n  }\n  int need = n / k;\n  for (int i = 0; i < n; i++) { m[s[i]]++; }\n  string t = \"\";\n  for (int i = 97; i < 123; i++) {\n    if (m[char(i)] % k == 0) {\n      for (int j = 0; j < m[char(i)] / k; j++) { t += char(i); }\n    } else {\n      cout << -1 << endl;\n      return;\n    }\n  }\n  for (int i = 0; i < k; i++) { cout << t; }\n  cout << endl;\n}\nint main() {\n  solve();\n  return 0;\n}\n"
    ],
    [
        "\n  k = int\n  s = string\n  c = int array of size 26 with all values set to 0\n  read k then s\n  if size of s is not a multiple of k\n    print -1\n    \n  \n  for i = 0 to size of s increment c[s[i] - 'a']\n  for i = 0 to 26\n    if c[i] is not a multiple of k\n      print -1\n      \n    \n  \n  res = string\n  for i = 0 to 26\n    for j = 0 to c[i] / k increment res by ('a' + i) as char\n  \n  for i = 0 to k print res\n  print newline\n  \n\n",
        "int main() {\n  int k;\n  string s;\n  int c[26] = {0};\n  cin >> k >> s;\n  if (s.size() % k != 0) {\n    cout << -1 << endl;\n    return 0;\n  }\n  for (int i = 0; i < s.size(); ++i) { ++c[s[i] - 'a']; }\n  for (int i = 0; i < 26; ++i) {\n    if (c[i] % k != 0) {\n      cout << -1 << endl;\n      return 0;\n    }\n  }\n  string res;\n  for (int i = 0; i < 26; ++i) {\n    for (int j = 0; j < c[i] / k; ++j) { res += char('a' + i); }\n  }\n  for (int i = 0; i < k; ++i) { cout << res; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  k=int\n  s=string\n  read k,s\n  count=array of 26 int filled with 0\n  for i=0 to length of s exclusive increment count[s[i]-'a']\n  s1=string\n  c=0\n  increment c while c<26\n    if count[c] modulo k not equal 0\n      break\n    else\n      append count[c]/k copies of 'a'+c to s1\n    \n  \n  if c is 26\n    while decremented value of k not equal 0 print s1\n    print newline\n  else\n    print -1\n  \n  \n\n",
        "int main() {\n  int k;\n  string s;\n  cin >> k >> s;\n  int count[26] = {0};\n  for (int i = 0; i < s.length(); ++i) { count[s[i] - 'a'] += 1; }\n  string s1;\n  int c = 0;\n  for (; c < 26; ++c) {\n    if (count[c] % k != 0) {\n      break;\n    } else {\n      s1.append(count[c] / k, 'a' + c);\n    }\n  }\n  if (c == 26) {\n    while (k--) { cout << s1; }\n    cout << endl;\n  } else {\n    cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare count as integer\n  read count\n  declare s as string\n  read s\n  declare n as integer = length of s\n  declare integer array a size 26 = {0}\n  for i = 0 to n exclusive, increment a[s[i] - 'a']\n  for i = 0 to 26 exclusive\n    if a[i] % count is not 0\n      print \"-1\" print newline\n      \n    \n  \n  declare string ans = \"\"\n  for i = 0 to 26 exclusive\n    if a[i] is true\n      for j = 0 to a[i] / count exclusive\n        declare temp with temp = i + 'a'\n        let ans be ans + temp\n      \n    \n  \n  for i = 0 to count exclusive, print ans\n  print newline\n\n",
        "int main() {\n  int count;\n  cin >> count;\n  string s;\n  cin >> s;\n  int n = s.length();\n  int a[26] = {0};\n  for (int i = 0; i < n; i++) { a[s[i] - 'a']++; }\n  for (int i = 0; i < 26; i++) {\n    if (a[i] % count != 0) {\n      cout << \"-1\" << endl;\n      return 0;\n    }\n  }\n  string ans = \"\";\n  for (int i = 0; i < 26; i++) {\n    if (a[i]) {\n      for (int j = 0; j < a[i] / count; j++) {\n        char temp = i + 'a';\n        ans = ans + temp;\n      }\n    }\n  }\n  for (int i = 0; i < count; i++) { cout << ans; }\n  cout << endl;\n}\n"
    ],
    [
        "\n  create integers k\n  read k\n  create string str\n  read str\n  create integer n with n = length of str\n  create map characters from character to integer\n  create map iterator itr from character to integer\n  for i = 0 to n exclusive\n    if first index of str[i] in characters is not end of characters\n      increment characters[str[i]] by 1\n    else\n      set characters[str[i]] to 1\n    \n  \n  for itr = beginning of characters to itr is not end of characters, incrementing itr\n    if second element of itr is less than k\n      print -1 print newline\n      exit program with code 0\n    \n  \n  create string new_str with new_str = \"\"\n  for itr = beginning of characters to itr is not end of characters, incrementing itr\n    create integer repeat with repeat = second element of itr / k\n    for i = 0 to repeat exclusive, set new_str to new_str + first element of itr\n  \n  if length of new_str * k is less than n\n    print -1 print newline\n    exit program with code 0\n  \n  for i = 0 to k exclusive, print new_str\n  print newline\n  \n\n",
        "int main() {\n  int k;\n  cin >> k;\n  string str;\n  cin >> str;\n  int n = str.length();\n  map<char, int> characters;\n  map<char, int>::iterator itr;\n  for (int i = 0; i < n; i++) {\n    if (characters.find(str[i]) != characters.end()) {\n      characters[str[i]] += 1;\n    } else {\n      characters[str[i]] = 1;\n    }\n  }\n  for (itr = characters.begin(); itr != characters.end(); itr++) {\n    if (itr->second < k) {\n      cout << -1 << endl;\n      exit(0);\n    }\n  }\n  string new_str = \"\";\n  for (itr = characters.begin(); itr != characters.end(); itr++) {\n    int repeat = itr->second / k;\n    for (int i = 0; i < repeat; i++) { new_str = new_str + itr->first; }\n  }\n  if (new_str.length() * k < n) {\n    cout << -1 << endl;\n    exit(0);\n  }\n  for (int i = 0; i < k; i++) { cout << new_str; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "declare an array of chars inPutStr with size 1001\ndeclare int k and an array of ints strArr with 26 elements\ncreate char array subStr with 1001 elements\nmakeAString is a void function\n  create integer idx = 0\n  for j from 0 to 26 exclusive\n    while strArr[j] != 0\n      change subStr[idx] to j + 'a'\n      increment idx by one\n      assign strArr[j] - k to strArr[j]\n    \n  \n  for i from 0 to k exclusive\n    for j = 0 to idx exclusive, print subStr[j]\n  \n  print new line\n\n\n  for i = 0 to 26 exclusive, set strArr[i] to 0\n  read k\n  read inPutStr\n  for i = 0 while inPutStr[i] != 0\n    create integer id = inPutStr[i] - 'a'\n    set strArr[id] to strArr[id] + 1\n  \n  declare bool Result = true\n  for i from 0 to 26 exclusive\n    if strArr[i] % k != 0\n      assign false to Result\n      break the loop\n    \n  \n  if Result is true\n    call makeAString()\n  else\n    print \"-1\"\n  \n\n",
        "char inPutStr[1001];\nint strArr[26], k;\nchar subStr[1001];\nvoid makeAString() {\n  int idx = 0;\n  for (int j = 0; j < 26; j++) {\n    while (strArr[j] != 0) {\n      subStr[idx] = j + 'a';\n      idx++;\n      strArr[j] = strArr[j] - k;\n    }\n  }\n  for (int i = 0; i < k; i++) {\n    for (int j = 0; j < idx; j++) { cout << subStr[j]; }\n  }\n  cout << endl;\n}\nint main() {\n  for (int i = 0; i < 26; i++) { strArr[i] = 0; }\n  cin >> k;\n  cin >> inPutStr;\n  for (int i = 0; inPutStr[i]; i++) {\n    int id = inPutStr[i] - 'a';\n    strArr[id] = strArr[id] + 1;\n  }\n  bool Result = true;\n  for (int i = 0; i < 26; i++) {\n    if (strArr[i] % k != 0) {\n      Result = false;\n      break;\n    }\n  }\n  if (Result) {\n    makeAString();\n  } else\n    cout << \"-1\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let T, i, j, count, d and m be integers with count = 1 and m = 0\n  create an arrays of characters s and k with size 1000\n  read T and s\n  set j to length of s\n  sort s\n  for i = 0 to j exclusive\n    if s[i] = s[i + 1]\n      add 1 to count\n    else\n      if count % T = 0\n        assign count / T to d\n        loop, decrementing d, while it is not 0\n          set k[m] to s[i]\n          increment m\n        \n        set count to 1\n      else\n        print \"-1\"\n        \n      \n    \n  \n  set k[m] to '\\0'\n  decrement T and loop further, while T is not 0\n    for i from 0 while k[i] != '\\0' incrementing i, print k[i] in a loop\n  \n  print new line\n  \n\n",
        "int main() {\n  int T, i, j, count = 1, d, m = 0;\n  char s[1000], k[1000];\n  cin >> T >> s;\n  j = strlen(s);\n  sort(s, s + j);\n  for (i = 0; i < j; i++) {\n    if (s[i] == s[i + 1]) {\n      count += 1;\n    } else {\n      if (count % T == 0) {\n        d = count / T;\n        while (d--) {\n          k[m] = s[i];\n          m++;\n        }\n        count = 1;\n      } else {\n        cout << \"-1\" << endl;\n        return 0;\n      }\n    }\n  }\n  k[m] = '\\0';\n  while (T--) {\n    for (i = 0; k[i] != '\\0'; i++) { cout << k[i]; }\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "let solve be a void function which accepts string str , integer k\n  cnt = array of integers of length 26\n  memset of cnt, 0, length of cnt\n  for i = 0 to length of str exclusive , increment cnt[str[i] - a] by 1\n  let s1 be a string\n  initialize integer i to 0\n  for i is less than 26 , increment i by 1\n    if cnt[i] modulo k is not equal to 0\n      stop\n    else do the following\n      It extends the string s1 by appending cnt[i] / k, 'a' + i\n    \n  \n  if i is equal to 26\n    while k is decremented by 1, print s1\n    print newline\n  else do the following\n    print -1 and newline\n  \n\n\n  let k be a integer\n  read k\n  let str be a string\n  read str\n  solve the values str, k\n  \n\n",
        "void solve(string str, int k) {\n  int cnt[26];\n  memset(cnt, 0, sizeof(cnt));\n  for (int i = 0; i < str.length(); i++) cnt[str[i] - 'a']++;\n  string s1;\n  int i = 0;\n  for (; i < 26; i++) {\n    if (cnt[i] % k != 0)\n      break;\n    else {\n      s1.append(cnt[i] / k, 'a' + i);\n    }\n  }\n  if (i == 26) {\n    while (k--) { cout << s1; }\n    cout << endl;\n  } else {\n    cout << \"-1\" << endl;\n  }\n}\nint main() {\n  int k;\n  cin >> k;\n  string str;\n  cin >> str;\n  solve(str, k);\n  return 0;\n}\n"
    ],
    [
        "declare long longs i, j, k, n, m, ans, sz, c1, c2, x, f, z, declare long long arrays a with size 100009, ch with size 26\n\n  declare string s\n  read k, s\n  let sz be size of s\n  declare character set st\n  declare it as character set iterator\n  for i = 0 to sz exclusive\n    insert s[i] into st\n    increment ch[s[i] - 'a']\n  \n  declare long long vector v\n  for it = beginning of st to it is not end of st, incrementing it\n    create character c\n    set c to value of it\n    add ch[c-'a'] to end of v\n  \n  let sz be size of v\n  for i = 0 to sz exclusive\n    if v[i] % k is not 0\n      let f be 1\n      break loop\n    \n  \n  if f is true\n    print \"-1\" print newline\n    \n  else\n    declare ss as string\n    for it = beginning of st to it is not end of st, incrementing it\n      declare character c\n      let c be value of it\n      let z be ch[c - 'a'] / k\n      for i = 0 to z exclusive, increment ss by c\n    \n    for i = 0 to k exclusive, print ss\n    print newline\n  \n  \n\n",
        "long long i, j, k, n, m, a[100009], ans, sz, c1, c2, x, ch[26], f, z;\nint main() {\n  string s;\n  cin >> k >> s;\n  sz = s.size();\n  set<char> st;\n  set<char>::iterator it;\n  for (i = 0; i < sz; i++) {\n    st.insert(s[i]);\n    ch[s[i] - 'a']++;\n  }\n  vector<long long> v;\n  for (it = st.begin(); it != st.end(); it++) {\n    char c;\n    c = *it;\n    v.push_back(ch[c - 'a']);\n  }\n  sz = v.size();\n  for (i = 0; i < sz; i++) {\n    if (v[i] % k != 0) {\n      f = 1;\n      break;\n    }\n  }\n  if (f) {\n    cout << \"-1\" << endl;\n    return 0;\n  } else {\n    string ss;\n    for (it = st.begin(); it != st.end(); it++) {\n      char c;\n      c = *it;\n      z = ch[c - 'a'] / k;\n      for (i = 0; i < z; i++) ss += c;\n    }\n    for (i = 0; i < k; i++) cout << ss;\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integer vector v\n  create integer vector v1\n  create character vector v2\n  create integers k, c, temp, gh with c = 0, gh = 0\n  read k\n  create character ch\n  create strings s, ans\n  read s\n  create string s1 with s1 = s\n  sort elements from beginning of s1 to end of s1\n  for i = 0 to size of s1 exclusive\n    set c to 0\n    if s1[i] is not s1[i+1]\n      set ch to s1[i]\n      add character ch to end of v2\n      for j = 0 to size of s exclusive\n        if s[j] is ch, increment c\n      \n      create integer temp with temp = c\n      add element temp to end of v\n    \n  \n  for i = 0 to size of v exclusive\n    if v[i] % k is 0\n      create integer f with f = v[i] / k\n      add element f to end of v1\n    else\n      set gh to -1\n      break loop\n    \n  \n  for i = 0 to size of v1 exclusive\n    create integer m with m = v1[i]\n    create character g with g = v2[i]\n    while m is greater than 0\n      increment ans by g\n      decrement m\n    \n  \n  create string sum with sum = \"\"\n  create integer our with our = k - 1\n  while our is greater than or equal to 0\n    increment sum by ans\n    decrement our\n  \n  if gh is -1\n    print -1 print newline\n  else\n    print sum print newline\n  \n  \n\n",
        "int main() {\n  vector<int> v;\n  vector<int> v1;\n  vector<char> v2;\n  int k, c = 0, temp, gh = 0;\n  cin >> k;\n  char ch;\n  string s, ans;\n  cin >> s;\n  string s1 = s;\n  sort(s1.begin(), s1.end());\n  for (int i = 0; i < s1.size(); i++) {\n    c = 0;\n    if (s1[i] != s1[i + 1]) {\n      ch = s1[i];\n      v2.push_back(ch);\n      for (int j = 0; j < s.size(); j++) {\n        if (s[j] == ch) { c++; }\n      }\n      int temp = c;\n      v.push_back(temp);\n    }\n  }\n  for (int i = 0; i < v.size(); i++) {\n    if (v[i] % k == 0) {\n      int f = v[i] / k;\n      v1.push_back(f);\n    } else {\n      gh = -1;\n      break;\n    }\n  }\n  for (int i = 0; i < v1.size(); i++) {\n    int m = v1[i];\n    char g = v2[i];\n    while (m > 0) {\n      ans += g;\n      m--;\n    }\n  }\n  string sum = \"\";\n  int our = k - 1;\n  while (our >= 0) {\n    sum += ans;\n    our--;\n  }\n  if (gh == -1) {\n    cout << -1 << endl;\n  } else {\n    cout << sum << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers i, Len, k, create integer array Arr with size 26 with Arr = {0}\n  create strings s, kString\n  read k read s\n  for i = 0 to length of s exclusive, increment Arr[s[i] - 'a']\n  for i = 0 to 26 exclusive\n    if Arr[i] % k is not 0\n    \n      break loop\n    else\n      append 'a' + i to kString (Arr[i] / k) times\n    \n  \n  if i is 26\n    while decrement k is true, print kString\n    print newline\n  else\n    print -1 print newline\n  \n  \n\n",
        "int main() {\n  int i, Len, k, Arr[26] = {0};\n  string s, kString;\n  cin >> k >> s;\n  for (i = 0; i < s.length(); i++) { Arr[s[i] - 'a']++; }\n  for (i = 0; i < 26; i++) {\n    if (Arr[i] % k != 0)\n    {\n      break;\n    } else {\n      kString.append(Arr[i] / k, 'a' + i);\n    }\n  }\n  if (i == 26) {\n    while (k--) { cout << kString; }\n    cout << endl;\n  } else {\n    cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create constant double PI = acos(-1)\nlet const integer MAX = 2e9 + 7\nlet const long long MOD = 1e9 + 7\ncreate map m of chars to ints\ndeclare solve\n  let int k\n  read k\n  let string s\n  read s\n  create int n = s.size()\n  if n modulo k is not equal to 0\n    print - 1\n    terminate function\n  \n  create int need = n / k\n  increment all contents of m[s]\n  let string t = \"\"\n  for i = 97 to 123 exclusive\n    if m[char(i)] modulo k is 0\n      for j = 0 to m[char(i)] / k exclusive, set t to t + char(i)\n    otherwise do\n      print -1\n      end function\n    \n  \n  for i = 0 to k exclusive, print t\n  print new line\n\n\n  call solve\n  \n\n",
        "const double PI = acos(-1);\nconst int MAX = 2e9 + 7;\nconst long long MOD = 1e9 + 7;\nmap<char, int> m;\nvoid solve() {\n  int k;\n  cin >> k;\n  string s;\n  cin >> s;\n  int n = s.size();\n  if (n % k != 0) {\n    cout << -1 << endl;\n    return;\n  }\n  int need = n / k;\n  for (int i = 0; i < n; i++) { m[s[i]]++; }\n  string t = \"\";\n  for (int i = 97; i < 123; i++) {\n    if (m[char(i)] % k == 0) {\n      for (int j = 0; j < m[char(i)] / k; j++) { t += char(i); }\n    } else {\n      cout << -1 << endl;\n      return;\n    }\n  }\n  for (int i = 0; i < k; i++) { cout << t; }\n  cout << endl;\n}\nint main() {\n  solve();\n  return 0;\n}\n"
    ],
    [
        "ctn = int array of length 30\n\n  let n, k be int\n  let s be a string\n  read k and s\n  set n to the lenght of s\n  for i = 0 to n exclusive increment cnt at s[i] - 'a'\n  let can = true be a boolean\n  let ss be a blank string\n  for x = 'a' to 'z' inclusive\n    if cnt[x - 'a'] mod k is not 0\n      can is false\n    else\n      for j = 0 to cnt[x-'a']/k increment ss by x\n    \n  \n  if can\n    print ss for k times\n    print new line\n  else\n    print -1 and new line\n  \n\n",
        "int cnt[30];\nint main() {\n  int n, k;\n  string s;\n  cin >> k >> s;\n  n = s.length();\n  for (int i = 0; i < n; i++) { cnt[s[i] - 'a']++; }\n  bool can = true;\n  string ss = \"\";\n  for (char x = 'a'; x <= 'z'; x++) {\n    if (cnt[x - 'a'] % k != 0) {\n      can = false;\n    } else {\n      for (int j = 0; j < cnt[x - 'a'] / k; j++) { ss += x; }\n    }\n  }\n  if (can) {\n    for (int i = 0; i < k; i++) { cout << ss; }\n    cout << endl;\n  } else {\n    cout << -1 << endl;\n  }\n}\n"
    ],
    [
        "\n  create integers k, i and j\n  declare string s\n  create integer array c with size 26\n  read input to k and s\n  if length of s % k != 0\n    print -1 to the standart output\n    \n  \n  for i = 0 to length of s exclusive,\n  for i = 0 to 26 exclusive\n    if c[i] % k != 0\n      print -1 to the standart output\n      \n    \n  \n  create string result\n  for i = 0 to 26 exclusive\n    for j from 0 to c[i] / k exclusive, append char('a' + i) to result\n  \n  for i from 0 to k exclusive, print result to the standart output\n  print new line\n  \n\n",
        "int main() {\n  int k, i, j;\n  string s;\n  int c[26] = {0};\n  cin >> k >> s;\n  if (s.size() % k != 0) {\n    cout << -1 << endl;\n    return 0;\n  }\n  for (i = 0; i < s.size(); i++) { c[s[i] - 'a']++; }\n  for (i = 0; i < 26; i++) {\n    if (c[i] % k != 0) {\n      cout << -1 << endl;\n      return 0;\n    }\n  }\n  string result;\n  for (i = 0; i < 26; i++) {\n    for (j = 0; j < c[i] / k; j++) { result = result + char('a' + i); }\n  }\n  for (i = 0; i < k; i++) { cout << result; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 100 + 5\ncreate contant integer mod with mod = 1000000000 + 7\ndeclare boolean ok with character a as argument, returning boolean\n  if a is greater than or equal to 'a' and a is less than or equal to 'z', return 1 from function\n  if a is greater than or equal to 'A' and a is less than or equal to 'Z', return 1 from function\n  if a is greater than or equal to '0' and a is less than or equal to '9', return 1 from function\n  if a is '_', return 1 from function\n  \n\n\n  create character array a with size N\n  read a + 1\n  create integer len with len = string length of (a + 1)\n  create integer op with op = 1\n  create boolean flag with flag = 1\n  create integers cnt1, cnt2, ccnt, cnt3, with cnt1 = 0, cnt2 = 0, ccnt = 0, cnt3 = 0\n  for i = 1 to len and flag inclusive\n    if op is 1\n      increment cnt1\n      if a[i] is '@'\n        decrement cnt1\n        set op to 2\n        break current loop iteration\n      \n      if result of run ok with a[i] as argument is false, set flag to 0\n      if cnt1 is greater than 16, set flag to 0\n    else if op is 2\n      increment ccnt\n      if cnt is 0 or cnt1 is greater than 16, set flag to 0\n      if a[i] is '.'\n        if cnt2 is 0 or cnt2 is greater than 16, set flag to 0\n        set cnt2 to 0\n        break current loop iteration\n      \n      if a[i] is '/'\n        decrement ccnt\n        set op to 3\n        break current loop iteration\n      \n      if result of run ok with a[i] as argument is false, set flag to 0\n      increment cnt2\n      if cnt2 is greater than 16, set flag to 0\n    else\n      if cnt2 is 0 or cnt2 is greater than 16, set flag to 0\n      if ccnt is 0 or ccnt is greater than 32, set flag to 0\n      if result of run ok with a[i] as argument is false, set flag to 0\n      increment cnt3\n      if cnt3 is greater than 16, set flag to 0\n    \n  \n  if op is 1, set flag to 0\n  if op is 2 and ( cnt2 is 0 or cnt2 is greater than 16 ), set flag to 0\n  if op is 3 and ( cnt3 is 0 or cnt3 is greater than 16 ), set flag to 0\n  if flag is true\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n  \n\n",
        "const int N = 100 + 5;\nconst int mod = 1000000000 + 7;\nbool ok(char a) {\n  if (a >= 'a' && a <= 'z') return 1;\n  if (a >= 'A' && a <= 'Z') return 1;\n  if (a >= '0' && a <= '9') return 1;\n  if (a == '_') return 1;\n  return 0;\n}\nint main() {\n  char a[N];\n  cin >> a + 1;\n  int len = strlen(a + 1);\n  int op = 1;\n  bool flag = 1;\n  int cnt1 = 0, cnt2 = 0, ccnt = 0, cnt3 = 0;\n  for (int i = 1; i <= len && flag; i++) {\n    if (op == 1) {\n      cnt1++;\n      if (a[i] == '@') {\n        cnt1--;\n        op = 2;\n        continue;\n      }\n      if (!ok(a[i])) { flag = 0; }\n      if (cnt1 > 16) flag = 0;\n    } else if (op == 2) {\n      ccnt++;\n      if (cnt1 == 0 || cnt1 > 16) flag = 0;\n      if (a[i] == '.') {\n        if (cnt2 == 0 || cnt2 > 16) flag = 0;\n        cnt2 = 0;\n        continue;\n      }\n      if (a[i] == '/') {\n        ccnt--;\n        op = 3;\n        continue;\n      }\n      if (!ok(a[i])) { flag = 0; }\n      cnt2++;\n      if (cnt2 > 16) flag = 0;\n    } else {\n      if (cnt2 == 0 || cnt2 > 16) flag = 0;\n      if (ccnt == 0 || ccnt > 32) flag = 0;\n      if (!ok(a[i])) flag = 0;\n      cnt3++;\n      if (cnt3 > 16) flag = 0;\n    }\n  }\n  if (op == 1) flag = 0;\n  if (op == 2 && (cnt2 == 0 || cnt2 > 16)) flag = 0;\n  if (op == 3 && (cnt3 == 0 || cnt3 > 16)) flag = 0;\n  if (flag)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N = 100 + 5\ncreate constant integer mod = 1000000000 + 7\nbool function ok with char argument a\n  if a is a letter character return 1\n  if a is a capital letter character return 1\n  if a is a digit return 1\n  if a is '_' return 1\n  \n\n\n  declare array of characters of size N\n  read a + 1\n  create integer len with value = length of (a + 1)\n  set integer op to 1\n  set boolean flag to 1\n  integers cnt1 = 0, cnt2 = 0, ccnt = 0 and cnt3 = 0\n  for integer i = 1 to len and flag inclusive\n    if op is equal to 1\n      increase cnt1\n      if a[i] is '@'\n        decrement cnt1\n        set value of op to 2\n        go to the start of the loop\n      \n      if ok(a[i]) is false, set flag to 0\n      if cnt1 is greater than 16, set flag to 0\n    else if op is equal to 2\n      increment ccnt\n      if cnt1 = 0 or cnt1 > 16, set flag to 0\n      if a[i] is '.'\n        if cnt2 = 0 or cnt2 > 16, set flag to 0\n        set cnt2 to 0\n        go to the start of the loop\n      \n      if a[i] is '/'\n        decrement ccnt\n        op = 3\n        continue the loop\n      \n      if ok(a[i]) is false, set flag to 0\n      increase cnt2\n      if cnt2 is greater than 16, set flag to 0\n    else\n      if cnt2 = 0 or cnt2 is greater than 16, set flag to 0\n      if ccnt = 0 or ccnt is greater than 32, set flag to 0\n      if ok(a[i]) is false, set flag to 0\n      increase cnt3\n      if cnt3 is greater than 16, set flag to 0\n    \n  \n  if op is equal to 1, set flag to 0\n  if op = 2 and (cnt2 = 0 or cnt2 is greater than 16), set flag to 0\n  if op = 3 and (cnt3 = 0 or cnt3 is greater than 16), set flag to 0\n  if flag is true\n    print \"YES\" and a new line\n  else\n    print \"NO\" and a new line\n  \n\n",
        "const int N = 100 + 5;\nconst int mod = 1000000000 + 7;\nbool ok(char a) {\n  if (a >= 'a' && a <= 'z') return 1;\n  if (a >= 'A' && a <= 'Z') return 1;\n  if (a >= '0' && a <= '9') return 1;\n  if (a == '_') return 1;\n  return 0;\n}\nint main() {\n  char a[N];\n  cin >> a + 1;\n  int len = strlen(a + 1);\n  int op = 1;\n  bool flag = 1;\n  int cnt1 = 0, cnt2 = 0, ccnt = 0, cnt3 = 0;\n  for (int i = 1; i <= len && flag; i++) {\n    if (op == 1) {\n      cnt1++;\n      if (a[i] == '@') {\n        cnt1--;\n        op = 2;\n        continue;\n      }\n      if (!ok(a[i])) { flag = 0; }\n      if (cnt1 > 16) flag = 0;\n    } else if (op == 2) {\n      ccnt++;\n      if (cnt1 == 0 || cnt1 > 16) flag = 0;\n      if (a[i] == '.') {\n        if (cnt2 == 0 || cnt2 > 16) flag = 0;\n        cnt2 = 0;\n        continue;\n      }\n      if (a[i] == '/') {\n        ccnt--;\n        op = 3;\n        continue;\n      }\n      if (!ok(a[i])) { flag = 0; }\n      cnt2++;\n      if (cnt2 > 16) flag = 0;\n    } else {\n      if (cnt2 == 0 || cnt2 > 16) flag = 0;\n      if (ccnt == 0 || ccnt > 32) flag = 0;\n      if (!ok(a[i])) flag = 0;\n      cnt3++;\n      if (cnt3 > 16) flag = 0;\n    }\n  }\n  if (op == 1) flag = 0;\n  if (op == 2 && (cnt2 == 0 || cnt2 > 16)) flag = 0;\n  if (op == 3 && (cnt3 == 0 || cnt3 > 16)) flag = 0;\n  if (flag)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "declare myCompare with constant pair address's i, j, from string to integer\n  return second element of i is less than second element of j\n\ncreate string s\ndeclare check with no arguments, returning integer\n  create integers x, y, 0, with x = 0, y = 0, flag = 0\n  for i = 0 to size of s\n    if flag is 0\n      if s[i] is '@'\n        if i - x is greater than 16 or i - x is less than 1 or i + 1 is size of s, return 0 from function\n        set x to i + 1\n        set y to i + 1\n        set flag to 1\n      else if s[i] is alphanumeric or s[i] is digit or s[i] is '_'\n        break current loop iteration\n      else if s[i] is not alphanumeric or s[i] is not digit or s[i] is not '_'\n        \n      \n    else if flag is 1\n      if s[i] is '/'\n        if i - x is greater than 32 or i - x is less than 1 or i + 1 is size of s or s[i-1] is '.', return 0 from function\n        set x to i + 1\n        set flag to 2\n      else if s[i] is '.'\n        if i - y is greater than 16 or i - y is less than 1 or i + 1 is size of s, return 0 from function\n        set y to i + 1\n      else if s[i] is alphanumeric or s[i] is digit or s[i] is '.' or s[i] is '_'\n        if i + 1 is size of s\n          if i - x + 1 is greater than 32 or i - x + 1 is less than 1, return 0 from function\n          if i - y + 1 is greater than 16 or i - y + 1 is less than 1, return 0 from function\n        \n        break current loop iteration\n      else if s[i] is not alphanumeric or s[i] is not digit or s[i] is not '.' or s[i] is not '_'\n        \n      \n    else\n      if s[i] is '_' and i + 1 is size of s, return 0 from function\n      if s[i] is alphanumeric or s[i] is digit or s[i] is '_'\n        if i + 1 is size of s\n          if i - x + 1 is greater than 16 or i - x + 1 is less than 1, return 0 from function\n        \n        break current loop iteration\n      \n      if s[i] is not alphanumeric or s[i] is not digit or s[i] is not '_', return 0 from function\n    \n  \n  if flag is greater than 0\n    return 1 from function\n  else\n    \n\n\n  read s\n  print \"YES\" if result of run check is true, else \"NO\" print newline\n  \n\n",
        "bool myCompare(const pair<string, int> &i, const pair<string, int> &j) {\n  return i.second < j.second;\n}\nstring s;\nint check() {\n  int x = 0, y = 0, flag = 0;\n  for (int i = 0; i < s.size(); i++) {\n    if (flag == 0) {\n      if (s[i] == '@') {\n        if ((i - x) > 16 || (i - x) < 1 || (i + 1 == s.size())) return 0;\n        x = i + 1;\n        y = i + 1;\n        flag = 1;\n      } else if (isalpha(s[i]) || isdigit(s[i]) || s[i] == '_') {\n        continue;\n      } else if (!isalpha(s[i]) || !isdigit(s[i]) || s[i] != '_') {\n        return 0;\n      }\n    } else if (flag == 1) {\n      if (s[i] == '/') {\n        if ((i - x) > 32 || (i - x) < 1 || (i + 1 == s.size()) || s[i - 1] == '.') return 0;\n        x = i + 1;\n        flag = 2;\n      } else if (s[i] == '.') {\n        if ((i - y) > 16 || (i - y) < 1 || (i + 1 == s.size())) return 0;\n        y = i + 1;\n      } else if (isalpha(s[i]) || isdigit(s[i]) || s[i] == '.' || s[i] == '_') {\n        if (i + 1 == s.size()) {\n          if ((i - x + 1) > 32 || (i - x + 1) < 1) return 0;\n          if ((i - y + 1) > 16 || (i - y + 1) < 1) return 0;\n        }\n        continue;\n      } else if (!isalpha(s[i]) || !isdigit(s[i]) || s[i] != '.' || s[i] != '_') {\n        return 0;\n      }\n    } else {\n      if (s[i] == '_' && i + 1 == s.size()) return 0;\n      if (isalpha(s[i]) || isdigit(s[i]) || s[i] == '_') {\n        if (i + 1 == s.size()) {\n          if ((i - x + 1) > 16 || (i - x + 1) < 1) return 0;\n        }\n        continue;\n      }\n      if (!isalpha(s[i]) || !isdigit(s[i]) || s[i] != '_') { return 0; }\n    }\n  }\n  if (flag > 0)\n    return 1;\n  else\n    return 0;\n}\nint main() {\n  cin >> s;\n  cout << (check() ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
    ],
    [
        "boolean function l that takes character c as argument\n  return true if c is a letter\n  return true if c is a capital letter\n  return true if c is a digit\n  return true if c is an underscore\n  return false\n\nfunction un with string argument s\n  set value of int n to length s\n  if n is 0 or n > 16 return false\n  for i = 0 to n exclusive\n    if l(s at index i) is false return false\n  \n  return true\n\nfunction hn with string argument s\n  declare integers n = size of s, i, nw = 0\n  if n is 0 or n > 32 return false\n  appen character '.' to s\n  for i = 0 to n + 1 exclusive\n    if s[i] is character \".\"\n      if nw is equal to 0 or nw is greater than 16 return false\n      nw = 0\n    else\n      if l(s at index i) is false return false\n      increase nw\n    \n  \n  return true\n\nboolean function r with string argument s\n  return un(s)\n\nboolean function f with string argument s\n  int n = length of s, i, j\n  for i = 0 to n exclusive\n    if s at index i is \"@\" break the loop\n  \n  if i is equal to n return false\n  if un(substring of s from 0 to i) is false return false\n  for j = from i + 1 to n exclusive\n    if s[j] is \"/\" break the loop\n  \n  if hn(substring of s from i + 1 to j - i - 1) is false return false\n  if j is not equal to n and r(substring of s from 0 to j +1) is false return false\n  return true\n\nlet s be string\n\n  read s\n  if f(s)\n    print \"YES\" and a new line\n  else\n    print \"NO\" and a new line\n  \n  \n\n",
        "bool l(char c) {\n  if (c >= 'a' && c <= 'z') { return true; }\n  if (c >= 'A' && c <= 'Z') { return true; }\n  if (c >= '0' && c <= '9') { return true; }\n  if (c == '_') { return true; }\n  return false;\n}\nbool un(string s) {\n  int n = s.size();\n  if (n == 0 || n > 16) { return false; }\n  for (int i = 0; i < n; i++) {\n    if (!l(s[i])) { return false; }\n  }\n  return true;\n}\nbool hn(string s) {\n  int n = s.size(), i, nw = 0;\n  if (n == 0 || n > 32) { return false; }\n  s += '.';\n  for (i = 0; i < n + 1; i++) {\n    if (s[i] == '.') {\n      if (nw == 0 || nw > 16) { return false; }\n      nw = 0;\n    } else {\n      if (!l(s[i])) { return false; }\n      nw++;\n    }\n  }\n  return true;\n}\nbool r(string s) {\n  return un(s);\n}\nbool f(string s) {\n  int n = s.size(), i, j;\n  for (i = 0; i < n; i++) {\n    if (s[i] == '@') { break; }\n  }\n  if (i == n) { return false; }\n  if (!un(s.substr(0, i))) { return false; }\n  for (j = i + 1; j < n; j++) {\n    if (s[j] == '/') { break; }\n  }\n  if (!hn(s.substr(i + 1, j - i - 1))) { return false; }\n  if (j != n && !r(s.substr(j + 1))) { return false; }\n  return true;\n}\nstring s;\nint main() {\n  cin >> s;\n  if (f(s)) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create ints i, j, flag = 1, and dot = 0\n  let string ch\n  read ch\n  for i = 0 to length of ch exclusive\n    if ch[i] is equal to '@'\n      if i is greater than 16 or i is less than 1\n        set flag to 0\n        move to print\n      \n      break loop\n    else if ch[i] is greater than or equal to 'a' and ch[i] is less than or equal to 'z' or if ch[i] is greater than or equal to 'A' and ch[i] is less than or equal to 'Z'\n      continue to next loop\n    else if ch[i] is greater than or equal to '0' and ch[i] is less than or equal to '9' and if ch[i] is equal to '_'\n      continue to next loop iteration\n    else\n      set flag to 0\n      go to print\n    \n  \nidentify dot\n  for j = i + 1 to length of ch exclusive\n    if ch[j] is equal to '.'\n      if j - 1 is greater than 17 or j - i is less than 2\n        set flag to 0\n        go to print\n      \n      set i to j\n    else if ch[j] is greater than or equal to 'a' and ch[j] is less than or equal to 'z' or if ch[j] is greater than or equal to 'A' and ch[j] is less than or equal to 'Z'\n      continue to next loop\n    else if ch[j] is greater than or equal to '0' and ch[j] is less than or equal to '9' or if ch[j] is equal to '_'\n      continue to next loop\n    else if ch[j] is equal to '/'\n      if j - 1 is greater than 17 or j - i is less than 2\n        set flag to 0\n        go to print\n      \n      set i to j\n    otherwise\n      set flag to 0\n      move to print\n    \n  \n  if j - i is greater than 17 or j - i is less than 2, set flag to 0\nidentify print\n  print \"YES\\n\" if flag is truthy or \"NO\\n\" if not\n  \n\n",
        "int main() {\n  int i, j, flag = 1, dot = 0;\n  string ch;\n  cin >> ch;\n  for (i = 0; i < ch.length(); i++) {\n    if (ch[i] == '@') {\n      if (i > 16 || i < 1) {\n        flag = 0;\n        goto print;\n      }\n      break;\n    } else if ((ch[i] >= 'a' && ch[i] <= 'z') || (ch[i] >= 'A' && ch[i] <= 'Z'))\n      continue;\n    else if ((ch[i] >= '0' && ch[i] <= '9') || (ch[i] == '_'))\n      continue;\n    else {\n      flag = 0;\n      goto print;\n    }\n  }\ndot:\n  for (j = i + 1; j < ch.length(); j++) {\n    if (ch[j] == '.') {\n      if (j - i > 17 || j - i < 2) {\n        flag = 0;\n        goto print;\n      }\n      i = j;\n    } else if ((ch[j] >= 'a' && ch[j] <= 'z') || (ch[j] >= 'A' && ch[j] <= 'Z'))\n      continue;\n    else if ((ch[j] >= '0' && ch[j] <= '9') || (ch[j] == '_'))\n      continue;\n    else if (ch[j] == '/') {\n      if (j - i > 17 || j - i < 2) {\n        flag = 0;\n        goto print;\n      }\n      i = j;\n    } else {\n      flag = 0;\n      goto print;\n    }\n  }\n  if (j - i > 17 || j - i < 2) flag = 0;\nprint:\n  (flag) ? (cout << \"YES\\n\") : (cout << \"NO\\n\");\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer n\n  read n\n  print n\n  for i = 1 to n exclusive, print ' ' and i\n  print '\\n'\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; i++) cout << ' ' << i;\n  cout << '\\n';\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  print n\n  for i = 1 to n exclusive, print \" \" print i\n  print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; ++i) { cout << \" \" << i; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  print n\n  for i = 1 to n exclusive, print \" \" print i\n  print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; ++i) { cout << \" \" << i; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  print n\n  for integer i = 1 to n exclusive print \" \" and i\n  print new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; ++i) { cout << \" \" << i; }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  print n\n  for i = 1 to n exclusive\n    if i is not n print \" \"\n    print i\n  \n  print new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; i++) {\n    if (i != n) cout << \" \";\n    cout << i;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be a integer\n  read n\n  print n\n  for ( i= 1 to n-1 inclusive ), print space and i\n  print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i <= n - 1; i++) cout << \" \" << i;\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer a\n  loop while reading a\n    print a\n    for integer i = 1 to a exclusive, print ' ' and i\n    print new line\n  \n  \n\n",
        "int main() {\n  int a;\n  while (cin >> a) {\n    cout << a;\n    for (int i = 1; i < a; i++) cout << ' ' << i;\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in the function desperate_optimization that takes integer precision\n  print floats with a fixed number of decimals\n  print floats with showpoint format\n  print precision with precision\n\n\n  call desperate_optimization on 10\n  n = integer\n  read n\n  print n\n  for i = 1 to n exclusive, print i\n  print new line\n  \n\n",
        "void desperate_optimization(int precision) {\n  cout.setf(ios::fixed);\n  cout.setf(ios::showpoint);\n  cout.precision(precision);\n}\nint main() {\n  desperate_optimization(10);\n  int n;\n  cin >> n;\n  cout << n;\n  for (int i = 1; i < n; i++) cout << \" \" << i;\n  cout << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  a =integer\n  Read a\n  print a\n  if a is greater than 1, then print \" \"\n  for i = 0 to a - 1 exclusive\n    print i + 1\n    if i + 2 is not equal to a, then print \" \"\n  \n  print a new line\n  \n\n",
        "int main() {\n  int a;\n  cin >> a;\n  cout << a;\n  if (a > 1) cout << \" \";\n  for (int i = 0; i < a - 1; i++) {\n    cout << i + 1;\n    if (i + 2 != a) cout << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "MOD = integer\nin function mod_pow with arguments of long long a and long long b and returns a long long\n  if b is 0, then return 1\n  if b is 1, then return a modulo MOD\n  if the last bit in binary of b is 1, then return a modulo MOD * the result of calling mod_pow with arguments a, b - 1 and then modulo the result of that function by MOD\n  x = long long = the result of calling mod_pow with arguments a, and the b with its elements shifted to the right by one bit\n  return (x * x) modulo MOD\n\n\n  n, m = integer\n  read n, m\n  MOD = m\n  r = integer = the result of calling mod_pow with arguments 3, n\n  if r is 0\n    print the result of m - 1\n  else\n    print the result of r - 1\n  \n  \n\n",
        "int MOD;\nlong long mod_pow(long long a, long long b) {\n  if (b == 0) return 1;\n  if (b == 1) return a % MOD;\n  if (b & 1) return ((a % MOD) * mod_pow(a, b - 1)) % MOD;\n  long long x = mod_pow(a, b >> 1);\n  return (x * x) % MOD;\n}\nint main() {\n  int n, m;\n  cin >> n >> m;\n  MOD = m;\n  int r = mod_pow(3, n);\n  if (r == 0) {\n    cout << m - 1 << endl;\n  } else {\n    cout << r - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare power with long longs x, integers y, m as arguments, returning long long\n  create long long res with res = 1\n  while y is greater than 0\n    if y bitwise and 1\n      set res to res * x\n      set res to res % m\n    \n    set y to y bitwise right 1\n    set x to x * x\n    set x to x % m\n  \n  return res from function\n\n\n  create integers n, m\n  read n read m\n  create integer ans with ans = result of run power with long long casted (3), n, m as arguments\n  if ans is 0\n    print m - 1 print newline\n  else\n    print ans - 1 print newline\n  \n  \n\n",
        "long long power(long long x, int y, int m) {\n  long long res = 1;\n  while (y > 0) {\n    if (y & 1) {\n      res = res * x;\n      res %= m;\n    }\n    y = y >> 1;\n    x = x * x;\n    x %= m;\n  }\n  return res;\n}\nint main() {\n  int n, m;\n  cin >> n >> m;\n  int ans = power((long long)3, n, m);\n  if (ans == 0) {\n    cout << m - 1 << endl;\n  } else {\n    cout << ans - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in function modl taking three long longs n, k and p and returning a long long\n  if n is 0 return 0\n  if k is 0\n    return 1\n  else if k is even\n    return (modl of n, k / 2 and p * (modl of n, k / 2 and p)) mod p\n  else\n    return (n * modl of n, k - 1 and p) mod p\n\n\n  n, m = long long\n  read n then m\n  z = long long with z = modl of 3, n and m\n  if z is 0\n    print m - 1\n  else\n    print z - 1\n  \n\n",
        "long long modl(long long n, long long k, long long p) {\n  if (n == 0) return 0;\n  if (k == 0)\n    return 1;\n  else if (k % 2 == 0) {\n    return (modl(n, k / 2, p) * (modl(n, k / 2, p))) % p;\n  } else\n    return (n * modl(n, k - 1, p)) % p;\n}\nint main() {\n  long long n, m;\n  cin >> n >> m;\n  long long z = modl(3, n, m);\n  if (z == 0)\n    cout << m - 1 << endl;\n  else\n    cout << z - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers n and m\n  read n and m\n  create long long a = 3\n  create integer i = 1\n  create integer two = 0\n  while n > 0\n    if n is odd, assign i * a % m to i\n    set n to n / 2\n    change a to a squared modulo m\n  \n  print (i - 1 + m) % m\n  \n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  long long a = 3;\n  int i = 1;\n  int two = 0;\n  while (n > 0) {\n    if (n % 2 == 1) i = i * a % m;\n    n = n / 2;\n    a = (a * a) % m;\n  }\n  cout << (i - 1 + m) % m << endl;\n  return 0;\n}\n"
    ],
    [
        "in function pow taking three long longs a, b and m and returning a long long\n  res = long long with res = 1\n  loop while b is not 0\n    if b bitwise-and 1 is true then set res to (res * a) mod m\n    set a to (a * a) mod m\n    set b to b bithsift right by 1\n  \n  return res\n\n\n  n, m = long long\n  read n then m\n  print ((pow of 3, n and m) - 1 + m) mod m\n  \n\n",
        "long long pow(long long a, long long b, long long m) {\n  long long res = 1;\n  while (b) {\n    if (b & 1) { res = (res * a) % m; }\n    a = (a * a) % m;\n    b >>= 1;\n  }\n  return res;\n}\nint main() {\n  long long n, m;\n  cin >> n >> m;\n  cout << (pow(3, n, m) - 1 + m) % m << endl;\n  return 0;\n}\n"
    ],
    [
        "MAX = const integer with MAX = 3e4 + 5\nMAX2 = const long long with MAX2 = 11\nMOD = const integer with MOD = 1000000000 + 7\nINF = const long long with INF = 20000\ndr = const integer array with dr = {1, 0, -1, 0, 1, 1, -1, -1}\ndc = const integer array with dc = {0, 1, 0, -1, 1, -1, 1, -1}\npi = const double with pi = acos(-1)\neps = const double with eps = 1e-9\nn, m = long long\nin the function pw that returns long long\n  ret = long long with ret = 1, x = 3\n  while n\n    if n bitwise and 1, ret = (ret * x) modulo m\n    x = (x * x) modulo m\n    n = right shift n 1 place\n  \n  return ret\n\n\n  read n, m\n  print (pw() + m - 1) modulo m\n  \n\n",
        "const int MAX = 3e4 + 5;\nconst long long MAX2 = 11;\nconst int MOD = 1000000000 + 7;\nconst long long INF = 20000;\nconst int dr[] = {1, 0, -1, 0, 1, 1, -1, -1};\nconst int dc[] = {0, 1, 0, -1, 1, -1, 1, -1};\nconst double pi = acos(-1);\nconst double eps = 1e-9;\nlong long n, m;\nlong long pw() {\n  long long ret = 1, x = 3;\n  while (n) {\n    if (n & 1) ret = (ret * x) % m;\n    x = (x * x) % m;\n    n >>= 1;\n  }\n  return ret;\n}\nint main() {\n  cin >> n >> m;\n  cout << (pw() + m - 1) % m << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "m = long long\nin function pw taking two long longs x and p and returning a long long\n  if p is 0 return 1 mod m\n  z = long long with z = pw of x and p / 2\n  set z to z * z\n  set z to z mod m\n  if p is even return z\n  set z to z * x\n  set z to z mod m\n  return z\n\n\n  n = long long\n  raed n then m\n  res = long long with res = 2 * ((pw of 3 and n) - 1) / 2\n  set res to res mod m\n  increment res by m\n  set res to res mod m\n  print res\n  \n\n",
        "long long m;\nlong long pw(long long x, long long p) {\n  if (!p) return 1 % m;\n  long long z = pw(x, p / 2);\n  z *= z;\n  z %= m;\n  if (p % 2 == 0) return z;\n  z *= x;\n  z %= m;\n  return z;\n}\nint main() {\n  long long n;\n  cin >> n >> m;\n  long long res = 2 * (pw(3, n) - 1) / (2);\n  res %= m;\n  res += m;\n  res %= m;\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "declare power taking in long long ints x, y, and MOD and returning long long int\n  create unsigned long long int res = 1\n  set x to x modulo MOD\n  while y is more than 0\n    if y & 1 is truthy, set res to (res * x) % MOD\n    set y to y >> 1\n    set x to (x * x) % MOD\n  \n  convert res to long long int and return it\n\ncreate long long ints n, m, and res\n\n  read n and m\n  set res to power(3, n, m) - 1\n  print (res + m) % m\n  \n\n",
        "long long power(long long x, long long y, long long MOD) {\n  unsigned long long res = 1;\n  x = x % MOD;\n  while (y > 0) {\n    if (y & 1) { res = (res * x) % MOD; }\n    y = y >> 1;\n    x = (x * x) % MOD;\n  }\n  return (long long)res;\n}\nlong long n, m, res;\nint main() {\n  cin >> n >> m;\n  res = power(3, n, m) - 1;\n  cout << (res + m) % m << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long longs m and n\npw is a long long function with long long arguments a and b\n  declare long long res with value 1\n  while b is not 0\n    if b & 1 is true, change res to (res * a) modulo m\n    set a to a squared modulo m\n    change the value of b to b divided by 2\n  \n  return res\n\n\n  read input to n and m\n  declare long long variable with name ans and value = pw of 3 and n\n  decrement ans\n  if ans is less than 0, add m to ans\n  print ans to the standard output\n  \n\n",
        "long long m, n;\nlong long pw(long long a, long long b) {\n  long long res = 1;\n  while (b) {\n    if (b & 1) res = (res * a) % m;\n    a = (a * a) % m;\n    b /= 2;\n  }\n  return res;\n}\nint main() {\n  cin >> n >> m;\n  long long ans = (pw(3, n));\n  ans--;\n  if (ans < 0) ans += m;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "declare f taking in long long integers n and m and returning long long int\n  if n is equal to 0\n    return the result of 1 % m\n  else if n is equal to 1\n    return 3 % m\n  \n  create long long tmp = f(n / 2, m)\n  if n modulo 2 is 0\n    return the result of tmp * tmp % m\n  otherwise\n    return (tmp * tmp % m) * 3 % m\n  \n\n\n  create ints n and m\n  read n and m\n  create long long int fx = f(n, m)\n  if fx is 0\n    print m - 1\n  else\n    print fx - 1\n  \n  \n\n",
        "long long f(long long n, long long m) {\n  if (n == 0) {\n    return 1 % m;\n  } else if (n == 1) {\n    return 3 % m;\n  }\n  long long tmp = f(n / 2, m);\n  if (n % 2 == 0) {\n    return tmp * tmp % m;\n  } else {\n    return (tmp * tmp % m) * 3 % m;\n  }\n}\nint main() {\n  int n, m;\n  cin >> n >> m;\n  long long fx = f(n, m);\n  if (fx == 0) {\n    cout << m - 1 << endl;\n  } else {\n    cout << fx - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "m = long long\nin function power taking a long long a and an int n and returning an int\n  res = long long with res = 1\n  loop while n is greater than 0\n    if n is uneven\n      set res to res * a\n      set res to res mod m\n    \n    set a to a * a\n    set a to a mod m\n    set n to n / 2\n  \n  return res\n\n\n  n = int\n  read n then m\n  print (((power of 3 and n) - 1) mod m + m) mod m\n  \n\n",
        "long long m;\nint power(long long a, int n) {\n  long long res = 1;\n  while (n > 0) {\n    if (n % 2 == 1) {\n      res *= a;\n      res %= m;\n    }\n    a *= a;\n    a %= m;\n    n /= 2;\n  }\n  return res;\n}\nint main() {\n  int n;\n  cin >> n >> m;\n  cout << ((power(3, n) - 1) % m + m) % m << endl;\n  return 0;\n}\n"
    ],
    [
        "declare power with long longs a, b, m as arguments, returning long long\n  create long longs temp, ans with temp = a, ans = 1\n  while b is true\n    if b bitwise and 1 is true, set ans to (ans % m * temp % m) % m\n    set temp to (temp % m * temp % m) % m\n    set b to b / 2\n  \n  return ans from function\n\n\n  create long longs n, m\n  read n read m\n  print ( result of run power with 3, n, m as arguments - 1 + m ) % m print newline\n\n",
        "long long power(long long a, long long b, long long m) {\n  long long temp = a, ans = 1;\n  while (b) {\n    if (b & 1) ans = (ans % m * temp % m) % m;\n    temp = (temp % m * temp % m) % m;\n    b /= 2;\n  }\n  return ans;\n}\nint main() {\n  long long n, m;\n  cin >> n >> m;\n  cout << (power(3, n, m) - 1 + m) % m << endl;\n}\n"
    ],
    [
        "\n  create long longs ax, ay, bx, by, cx, cy\n  read ax read ay read bx read by read cx read cy\n  create long long ds with ds = (bx * cy - by * cx) - (ax * cy - ay * cx) + (ax * by - ay * bx)\n  if ds is 0\n    print \"TOWARDS\"\n  else if ds is less than 0\n    print \"RIGHT\"\n  else\n    print \"LEFT\"\n  print '\\n'\n\n",
        "int main() {\n  long long ax, ay, bx, by, cx, cy;\n  cin >> ax >> ay >> bx >> by >> cx >> cy;\n  long long ds = (bx * cy - by * cx) - (ax * cy - ay * cx) + (ax * by - ay * bx);\n  if (ds == 0)\n    cout << \"TOWARDS\";\n  else if (ds < 0)\n    cout << \"RIGHT\";\n  else\n    cout << \"LEFT\";\n  cout << '\\n';\n}\n"
    ],
    [
        "function solve (no args, no return value)\n  a1,a2,b1,b2,c1,c2=long long\n  read a1,a2,b1,b2,c1,c2\n  d=(b1-a1)*(c2-a2)-(b2-a2)*(c1-a1)\n  if d is 0\n    print \"TOWARDS\"\n  else if d > 0\n    print \"LEFT\"\n  else\n    print \"RIGHT\"\n  \n\n\n  set output precision to 12 digits\n  solve()\n  \n\n",
        "void solve() {\n  long long a1, a2, b1, b2, c1, c2;\n  cin >> a1 >> a2 >> b1 >> b2 >> c1 >> c2;\n  long long d = (b1 - a1) * (c2 - a2) - (b2 - a2) * (c1 - a1);\n  if (d == 0) {\n    cout << \"TOWARDS\" << endl;\n  } else if (d > 0) {\n    cout << \"LEFT\" << endl;\n  } else {\n    cout << \"RIGHT\" << endl;\n  }\n}\nint main() {\n  cout << setprecision(12) << fixed;\n  solve();\n  return 0;\n}\n"
    ],
    [
        "declare fp with long longs n, p as arguments, returning long long\n  if p is 0, return 1 from function\n  if p is 1, return n from function\n  create long long res with res = result of run fp with n, p / 2 as arguments\n  set res to res * res\n  if p % 2, set res to res * n\n  return res from function\n\n\n  create pair of integer, integer array arr with size 5\n  create integers a, b, c\n  create soubles s, ss, with s = -1, ss = -1\n  create boolean f with f = 0\n  for i = 0 to 3 exclusive\n    read first element of arr[i] read second element of arr[i]\n    if i is 1\n      if ((first element of arr[i] - first element of arr[i - 1]) is not 0) set s to (second element of arr[i] - second element of arr[i - 1]) / (first element of arr[i] - first element of arr[i - 1])\n    else if i is 2\n      if ((first element of arr[i] - first element of arr[i - 1]) is not 0) set ss to (second element of arr[i] - second element of arr[i - 1]) / (first element of arr[i] - first element of arr[i - 1])\n      if s is ss, set f to 1\n    \n  \n  if f is true, return print \"TOWARDS\" print '\\n', 0 from function\n  if second element of arr[0] is greater than second element of arr[1]\n    if first element of arr[2] is greater than first element of arr[1]\n      return print \"LEFT\" print '\\n', 0 from function\n    else\n      return print \"RIGHT\" print '\\n', 0 from function\n  else if second element of arr[0] is less than second element of arr[1]\n    if first element of arr[2] is less than first element of arr[1]\n      return print \"LEFT\" print '\\n', 0 from function\n    else\n      return print \"RIGHT\" print '\\n', 0 from function\n  else if second element of arr[0] is second element of arr[1] and first element of arr[0] is less than first element of arr[1]\n    if second element of arr[2] is greater than second element of arr[1]\n      return print \"LEFT\" print '\\n', 0 from function\n    else\n      return print \"RIGHT\" print '\\n', 0 from function\n  else if second element of arr[0] is second element of arr[1] and first element of arr[0] is greater than first element of arr[1]\n    if second element of arr[2] is less than second element of arr[1]\n      return print \"LEFT\" print '\\n', 0 from function\n    else\n      return print \"RIGHT\" print '\\n', 0 from function\n  \n  \n\n",
        "long long fp(long long n, long long p) {\n  if (p == 0) return 1;\n  if (p == 1) return n;\n  long long res = fp(n, p / 2);\n  res = ((res) * (res));\n  if (p % 2) res = (res * n);\n  return res;\n}\nint main() {\n  pair<int, int> arr[5];\n  int a, b, c;\n  double s = -1, ss = -1;\n  bool f = 0;\n  for (int i = 0; i < 3; i++) {\n    cin >> arr[i].first >> arr[i].second;\n    if (i == 1) {\n      if ((arr[i].first - arr[i - 1].first) != 0) s = (arr[i].second - arr[i - 1].second) / (arr[i].first - arr[i - 1].first);\n    } else if (i == 2) {\n      if ((arr[i].first - arr[i - 1].first) != 0) ss = (arr[i].second - arr[i - 1].second) / (arr[i].first - arr[i - 1].first);\n      if (s == ss) f = 1;\n    }\n  }\n  if (f) return cout << \"TOWARDS\" << '\\n', 0;\n  if (arr[0].second > arr[1].second) {\n    if (arr[2].first > arr[1].first)\n      return cout << \"LEFT\" << '\\n', 0;\n    else\n      return cout << \"RIGHT\" << '\\n', 0;\n  } else if (arr[0].second < arr[1].second) {\n    if (arr[2].first < arr[1].first)\n      return cout << \"LEFT\" << '\\n', 0;\n    else\n      return cout << \"RIGHT\" << '\\n', 0;\n  } else if (arr[0].second == arr[1].second && arr[0].first < arr[1].first) {\n    if (arr[2].second > arr[1].second)\n      return cout << \"LEFT\" << '\\n', 0;\n    else\n      return cout << \"RIGHT\" << '\\n', 0;\n  } else if (arr[0].second == arr[1].second && arr[0].first > arr[1].first) {\n    if (arr[2].second < arr[1].second)\n      return cout << \"LEFT\" << '\\n', 0;\n    else\n      return cout << \"RIGHT\" << '\\n', 0;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  x1, x2, x3, y1, y2, y3 =integers\n  Read x1, x2, x3, y1, y2, y3\n  if (y2 - y1) * (x3 - x2) is equal to (y3 - y2) * (x2 - x1)\n    print TOWARDS and a new line\n  else if (x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) is greater than 0\n    print RIGHT and a new line\n  else do the following\n    print LEFT and a new line\n  \n  \n\n",
        "int main() {\n  long long int x1, x2, x3, y1, y2, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  if ((y2 - y1) * (x3 - x2) == (y3 - y2) * (x2 - x1)) {\n    cout << \"TOWARDS\" << endl;\n  } else if ((x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) > 0) {\n    cout << \"RIGHT\" << endl;\n  } else {\n    cout << \"LEFT\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integers xa, ya, xb, yb, xc, and yc\n  read xa, ya, xb, yb, xc, and yc\n  create long long integer cp = (xb - xa) * (yc - ya) - (yb - ya) * (xc - xa)\n  if cp is greater than 0\n    print \"LEFT\\n\"\n  else if cp is less than 0\n    print \"RIGHT\\n\"\n  else\n    print \"TOWARDS\\n\"\n  \n\n",
        "int main() {\n  long long xa, ya, xb, yb, xc, yc;\n  cin >> xa >> ya >> xb >> yb >> xc >> yc;\n  long long cp = (xb - xa) * (yc - ya) - (yb - ya) * (xc - xa);\n  if (cp > 0)\n    cout << \"LEFT\\n\";\n  else if (cp < 0)\n    cout << \"RIGHT\\n\";\n  else\n    cout << \"TOWARDS\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integers x1, x2, x3, y1, y2, y3\n  read x1 read y1 read x2 read y2 read x3 read y3\n  if (y2 - y1) * (x3 - x2) is (y3 - y2) * (x2 - x1)\n    print \"TOWARDS\" print newline\n  else if (x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) is greater than 0\n    print \"RIGHT\" print newline\n  else\n    print \"LEFT\" print newline\n  \n  \n\n",
        "int main() {\n  long long int x1, x2, x3, y1, y2, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  if ((y2 - y1) * (x3 - x2) == (y3 - y2) * (x2 - x1)) {\n    cout << \"TOWARDS\" << endl;\n  } else if ((x3 - x2) * (y2 - y1) - (x2 - x1) * (y3 - y2) > 0) {\n    cout << \"RIGHT\" << endl;\n  } else {\n    cout << \"LEFT\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  x1, y1, x2, y2, x3, y3 = long longs\n  read x1, y1, x2, y2, x3, y3\n  vx1 = long long = x2 - x1, vy1 = long long = y2 - y1, vx2 = long long = x3 - x2, vy2 = long long = y3 - y2\n  cha = long long = vx1 * vy2 - vx2 * vy1\n  if cha > 0, then print LEFT\n  if cha < 0, then print RIGHT\n  if cha is 0, then print TOWARDS\n  \n\n",
        "int main() {\n  long long x1, y1, x2, y2, x3, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  long long vx1 = x2 - x1, vy1 = y2 - y1, vx2 = x3 - x2, vy2 = y3 - y2;\n  long long cha = vx1 * vy2 - vx2 * vy1;\n  if (cha > 0) { cout << \"LEFT\" << endl; }\n  if (cha < 0) { cout << \"RIGHT\" << endl; }\n  if (cha == 0) { cout << \"TOWARDS\" << endl; }\n  return 0;\n}\n"
    ],
    [
        "\n  f = integer = 0\n  x1, x2, x3, y1, y, 2, y3 = long longs\n  read x1, y1, x2, y2, x3, y3\n  temp = long long = (x2 - x1) * (y3 - y2) - (y2 - y1) * (x3 - x2)\n  if temp is 0\n    f = 0\n  else if temp > 0\n    f = 1\n  else\n    f = 2\n  if f is 0\n    print TOWARDS\n  else if f is 2\n    print RIGHT\n  else\n    print LEFT\n  \n\n",
        "int main() {\n  int f = 0;\n  long long x1, x2, x3, y1, y2, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  long long temp = (x2 - x1) * (y3 - y2) - (y2 - y1) * (x3 - x2);\n  if (temp == 0)\n    f = 0;\n  else if (temp > 0)\n    f = 1;\n  else\n    f = 2;\n  if (f == 0)\n    puts(\"TOWARDS\");\n  else if (f == 2)\n    puts(\"RIGHT\");\n  else\n    puts(\"LEFT\");\n  return 0;\n}\n"
    ],
    [
        "\n  let x = array of long integers of length 4, y = array of long integers of length 4\n  for i = 1 to 3 inclusive , read x[i] and y[i]\n  let a1 be a long integer with a1 = y[1] - y[2]\n  let b1 be a long integer with b1 = x[2] - x[1]\n  let c1 be a long integer with c1 = x[1] * y[2] - x[2] * y[1]\n  let a2 be a long integer with a2 = y[2] - y[3]\n  let b2 be a long integer with b2 = x[3] - x[2]\n  let c2 be a long integer with c2 = x[2] * y[3] - x[3] * y[2]\n  if a1 * b2 is equal to a2 * b1 and b1 * c2 is equal to b2 * c1\n    print TOWARDS and newline\n  else do the following\n    if a1 * b2 is greater than a2 * b1\n      print LEFT and newline\n    else do the following\n      print RIGHT and newline\n  \n  \n\n",
        "int main() {\n  long long x[4], y[4];\n  for (int i = 1; i <= (3); i++) cin >> x[i] >> y[i];\n  long long a1 = y[1] - y[2];\n  long long b1 = x[2] - x[1];\n  long long c1 = x[1] * y[2] - x[2] * y[1];\n  long long a2 = y[2] - y[3];\n  long long b2 = x[3] - x[2];\n  long long c2 = x[2] * y[3] - x[3] * y[2];\n  if (a1 * b2 == a2 * b1 && b1 * c2 == b2 * c1) {\n    cout << \"TOWARDS\\n\";\n  } else {\n    if (a1 * b2 > a2 * b1)\n      cout << \"LEFT\\n\";\n    else\n      cout << \"RIGHT\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "declare cross with long longs x0, y0, x1, y1 as arguments, returning long long\n  return y1 * x0 - y0 * x1 from function\n\n\n  create long long vectors X, Y with X initialized with 3, Y initialized with 3\n  for i = 0 to 3 exclusive, read X[i] read Y[i]\n  create long long c with c = result of run cross with X[1] - X[0], Y[1] - Y[0], X[2] - X[1], Y[2] - Y[1] as arguments\n  if c is 0\n    print \"TOWARDS\\n\"\n  else if c is less than 0\n    print \"RIGHT\\n\"\n  else\n    print \"LEFT\\n\"\n  \n\n",
        "long long cross(long long x0, long long y0, long long x1, long long y1) {\n  return y1 * x0 - y0 * x1;\n}\nint main() {\n  vector<long long> X(3), Y(3);\n  for (long long i = 0; i < 3; ++i) cin >> X[i] >> Y[i];\n  long long c = cross(X[1] - X[0], Y[1] - Y[0], X[2] - X[1], Y[2] - Y[1]);\n  if (c == 0)\n    cout << \"TOWARDS\\n\";\n  else if (c < 0)\n    cout << \"RIGHT\\n\";\n  else\n    cout << \"LEFT\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  x1, y1, x2, y2, x3, y3 =integers\n  Read x1, y1, x2, y2, x3, y3\n  if (y2 - y1) * (x3 - x2) is equal to (y3 - y2) * (x2 - x1)\n    print TOWARDS and a new line\n  else if y1 is equal to y2\n    if x2 is greater than x1\n      if y3 is greater than y2\n        print LEFT and a new line\n      else do the following\n        print RIGHT and a new line\n    else do the following\n      if y3 is less than y2\n        print LEFT and a new line\n      else do the following\n        print RIGHT and a new line\n    \n  else if x1 is equal to x2\n    if y1 is less than y2\n      if x3 is greater than x2\n        print RIGHT and a new line\n      else do the following\n        print LEFT and a new line\n    else do the following\n      if x3 is less than x2\n        print RIGHT and a new line\n      else do the following\n        print LEFT and a new line\n    \n  else if x1 is less than x2 and y1 is less than y2\n    if x3 is less than x2\n      print LEFT and a new line\n    else do the following\n      print RIGHT and a new line\n  else if x1 is greater than x2 and y1 is greater than y2\n    if x3 is greater than x2\n      print LEFT and a new line\n    else do the following\n      print RIGHT and a new line\n  else if x1 is less than x2 and y1 is greater than y2\n    if x3 is greater than x2\n      print LEFT and a new line\n    else do the following\n      print RIGHT and a new line\n  else do the following\n    if x3 is less than x2\n      print LEFT and a new line\n    else do the following\n      print RIGHT and a new line\n  \n  \n\n",
        "int main() {\n  int x1, y1, x2, y2, x3, y3;\n  cin >> x1 >> y1 >> x2 >> y2 >> x3 >> y3;\n  if ((y2 - y1) * (x3 - x2) == (y3 - y2) * (x2 - x1)) {\n    cout << \"TOWARDS\" << endl;\n  } else if (y1 == y2) {\n    if (x2 > x1) {\n      if (y3 > y2)\n        cout << \"LEFT\" << endl;\n      else\n        cout << \"RIGHT\" << endl;\n    } else {\n      if (y3 < y2)\n        cout << \"LEFT\" << endl;\n      else\n        cout << \"RIGHT\" << endl;\n    }\n  } else if (x1 == x2) {\n    if (y1 < y2) {\n      if (x3 > x2)\n        cout << \"RIGHT\" << endl;\n      else\n        cout << \"LEFT\" << endl;\n    } else {\n      if (x3 < x2)\n        cout << \"RIGHT\" << endl;\n      else\n        cout << \"LEFT\" << endl;\n    }\n  } else if (x1 < x2 && y1 < y2) {\n    if (x3 < x2)\n      cout << \"LEFT\" << endl;\n    else\n      cout << \"RIGHT\" << endl;\n  } else if (x1 > x2 && y1 > y2) {\n    if (x3 > x2)\n      cout << \"LEFT\" << endl;\n    else\n      cout << \"RIGHT\" << endl;\n  } else if (x1 < x2 && y1 > y2) {\n    if (x3 > x2)\n      cout << \"LEFT\" << endl;\n    else\n      cout << \"RIGHT\" << endl;\n  } else {\n    if (x3 < x2)\n      cout << \"LEFT\" << endl;\n    else\n      cout << \"RIGHT\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let n and m be integers\n  declare string called st\n  read n and m\n  res is an integer array with size m\n  fill res with 0\n  for i = 0 to n exclusive\n    read st\n    if there is no character \"1\" in st\n      print -1 and a new line\n      \n    \n    cur is an integer array with 3 * m elements\n    curAns is an array of integers with size m\n    for j = 0 to 3 * m exclusive set cur[j] to st[j % m] - '0'\n    declare integer called counter = 0\n    for a = m - 1 to 0 inclusive counting down\n      if cur[a] = 1\n        break the loop\n      else\n        increase counter\n    \n    for k = m to 2 * m exclusive\n      if cur[k] = 1\n        curAns[k % m] = 0\n        set counter to 0\n      else\n        increment counter and set curAns[k % m] = counter\n    \n    assign value of 0 to counter\n    for a = 2 * m to 3 * m exclusive\n      if cur[a] = 1\n        stop the loop\n      else\n        increment counter\n    \n    for integer k = 2 * m - 1 to m inclusive counting down\n      if cur[k] = 1\n        curAns[k % m] = 0\n        set value of counter to 0\n      else\n        increment counter\n        curAns[k % m] = min of curAns[k % m] and counter\n      \n    \n    for integer j = 0 to m exclusive increase res[j] by curAns[j]\n  \n  declare integer variable called min = INT_MAX\n  for integer i = 0 to m exclusive\n    if min is greater than res[i], set min to res[i]\n  \n  print min and a new line\n  \n\n",
        "int main() {\n  int n, m;\n  string st;\n  cin >> n >> m;\n  int res[m];\n  for (int i = 0; i < m; i++) { res[i] = 0; }\n  for (int i = 0; i < n; i++) {\n    cin >> st;\n    if (st.find('1') == string::npos) {\n      cout << -1 << endl;\n      return 0;\n    }\n    int cur[3 * m];\n    int curAns[m];\n    for (int j = 0; j < 3 * m; j++) { cur[j] = st[j % m] - '0'; }\n    int counter = 0;\n    for (int a = m - 1; a >= 0; a--) {\n      if (cur[a] == 1)\n        break;\n      else\n        counter++;\n    }\n    for (int k = m; k < 2 * m; k++) {\n      if (cur[k] == 1) {\n        curAns[k % m] = 0;\n        counter = 0;\n      } else\n        curAns[k % m] = ++counter;\n    }\n    counter = 0;\n    for (int a = 2 * m; a < 3 * m; a++) {\n      if (cur[a] == 1)\n        break;\n      else\n        counter++;\n    }\n    for (int k = 2 * m - 1; k >= m; k--) {\n      if (cur[k] == 1) {\n        curAns[k % m] = 0;\n        counter = 0;\n      } else {\n        counter++;\n        curAns[k % m] = min(curAns[k % m], counter);\n      }\n    }\n    for (int j = 0; j < m; j++) { res[j] += curAns[j]; }\n  }\n  int min = INT_MAX;\n  for (int i = 0; i < m; i++) {\n    if (min > res[i]) min = res[i];\n  }\n  cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "integer constant INF = 1 << 29\n\n  declare integer variables n and m\n  read n and m\n  a is an array of strings with size n\n  read n elements into a\n  ans is an array of integers with size m\n  set m elements of ans to 0\n  chk is integer\n  for i = 0 to n exclusive\n    set value of chk to 0\n    for integer j = 0 to m exclusive, increment chk by 1 if a[i][j] = '1'\n    if chk = 0\n      print \"-1\\n\"\n      \n    \n  \n  for i = 0 to n exclusive\n    declare integer called last\n    declare boolean variable called found = 0\n    for j = m - 1 to 0 inclusive counting down\n      if a[i][j] = '1'\n        set value of last to j\n        stop the loop\n      \n    \n    , curr is an array of integers with size m\n    for j = 0 to m exclusive, curr[j] = INT_MAX\n    for j = 0 to m exclusive\n      if a[i][j] = '1'\n        set value of last to j\n        found = 1\n      \n      if found is 0\n        curr[j] = min(curr[j], (m - last) + j)\n      else\n        curr[j] = min of curr[j] and abs(j - last)\n      \n    \n    found = 0\n    for j = 0 to m exclusive\n      if a[i][j] = '1'\n        last = j\n        break the loop\n      \n    \n    for integer j = m - 1 to 0 inclusive counting down\n      if a[i][j] = '1'\n        set value of last to j\n        assign value of 1 to found\n      \n      if found is 0\n        curr[j] = min(curr[j], (last + 1) + (m - 1 - j))\n      else\n        curr[j] = min(curr[j], abs(j - last))\n      \n    \n    for integer j = 0 to m exclusive increment ans[j] by curr[j]\n  \n  res is integer = INT_MAX\n  for i = 0 to m exclusive, set res to min(res, ans[i])\n  print res and a new line\n  \n\n",
        "const int INF = 1 << 29;\nint main() {\n  int n, m;\n  cin >> n >> m;\n  string a[n];\n  for (int i = 0; i < (n); i++) cin >> a[i];\n  int ans[m];\n  for (int i = 0; i < (m); i++) ans[i] = 0;\n  int chk;\n  for (int i = 0; i < (n); i++) {\n    chk = 0;\n    for (int j = 0; j < (m); j++) { chk += (a[i][j] == '1'); }\n    if (chk == 0) {\n      cout << \"-1\\n\";\n      return 0;\n    }\n  }\n  for (int i = 0; i < (n); i++) {\n    int last;\n    bool found = 0;\n    for (int j = m - 1; j >= 0; --j) {\n      if (a[i][j] == '1') {\n        last = j;\n        break;\n      }\n    }\n    int curr[m];\n    for (int j = 0; j < (m); j++) curr[j] = INT_MAX;\n    for (int j = 0; j < (m); j++) {\n      if (a[i][j] == '1') {\n        last = j;\n        found = 1;\n      }\n      if (!found) {\n        curr[j] = min(curr[j], (m - last) + j);\n      } else {\n        curr[j] = min(curr[j], abs(j - last));\n      }\n    }\n    found = 0;\n    for (int j = 0; j < m; ++j) {\n      if (a[i][j] == '1') {\n        last = j;\n        break;\n      }\n    }\n    for (int j = m - 1; j >= 0; --j) {\n      if (a[i][j] == '1') {\n        last = j;\n        found = 1;\n      }\n      if (!found) {\n        curr[j] = min(curr[j], (last + 1) + (m - 1 - j));\n      } else {\n        curr[j] = min(curr[j], abs(j - last));\n      }\n    }\n    for (int j = 0; j < (m); j++) ans[j] += curr[j];\n  }\n  int res = INT_MAX;\n  for (int i = 0; i < (m); i++) res = min(res, ans[i]);\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer maxn with maxn = 2e5 + 10\ncreate integers n, m\ncreate string array s with size 110\ncreate 2d integer array l with size 110 by 10010\ncreate 2d integer array r with size 110 by 10010\n\n  read n read m\n  for i = 0 to n exclusive, read s[i]\n  create boolean bad with bad = false\n  for i = 0 to n exclusive\n    create integer last with last = -1\n    for j = 0 to m exclusive\n      if s[i][j] is '0'\n        set l[i][j] to -1 if last is -1, else j - last\n      else\n        set l[i][j] to 0, set last to j\n    if last is less than 0, set bad to true\n    set last to -1\n    for j = m - 1 to 0 inclusive, decrementing j\n      if s[i][j] is '0'\n        set r[i][j] to -1 if last is -1, else last - j\n      else\n        set r[i][j] to 0, set last to j\n    for j = 0 to m exclusive\n      if l[i][j] is less than 0, set l[i][j] to j + l[i][m-1] + 1\n    for j = m - 1 to 0 inclusive, decrementing j\n      if r[i][j] is less than 0, set r[i][j] to (m - 1) - j + r[i][0] + 1\n  \n  if bad is true\n    print -1 print \"\\n\"\n    \n  \n  create long long ans with ans = n * m + 1\n  for j = 0 to m exclusive\n    create long long cur with cur = 0\n    for i = 0 to n exclusive, increment cur by minimum of l[i][j] and r[i][j]\n    set ans to minimum of ans and cur\n  \n  print ans print \"\\n\"\n\n",
        "const int maxn = 2e5 + 10;\nint n, m;\nstring s[110];\nint l[110][10010];\nint r[110][10010];\nint main() {\n  cin >> n >> m;\n  for (int i = 0; i < n; ++i) cin >> s[i];\n  bool bad = false;\n  for (int i = 0; i < n; ++i) {\n    int last = -1;\n    for (int j = 0; j < m; ++j)\n      if (s[i][j] == '0')\n        l[i][j] = (last == -1 ? -1 : j - last);\n      else\n        l[i][j] = 0, last = j;\n    if (last < 0) bad = true;\n    last = -1;\n    for (int j = m - 1; j >= 0; --j)\n      if (s[i][j] == '0')\n        r[i][j] = (last == -1 ? -1 : last - j);\n      else\n        r[i][j] = 0, last = j;\n    for (int j = 0; j < m; ++j)\n      if (l[i][j] < 0) l[i][j] = j + l[i][m - 1] + 1;\n    for (int j = m - 1; j >= 0; --j)\n      if (r[i][j] < 0) r[i][j] = (m - 1) - j + r[i][0] + 1;\n  }\n  if (bad) {\n    cout << -1 << \"\\n\";\n    return 0;\n  }\n  long long ans = n * m + 1;\n  for (int j = 0; j < m; ++j) {\n    long long cur = 0;\n    for (int i = 0; i < n; ++i) cur += min(l[i][j], r[i][j]);\n    ans = min(ans, cur);\n  }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "assign value 11000 to constant integer maxn\ncreate integer INF = 1 << 30\nlet m and n be integers\nda is an 2d array of integers with size 110 by maxn\njoo is an 2d array of integers with size 110 by maxn\n\n  read m and n\n  create string s\n  for i = 0 to m exclusive\n    read s\n    for integer j = 0 to n exclusive set da[i][j] to 1 if s[j] = '1', 0 if it is not\n  \n  declare integers t and jj\n  for i = 0 to m exclusive\n    t = INF\n    for j = 0 while j < n * 2\n      jj = j % n\n      if da[i][jj] = 1, set t to 0\n      set joo[i][jj] = t and increment t\n    \n    t = INF\n    for integer j = n * 2 to 0 inclusive counting down\n      jj = j % n\n      if da[i][jj] = 1, set t to 0\n      joo[i][jj] = min of joo[i][jj] and t\n    \n  \n  declare long longs mi = INF and sum\n  for integer j = 0 to n exclusive\n    assign value of 0 to sum\n    for integer i = 0 to m exclusive add joo[i][j] to sum\n    set mi to min of sum and mi\n  \n  if mi >= INF\n    print -1 and a new line\n  else\n    print mi and a new line\n  \n\n",
        "const int maxn = 11000;\nint INF = 1 << 30;\nint m, n;\nint da[110][maxn];\nint joo[110][maxn];\nint main() {\n  cin >> m >> n;\n  string s;\n  for (int i = 0; i < m; i++) {\n    cin >> s;\n    for (int j = 0; j < n; j++) da[i][j] = (s[j] == '1' ? 1 : 0);\n  }\n  int t, jj;\n  for (int i = 0; i < m; i++) {\n    t = INF;\n    for (int j = 0; j < n * 2; j++) {\n      jj = j % n;\n      if (da[i][jj] == 1) t = 0;\n      joo[i][jj] = t++;\n    }\n    t = INF;\n    for (int j = n * 2; j >= 0; j--) {\n      jj = j % n;\n      if (da[i][jj] == 1) t = 0;\n      joo[i][jj] = min(joo[i][jj], t++);\n    }\n  }\n  long long mi = INF, sum;\n  for (int j = 0; j < n; j++) {\n    sum = 0;\n    for (int i = 0; i < m; i++) { sum += joo[i][j]; }\n    mi = min(sum, mi);\n  }\n  if (mi >= INF)\n    cout << -1 << endl;\n  else\n    cout << mi << endl;\n  return 0;\n}\n"
    ],
    [
        "dist = array of 2 by 10004 int\n\n  n, m = int\n  read n and m\n  for i = 0 to n exclusive\n    str = string\n    read str\n    firstone = -1\n    ff = 0\n    while ff < m and str[ff] is not '1' increment ff\n    if ff is m\n      print -1\n      \n    \n    firstone = ff\n    dist[0][ff] = 0\n    j = ff+1 modulo m\n    while true\n      if str[j] is '1'\n        dist[0][j] = 0\n        k = j\n        while dist[0][k] < dist[0][k-1+m modulo m\n          k = k-1+m modulo m\n          dist[0][k] = dist[0][k+1 modulo m]+1\n        \n        if j is firstone break\n      else\n        dist[0][j] = dist[0][j+m-1 modulo m]+1\n      \n      j = j+1 modulo m\n    \n    for z = 0 to m exclusive\n      increment dist[1][z] by dist[0][z]\n      dist[0][z] = 0\n    \n  \n  minn = dist[1][0]\n  for h = 1 to m exclusive\n    if dist[1][h] < minn minn = dist[1][h]\n  \n  print minn\n  \n\n",
        "int dist[2][10004];\nint main() {\n  int n, m;\n  cin >> n >> m;\n  for (int i = 0; i < n; i++) {\n    string str;\n    cin >> str;\n    int firstone = -1;\n    int ff = 0;\n    while (ff < m && str[ff] != '1') ff++;\n    if (ff == m) {\n      cout << -1 << endl;\n      return 0;\n    }\n    firstone = ff;\n    dist[0][ff] = 0;\n    int j = (ff + 1) % m;\n    while (true) {\n      if (str[j] == '1') {\n        dist[0][j] = 0;\n        int k = j;\n        while (dist[0][k] < dist[0][(k - 1 + m) % m]) {\n          k = (k - 1 + m) % m;\n          dist[0][k] = dist[0][(k + 1) % m] + 1;\n        }\n        if (j == firstone) break;\n      } else {\n        dist[0][j] = dist[0][(j + m - 1) % m] + 1;\n      }\n      j = (j + 1) % m;\n    }\n    for (int z = 0; z < m; z++) {\n      dist[1][z] += dist[0][z];\n      dist[0][z] = 0;\n    }\n  }\n  int minn = dist[1][0];\n  for (int h = 1; h < m; h++) {\n    if (dist[1][h] < minn) { minn = dist[1][h]; }\n  }\n  cout << minn << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m\n  read n read m\n  create 2d character array a of size n by m\n  for i = 0 to n exclusive\n    for j = 0 to m exclusive, read a[i][j]\n  \n  for i = 0 to n exclusive\n    if not count of '1' from a[i] to a[i] + m\n      print -1 print '\\n'\n      \n    \n  \n  create 2d integer arrays nearest, l, r, with nearest size n by m, l size n by m, r size n by m\n  for i = 0 to n exclusive\n    create integer lst with lst = -1\n    for j = 0 to m exclusive\n      if a[i][j] is '1', set lst to j\n    \n    create boolean c with c = true\n    for j = 0 to m exclusive\n      set lst to j if a[i][j] is '1', else lst\n      set c to (c bitwise and a[i][j]) is 0\n      set l[i][j] to m - lst + j if c is true, else absolute value of j - lst\n    \n    set lst to -1\n    set c to true\n    for j = 0 to m exclusive\n      if a[i][j] is '1'\n        set lst to j\n        break loop\n      \n    \n    for j = m - 1 to 0 inclusive, decrementing j\n      set lst to j if a[i][j] is '1', else lst\n      set c to (c bitwise and a[i][j]) is 0\n      set r[i][j] to lst + 1 + m - ( j + 1 ) if c is true, else absolute value of j - lst\n    \n  \n  for i = 0 to n exclusive\n    for j = 0 to m exclusive, set nearest[i][j] to minimum of r[i][j] and l[i][j]\n  \n  create integer ans with ans = 0x3f3f3f3f\n  for j = 0 to m exclusive\n    create integer cur with cur = 0\n    for i = 0 to n exclusive, increment cur by nearest[i][j]\n    set ans to minimum of ans and cur\n  \n  print ans print '\\n'\n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  char a[n][m];\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) { cin >> a[i][j]; }\n  }\n  for (int i = 0; i < n; ++i) {\n    if (!count(a[i], a[i] + m, '1')) {\n      cout << -1 << '\\n';\n      return 0;\n    }\n  }\n  int nearest[n][m], l[n][m], r[n][m];\n  for (int i = 0; i < n; ++i) {\n    int lst = -1;\n    for (int j = 0; j < m; ++j) {\n      if (a[i][j] == '1') lst = j;\n    }\n    bool c = true;\n    for (int j = 0; j < m; ++j) {\n      lst = (a[i][j] == '1' ? j : lst);\n      c &= a[i][j] == '0';\n      l[i][j] = (c ? m - lst + j : abs(j - lst));\n    }\n    lst = -1;\n    c = true;\n    for (int j = 0; j < m; ++j) {\n      if (a[i][j] == '1') {\n        lst = j;\n        break;\n      }\n    }\n    for (int j = m - 1; j >= 0; --j) {\n      lst = (a[i][j] == '1' ? j : lst);\n      c &= a[i][j] == '0';\n      r[i][j] = (c ? lst + 1 + m - (j + 1) : abs(j - lst));\n    }\n  }\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) { nearest[i][j] = min(r[i][j], l[i][j]); }\n  }\n  int ans = 0x3f3f3f3f;\n  for (int j = 0; j < m; ++j) {\n    int cur = 0;\n    for (int i = 0; i < n; ++i) { cur += nearest[i][j]; }\n    ans = min(ans, cur);\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "\n  declare integer n\n  read n\n  if n is odd\n    print -1\n  else\n    print \"2 1\"\n    for integer i = 3 to n exclusive with increment step 2, print \" \", i + 1, \" \" and i\n    print new line\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  if (n % 2 == 1) {\n    cout << -1 << endl;\n  } else {\n    cout << \"2 1\";\n    for (int i = 3; i < n; i += 2) { cout << \" \" << i + 1 << \" \" << i; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  if n mod 2 = 1\n    print -1\n  otherwise\n    print 2 1\n    for i=3 to n exclusive, print \" \", i+1,\" \", i\n    print a new line\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  if (n % 2 == 1) {\n    cout << -1 << endl;\n  } else {\n    cout << \"2 1\";\n    for (int i = 3; i < n; i += 2) { cout << \" \" << i + 1 << \" \" << i; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int t and i\n  read t\n  if t mod 2 = 1\n    print -1\n  else\n    print 2 1\n    for i=3 to t exclusive, print \" \", i + 1, \" \", i\n    print a new line\n  \n  \n\n",
        "int main() {\n  int t, i;\n  cin >> t;\n  if (t % 2 == 1) {\n    cout << -1 << endl;\n  } else {\n    cout << \"2 1\";\n    for (i = 3; i < t; i += 2) { cout << \" \" << i + 1 << \" \" << i; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let num be integer array with size 101\n\n  declare integer variable n\n  read n\n  for integer i = 0 to n exclusive, set num[i] to i + 1\n  if n is even\n    print -1\n  else\n    for i = 1 to n exclusive swap num[i - 1] and num[i]\n    for integer i = 0 to n - 1 exclusive print num[i] and \" \"\n    print num[n - 1]\n  \n\n",
        "int num[101];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) num[i] = i + 1;\n  if (n % 2)\n    cout << -1 << endl;\n  else {\n    for (int i = 1; i < n; i += 2) { swap(num[i - 1], num[i]); }\n    for (int i = 0; i < n - 1; i++) cout << num[i] << \" \";\n    cout << num[n - 1] << endl;\n  }\n}\n"
    ],
    [
        "\n  n = long long\n  read n\n  if n is uneven\n    print -1\n  else\n    i = 1 to n inclusive\n      if i is uneven\n        print i + 1\n      else\n        print i - 1\n      if i equals n\n        print newline\n      else\n        print \" \"\n    \n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  if (n % 2 == 1)\n    cout << -1 << endl;\n  else {\n    for (long long i = 1; i <= n; i++) {\n      if (i % 2 == 1)\n        cout << i + 1;\n      else\n        cout << i - 1;\n      if (i == n)\n        cout << endl;\n      else\n        cout << \" \";\n    }\n  }\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  if n modulo 2 is 1\n    print -1\n  else\n    temp = integer with temp = 2\n    count = integer with count = 0\n    while not temp is n - 1\n      print temp,\" \"\n      increment count\n      if count modulo 2 is 1\n        temp = temp - 1\n      else\n        temp = temp + 3\n    \n    print temp\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  if (n % 2 == 1)\n    cout << -1 << endl;\n  else {\n    int temp = 2;\n    int count = 0;\n    while (temp != n - 1) {\n      cout << temp << \" \";\n      count++;\n      if (count % 2 == 1)\n        temp -= 1;\n      else\n        temp += 3;\n    }\n    cout << temp << endl;\n  }\n}\n"
    ],
    [
        "\n  a, b = integer\n  read a\n  if a modulo not 2 is 0\n    print -1\n  else\n    for b = 2 to a - 2 inclusive with b = b + 2 then print b,' ', b - 1\n    print a,' ',a - 1\n  \n  \n\n",
        "int main() {\n  int a, b;\n  cin >> a;\n  if (a % 2 != 0)\n    cout << -1 << endl;\n  else {\n    for (b = 2; b <= a - 2; b += 2) cout << b << ' ' << b - 1 << ' ';\n    cout << a << ' ' << a - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  p = integer\n  read p\n  if p modulo 2 is 1\n    print -1\n  else\n    print 2 1\n    for i = 4 to p inclusive with i = i + 2 then print i, i - 1\n    print new line\n  \n  \n\n",
        "int main() {\n  int p;\n  cin >> p;\n  if (p % 2 == 1)\n    cout << \"-1\\n\";\n  else {\n    cout << \"2 1\";\n    for (int i = 4; i <= p; i += 2) cout << \" \" << i << \" \" << i - 1;\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare fastIo with no arguments, returning void\n\n  run fastIo\n  create integer n\n  read n\n  create pair of ( pair of ( integer and integer ) and integer ) m\n  for i = 0 to n exclusive\n    create integers x, y\n    read x read y\n    increment m[ new pair with x and y ]\n  \n  create map iterator it from pair of integer and integer to integer with it = beginning of m\n  create integer cnt with cnt = 1\n  while it is not end of m\n    if second element of it is greater than cnt, set cnt to second element of it\n    increment it\n  \n  print cnt print newline\n  \n\n",
        "void fastIo() {}\nint main() {\n  fastIo();\n  int n;\n  cin >> n;\n  map<pair<int, int>, int> m;\n  for (int i = 0; i < n; i++) {\n    int x, y;\n    cin >> x >> y;\n    m[make_pair(x, y)]++;\n  }\n  map<pair<int, int>, int>::iterator it = m.begin();\n  int cnt = 1;\n  while (it != m.end()) {\n    if (it->second > cnt) cnt = it->second;\n    it++;\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant int N = 1e5 + 5\ncreate integers n, res and Max with res and Max = 1\na is an array of int/int pairs with N elements\nvoid function Input\n  read n\n  for i from 1 to n inclusive incrementing i, read a[i].first and a[i].second\n  sort a from index 1 to n + 1\n\nSolve is a void function\n  declare integer curr = 1\n  loop i from 2 to n inclusive\n    if a[i].first = a[i - 1].first and a[i].second = a[i - 1].second\n      increment curr and set res to max of res and curr\n    else\n      change curr to 1\n  \n  print res and '\\n'\n\n\n  call function Input\n  call function Solve\n  \n\n",
        "const int N = 1e5 + 5;\nint n, res = 1, Max = 1;\npair<int, int> a[N];\nvoid Input() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i].first >> a[i].second;\n  sort(a + 1, a + n + 1);\n}\nvoid Solve() {\n  int curr = 1;\n  for (int i = 2; i <= n; i++) {\n    if (a[i].first == a[i - 1].first && a[i].second == a[i - 1].second)\n      curr++, res = max(res, curr);\n    else\n      curr = 1;\n  }\n  cout << res << '\\n';\n}\nint main() {\n  Input();\n  Solve();\n  return 0;\n}\n"
    ],
    [
        "\n  n, temp = integer 2d array of size [24][60], maxi, h, m = integers with temp = {0}, maxi = 0\n  read n\n  while n\n    read h, m\n    increment temp[h][m]\n    if temp[h][m] > maxi, maxi = temp[h][m]\n  \n  print maxi\n  \n\n",
        "int main() {\n  int n, temp[24][60] = {0}, maxi = 0, h, m;\n  cin >> n;\n  while (n--) {\n    cin >> h >> m;\n    temp[h][m]++;\n    if (temp[h][m] > maxi) maxi = temp[h][m];\n  }\n  cout << maxi << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, h, m, t , c, rest = integer with t = -1, c = 0, res = 1\n  read n\n  for i = 0 to n exclusive\n    read h and m\n    t0 = integer with t0 = h * 60 + m\n    c = if t0 is t, c + 1 else 1\n    if c > res, res = c\n    t = t0\n  \n  print res\n  \n\n",
        "int main() {\n  int n, h, m, t = -1, c = 0, res = 1;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    cin >> h >> m;\n    int t0 = h * 60 + m;\n    c = t0 == t ? c + 1 : 1;\n    if (c > res) res = c;\n    t = t0;\n  }\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, i, j\n  create integer arrays h, m, count with h size 100000, m size 100000, count size 100000\n  read n\n  for i = 0 to n exclusive, read h[i] read m[i]\n  for i = 0 to n exclusive, set count[i] to 1\n  for i = 0, j = 0 to i is less than n - 1, incrementing i\n    if h[i] is h[i+1] and m[i] is m[i+1]\n      increment count[j]\n    else if count[j] is not 1\n      increment j\n  \n  create integer ans with ans = count[0]\n  for i = 0 to n exclusive\n    if count[i] is greater than ans, set ans to count[i]\n  \n  print ans print newline\n  \n\n",
        "int main() {\n  int n, i, j;\n  int h[100000], m[100000], count[100000];\n  cin >> n;\n  for (i = 0; i < n; i++) { cin >> h[i] >> m[i]; }\n  for (i = 0; i < n; i++) count[i] = 1;\n  for (i = 0, j = 0; i < n - 1; i++) {\n    if (h[i] == h[i + 1] && m[i] == m[i + 1]) {\n      count[j]++;\n    } else if (count[j] != 1)\n      j++;\n  }\n  int ans = count[0];\n  for (i = 0; i < n; i++) {\n    if (count[i] > ans) ans = count[i];\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, i, c = int with c = 0 and x, y = int array of size 100010 each\n  v = int vector\n  read n\n  mp = map of pair of int and int and int\n  for i = 0 to n\n    read x[i] then y[i]\n    increment mp[make_pair of x[i] and y[i]]\n  \n  for i = 0 to n append mp[make_pair of x[i] and y[i]] to v\n  sort v\n  if last element of v is 0\n    print \"1\"\n  else\n    print last element of v\n  \n\n",
        "int main() {\n  int n, i, x[100010], y[100010], c = 0;\n  vector<int> v;\n  cin >> n;\n  map<pair<int, int>, int> mp;\n  for (i = 0; i < n; i++) {\n    cin >> x[i] >> y[i];\n    mp[make_pair(x[i], y[i])]++;\n  }\n  for (i = 0; i < n; i++) { v.push_back(mp[make_pair(x[i], y[i])]); }\n  sort(v.begin(), v.end());\n  if (v[v.size() - 1] == 0)\n    cout << \"1\" << endl;\n  else\n    cout << v[v.size() - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, a, b, c , d , co, m = integers with c = -1, d = -1, co = 0, m = 0\n  read n\n  for i = 0 to n exclusive\n    read a and b\n    if a is c and b is d\n      increment co\n      m = max of m and co\n    else\n      co = 1\n    c = a\n    d = b\n  \n  if m is 0\n    print 1\n  else\n    print m\n  \n\n",
        "int main() {\n  int n, a, b, c = -1, d = -1, co = 0, m = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a >> b;\n    if (a == c && b == d) {\n      co++;\n      m = max(m, co);\n    } else\n      co = 1;\n    c = a;\n    d = b;\n  }\n  if (m == 0)\n    cout << 1 << endl;\n  else\n    cout << m << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, h, m, a = two dimensional array of int with lengths 100, 100\n  while reading new values for n\n    let maxa = int = 0\n    for i = 0 to n exclusive\n      read h, m\n      increment a[h][m]\n      if a[h][m] > maxa, maxa = a[h][m]\n    \n    print maxa\n  \n  \n\n",
        "int main() {\n  int n, h, m, a[100][100];\n  while (cin >> n) {\n    int maxa = 0;\n    for (int i = 0; i < n; i++) {\n      cin >> h >> m;\n      a[h][m]++;\n      if (a[h][m] > maxa) maxa = a[h][m];\n    }\n    cout << maxa << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, i\n  read n\n  create integer arrays a, b, with a size n + 2, b size n + 2\n  create integer m with m = 0\n  create 2d integer array c with size 24 by 60, with c = {0}\n  for i = 0 to n exclusive\n    read a[i] read b[i]\n    increment c[a[i]][b[i]]\n  \n  for i = 0 to n exclusive, set m to maximum of m and c[a[i]][b[i]]\n  print m print \"\\n\"\n  \n\n",
        "int main() {\n  int n, i;\n  cin >> n;\n  int a[n + 2], b[n + 2];\n  int m = 0;\n  int c[24][60] = {0};\n  for (i = 0; i < n; i++) {\n    cin >> a[i] >> b[i];\n    c[a[i]][b[i]]++;\n  }\n  for (i = 0; i < n; i++) { m = max(m, c[a[i]][b[i]]); }\n  cout << m << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n, hh, mm, h, m, res, k = integers with hh and mm value of -1, res value of 0 and k value of 1\n  read n\n  for i = 0 to n exclusive\n    read h and m\n    if h equals hh and m equals mm\n      add 1 to k\n    else\n      set hh to h\n      set mm to m\n      if res is greater than k then set res to res otherwise set res to k\n      set k to 1\n    \n  \n  if res is greater than k then print res otherwise print k\n  \n\n",
        "int main() {\n  int n, hh = -1, mm = -1, h, m, res = 0, k = 1;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> h >> m;\n    if (h == hh && m == mm) {\n      k++;\n    } else {\n      hh = h;\n      mm = m;\n      res = res > k ? res : k;\n      k = 1;\n    }\n  }\n  cout << (res > k ? res : k) << endl;\n  return 0;\n}\n"
    ],
    [
        "declare const int N = 1e5 + 5\nlet n, res and Max be ints with res and Max = 1\ncreate an array of int/int pairs called a with N elements\nfunction Input\n  read n\n  loop i from 1 to n inclusive, read a[i].first and a[i].second\n  sort a from index 1 to n + 1\n\nvoid function Solve\n  declare int variable curr = 1\n  for i = 2 to n inclusive\n    if a[i].first = a[i - 1].first and a[i].second = a[i - 1].second\n      increment curr by one and set res to max of res and curr\n    else\n      assign 1 to curr\n  \n  print res and '\\n'\n\n\n  call function Input\n  call function Solve\n  \n\n",
        "const int N = 1e5 + 5;\nint n, res = 1, Max = 1;\npair<int, int> a[N];\nvoid Input() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i].first >> a[i].second;\n  sort(a + 1, a + n + 1);\n}\nvoid Solve() {\n  int curr = 1;\n  for (int i = 2; i <= n; i++) {\n    if (a[i].first == a[i - 1].first && a[i].second == a[i - 1].second)\n      curr++, res = max(res, curr);\n    else\n      curr = 1;\n  }\n  cout << res << '\\n';\n}\nint main() {\n  Input();\n  Solve();\n  return 0;\n}\n"
    ],
    [
        "\n  n, ele1, ele2 = integers\n  read n\n  arr = integer array of size[24 * 60] with arr[24 * 60] = {}\n  while decrement n\n    read ele1 and ele2\n    increment arr[ele1 * 60 + ele2]\n  \n  max = integer with max = 0\n  for i = 0 to 24 * 60 exclusive\n    if arr[i] > max, max = arr[i]\n  \n  print max\n\n",
        "int main() {\n  int n, ele1, ele2;\n  cin >> n;\n  int arr[24 * 60] = {};\n  while (n--) {\n    cin >> ele1 >> ele2;\n    arr[ele1 * 60 + ele2]++;\n  }\n  int max = 0;\n  for (int i = 0; i < 24 * 60; i++) {\n    if (arr[i] > max) { max = arr[i]; }\n  }\n  cout << max << \"\\n\";\n}\n"
    ],
    [
        "\n  integers = t\n  read t\n  integers array = arr[t][2]\n  read arr[i][0],arr[i][1]\n  set int count to 0, temp to 1\n  for i = 1 to less than t do the following\n    set if (temp > count) count equals temp\n    if arr[i - 1][0] is arr[i][0] && arr[i - 1][1] equals arr[i][1] then do next\n      add one to temp\n    else\n      set temp to 1\n  \n  set if (temp > count) count equals temp\n  output count\n\n",
        "int main() {\n  int t;\n  cin >> t;\n  int arr[t][2];\n  for (int i = 0; i < t; i++) cin >> arr[i][0] >> arr[i][1];\n  int count = 0, temp = 1;\n  for (int i = 1; i < t; i++) {\n    if (temp > count) count = temp;\n    if (arr[i - 1][0] == arr[i][0] && arr[i - 1][1] == arr[i][1])\n      temp++;\n    else\n      temp = 1;\n  }\n  if (temp > count) count = temp;\n  cout << count << endl;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integers ans, cnt, ph, pm, with ans = 1, cnt = 1, ph = 99, pm = 99\n  for i = 0 to n exclusive\n    create integers h, m\n    read h read m\n    if h is ph and m is pm\n      increment cnt\n      if ans is less than cnt, set ans to cnt\n    else\n      set cnt to 1\n    \n    set ph to h\n    set pm to m\n  \n  print ans print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int ans = 1, cnt = 1, ph = 99, pm = 99;\n  for (int i = 0; i < n; ++i) {\n    int h, m;\n    cin >> h >> m;\n    if (h == ph && m == pm) {\n      ++cnt;\n      if (ans < cnt) ans = cnt;\n    } else {\n      cnt = 1;\n    }\n    ph = h;\n    pm = m;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be a long integer\n  read n\n  let Arr , Sum be long integers with Sum = 0, Arr = array of long integers of length n + 2\n  for i = 1 to n inclusive , read Arr[i] , increment Sum by Arr[i]\n  let s, t be long integers\n  read s, t\n  let Cnt be a long integer with Cnt = 0\n  if s is greater than t , swap s, t\n  for i = s to t exclusive , increment Cnt by Arr[i]\n  print minimum of Cnt, Sum - Cnt and newline\n  \n\n",
        "int main() {\n  long long int n;\n  cin >> n;\n  long long int Arr[n + 2], Sum = 0;\n  for (int i = 1; i <= n; i++) cin >> Arr[i], Sum += Arr[i];\n  long long int s, t;\n  cin >> s >> t;\n  long long int Cnt = 0;\n  if (s > t) swap(s, t);\n  for (int i = s; i < t; i++) Cnt += Arr[i];\n  cout << min(Cnt, Sum - Cnt) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  a,i,s,t,n=int, b,c,l1,l2=0, arr=array of 105 int\n  read n\n  for a=1 to n inclusive read arr[a]\n  read s\n  read t\n  if s>t\n    b=t\n    c=s\n  else\n    b=s\n    c=t\n  \n  for a=b to c exclusive add arr[a] to l1\n  increment a from c while a is not b\n    add arr[a] to l2\n    if a is n a=0\n  \n  if l1 <= l2\n    print l1\n  else\n    print l2\n  \n\n",
        "int main() {\n  int a, i, b = 0, c = 0, s, t, n, l1 = 0, l2 = 0, arr[105];\n  cin >> n;\n  for (a = 1; a <= n; a++) { cin >> arr[a]; }\n  cin >> s;\n  cin >> t;\n  if (s > t) {\n    b = t;\n    c = s;\n  } else {\n    b = s;\n    c = t;\n  }\n  for (a = b; a < c; a++) { l1 = l1 + arr[a]; }\n  for (a = c; a != b; a++) {\n    l2 = l2 + arr[a];\n    if (a == n) a = 0;\n  }\n  if (l1 <= l2)\n    cout << l1 << endl;\n  else\n    cout << l2 << endl;\n  return 0;\n}\n"
    ],
    [
        "let d, n, x be integers with d = 2d array of integers with 107 rows and 107 columns respectively\n\n  read n\n  for i = 1 to n inclusive\n    for j = 1 to n inclusive , d[i][j] is equal to INT_MAX / 10\n  for i = 1 to n inclusive , d[i][i] is equal to 0\n  for i = 1 to n inclusive\n    read x\n    let j be a integer with j = i + 1\n    if j is greater than n ,decrement j by n\n    d[i][j] is equal to x\n    d[j][i] is equal to x\n  \n  for k = 1 to n inclusive\n    for i = 1 to n inclusive\n      for j = 1 to n inclusive\n        if d[i][k] + d[k][j] is less than d[i][j] , d[i][j] is equal to d[i][k] + d[k][j]\n  let s, t be integers\n  read s, t\n  print d[s][t] and newline\n\n",
        "int d[100 + 7][100 + 7], n, x;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++) d[i][j] = INT_MAX / 10;\n  for (int i = 1; i <= n; i++) d[i][i] = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> x;\n    int j = i + 1;\n    if (j > n) j -= n;\n    d[i][j] = x;\n    d[j][i] = x;\n  }\n  for (int k = 1; k <= n; k++)\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++)\n        if (d[i][k] + d[k][j] < d[i][j]) d[i][j] = d[i][k] + d[k][j];\n  int s, t;\n  cin >> s >> t;\n  cout << d[s][t] << endl;\n}\n"
    ],
    [
        "create ints K, X, Y, M, and N and int array A of size 105\n\n  read K\n  for i = 1 to K\n    read A[i]\n    set N to N + A[i]\n  \n  read X and Y\n  for i = min(X, Y) to max(X, Y), set M to M + A[i]\n  print the min of M and N - M\n\n",
        "int K, A[105], X, Y, M, N;\nint main() {\n  cin >> K;\n  for (int i = 1; i <= K; i++) {\n    cin >> A[i];\n    N += A[i];\n  }\n  cin >> X >> Y;\n  for (int i = min(X, Y); i < max(X, Y); i++) { M += A[i]; }\n  cout << min(M, N - M) << '\\n';\n}\n"
    ],
    [
        "let int array arr of size 1000\n\n  let int n\n  while cin >> n is truthy\n    let int total = 0\n    set every index of arr to 0\n    for i = 0 to n exclusive\n      read arr[i]\n      set total to total + arr[i]\n    \n    let ints s and t\n    read s and t\n    create int tmp\n    if s is greater than t\n      set tmp to s\n      set s to t\n      set t to tmp\n    \n    decrease s by 1\n    reduce t by 1\n    let ints a1 = 0 and a2 = 0\n    for i = s to t exclusive, set a1 to a1 + arr[i]\n    set a2 to total - a1\n    print the min of a2 and a1\n  \n\n",
        "int arr[1000];\nint main() {\n  int n;\n  while (cin >> n) {\n    int total = 0;\n    memset(arr, 0, sizeof(arr));\n    for (int i = 0; i < n; i++) {\n      cin >> arr[i];\n      total += arr[i];\n    }\n    int s, t;\n    cin >> s >> t;\n    int tmp;\n    if (s > t) {\n      tmp = s;\n      s = t;\n      t = tmp;\n    }\n    s--;\n    t--;\n    int a1 = 0, a2 = 0;\n    for (int i = s; i < t; i++) { a1 += arr[i]; }\n    a2 = total - a1;\n    cout << min(a2, a1) << endl;\n  }\n}\n"
    ],
    [
        "\n  n, sum, sum1, a, b = int with sum = 0 and sum1 = 0\n  read n\n  x = int array of size n\n  read n values into x\n  read a then b\n  for i = min of a - 1, b - 1 to max of b - 1, a- 1 increment sum by x[i]\n  for i = min of a - 1, b - 1 to 0 inclusive decrementing i increment sum1 by x[i]\n  for i = n - 1 to max of b - 1, a - 1 decrementing i increment sum1 by x[i]\n  print min of sum, sum1\n\n",
        "int main() {\n  int n, sum = 0, sum1 = 0, a, b;\n  cin >> n;\n  int x[n];\n  for (int i = 0; i < n; i++) { cin >> x[i]; }\n  cin >> a >> b;\n  for (int i = min(a - 1, b - 1); i < max(b - 1, a - 1); i++) { sum += x[i]; }\n  for (int i = min(a - 1, b - 1) - 1; i >= 0; i--) sum1 += x[i];\n  for (int i = n - 1; i >= max(b - 1, a - 1); i--) sum1 += x[i];\n  cout << min(sum, sum1) << endl;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create integer array d with size n + 10\n  set d[0] to 0\n  for i = 1 to n inclusive, read d[i]\n  create integer array s with size n + 15\n  set s[0] to 0\n  for i = 1 to n + 1 inclusive, set s[i] to s[i-1] + d[i-1]\n  create integers sr, t\n  read sr read t\n  if sr is greater than t, swap values between sr and t\n  create integer ans with ans = s[t] - s[sr]\n  set ans to minimum of ( ans and s[sr] + s[n + 1] - s[t] )\n  print ans print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int d[n + 10];\n  d[0] = 0;\n  for (int i = 1; i <= n; i++) { cin >> d[i]; }\n  int s[n + 15];\n  s[0] = 0;\n  for (int i = 1; i <= n + 1; i++) { s[i] = s[i - 1] + d[i - 1]; }\n  int sr, t;\n  cin >> sr >> t;\n  if (sr > t) swap(sr, t);\n  int ans = s[t] - s[sr];\n  ans = min(ans, s[sr] + s[n + 1] - s[t]);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers n, m, x, y, ans, ans1, create integer arrays dist, prefs with dist size 100015, prefs size 100015\n\n  read n\n  for i = 0 to n exclusive, read dist[i]\n  set prefs[0] to dist[0]\n  for i = 1 to n exclusive, set prefs[i] to dist[i] + prefs[i - 1]\n  read x read y\n  decrement x\n  decrement y\n  if x is greater than y, swap values between x and y\n  set ans to prefs[y-1]\n  decrement ans by prefs[x-1]\n  set ans1 to prefs[n-1] - ans\n  print minimum of ans and ans1 print newline\n  \n\n",
        "int n, m, dist[100015], x, y, prefs[100015], ans, ans1;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> dist[i]; }\n  prefs[0] = dist[0];\n  for (int i = 1; i < n; i++) { prefs[i] = dist[i] + prefs[i - 1]; }\n  cin >> x >> y;\n  x--;\n  y--;\n  if (x > y) { swap(x, y); }\n  ans = prefs[y - 1];\n  ans -= prefs[x - 1];\n  ans1 = prefs[n - 1] - ans;\n  cout << min(ans, ans1) << endl;\n  return 0;\n}\n"
    ],
    [
        "declare n, s, t, ans = 0, tmp = 0 as integers, declare line as integer array with size 101 = {}\n\n  declare integer i\n  read n\n  for i = 1 to n inclusive, read line[i]\n  read s read t\n  let i be s\n  while i is not t\n    increment tmp by line[i]\n    increment i\n    if i is greater than n, let i be 1\n  \n  while i is not s\n    increment ans by line[i]\n    increment i\n    if i is greater than n, let i be 1\n  \n  if tmp is less than ans, let ans be tmp\n  print ans and newline\n  \n\n",
        "int n, s, t, line[101] = {}, ans = 0, tmp = 0;\nint main() {\n  int i;\n  cin >> n;\n  for (i = 1; i <= n; ++i) cin >> line[i];\n  cin >> s >> t;\n  i = s;\n  while (i != t) {\n    tmp += line[i];\n    ++i;\n    if (i > n) i = 1;\n  }\n  while (i != s) {\n    ans += line[i];\n    ++i;\n    if (i > n) i = 1;\n  }\n  if (tmp < ans) ans = tmp;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "n, i, s1, s2, s, t, a = integers with a = array of size 105\n\n  read n\n  for i = 1 to n, read a[i]\n  read s, t\n  if s > t, swap s and t\n  for i = s to t exclusive, s1 = s1 + a[i]\n  for i = 1 to s exclusive, s2 = s2 + a[i]\n  for i = n to t, s2 = s2 + a[i]\n  print min of s1 and s2\n  \n\n",
        "int n, i, s1, s2, s, t, a[105];\nint main() {\n  cin >> n;\n  for (i = 1; i <= n; i++) cin >> a[i];\n  cin >> s >> t;\n  if (s > t) swap(s, t);\n  for (i = s; i < t; i++) s1 += a[i];\n  for (i = 1; i < s; i++) s2 += a[i];\n  for (i = n; i >= t; i--) s2 += a[i];\n  cout << min(s1, s2) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  arr = int array of size n\n  read n values into arr\n  a, b = int\n  read a then b\n  x = int with x = max of a and b\n  y = int with y = min of a and b\n  d1 = int with d1 = 0\n  for i = x - 1 to n + y - 1 increment d1 by arr[i mod n]\n  d2 = int with d2 = 0\n  for i = x - 2 to y - 1 inclusive decrementing i increment d2 by arr[i mod n]\n  print min of d1 and d2\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; ++i) cin >> arr[i];\n  int a, b;\n  cin >> a >> b;\n  int x = max(a, b);\n  int y = min(a, b);\n  int d1 = 0;\n  for (int i = x - 1; i < n + (y - 1); i++) { d1 += arr[i % n]; }\n  int d2 = 0;\n  for (int i = x - 2; i >= y - 1; i--) { d2 += arr[i % n]; }\n  cout << min(d1, d2) << endl;\n}\n"
    ],
    [
        "\n  declare NumberOfStations as integer\n  declare integers From, To\n  declare integer SumOfDistance = 0\n  read NumberOfStations\n  declare integer vector StationsDistance initialized with NumberOfStations\n  for Index = 0 to NumberOfStations exclusive\n    read StationsDistance[Index]\n    increment SumOfDistance by StationsDistance[Index]\n  \n  read From and To\n  declare integers Start, End\n  if From is less than To\n    let Start be From\n    let End be To\n  else\n    let Start be To\n    let End be From\n  \n  declare TheOtherDestance as integer = 0\n  for Start is less than End, incrementing Start, increment TheOtherDestance by StaionsDistance[Start - 1]\n  print minimum of TheOtherDestance and ( SumOfDistance - TheOtherDestance), newline\n  \n\n",
        "int main() {\n  int NumberOfStations;\n  int From, To;\n  int SumOfDistance = 0;\n  cin >> NumberOfStations;\n  vector<int> StaionsDistance(NumberOfStations);\n  for (int Index = 0; Index < NumberOfStations; Index++) {\n    cin >> StaionsDistance[Index];\n    SumOfDistance += StaionsDistance[Index];\n  }\n  cin >> From >> To;\n  int Start, End;\n  if (From < To) {\n    Start = From;\n    End = To;\n  } else {\n    Start = To;\n    End = From;\n  }\n  int TheOtherDestance = 0;\n  for (; Start < End; Start++) TheOtherDestance += StaionsDistance[Start - 1];\n  cout << min(TheOtherDestance, (SumOfDistance - TheOtherDestance)) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = long long int\n  read n\n  d = long long int array of size n\n  read n values into d\n  s, t = long long int\n  read s then t\n  if s is greater than t\n    temp = long long int with temp = s\n    set s to t\n    set t to temp\n  \n  dist1, dist2 = long long int with dist1 = 0 and dist2 = 0\n  for i = s - 1 to t - 1 increment dist1 by d[i]\n  flag = bool with flag = true\n  for i = t - 1 to s - 1\n    if i is a multiple of n and flag is true\n      set i to -1\n      set flag to false\n      continue\n    \n    increment dist2 by d[i]\n  \n  if dist2 > dist1\n    print dist1\n  else\n    print dist2\n  \n\n",
        "int main() {\n  long long int n;\n  cin >> n;\n  long long int d[n];\n  for (int i = 0; i < n; i++) { cin >> d[i]; }\n  long long int s, t;\n  cin >> s >> t;\n  if (s > t) {\n    long long int temp = s;\n    s = t;\n    t = temp;\n  }\n  long long int dist1 = 0, dist2 = 0;\n  for (int i = s - 1; i < t - 1; i++) { dist1 += d[i]; }\n  bool flag = true;\n  for (int i = t - 1; i != s - 1; i++) {\n    if (i % n == 0 && flag) {\n      i = -1;\n      flag = false;\n      continue;\n    }\n    dist2 += d[i];\n  }\n  if (dist2 > dist1)\n    cout << dist1 << endl;\n  else\n    cout << dist2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, d with 255 elements, s, and t be integers\n  let res1 and res2 be integers with value 0\n  read n\n  read n values into array i\n  iterate and set 2 * n values into array d with element i - n\n  read s and t\n  if s is more than t, swap s and t\n  for i from s to t exclusive, add d at element i to res1\n  for i from t to n + s exclusive, add d at element i to res2\n  print min of res1 and res2\n\n",
        "int main() {\n  int n, d[255], s, t;\n  int res1 = 0, res2 = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) { cin >> d[i]; }\n  for (int i = n + 1; i <= 2 * n; i++) { d[i] = d[i - n]; }\n  cin >> s >> t;\n  if (s > t) swap(s, t);\n  for (int i = s; i < t; i++) { res1 += d[i]; }\n  for (int i = t; i < n + s; i++) { res2 += d[i]; }\n  cout << min(res1, res2) << endl;\n}\n"
    ],
    [
        "\n  n, s, t, sum, m1 = int with sum = 0 and m1 = 0\n  read n\n  arr = int array of size n\n  for i = 0 to n\n    read arr[i]\n    increment sum by arr[i]\n  \n  read s then t\n  decrement s\n  decrement t\n  l = int with l = min of s and t\n  h = int with h = max of s and t\n  for i = l to j increment m1 by arr[i]\n  print min of m1 and sum - m1\n\n",
        "int main() {\n  int n, s, t, sum = 0, m1 = 0;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    sum += arr[i];\n  }\n  cin >> s >> t;\n  s--;\n  t--;\n  int l = min(s, t);\n  int h = max(s, t);\n  for (int i = l; i < h; i++) { m1 += arr[i]; }\n  cout << min(m1, sum - m1) << \"\\n\";\n}\n"
    ],
    [
        "\n  declare integer variables n, m, u, v, x and y\n  read user input to n\n  a is a new array of integers with size 105\n  start for loop from i = 1 to n inclusive, reading user input to a[i] on each loop\n  read u and v from the user input\n  if u is greater than v, swap u and v\n  declare int variables m1 and m2 = 0\n  for integer i = u to v exclusive, change m1 to m1 + a[i]\n  start for loop from i = 1 to n inclusive\n    if i < u or i >= v, add a[i] to m2\n  \n  if u = v\n    print 0\n  else\n    print min of m1 and m2 to the standard output\n  \n  \n\n",
        "int main() {\n  int n, m, u, v, x, y;\n  cin >> n;\n  int a[105] = {0};\n  for (int i = 1; i <= n; i++) { cin >> a[i]; }\n  cin >> u >> v;\n  if (u > v) { swap(u, v); }\n  int m1 = 0, m2 = 0;\n  for (int i = u; i < v; i++) { m1 += a[i]; }\n  for (int i = 1; i <= n; i++) {\n    if (i < u || i >= v) { m2 += a[i]; }\n  }\n  if (u == v) {\n    cout << 0 << endl;\n  } else {\n    cout << min(m1, m2) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, s, t, len1, len2 = int with len1 = 0 and len2 = 0 and arr = int array of size 103\n  read n\n  read n values into arr\n  read s then t\n  if s is greater then t then swap s and t\n  for i = s - 1 to t - 1 increment len1 by arr[i]\n  f = int with f = n - t + s\n  tt = int with tt = t - 1\n  loop f times\n    if tt is even set tt to 0\n    increment len2 by arr[tt]\n    increment tt\n  \n  print min of len1 and len2\n  \n\n",
        "int main() {\n  int n, arr[103], s, t, len1 = 0, len2 = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  cin >> s >> t;\n  if (s > t) swap(s, t);\n  for (int i = s - 1; i < t - 1; i++) len1 += arr[i];\n  int f = n - t + s;\n  int tt = t - 1;\n  while (f--) {\n    if (tt % n == 0) tt = 0;\n    len2 += arr[tt];\n    tt++;\n  }\n  cout << min(len1, len2) << endl;\n  return 0;\n}\n"
    ],
    [
        "in function choose with arguments of long long integer n and long long integer m and returns a long long integer\n  ans = long long integer = 0\n  num = long long integer = 1\n  den = long long integer = 1\n  for i = 0 to m exclusive\n    num = num * (n - i)\n    num = num / (i + 1)\n  \n  return num\n\nin function isPrime with argument integer n and returns a boolean\n  if n <= 1, then return false\n  if n <= 3, then return true\n  if n is even and n modulo 3 is 0, then return false\n  for i = 5, where i is squared to n inclusive and i = i + 6\n    if n modulo i is 0 or n modulo the result of i + 2 is 0, then return false\n  \n  return true\n\nin function gcd with arguments of long long integer a and long long integer b and returns a long long integer\n  if a is 0\n    return b\n  else\n    return the result of calling gcd with arguments of b modulo a and a\n  \n\n\n  i, j, k, n, m, t, c = long long integers\n  read n\n  d = long long integer vector of size n\n  for i = 0 to n exclusive, read d[i]\n  s = long long integer\n  read s, t\n  if s > t\n    m = s\n    s = t\n    t = m\n  \n  ans1 = long long integer = 0, ans2 = long long integer = 0\n  for i = s - 1 to t - 1 exclusive, then ans1 = ans1 + d[i]\n  i = t - 1\n  while i is not s - 1\n    ans2 = ans2 + d[i]\n    increase i by 1\n    if i is n, then i = 0\n  \n  print the lower value between ans1 and ans2\n  \n\n",
        "long long int choose(long long int n, long long int m) {\n  long long int ans = 0;\n  long long int num = 1;\n  long long int den = 1;\n  for (long long int i = 0; i < m; i++) {\n    num *= (n - i);\n    num = num / (i + 1);\n  }\n  return num;\n}\nbool isPrime(int n) {\n  if (n <= 1) return false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n  for (int i = 5; i * i <= n; i = i + 6) {\n    if (n % i == 0 || n % (i + 2) == 0) return false;\n  }\n  return true;\n}\nlong long int gcd(long long int a, long long int b) {\n  if (a == 0) {\n    return b;\n  } else {\n    return gcd(b % a, a);\n  }\n}\nint main() {\n  long long int i, j, k, n, m, t, c;\n  cin >> n;\n  vector<long long int> d(n);\n  for (i = 0; i < n; i++) { cin >> d[i]; };\n  long long int s;\n  cin >> s >> t;\n  if (s > t) {\n    m = s;\n    s = t;\n    t = m;\n  }\n  long long int ans1 = 0, ans2 = 0;\n  for (i = s - 1; i < t - 1; i++) { ans1 += d[i]; }\n  i = t - 1;\n  while (i != s - 1) {\n    ans2 += d[i];\n    i++;\n    if (i == n) i = 0;\n  }\n  cout << min(ans1, ans2) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare long longs i, x, j, y, tn = 1, ans = 0, long long array ar size 100000\n  declare n, m as integers\n  declare tc as long long\n  read n\n  declare v, v1 as long long vectors\n  add 0 to end of v\n  for i = 0 to n exclusive\n    read x\n    add x to end of v\n  \n  let v1 be v\n  for i = 1 to size of v exclusive, increment v[i] by v[i-1]\n  read x read y\n  if x is greater than y, swap values between x and y\n  if x is y\n    print 0, newline\n    \n  \n  declare integer t1 = v[y - 1] - v[x - 1]\n  declare integer t2 = v[size of v - 1] - v[y] + v1[y] + v[x - 1]\n  print minimum of t1 and t2, newline\n  \n\n",
        "int main() {\n  long long ar[100000], i, x, j, y, tn = 1, ans = 0;\n  int n, m;\n  long long tc;\n  cin >> n;\n  vector<long long> v, v1;\n  v.push_back(0);\n  for (i = 0; i < n; i++) {\n    cin >> x;\n    v.push_back(x);\n  }\n  v1 = v;\n  for (i = 1; i < v.size(); i++) v[i] += v[i - 1];\n  cin >> x >> y;\n  if (x > y) swap(x, y);\n  if (x == y) {\n    cout << 0 << endl;\n    return 0;\n  }\n  int t1 = v[y - 1] - v[x - 1];\n  int t2 = v[v.size() - 1] - v[y] + v1[y] + v[x - 1];\n  cout << min(t1, t2) << endl;\n  return 0;\n}\n"
    ],
    [
        "let N be int\nlet x, s and t = int\nlet d be vector of int\n\n  read N\n  read x and d.push_back of x N times exclusive\n  read s and t\n  if decremented s is greater than decremented t then swap s and t\n  let d1 be integer set to 0\n  add d of i to d1 i times from s to t exclusive\n  let d2 be integer set to 0\n  add d of i to d2 i times from t to N exclusive\n  add d of i to d2 i times from 0 to s exclusive\n  print min of d1 and d2\n  \n\n",
        "int N;\nint x, s, t;\nvector<int> d;\nint main() {\n  cin >> N;\n  for (int i = 0; i < N; ++i) cin >> x, d.push_back(x);\n  cin >> s >> t;\n  if ((--s) > (--t)) swap(s, t);\n  int d1 = 0;\n  for (int i = s; i < t; ++i) d1 += d[i];\n  int d2 = 0;\n  for (int i = t; i < N; ++i) d2 += d[i];\n  for (int i = 0; i < s; ++i) d2 += d[i];\n  cout << min(d1, d2) << endl;\n  return 0;\n}\n"
    ],
    [
        "create string s\ncreate integers i and j, and an array of integers arr with 10000 elements\n\n  create integers a, b, c, d, t, cnt and cn where cnt and cn = 0\n  read from the input to t\n  in a for loop, change k from 1 to t inclusive, reading variable arr[k] from the input\n  read variables a and b from the input\n  if a is greater than b, swap a and b\n  in the for loop, change i from a to b exclusive, increasing cnt by arr[i]\n  start for loop with i = b, incrementing i by 1\n    if i = a, stop the loop\n    change cn to cn + arr[i]\n    if i = t, set i to 0\n  \n  if cnt is greater than cn\n    print cn to the standard output\n  else\n    print cnt\n  \n  \n\n",
        "string s;\nint i, j, arr[10000];\nint main() {\n  int a, b, c, d, t, cnt = 0, cn = 0;\n  cin >> t;\n  for (int k = 1; k <= t; k++) { cin >> arr[k]; }\n  cin >> a >> b;\n  if (a > b) { swap(a, b); }\n  for (i = a; i < b; i++) { cnt += arr[i]; }\n  for (i = b;; i++) {\n    if (i == a) break;\n    cn += arr[i];\n    if (i == t) { i = 0; }\n  }\n  if (cnt > cn)\n    cout << cn << endl;\n  else {\n    cout << cnt << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, s, t = integers, arr = integer array of size 100\n  read n\n  for i = 0 to n exclusive\n  read s, t\n  m1 = integer = lower value between s, t\n  m2 = integer = bigger value between s, t\n  decrease m1 by 1\n  decrease m2 by 1\n  R1 = integer = 0, R2 = integer = 0\n  for i = m1 to m2, then R1 = R1 + arr[i]\n  for i = m2 to mn, then R2 = R1 + arr[i]\n  for i = 0 to m1, then R2 = R2 + arr[i]\n  R = integer = lower value between R2 and R1\n  print R\n  \n\n",
        "int main() {\n  int n, arr[100], s, t;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  cin >> s >> t;\n  int m1 = min(s, t);\n  int m2 = max(s, t);\n  m1--;\n  m2--;\n  int R1 = 0, R2 = 0;\n  for (int i = m1; i < m2; i++) R1 += arr[i];\n  for (int i = m2; i < n; i++) R2 += arr[i];\n  for (int i = 0; i < m1; i++) R2 += arr[i];\n  int R = min(R2, R1);\n  cout << R << endl;\n  return 0;\n}\n"
    ],
    [
        "declare array of integers arr with size 10005\n\n  create int n\n  read n\n  for i = 0 to i = n - 1 read arr[i + 1]\n  let s and t be integers\n  read s and t\n  if s is greater than t then swap s and t\n  create integer aa and set it to 0\n  for i = s to i = t exclusive set aa to aa + arr[i]\n  create integer bb = 0\n  for i = 1 to i = t exclusive assign bb + arr[i] to bb\n  for i = t to i = n do bb = bb + arr[i]\n  print min of aa and bb\n\n",
        "int arr[10005];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> arr[i + 1]; }\n  int s, t;\n  cin >> s >> t;\n  if (s > t) { swap(s, t); }\n  int aa = 0;\n  for (int i = s; i < t; i++) { aa += arr[i]; }\n  int bb = 0;\n  for (int i = 1; i < s; i++) { bb += arr[i]; }\n  for (int i = t; i <= n; i++) { bb += arr[i]; }\n  cout << min(aa, bb) << endl;\n}\n"
    ],
    [
        "create constant integer maxn with maxn = 105\ncreate integers n, s, t, create integer array d with size maxn\n\n  read n\n  for i = 1 to n inclusive, read d[i]\n  read s read t\n  create integers clock, revert, i with clock = 0, revert = 0\n  create integers front, tail, with front = minimum of s and t, tail = maximum of s and t\n  for i = front to tail exclusive, increment clock by d[i]\n  for i = tail to i is not front, incrementing i\n    if i is greater than n, set i to i % n\n    if i is front, break loop\n    increment revert by d[i]\n  \n  print minimum of clock and revert print newline\n\n",
        "const int maxn = 105;\nint n, d[maxn], s, t;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> d[i];\n  cin >> s >> t;\n  int clock = 0, revert = 0, i;\n  int front = min(s, t), tail = max(s, t);\n  for (i = front; i < tail; i++) { clock += d[i]; }\n  for (i = tail; i != front; i++) {\n    if (i > n) i %= n;\n    if (i == front) break;\n    revert += d[i];\n  }\n  cout << min(clock, revert) << endl;\n}\n"
    ],
    [
        "\n  declare int variables n, s, t, sum, res and mini with sum, res and mini = 0, and an array of integers d with 100 elements\n  read n\n  for integer i = 0 to n exclusive\n    read d[i]\n    increase sum by d[i]\n  \n  read input to s and t\n  for i from min of s - 1 and t - 1 to max of t - 1 and s - 1 exclusive, add d[i] to res\n  change mini to min of res and sum - res\n  print mini\n  \n\n",
        "int main() {\n  int n, d[100], s, t, sum = 0, res = 0, mini = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> d[i];\n    sum += d[i];\n  }\n  cin >> s >> t;\n  for (int i = min(s - 1, t - 1); i < max(t - 1, s - 1); i++) { res += d[i]; }\n  mini = min(res, sum - res);\n  cout << mini << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  create int vector x\n  for i = 0 to n exclusive\n    let int m\n    read m\n    add m to the end of x\n  \n  let ints s and t\n  read s and t\n  create ints count1 = 0 and count2 = 0\n  set s to s + n\n  for i = s - 1 to infinity\n    if i modulo n is equal to t - 1\n      break loop\n    otherwise\n      set count1 to count1 + x[i % n]\n  \n  decrease s by 1\n  for i = s - 1 to infinity decreasing by 1 each time\n    if i modulo n is equal to t - 1\n      set count2 to count2 + x[i % n]\n      break loop\n    otherwise do\n      set count2 to count2 + x[i % n]\n  \n  if count1 is less than or equal to count2\n    print count1\n  otherwise do\n    print count2\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<int> x;\n  for (int i = 0; i < n; i++) {\n    int m;\n    cin >> m;\n    x.push_back(m);\n  }\n  int s, t;\n  cin >> s >> t;\n  int count1 = 0, count2 = 0;\n  s = s + n;\n  for (int i = s - 1;; i++) {\n    if (i % n == t - 1)\n      break;\n    else\n      count1 = count1 + x[i % n];\n  }\n  s--;\n  for (int i = s - 1;; i--) {\n    if (i % n == t - 1) {\n      count2 = count2 + x[i % n];\n      break;\n    } else\n      count2 = count2 + x[i % n];\n  }\n  if (count1 <= count2) {\n    cout << count1 << endl;\n  } else\n    cout << count2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints n, ans1 = 0, ans2 = 0, f, t, and tot = 0 and int array d of size 105\n  read n\n  for i = 1 to n\n    read d[i]\n    set tot to tot + d[i]\n  \n  read f and t\n  if f is greater than t, swap the values of f and t\n  for i = f to t exclusive, set ans1 to ans1 + d[i]\n  set ans2 to tot - ans1\n  print the min of ans1 and ans2\n\n",
        "int main() {\n  int n, ans1 = 0, ans2 = 0, d[105], f, t, tot = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> d[i];\n    tot += d[i];\n  }\n  cin >> f >> t;\n  if (f > t) swap(f, t);\n  for (int i = f; i < t; i++) ans1 += d[i];\n  ans2 = tot - ans1;\n  cout << min(ans1, ans2) << '\\n';\n}\n"
    ],
    [
        "mod = long long = 1000000007\nN, M, K, H, W, L, R = long long integer\n\n  read N\n  v = integer vector of size N + 1\n  for i = 1 to N inclusive, then read v[i]\n  M = sum of all values of v\n  for i = 1 to N inclusive, v[i] = v[i] + v[i - 1]\n  read L, R\n  if L > R swap the values of L, R\n  print the result of the lower value between v[R - 1] - v[L - 1] and M in integer form - v[R - 1] + v[L - 1]\n  \n\n",
        "const long long int MOD = 1000000007;\nlong long int N, M, K, H, W, L, R;\nint main() {\n  cin >> N;\n  vector<int> v(N + 1);\n  for (int i = 1; i <= N; i++) cin >> v[i];\n  M = accumulate(v.begin(), v.end(), 0);\n  for (int i = 1; i <= N; i++) v[i] += v[i - 1];\n  cin >> L >> R;\n  if (L > R) swap(L, R);\n  cout << min(v[R - 1] - v[L - 1], (int)M - v[R - 1] + v[L - 1]) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create character array c with size 4 by 4\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive read c[i][j]\n  \n  declare integers x, y, z and v = 0\n  in the infinite loop\n    for j = z to z + 2 exclusive\n      if c[v][j] = '#' increment x\n      if c[v][j] = '.' increment y\n      if c[v + 1][j] = '#' increment x\n      if c[v + 1][j] = '.' increment y\n    \n    if x > y or y is greater than x\n      print \"YES\"\n      \n    \n    set x to 0\n    set y to 0\n    increase z by one\n    if z = 3\n      increase v by one\n      set z to 0\n    \n    if v = 3, break the loop\n  \n  print \"NO\"\n\n",
        "int main() {\n  char c[4][4];\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) { cin >> c[i][j]; }\n  }\n  int x = 0, y = 0, z = 0, v = 0;\n  while (true) {\n    for (int j = z; j < z + 2; j++) {\n      if (c[v][j] == '#') x++;\n      if (c[v][j] == '.') y++;\n      if (c[v + 1][j] == '#') x++;\n      if (c[v + 1][j] == '.') y++;\n    }\n    if (x > y || y > x) {\n      cout << \"YES\" << endl;\n      return 0;\n    }\n    x = 0;\n    y = 0;\n    z++;\n    if (z == 3) {\n      v++;\n      z = 0;\n    }\n    if (v == 3) { break; }\n  }\n  cout << \"NO\" << endl;\n}\n"
    ],
    [
        "create 2d boolean array a with size 4 by 4\ndeclare f with no arguments, returning boolean\n  for i = 0 to 3 exclusive\n    for j = 0 to 3 exclusive\n      create boolean bol with bol = a[i][j]\n      if a[i+1][j] is bol and a[i+1][j+1] is bol and a[i][j+1] is bol, return true from function\n    \n  \n  return false from function\n\n\n  create character h\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive\n      set h to read character\n      if h is '#'\n        set a[i][j] to true\n      else\n        set a[i][j] to false\n    \n    set h to read character\n  \n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive\n      set a[i][j] to false if a[i][j] is true, else true\n      if result of run f is true\n        print \"YES\" print newline\n        \n      \n      set a[i][j] to false if a[i][j] is true, else true\n    \n  \n  print \"NO\" print newline\n  \n\n",
        "bool a[4][4];\nbool f() {\n  for (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n      bool bol = a[i][j];\n      if (a[i + 1][j] == bol && a[i + 1][j + 1] == bol && a[i][j + 1] == bol) { return true; }\n    }\n  }\n  return false;\n}\nint main() {\n  char h;\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) {\n      h = getchar();\n      if (h == '#')\n        a[i][j] = true;\n      else\n        a[i][j] = false;\n    }\n    h = getchar();\n  }\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) {\n      a[i][j] = (a[i][j] == true ? false : true);\n      if (f() == true) {\n        cout << \"YES\" << endl;\n        return 0;\n      }\n      a[i][j] = (a[i][j] == true ? false : true);\n    }\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string vector vs initialized with 4\n  for i = 0 to 4 exclusive, read vs[i]\n  create boolean pass with pass = false\n  for top = 0 to top is less than or equal to 2 and not pass, incrementing top\n    for left = 0 to 2 inclusive\n      create integer dot with dot = 0\n      for r = 0 to 2 exclusive\n        for c = 0 to 2 exclusive\n          if vs[top+r][left+c] is '.', increment dot by 1\n        \n      \n      if dot is not 2\n        set pass to true\n        break loop\n      \n    \n  \n  print \"YES\" if pass is true, else \"NO\", print newline\n  \n\n",
        "int main() {\n  vector<string> vs(4);\n  for (size_t i = 0; i < 4; ++i) { cin >> vs[i]; }\n  bool pass = false;\n  for (size_t top = 0; top <= 2 && !pass; ++top) {\n    for (size_t left = 0; left <= 2; ++left) {\n      int dot = 0;\n      for (size_t r = 0; r < 2; ++r) {\n        for (size_t c = 0; c < 2; ++c) {\n          if (vs[top + r][left + c] == '.') { dot += 1; }\n        }\n      }\n      if (dot != 2) {\n        pass = true;\n        break;\n      }\n    }\n  }\n  cout << (pass ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
    ],
    [
        "declare compute\n  create 2d character array a with size 4 by 4\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive, read a[i][j]\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive\n      if j is less than or equal to 2 and i is less than or equal to 2\n        create integers hutch, dots with hutch = 0, dots = 0\n        for k = 0 to 2 exclusive\n          for l = 0 to 2 exclusive\n            if a[i + k][j + l] is '#'\n              increment hutch\n            else\n              increment dots\n        \n        if hutch is greater than or equal to 3 or dots is greater than or equal to 3\n          print \"YES\\n\"\n          return from function\n        \n      \n    \n  \n  print \"NO\\n\"\n\n\n  run compute\n  \n\n",
        "void compute() {\n  char a[4][4];\n  for (int i = 0; i < 4; i++)\n    for (int j = 0; j < 4; j++) cin >> a[i][j];\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) {\n      if (j <= 2 && i <= 2) {\n        int hutch = 0, dots = 0;\n        for (int k = 0; k < 2; k++) {\n          for (int l = 0; l < 2; l++)\n            if (a[i + k][j + l] == '#')\n              ++hutch;\n            else\n              ++dots;\n        }\n        if (hutch >= 3 || dots >= 3) {\n          cout << \"YES\\n\";\n          return;\n        }\n      }\n    }\n  }\n  cout << \"NO\\n\";\n}\nint main() {\n  compute();\n  return 0;\n}\n"
    ],
    [
        "\n  let s = array of strings of length 5\n  for (i = 0 to 4 exclusive), read ith element of array s\n  for ( x = 1 to 4 exclusive )\n    for ( y = 1 to 4 exclusive )\n      let cnt be a integer with value assigned as 0\n      for i=0 to 2 (exclusive)\n        for j=0 to 2 (exclusive)\n          if (s[x - i][y - j] is not equal to s[x][y]), increase cnt value by 1\n      check if (cnt power 2), then return print YES and newline\n    \n  print NO and newline\n  \n\n",
        "int main() {\n  string s[5];\n  for (int i = 0; i < 4; i++) cin >> s[i];\n  for (int x = 1; x < 4; x++)\n    for (int y = 1; y < 4; y++) {\n      int cnt = 0;\n      for (int i = 0; i < 2; i++)\n        for (int j = 0; j < 2; j++)\n          if (s[x - i][y - j] != s[x][y]) cnt++;\n      if (cnt ^ 2) return cout << \"YES\\n\", 0;\n    }\n  cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "create constant long long mod with mod = 10e9 + 7\ncreate constant double eps with eps = 1e-11\ncreate constant double PI with PI = 2 * acosign of 0.0\n\n  create 2d character array arr of size 4 by 4\n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive, read arr[i][j]\n  \n  for i = 0 to 4 exclusive\n    for j = 0 to 4 exclusive\n      if arr[i][j] is '.' or arr[i][j] is '#'\n        if arr[i][j-1] is '#' and j - 1 is greater than or eqaul to 0\n          if arr[i-1][j] is '#' and i - 1 is greater than or equal to 0\n            if arr[i-1][j-1] is '#' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j+1] is '#' and j + 1 is less than 4\n          if arr[i-1][j] is '#' and i - 1 is greater than or equal to 0\n            if arr[i-1][j+1] is '#' and j+1 is less than 4 and i - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j-1] is '#' and j - 1 is greater than or equal to 0\n          if arr[i+1][j] is '#' and i + 1 is less than 4\n            if arr[i+1][j-1] is '#' and i + 1 is less than 4 and j - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j+1] is '#' and j + 1 is less than 4\n          if arr[i+1][j] is '#' and i + 1 is less than 4\n            if arr[i+1][j+1] is '#' and i + 1 is less than 4 and j + 1 is less than 4\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j-1] is '.' and j - 1 is greater than or equal to 0\n          if arr[i-1][j] is '.' and i - 1 is greater than or equal to 0\n            if arr[i-1][j-1] is '.' and i - 1 is greater than or equal to 0 and j - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j+1] is '.' and j + 1 is less than 4\n          if arr[i-1][j] is '.' and i -1 is greater than or equal to 0\n            if arr[i-1][j+1] is '.' and i - 1 is greater than or equal to 0 and j + 1 is less than 4\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j-1] is '.' and j - 1 is greater than or equal to 0\n          if arr[i+1][j] is '.' and i + 1 is less than 4\n            if arr[i+1][j-1] is '.' and i + 1 is less than 4 and j - 1 is greater than or equal to 0\n              print \"YES\"\n              \n            \n          \n        \n        if arr[i][j+1] is '.' and j + 1 is less than 4\n          if arr[i+4][j] is '.' and i + 1 is less than 4\n            if arr[i+1][j+1] is '.' and i + 1 is less than 4 and j + 1 is less than 4\n              print \"YES\"\n              \n            \n          \n        \n      \n    \n  \n  print \"NO\"\n\n",
        "const long long mod = 10e9 + 7;\nconst double eps = 1e-11;\nconst double PI = 2 * acos(0.0);\nint main() {\n  char arr[4][4];\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) { cin >> arr[i][j]; }\n  }\n  for (int i = 0; i < 4; i++) {\n    for (int j = 0; j < 4; j++) {\n      if (arr[i][j] == '.' or arr[i][j] == '#') {\n        if (arr[i][j - 1] == '#' and j - 1 >= 0) {\n          if (arr[i - 1][j] == '#' and i - 1 >= 0) {\n            if (arr[i - 1][j - 1] == '#' and i - 1 >= 0 and j - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j + 1] == '#' and j + 1 < 4) {\n          if (arr[i - 1][j] == '#' and i - 1 >= 0) {\n            if (arr[i - 1][j + 1] == '#' and j + 1 < 4 and i - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j - 1] == '#' and j - 1 >= 0) {\n          if (arr[i + 1][j] == '#' and i + 1 < 4) {\n            if (arr[i + 1][j - 1] == '#' and i + 1 < 4 and j - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j + 1] == '#' and j + 1 < 4) {\n          if (arr[i + 1][j] == '#' and i + 1 < 4) {\n            if (arr[i + 1][j + 1] == '#' and i + 1 < 4 and j + 1 < 4) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j - 1] == '.' and j - 1 >= 0) {\n          if (arr[i - 1][j] == '.' and i - 1 >= 0) {\n            if (arr[i - 1][j - 1] == '.' and i - 1 >= 0 and j - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j + 1] == '.' and j + 1 < 4) {\n          if (arr[i - 1][j] == '.' and i - 1 >= 0) {\n            if (arr[i - 1][j + 1] == '.' and i - 1 >= 0 and j + 1 < 4) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j - 1] == '.' and j - 1 >= 0) {\n          if (arr[i + 1][j] == '.' and i + 1 < 4) {\n            if (arr[i + 1][j - 1] == '.' and i + 1 < 4 and j - 1 >= 0) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n        if (arr[i][j + 1] == '.' and j + 1 < 4) {\n          if (arr[i + 1][j] == '.' and i + 1 < 4) {\n            if (arr[i + 1][j + 1] == '.' and i + 1 < 4 and j + 1 < 4) {\n              puts(\"YES\");\n              return 0;\n            }\n          }\n        }\n      }\n    }\n  }\n  puts(\"NO\");\n}\n"
    ],
    [
        "\n  let grid = array of strings of length 4\n  read the 0th element of grid, 1st element of grid,2nd element of grid and 3rd element of grid\n  boolean found is equal to false\n  for i= 0 to 3 exclusive\n    for j= 0 to 3 exclusive\n      let the integers c1, c2 are assigned as c1 is equal to 0 and c2 is equal to 0 respectively\n      for (int i1 = i to i+1 inclusive)\n        for (int j1 = j to j+1 inclusive)\n          if ( the 2d array grid[i1][j1] is equal to .)\n            increase c1 by 1\n          else do the following\n            increase c2 by 1\n        \n      \n      if (c1 is not equal to 2), found is equal to true\n    \n  \n  print YES if found else print NO\n  \n\n",
        "int main() {\n  string grid[4];\n  cin >> grid[0] >> grid[1] >> grid[2] >> grid[3];\n  bool found = false;\n  for (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n      int c1 = 0, c2 = 0;\n      for (int i1 = i; i1 <= i + 1; i1++) {\n        for (int j1 = j; j1 <= j + 1; j1++) {\n          if (grid[i1][j1] == '.')\n            c1++;\n          else\n            c2++;\n        }\n      }\n      if (c1 != 2) { found = true; }\n    }\n  }\n  cout << (found ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
    ],
    [
        "declare character array a with size 6 by 6\nint function nCount with integer arguments x and y and character argument c\n  create integer res = 0\n  increment res if a[x + 1][y] = c\n  increment res if a[x][y + 1] = c\n  increment res if a[x + 1][y + 1] = c\n  return res\n\n\n  declare character z\n  for integer i = 1 to 4 inclusive\n    for integer j = 1 to 4 inclusive\n      read z\n      a[i][j] = z\n    \n  \n  for i = 1 to 4 inclusive\n    for j = 1 to 4 inclusive\n      if a[i][j] = '#'\n        if nCount(i, j, '#') >= 2 || nCount(i, j, '.') >= 3\n          print \"YES\"\n          \n        \n      else\n        if nCount(i, j, '.') >= 2 || nCount(i, j, '#') >= 3\n          print \"YES\"\n          \n        \n      \n    \n  \n  print \"NO\"\n  \n\n",
        "char a[6][6];\nint nCount(int x, int y, char c) {\n  int res = 0;\n  if (a[x + 1][y] == c) { res++; }\n  if (a[x][y + 1] == c) { res++; }\n  if (a[x + 1][y + 1] == c) { res++; }\n  return res;\n}\nint main() {\n  char z;\n  for (int i = 1; i <= 4; i++) {\n    for (int j = 1; j <= 4; j++) {\n      cin >> z;\n      a[i][j] = z;\n    }\n  }\n  for (int i = 1; i <= 4; i++) {\n    for (int j = 1; j <= 4; j++) {\n      if (a[i][j] == '#') {\n        if (nCount(i, j, '#') >= 2 || nCount(i, j, '.') >= 3) {\n          cout << \"YES\" << endl;\n          return 0;\n        }\n      } else {\n        if (nCount(i, j, '.') >= 2 || nCount(i, j, '#') >= 3) {\n          cout << \"YES\" << endl;\n          return 0;\n        }\n      }\n    }\n  }\n  cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create character array m with 4 by 4 elements\nfunction check with integer arguments i and j that returns boolean\n  declare integers cnt and cnt2 = 0\n  for k = i to i + 2 exclusive\n    for d = j to j + 2 exclusive\n      if m[k][d] is '#'\n        increment cnt\n      else\n        increment cnt2\n    \n  \n  return true if cnt = 3 || cnt = 4 || cnt2 = 3 || cnt2 = 4\n  return false\n\n\n  for integer i = 0 to 4 exclusive\n    declare string variable s\n    read s\n    for integer j = 0 to 4 exclusive, set m[i][j] to s[j]\n  \n  declare boolean variable sol = false\n  for integer i = 0 to 3 exclusive\n    for j = 0 to 3 exclusive\n      if check(i, j) is true, set sol to true\n    \n  \n  if sol is true\n    print \"YES\\n\"\n  else\n    print \"NO\\n\"\n  \n  \n\n",
        "char m[4][4];\nbool check(int i, int j) {\n  int cnt = 0, cnt2 = 0;\n  for (int k = i; k < i + 2; k++) {\n    for (int d = j; d < j + 2; d++) {\n      if (m[k][d] == '#')\n        ++cnt;\n      else\n        ++cnt2;\n    }\n  }\n  if (cnt == 3 || cnt == 4 || cnt2 == 3 || cnt2 == 4) return true;\n  return false;\n}\nint main() {\n  for (int i = 0; i < 4; i++) {\n    string s;\n    cin >> s;\n    for (int j = 0; j < 4; j++) { m[i][j] = s[j]; }\n  }\n  bool sol = false;\n  for (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n      if (check(i, j)) sol = true;\n    }\n  }\n  if (sol) {\n    cout << \"YES\\n\";\n  } else {\n    cout << \"NO\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "num = array of 225 integers\n\n  n, m, i, j, k = integers\n  read n and k\n  set a index of num to k\n  for i = 1 to k exclusive increment num['a' + i]\n  if k > n\n    print -1\n  else if n is 1\n    print a\n  else if k is 1 and n > 1\n    print -1\n  else\n    set f to 1\n    for i = 1 to n - (k - 2) inclusive\n      if i modulo 2\n        print a\n      else\n        print b\n    \n    for i = 1 to k - 2 inclusive print (char)('b' + i)\n    print a new line\n  \n  \n\n",
        "int num[225];\nint main() {\n  int n, m, i, j, k;\n  cin >> n >> k;\n  num['a'] = k;\n  for (i = 1; i < k; i++) num['a' + i]++;\n  if (k > n)\n    cout << -1 << endl;\n  else if (n == 1)\n    cout << 'a' << endl;\n  else if (k == 1 && n > 1) {\n    cout << -1 << endl;\n  } else {\n    int f = 1;\n    for (i = 1; i <= n - (k - 2); i++) {\n      if (i % 2)\n        cout << 'a';\n      else\n        cout << 'b';\n    }\n    for (i = 1; i <= k - 2; i++) { cout << (char)('b' + i); }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, k, sig with sig = 0\n  create string s\n  read n read k\n  if k is 1 and n is greater than 1\n    print \"-1\\n\"\n  else if k is greater than n\n    print \"-1\\n\"\n  else if n is 1 and k is 1\n    print \"a\\n\"\n  else\n    create integers i, j with j = n - k + 1\n    if ( j bitwise and 1 ) is 0, decrement j, set sig to 1\n    for i = 0 to j inclusive, increment i by 2, increment s by \"ab\"\n    if sig is true, increment s by \"a\", set a to j + 2\n    create character c with c = 'b'\n    for i is less than n, incrementing i, increment s by character casted ( c + 1 ), set c to s[i]\n    print s print newline\n  \n  \n\n",
        "int main() {\n  int n, k, sig = 0;\n  string s;\n  cin >> n >> k;\n  if (k == 1 && n > 1)\n    cout << \"-1\\n\";\n  else if (k > n)\n    cout << \"-1\\n\";\n  else if (n == 1 && k == 1)\n    cout << \"a\\n\";\n  else {\n    int i, j = n - k + 1;\n    if ((j & 1) == 0) { j--, sig = 1; }\n    for (i = 0; i <= j; i += 2) s += \"ab\";\n    if (sig) { s += \"a\", i = j + 2; }\n    char c = 'b';\n    for (; i < n; i++) s += (char)(c + 1), c = s[i];\n    cout << s << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n and k\n  read n and k\n  if n < k or (k = 1 and n != 1)\n    print -1\n  else if k = 1 and n = 1\n    print 'a'\n  else\n    for i = 1 to n - (k - 2) inclusive\n      if i & 1\n        print 'a'\n      else\n        print 'b'\n    \n    declare integer variable x = n - (k - 2)\n    declare character ch = 'c'\n    for i = 1 to k - 2 inclusive print ch and increment it\n    print new line\n  \n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  if (n < k || (k == 1 && n != 1))\n    cout << -1 << endl;\n  else if (k == 1 && n == 1)\n    cout << 'a' << endl;\n  else {\n    for (int i = 1; i <= n - (k - 2); i++) {\n      if (i & 1)\n        cout << 'a';\n      else\n        cout << 'b';\n    }\n    int x = n - (k - 2);\n    char ch = 'c';\n    for (int i = 1; i <= k - 2; i++) { cout << ch++; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create n, k and zzz\n  read n, k\n  if n<k or k=1 and n is different from 1\n    print -1\n  else if k=1 and n=1\n    print a and a new line\n  else\n    for i=1 to n - k -2 inclusive\n      if i is odd\n        print a\n      els\n        print b and a new line\n    \n    set x to n - k - 2\n    assign c to ch\n    for i=1 to k inclusive, print increment ch\n    print a new line\n  \n  \n\n",
        "int main() {\n  int n, k, zzz;\n  cin >> n >> k;\n  if (n < k || (k == 1 && n != 1))\n    cout << -1 << endl;\n  else if (k == 1 && n == 1)\n    cout << 'a' << endl;\n  else {\n    for (int i = 1; i <= n - (k - 2); i++) {\n      if (i & 1)\n        cout << 'a';\n      else\n        cout << 'b';\n    }\n    int x = n - (k - 2);\n    char ch = 'c';\n    for (int i = 1; i <= k - 2; i++) { cout << ch++; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare long long variables n and k\n  read n and k\n  if k > n || (k = 1 && n > 1)\n    print -1\n  else if k = 1\n    print 'a'\n  else\n    declare long long x = n - (k - 2)\n    declare string str = \" \"\n    declare long long variable i = 0\n    while i is less than x\n      if i is even\n        append \"a\" to str\n      else\n        append \"b\" to str\n      increase i\n    \n    for long long i = 2 to k exclusive\n      declare character ch = (i + 'a')\n      append ch to str\n    \n    print str\n  \n  \n\n",
        "int main() {\n  long long n, k;\n  cin >> n >> k;\n  if (k > n || (k == 1 && n > 1))\n    cout << -1 << endl;\n  else if (k == 1) {\n    cout << 'a' << endl;\n  } else {\n    long long x = n - (k - 2);\n    string str = \"\";\n    long long i = 0;\n    while (i < x) {\n      if (i % 2 == 0)\n        str += \"a\";\n      else\n        str += \"b\";\n      i++;\n    }\n    for (long long i = 2; i < k; i++) {\n      char ch = (i + 'a');\n      str += ch;\n    }\n    cout << str << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let n, k be ints\n\n  read n, k\n  if k is less than n do the following\n    print -1 and one newline\n    \n  \n  if ke equals 1 do the following\n    if n equals 1 do the following\n      print a and one newline\n    else\n      print -1 and one newline\n    \n  \n  if k equals 2 do the following\n    for int = 0 to n exclusive print char('a' + (i & 1))\n    print one newline\n    \n  \n  for i = 0 to n - k + 2 exclusive print char('a' + (i & 1))\n  for i = 0 to k - 2 exclusive print char('c' + i)\n  print one newline\n\n",
        "int n, k;\nint main() {\n  cin >> n >> k;\n  if (k > n) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (k == 1) {\n    if (n == 1)\n      cout << 'a' << endl;\n    else\n      cout << -1 << endl;\n    return 0;\n  }\n  if (k == 2) {\n    for (int i = 0; i < n; i++) { cout << char('a' + (i & 1)); }\n    cout << endl;\n    return 0;\n  }\n  for (int i = 0; i < n - k + 2; i++) { cout << char('a' + (i & 1)); }\n  for (int i = 0; i < k - 2; i++) { cout << char('c' + i); }\n  cout << endl;\n}\n"
    ],
    [
        "\n  declare integer variables i, j, k, l, n and m\n  read n and m\n  k = m\n  if n < m or (m = 1 and n is greater than 1)\n    print -1\n    \n  \n  create a map from integers to characters called mm\n  create character h = 'a'\n  for i = 0 to 26 exclusive\n    set value of mm[i] to h\n    increase h by one\n  \n  declare string variable st = \" \"\n  if n = m\n    for i = 0 to n exclusive, apped mm[i] to st\n    print st\n    \n  \n  for i = 0 to n - (m - 2) exclusive\n    if i is even\n      append mm[0] to st\n    else\n      append mm[1] to st\n  \n  for i = 0 to m - 2 exclusive, append mm[i + 2] to st\n  print st\n  \n\n",
        "int main() {\n  int i, j, k, l, n, m;\n  cin >> n >> m;\n  k = m;\n  if (n < m || (m == 1 && n > 1)) {\n    cout << -1 << endl;\n    return 0;\n  }\n  map<int, char> mm;\n  char h = 'a';\n  for (i = 0; i < 26; i++) {\n    mm[i] = h;\n    h++;\n  }\n  string st = \"\";\n  if (n == m) {\n    for (i = 0; i < n; i++) { st += mm[i]; }\n    cout << st << endl;\n    return 0;\n  }\n  for (i = 0; i < n - (m - 2); i++) {\n    if (i % 2 == 0)\n      st += mm[0];\n    else\n      st += mm[1];\n  }\n  for (i = 0; i < m - 2; i++) { st += mm[i + 2]; }\n  cout << st << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers a and b\n  while read a and b\n    declare integer i\n    if a = 1\n      if b is greater than 1\n        print \"-1\"\n      else\n        print \"a\"\n      \n    else\n      declare character variable q = 'c'\n      declare integer pl = 0\n      if b > a or (b = 1 and a > 1)\n        print \"-1\"\n      else\n        for i = 0 to a - (b - 2) exclusive\n          if pl is even\n            increase pl by one\n            print 'a'\n          else\n            increment pl\n            print 'b'\n          \n        \n        for i = 0 to b - 2 exclusive\n        print new line\n      \n    \n  \n  \n\n",
        "int main() {\n  int a, b;\n  while (cin >> a >> b) {\n    int i;\n    if (a == 1) {\n      if (b > 1) {\n        cout << \"-1\" << endl;\n      } else {\n        cout << 'a' << endl;\n      }\n    } else {\n      char q = 'c';\n      int pl = 0;\n      if (b > a || (b == 1 && a > 1)) {\n        cout << \"-1\" << endl;\n      } else {\n        for (i = 0; i < a - (b - 2); i++) {\n          if (pl % 2 == 0) {\n            pl++;\n            cout << 'a';\n          } else {\n            pl++;\n            cout << 'b';\n          }\n        }\n        for (i = 0; i < b - 2; i++) { cout << q++; }\n        cout << endl;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let s, s1 be strings\n  let n,k be integers\n  read n,k\n  if (k is greater than n or (k is equal to 1 and n is greater than 1)) , and print -1 and endline , return 0\n  if (k is equal to 1) print a and endline, return 0\n  for( i=1 to k - 2 inclusive), s is equal to s + b + i\n  for( i=1 to n- k +2 inclusive), s1 = s1 + (if i modulus 2 ) ? a else b\n  print s1 and s and newline\n\n",
        "int main() {\n  string s, s1;\n  int n, k;\n  cin >> n >> k;\n  if (k > n || (k == 1 && n > 1)) return cout << \"-1\" << endl, 0;\n  if (k == 1) return cout << \"a\" << endl, 0;\n  for (int i = 1; i <= k - 2; i++) s += 'b' + i;\n  for (int i = 1; i <= n - k + 2; i++) s1 += i % 2 ? 'a' : 'b';\n  cout << s1 << s << endl;\n}\n"
    ],
    [
        "let xx be a char array of length 1000002\n\n  n, k = integers\n  while n and k are read\n    if n is equal to or greater than 2 and k is less than 2, or n is less than k\n      print -1 and a new line\n    otherwise\n      set integer a equal to k - 2\n      set t = 0\n      set all contents of xx to 0\n      for i = 0 to n exclusive\n        if i is less than n - (k - 2)\n          if i modulo 2 equal to 0\n            set xx[i] = a\n          otherwise\n            set xx[i] equal to b\n        otherwise\n          if i is less than n\n            set xx[i] = 99 + t\n            increment t\n          \n        \n      \n      print xx and a new line\n    \n  \n  \n\n",
        "char xx[1000002];\nint main() {\n  int n, k;\n  while (cin >> n >> k) {\n    if (n < k || (n >= 2 && k < 2))\n      cout << \"-1\" << endl;\n    else {\n      int a = k - 2;\n      int t = 0;\n      memset(xx, 0, sizeof(xx));\n      for (int i = 0; i < n; i++) {\n        if (i < n - (k - 2)) {\n          if (i % 2 == 0)\n            xx[i] = 'a';\n          else\n            xx[i] = 'b';\n        } else {\n          if (i < n) {\n            xx[i] = 99 + t;\n            t++;\n          }\n        }\n      }\n      cout << xx << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n and k\n  read n, k\n  if n<k or k equal to 1 and n different from 1\n    print -1\n  otherwise\n    if n equal to or greater than 2\n      for i=1 to n inclusive\n        if 1 modulo 2 equal to 0\n          print b\n        other\n          print a\n      if n-k mod 2 = 0\n        print ab\n        for i=3 to k inclusive, print i + a - 1\n      else\n        print ba\n        for i = 3 to k inclusive, print i + a - 1\n      \n      print a new line\n    otherwise\n      print a and a new line\n  \n  \n\n",
        "int main() {\n  int n, k;\n  cin >> n >> k;\n  if (n < k || (k == 1 && n != 1))\n    cout << -1 << endl;\n  else {\n    if (n >= 2) {\n      for (int i = 1; i <= n - k; i++)\n        if (i % 2 == 0)\n          cout << \"b\";\n        else\n          cout << \"a\";\n      if ((n - k) % 2 == 0) {\n        cout << \"ab\";\n        for (int i = 3; i <= k; i++) cout << char(i + 'a' - 1);\n      } else {\n        cout << \"ba\";\n        for (int i = 3; i <= k; i++) cout << char(i + 'a' - 1);\n      }\n      cout << endl;\n    } else\n      cout << \"a\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let b, d, sum, i, n , resh, ans1, ans2, ans3, ans4, j and k be long longs and a be long long array with length 10001\ncreate strings s and s1\ncreate char array c with length 10001\n\n  read n and k\n  if (n is smaller than k) or (k is equal to 1 and n is greater than 1) return 0 and print -1\n  if n is equal to 1 return 0 and print a and newline\n  for i=0 to (n - (k - 2)) / 2 exclusive print \"ab\"\n  if (n - (k - 2) mod 2) print \"a\"\n  for i=0 to k-2 exclusive print char(i + 'c')\n  print newline\n  \n\n",
        "long long a[10001], b, d, sum, i, n, resh, ans1, ans2, ans3, ans4, j, k;\nstring s, s1;\nchar c[10001];\nint main() {\n  cin >> n >> k;\n  if (n < k or (k == 1 and n > 1)) return cout << -1 << \"\\n\", 0;\n  if (n == 1) return cout << \"a\\n\", 0;\n  for (int i = 0; i < (n - (k - 2)) / 2; ++i) cout << \"ab\";\n  if ((n - (k - 2)) % 2) cout << \"a\";\n  for (int i = 0; i < k - 2; ++i) cout << char(i + 'c');\n  cout << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create character array ab with size 2, with ab = {'a', 'b'}\n\n  create integers n, k\n  read n read k\n  if ( k is 1 and n is not 1 ) or ( k is greater than n )\n    print -1 print newline\n    \n  \n  create integer frst with frst = n - k + 2\n  create boolean flag with flag = 0\n  create integer i with i = 0\n  for i is less than frst and i is less than n, incrementing i\n    print ab[flag]\n    set flag to ( not flag bitwise and 1 )\n  \n  create character c with c = 'c'\n  for i is less than n, incrementing i\n    print c\n    increment c\n  \n  print newline\n  \n\n",
        "char ab[2] = {'a', 'b'};\nint main() {\n  int n, k;\n  cin >> n >> k;\n  if ((k == 1 && n != 1) || (k > n)) {\n    cout << -1 << endl;\n    return 0;\n  }\n  int frst = n - k + 2;\n  bool flag = 0;\n  int i = 0;\n  for (; i < frst && i < n; i++) {\n    cout << ab[flag];\n    flag = (!flag & 1);\n  }\n  char c = 'c';\n  for (; i < n; i++) {\n    cout << c;\n    c++;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers n and k\n\n  read n and k\n  if n * (n - 1) / 2 <= k\n    print \"no solution\\n\"\n  else\n    print \"0 \", n and \"\\n\n\n",
        "int n, k;\nint main() {\n  cin >> n >> k;\n  if (n * (n - 1) / 2 <= k) {\n    cout << \"no solution\\n\";\n  } else\n    for (; n--;) cout << \"0 \" << n << \"\\n\";\n}\n"
    ],
    [
        "\n  declare integers n and k\n  while reading n and k\n    create long long temp = 0\n    declare long long variable a\n    declare integer j = 1\n    for i = 1 to n inclusive\n      read a\n      if temp - (i - 1) * (n - i) * a is less than k\n        print j\n        decrease i and n\n      else\n        increase temp by (i - 1) * a\n      increase j\n    \n  \n  \n\n",
        "int main() {\n  int n, k;\n  while (cin >> n >> k) {\n    long long temp = 0;\n    long long a;\n    int j = 1;\n    for (int i = 1; i <= n; i++) {\n      cin >> a;\n      if (temp - (i - 1) * (n - i) * a < k) {\n        cout << j << endl;\n        i--, n--;\n      } else\n        temp += (i - 1) * a;\n      j++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integers n, i, k, x, b, with x = 1 to b = 0\n  read n read k\n  create long long integer array a with size n\n  for i = 0 to n exclusive, read a[i]\n  for i = 1 to n exclusive\n    if b - x * a[i] * ( n - i - 1 ) is less than k\n      print i + 1 print newline\n    else\n      increment by by x * a[i]\n      increment x\n    \n  \n  \n\n",
        "int main() {\n  long long int n, i, k, x = 1, b = 0;\n  cin >> n >> k;\n  long long int a[n];\n  for (i = 0; i < n; i++) cin >> a[i];\n  for (i = 1; i < n; i++) {\n    if (b - x * a[i] * (n - i - 1) < k)\n      cout << i + 1 << endl;\n    else {\n      b += x * a[i];\n      x++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, k\n  read n readk\n  create long long sum with sum = 0\n  create long long pos with pos = 1\n  for i = 1 to n inclusive\n    create long long x\n    read x\n    create long long d with d = sum - ( pos - 1 ) * ( n - i ) * x\n    if d is less than k\n      print i print '\\n'\n    else\n      increment sum by x * (pos-1)\n      increment pos\n    \n  \n  \n\n",
        "int main() {\n  long long n, k;\n  cin >> n >> k;\n  long long sum = 0;\n  long long pos = 1;\n  for (long long i = 1; i <= n; i++) {\n    long long x;\n    cin >> x;\n    long long d = sum - (pos - 1) * (n - i) * x;\n    if (d < k)\n      cout << i << '\\n';\n    else {\n      sum += x * (pos - 1);\n      pos++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, k, sum, cur with sum = 0, cur = 0\n  read n read k\n  for i = 1 to n inclusive\n    create integer a\n    read a\n    if i is greater than 1 and sum - (i-cur-1)*(n-1)*a is less than k\n      print i print newline\n      increment cur\n    else\n      increment sum by a * (i - cur - 1)\n  \n\n",
        "int main() {\n  long long n, k, sum = 0, cur = 0;\n  cin >> n >> k;\n  for (long long i = 1; i <= n; i++) {\n    int a;\n    cin >> a;\n    if (i > 1 && sum - (i - cur - 1) * (n - i) * a < k) {\n      cout << i << endl;\n      cur++;\n    } else\n      sum += a * (i - cur - 1);\n  }\n}\n"
    ],
    [
        "\n  let n,k be integers\n  while ( read the values of n and k )\n    let temp be a long integer with value as 0\n    let a be a long integer\n    let j be a integer with value as 1\n    for integer i = 1 to n inclusive\n      read a\n      if (temp - (i - 1) * (n - i) * a is less than k)\n        print j and newline\n        decrease the value of i by 1, decrease the value of n by 1\n      else do the following\n        temp is equal to temp + (i - 1) * a\n      increase j value by 1\n    \n  \n  \n\n",
        "int main() {\n  int n, k;\n  while (cin >> n >> k) {\n    long long temp = 0;\n    long long a;\n    int j = 1;\n    for (int i = 1; i <= n; i++) {\n      cin >> a;\n      if (temp - (i - 1) * (n - i) * a < k) {\n        cout << j << endl;\n        i--, n--;\n      } else\n        temp += (i - 1) * a;\n      j++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integer T with T = 1\n  while decrement T is true\n    create integers n, k\n    read n read k\n    create long long integer vector arr initialized with n + 1\n    set arr[0] to 0\n    for i = 0 to n exclusive, read arr[i+1]\n    create long long integer c with c = 1\n    create integer p_1 with p_1 = 1\n    create long long integers cur_d, prev_d, di, with cur_d = 0, prev_d = 0, di = 0\n    for i = 2 to n inclusive\n      set cur_d to prev_d + 1LL * arr[p_i] * (c - 1)\n      set di to cur_d - 1LL * (n - i) * (c)*arr[i]\n      if di is less than k\n        print i print '\\n'\n      else\n        increment c\n        set p_i to i\n        set prev_d to cur_d\n      \n    \n  \n  \n\n",
        "int main() {\n  int T = 1;\n  while (T--) {\n    int n, k;\n    cin >> n >> k;\n    vector<long long int> arr(n + 1);\n    arr[0] = 0;\n    for (int i = 0; i < n; i++) { cin >> arr[i + 1]; }\n    long long int c = 1;\n    int p_i = 1;\n    long long int cur_d = 0, prev_d = 0, di = 0;\n    for (int i = 2; i <= n; i++) {\n      cur_d = prev_d + 1LL * arr[p_i] * (c - 1);\n      di = cur_d - 1LL * (n - i) * (c)*arr[i];\n      if (di < k) {\n        cout << i << '\\n';\n      } else {\n        c++;\n        p_i = i;\n        prev_d = cur_d;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create long long vector v\n\n  create long longs n, k, a, s, j, p, i with s = 0, j = 2\n  read n read k\n  create long long m with m = n\n  read a\n  for i = 2 to n inclusive\n    read a\n    set p to s - (j - 1) * (m - j) * a\n    if p is less than k\n      add element i to end of v\n      set m to m - 1\n    else\n      set s to s + ( j - 1 ) * a\n      set j to j + 1\n    \n  \n  for i = 0 to size of v exclusive, print v[i] print newline\n  \n\n",
        "vector<long long> v;\nint main() {\n  long long n, k, a, s = 0, j = 2, p, i;\n  cin >> n >> k;\n  long long m = n;\n  cin >> a;\n  for (i = 2; i <= n; i++) {\n    cin >> a;\n    p = s - (j - 1) * (m - j) * a;\n    if (p < k) {\n      v.push_back(i);\n      m = m - 1;\n    } else {\n      s = s + (j - 1) * a;\n      j = j + 1;\n    }\n  }\n  for (i = 0; i < v.size(); i++) cout << v[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "create long longs n, k, a, sum and l\n\n  read n and k\n  for long long i = 1 to n inclusive\n    read a\n    if i != 1\n      if sum - (n - i) * (i - 1) * a is less than k\n        print i + l\n        decrease i\n        decrease n by one\n        increment l\n      else\n        increase sum by a * (i - 1)\n    \n  \n\n",
        "long long n, k, a, sum, l;\nint main() {\n  cin >> n >> k;\n  for (long long i = 1; i <= n; i++) {\n    cin >> a;\n    if (i != 1) {\n      if (sum - (n - i) * (i - 1) * a < k) {\n        cout << i + l << endl;\n        i--;\n        n--;\n        l++;\n      } else\n        sum += a * (i - 1);\n    }\n  }\n}\n"
    ],
    [
        "declare prn with integer pos as argument, returning void\n  print pos print \"\\n\"\n\n\n  create long longs n, k\n  read n read k\n  create long long sz with sz = n\n  create integer pos with pos = 1\n  create long long ai\n  read ai\n  create long long sum with sum = 0\n  for i = 2 to sz inclusive\n    increment pos\n    read ai\n    create long long d with d = sum - (n - pos) * (pos - 1) * ai\n    if d is less than k\n      run prn with i as argument\n      decrement pos\n      decrement n\n    else\n      increment sum by ai * ( pos - 1 )\n    \n  \n  \n\n",
        "void prn(int pos) {\n  cout << pos << \"\\n\";\n}\nint main() {\n  long long n, k;\n  cin >> n >> k;\n  long long sz = n;\n  int pos = 1;\n  long long ai;\n  cin >> ai;\n  long long sum = 0;\n  for (int i = 2; i <= sz; ++i) {\n    ++pos;\n    cin >> ai;\n    long long d = sum - (n - pos) * (pos - 1) * ai;\n    if (d < k) {\n      prn(i);\n      --pos;\n      --n;\n    } else {\n      sum += ai * (pos - 1);\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create long longs n, k, a, sum, l\n\n  read n read k\n  for i = 1 to n inclusive\n    read a\n    if i is not 1\n      if sum - ( n - 1 ) * ( i - 1 ) * a is less than k\n        print i + l print newline\n        decrement i\n        decrement n\n        increment l\n      else\n        increment sum by a * ( i - 1 )\n    \n  \n\n",
        "long long n, k, a, sum, l;\nint main() {\n  cin >> n >> k;\n  for (long long i = 1; i <= n; i++) {\n    cin >> a;\n    if (i != 1) {\n      if (sum - (n - i) * (i - 1) * a < k) {\n        cout << i + l << endl;\n        i--;\n        n--;\n        l++;\n      } else\n        sum += a * (i - 1);\n    }\n  }\n}\n"
    ],
    [
        "integer function Get\n  declare character c\n  read c from the input, then loop, while c is not a digit or '-'\n    \n  create boolean Flag = true if c = '-', or false otherwise\n  if Flag is true, read c from the input\n  create int X = 0\n  while c >= '0' && c <= '9'\n    set X to X * 10 + c - 48\n    read c from the input\n  \n  return -X if Flag if set, else return X\n\nfunction Output with int argument X\n  if X is less than 0\n    print '-'\n    invert the sign of X\n  \n  declare int Len = 0 and int array Data with size 10\n  while X is not 0\n    set Data[Len] to X % 10 and increment Len\n    divide X by 10\n  \n  if Len is false, change Data[Len] to 0 and increment Len\n  decrement Len and loop further, while Len != 0, printing Data[Len] + 48 on each iteration\n  print '\\n'\n\n\n  declare integer N = Get()\n  create long longs Sum = 0 and K = Get()\n  declare integers Top and Number = 0 and Total = N\n  for integer i = 0 to N exclusive\n    declare long long X = Get()\n    if Sum - X * Number * (Total - Number - 1) < K\n      call Output of i + 1\n      decrement Total\n    else\n      increase Sum by Number * X\n      increment Number\n    \n  \n  \n\n",
        "int Get() {\n  char c;\n  while (c = getchar(), (c < '0' || c > '9') && (c != '-'))\n    ;\n  bool Flag = (c == '-');\n  if (Flag) c = getchar();\n  int X = 0;\n  while (c >= '0' && c <= '9') {\n    X = X * 10 + c - 48;\n    c = getchar();\n  }\n  return Flag ? -X : X;\n}\nvoid Output(int X) {\n  if (X < 0) {\n    putchar('-');\n    X = -X;\n  }\n  int Len = 0, Data[10];\n  while (X) {\n    Data[Len++] = X % 10;\n    X /= 10;\n  }\n  if (!Len) Data[Len++] = 0;\n  while (Len--) putchar(Data[Len] + 48);\n  putchar('\\n');\n}\nint main() {\n  int N = Get();\n  long long K = Get(), Sum = 0;\n  int Top = 0, Total = N, Number = 0;\n  for (int i = 0; i < N; i++) {\n    long long X = Get();\n    if (Sum - X * Number * (Total - Number - 1) < K) {\n      Output(i + 1);\n      Total--;\n    } else {\n      Sum += Number * X;\n      Number++;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  integers = n,a,b,c,d,w,h,x1 = 2e9,y1 = 2e9,x2 = 0,y2 = 0,area = 0\n  read n\n  if n is true do the following\n    read a,b,c,d\n    set w to c - a\n    set h to d - b\n    area equals area plus w * h\n    set x1 to min(x1, a)\n    set y1 to min(y1, b)\n    set x2 to max(x2, c)\n    set y2 to max(y2, d)\n  \n  set w to x2 - x1\n  set h to y2 - y1\n  if w= h and area = w*h print YES else NO)\n  \n\n",
        "int main() {\n  int n, a, b, c, d, w, h, x1 = 2e9, y1 = 2e9, x2 = 0, y2 = 0, area = 0;\n  cin >> n;\n  while (n--) {\n    cin >> a >> b >> c >> d;\n    w = c - a;\n    h = d - b;\n    area += w * h;\n    x1 = min(x1, a);\n    y1 = min(y1, b);\n    x2 = max(x2, c);\n    y2 = max(y2, d);\n  }\n  w = x2 - x1;\n  h = y2 - y1;\n  cout << (w == h && area == w * h ? \"YES\" : \"NO\") << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  declare integers x0, y0, x1, y1 and a with a = 0\n  change x0 and y0 to 1e9 + 87\n  change x1 and y1 to -9e8\n  for integer i = 0 to n exclusive\n    declare ints l, b, r and u\n    read l, b, r and u\n    add (r - l) * (u - b) to a\n    change x0 to min of x0 and l\n    change x1 to max of x1 and r\n    change y0 to min of y0 and b\n    change y1 to max of y1 and u\n  \n  subtract x0 from x1\n  decrease y1 by y0\n  print \"YES\\n\" if x1 = y1 and x1 * y1 = a, or \"NO\\n\" otherwise\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x0, y0, x1, y1, a = 0;\n  x0 = y0 = 1e9 + 87;\n  x1 = y1 = -9e8;\n  for (int i = 0; i < n; ++i) {\n    int l, b, r, u;\n    cin >> l >> b >> r >> u;\n    a += (r - l) * (u - b);\n    x0 = min(x0, l);\n    x1 = max(x1, r);\n    y0 = min(y0, b);\n    y1 = max(y1, u);\n  }\n  x1 -= x0;\n  y1 -= y0;\n  cout << (x1 == y1 && x1 * y1 == a ? \"YES\\n\" : \"NO\\n\");\n}\n"
    ],
    [
        "declare integer n\n\n  read n\n  create integers xmin and ymin = 1000000000 and xmax and ymax = - 1\n  create integer act = 0\n  for i = 1 to n inclusive\n    create ints a, b, c and d\n    read a, b, c and d\n    set xmin to min of xmin and a\n    set xmin to min of xmin and c\n    set xmax to min of xmax and a\n    set xmax to max of xmax and a\n    set ymin to min of ymin and b\n    set ymin to min of ymin and d\n    set ymax to max of ymax and b\n    set ymax to max of ymax and d\n    add abs(a - c) * abs(b - d) to act\n  \n  if ymax - ymin = xmax - xmin and act = ((ymax - ymin) * (xmax - xmin))\n    print \"YES\\n\"\n  else\n    print \"NO\\n\"\n  \n\n",
        "int n;\nint main() {\n  cin >> n;\n  int xmin = 1000000000, xmax = -1, ymin = 1000000000, ymax = -1;\n  int act = 0;\n  for (int i = 1; i <= n; i++) {\n    int a, b, c, d;\n    cin >> a >> b >> c >> d;\n    xmin = min(xmin, a);\n    xmin = min(xmin, c);\n    xmax = max(xmax, a);\n    xmax = max(xmax, c);\n    ymin = min(ymin, b);\n    ymin = min(ymin, d);\n    ymax = max(ymax, b);\n    ymax = max(ymax, d);\n    act += (abs(a - c) * abs(b - d));\n  }\n  if (ymax - ymin == xmax - xmin && act == ((ymax - ymin) * (xmax - xmin)))\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  x1, y1, x2, y2 and sum are long long ints where sum = 0\n  declare long long int minmum = INT_MIN, maxmum = INT_MIN, p = INT_MAX and q = INT_MAX\n  for i = 0 to n exclusive\n    read input to x1, y1, x2 and y2\n    change maxmum to max of maxmum and max(x2 and x1)\n    change minmum to max of minmum and max(y2 and y1)\n    assign min of p and min(y2 and y1) to p\n    set q to min of q and min(x2 and x1)\n    add fabs(x2 - x1) * fabs(y2 - y1) to sum\n  \n  if sum = ((minmum - p) * (maxmum - q)) and (maxmum - q) == (minmum - p)\n    print \"YES\"\n  else\n    print \"NO\\n\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long int x1, y1, x2, y2, sum = 0;\n  long long int minmum = INT_MIN, maxmum = INT_MIN, p = INT_MAX, q = INT_MAX;\n  for (int i = 0; i < n; i++) {\n    cin >> x1 >> y1 >> x2 >> y2;\n    maxmum = max(maxmum, max(x2, x1));\n    minmum = max(minmum, max(y2, y1));\n    p = min(p, min(y2, y1));\n    q = min(q, min(x2, x1));\n    sum += fabs(x2 - x1) * fabs(y2 - y1);\n  }\n  if (sum == ((minmum - p) * (maxmum - q)) && (maxmum - q) == (minmum - p))\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  integers = i,n,x1,x2,y1,y2,mx = 99999,my = 99999,Mx = -1,My = -1,R = 0\n  read n\n  for = 0 to less than n do the following\n    read x1,y1,x2,y2\n    R equals R plus (x2 - x1) * (y2 - y1)\n    if Mx is less than x2 then do the following Mx = x2\n    if My is less than y2 then do the following My = y2\n    if mx is greater than x1 then do the following mx = x1\n    if my is greater than y1 then do the following my = y1\n  \n  if is R and Mx - mx equals My -my then do the following\n    output YES\n  else\n    output NO\n  \n\n",
        "int main() {\n  int i, n, x1, x2, y1, y2, mx = 99999, my = 99999, Mx = -1, My = -1, R = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> x1 >> y1 >> x2 >> y2;\n    R += (x2 - x1) * (y2 - y1);\n    if (Mx < x2) Mx = x2;\n    if (My < y2) My = y2;\n    if (mx > x1) mx = x1;\n    if (my > y1) my = y1;\n  }\n  if ((Mx - mx) * (My - my) == R && Mx - mx == My - my)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  S = integer array of size 10\n  while read n\n    set all contents of S to 0\n    maxx, maxy = integers with maxx = 0, maxy = 0\n    minx, miny = integers with minx = 10000000, miny = 10000000\n    C = integer with C = 0\n    x1, x2, y1, y2 = integers\n    for i = 1 to n\n      read x1, x2, y1, y2\n      S[i] = (x2 - x1) * (y2 - y1)\n      C = C + S[i]\n      if x1 < minx, minx = x1\n      if x2 > maxx, maxx = x2\n      if y1 < miny, miny = y1\n      if y2 > maxy, maxy = y2\n    \n    if C is (maxx - minx) * (maxy - miny) and (maxx - minx) is (maxy - miny)\n      print YES\n    else\n      print NO\n  \n  \n\n",
        "int main() {\n  int n;\n  int S[10];\n  while (cin >> n) {\n    memset(S, 0, sizeof(S));\n    int maxx = 0, maxy = 0;\n    int minx = 10000000, miny = 10000000;\n    int C = 0;\n    int x1, x2, y1, y2;\n    for (int i = 1; i <= n; ++i) {\n      cin >> x1 >> y1 >> x2 >> y2;\n      S[i] = (x2 - x1) * (y2 - y1);\n      C += S[i];\n      if (x1 < minx) minx = x1;\n      if (x2 > maxx) maxx = x2;\n      if (y1 < miny) miny = y1;\n      if (y2 > maxy) maxy = y2;\n    }\n    if (C == (maxx - minx) * (maxy - miny) && (maxx - minx) == (maxy - miny))\n      cout << \"YES\" << endl;\n    else\n      cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  change output format flag to ios::fixed\n  change output precision to 20\n  declare ints n, x1, y1, x2 and y2\n  declare int variables xl and yl = 2139062143 and xr and yr = -2139062143\n  read input to n\n  declare long long area = 0\n  loop, decrementing n, while it is not 0\n    read x1, y1, x2 and y2\n    set xl to min of xl and x1\n    change xr to xr if xr > x2, else to x2\n    set yl to min of yl and y1\n    change yr to yr if yr > y2, else to y2\n    add 1LL * (x2 - x1) * (y2 - y1) to area\n  \n  if xr - xl = yr - yl and area = 1LL * (xr - xl) * (yr - yl)\n    print \"YES\" to stdout\n  else\n    print \"NO\" to stdout\n  \n\n",
        "int main() {\n  cout.setf(ios::fixed);\n  cout.precision(20);\n  int n, x1, y1, x2, y2;\n  int xl = 2139062143, xr = -2139062143, yl = 2139062143, yr = -2139062143;\n  cin >> n;\n  long long area = 0;\n  while (n--) {\n    cin >> x1 >> y1 >> x2 >> y2;\n    xl = min(xl, x1);\n    xr = (xr > x2 ? xr : x2);\n    yl = min(yl, y1);\n    yr = (yr > y2 ? yr : y2);\n    area += 1LL * (x2 - x1) * (y2 - y1);\n  }\n  if (xr - xl == yr - yl && area == 1LL * (xr - xl) * (yr - yl))\n    puts(\"YES\");\n  else\n    puts(\"NO\");\n  return 0;\n}\n"
    ],
    [
        "\n  let n be a integer\n  read n\n  create ints x0, y0, x1, y1, a with a = 0\n  set x0 and y0 to 1e9 + 87\n  assign -9e8 to y1 and x1\n  for n iterations\n    create integers l, b, r, u\n    read l, b, r and u\n    add a to (r - l) * (u - b) and assign the result to a\n    set x0 to min(x0, l)\n    assign the greater of x1 and r to x1\n    set y0 to min(y0, b)\n    set y1 to max of y1 and u\n  \n  x1 = x1 - x0\n  set y1 to y1 - y0\n  print (x1 == y1 && x1 * y1 == a ? \"YES\\n\" : \"NO\\n\")\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x0, y0, x1, y1, a = 0;\n  x0 = y0 = 1e9 + 87;\n  x1 = y1 = -9e8;\n  for (int i = 0; i < n; ++i) {\n    int l, b, r, u;\n    cin >> l >> b >> r >> u;\n    a += (r - l) * (u - b);\n    x0 = min(x0, l);\n    x1 = max(x1, r);\n    y0 = min(y0, b);\n    y1 = max(y1, u);\n  }\n  x1 -= x0;\n  y1 -= y0;\n  cout << (x1 == y1 && x1 * y1 == a ? \"YES\\n\" : \"NO\\n\");\n}\n"
    ],
    [
        "\n  mn, mn2 = integers with mn = 50000, mn2 = mn\n  N, mx, mx2, Ar = integers with mx = -1, mx2 = mx, Ar = 0\n  read N\n  for i = 1 to N\n    a, b, x, y = integers\n    read a, b, x, y\n    Ar = Ar + (x - a) * (y - b)\n    mn = min of mn and min(a, x)\n    mn2 = min of mn2 and min(b, y)\n    mx = max of mx and max(a, x)\n    mx2 = max of mx2 and max(b, y)\n  \n  if (mx - mn is mx2 - mn2 and Ar is (mx - mn) * (mx2 - mn2))\n    print YES\n  else\n    print NO\n  \n\n",
        "int main() {\n  int mn = 50000, mn2 = mn;\n  int N, mx = -1, mx2 = mx, Ar = 0;\n  cin >> N;\n  for (int i = 1; i <= N; ++i) {\n    int a, b, x, y;\n    cin >> a >> b >> x >> y;\n    Ar += (x - a) * (y - b);\n    mn = min(mn, min(a, x));\n    mn2 = min(mn2, min(b, y));\n    mx = max(mx, max(a, x));\n    mx2 = max(mx2, max(b, y));\n  }\n  if (mx - mn == mx2 - mn2 && Ar == (mx - mn) * (mx2 - mn2))\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create long long n\n  read n\n  while n % 3 is 0, set n to n / 3\n  print n / 3 + 1 print newline\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  while (n % 3 == 0) n /= 3;\n  cout << n / 3 + 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create unsigned long long n, t, coi with coi = 1\n  read n\n  while n % 3 is 0, set n to n / 3\n  print ( n - 1 ) / 3 + 1 print '\\n'\n\n",
        "int main() {\n  unsigned long long n, t, coi = 1;\n  cin >> n;\n  while (n % 3 == 0) n /= 3;\n  cout << (n - 1) / 3 + 1 << '\\n';\n}\n"
    ],
    [
        "n, ans = long long with ans = 0\n\n  read n\n  while n modulo 3 is 0, n = n / 3\n  ans = n / 3 + 1\n  print ans\n  \n\n",
        "long long n, ans = 0;\nint main() {\n  cin >> n;\n  while (n % 3 == 0) n /= 3;\n  ans = n / 3 + 1;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "in function cil taking two long longs x and y and returning a long long\n  if x is a multiple if y\n    return x / y\n  else\n    return x / y + 1\n\n\n  n, i, j = long long with j = 0\n  read n\n  set i to n\n  loop while n is a multiple of 3 and greater than 0\n    increment j\n    set n to n / 3\n  \n  l = long long with l = pow of 3 and j + 1\n  print cil of i and l\n\n",
        "long long cil(long long x, long long y) {\n  if (x % y == 0)\n    return x / y;\n  else\n    return x / y + 1;\n}\nint main() {\n  long long n, i, j = 0;\n  cin >> n;\n  i = n;\n  while (n % 3 == 0 && n > 0) {\n    j++;\n    n /= 3;\n  }\n  long long l = pow(3, j + 1);\n  cout << cil(i, l) << endl;\n}\n"
    ],
    [
        "\n  let n be a long integer\n  read n\n  let sum , x be long integers with x = 3\n  while n modulo x is equal to 0 , x is equal to x * 3\n  n / x + 1 is assigned to sum\n  print sum and newline\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  long long sum, x = 3;\n  while (n % x == 0) { x *= 3; }\n  sum = n / x + 1;\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  define integers i, j, k, and n\n  read n\n  define j and set to 3; for i from 1 to 35, set j to itself * 3\n    if n modulo j isn't 0, then break out\n  \n  print n / j + 1 and a newline\n\n",
        "int main() {\n  long long i, j, k, n;\n  cin >> n;\n  for (i = 1, j = 3; i <= 35; i++, j *= 3) {\n    if (n % j != 0) break;\n  }\n  cout << (n / j) + 1 << endl;\n}\n"
    ],
    [
        "create FILE pointer stream\n\n  create long long n\n  read n\n  create long long x with x = 1\n  while n % x is 0, set x to x * 3\n  print ( n / x ) + 1 print newline\n\n",
        "FILE *stream;\nint main() {\n  long long n;\n  cin >> n;\n  long long x = 1;\n  while (n % x == 0) { x *= 3; }\n  cout << (n / x) + 1 << endl;\n}\n"
    ],
    [
        "\n  n =integer\n  while reading values n\n    while n modulo 3 is 0, then set n to n / 3\n    print n / 3 + 1 and a new line\n  \n  \n\n",
        "int main() {\n  long long n;\n  while (cin >> n) {\n    while (n % 3 == 0) n /= 3;\n    cout << n / 3 + 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "set first 4 elements of dx to 0, 0, -1, 1\nassign 1, -1, 0, 0 to first 4 elements of dy\n\n  create long long int n\n  read n\n  set x and ans to 1\n  while x less than n\n    if n mod x different from 0, set ans = max of ans and n/x +1\n    set x = x*3\n  \n  print ans and a newline\n\n",
        "int dx[4] = {0, 0, -1, 1};\nint dy[4] = {1, -1, 0, 0};\nint main() {\n  long long int n;\n  cin >> n;\n  long long int x = 1, ans = 1;\n  while (x < n) {\n    if (n % x != 0) ans = max(ans, n / x + 1);\n    x = x * 3;\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "\n  create long long n\n  read n and loop further\n    declare long long a\n    declare long long t = 3\n    while n % t = 0, multiply t by 3\n    print n / t + 1\n  \n  \n\n",
        "int main() {\n  long long n;\n  while (cin >> n) {\n    long long a;\n    long long t = 3;\n    while (!(n % t)) t *= 3;\n    cout << n / t + 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n and a\n  read n and keep looping\n    set a to 3\n    while n modulo a is 0\n    print n / a + 1\n  \n  \n\n",
        "int main() {\n  long long n, a;\n  while (cin >> n) {\n    a = 3;\n    while (n % a == 0) a *= 3;\n    cout << n / a + 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "cil is a long long function with long long arguments x and y\n  if x % y is equal to 0\n    return x / y\n  else\n    return x / y + 1\n\n\n  declare long long variables n, i and j with j = 0\n  read input to n\n  change i to n\n  while n % 3 is 0 and n > 0\n    increment j\n    divide n by 3\n  \n  create long long l = 3 raised to power j + 1\n  print cil(i, l)\n\n",
        "long long cil(long long x, long long y) {\n  if (x % y == 0)\n    return x / y;\n  else\n    return x / y + 1;\n}\nint main() {\n  long long n, i, j = 0;\n  cin >> n;\n  i = n;\n  while (n % 3 == 0 && n > 0) {\n    j++;\n    n /= 3;\n  }\n  long long l = pow(3, j + 1);\n  cout << cil(i, l) << endl;\n}\n"
    ],
    [
        "\n  create long longs n, m, i, j, k\n  read n\n  set k to 3\n  while 1 is true\n    if n % k is not 0\n      set m to ( n / k ) + 1\n      break loop\n    \n    set value of k to 3\n  \n  print m print newline\n\n",
        "int main() {\n  long long n, m, i, j, k;\n  cin >> n;\n  k = 3;\n  while (1) {\n    if (n % k != 0) {\n      m = (n / k) + 1;\n      break;\n    }\n    k *= 3;\n  }\n  cout << m << endl;\n}\n"
    ],
    [
        "declare const int maxn = 100001\ndeclare long long n\n\n  read n\n  while n modulo 3 = 0, divide n by 3\n  print n / 3 + 1\n\n",
        "const int maxn = 100001;\nlong long n;\nint main() {\n  cin >> n;\n  while (n % 3 == 0) n /= 3;\n  cout << n / 3 + 1 << endl;\n}\n"
    ],
    [
        "in function power_of_two taking int n and returning bool\n  m = int\n  set m to n - 1\n  if not n bitwise-and m\n    return true\n  else\n    return false\n\n\n  n, m, a, mn = int with mn = 10000\n  read n then m\n  v = int vector\n  for i = 0 to m\n    read a\n    append a to v\n  \n  sort v\n  for i = n - 1 to m set mn to min of mn and v[i] - v[i - n + 1]\n  print mn\n\n",
        "bool power_of_two(int n) {\n  int m;\n  m = n - 1;\n  if (!n & m)\n    return true;\n  else\n    return false;\n}\nint main() {\n  int n, m, a, mn = 10000;\n  cin >> n >> m;\n  vector<int> v;\n  for (int i = 0; i < m; i++) {\n    cin >> a;\n    v.push_back(a);\n  }\n  sort(v.begin(), v.end());\n  for (int i = n - 1; i < m; i++) { mn = min(mn, v[i] - v[i - n + 1]); }\n  cout << mn << endl;\n}\n"
    ],
    [
        "\n  let integers n, m, i, and ans = INT_MAX and int array a of size 1000\n  read n and m\n  for i = 0 to m exclusive, read a[i]\n  sort array a\n  for i = 0 to m - n, set ans to the min of ans and a[i + n - 1] - a[i]\n  print ans\n\n",
        "int main() {\n  int n, m, a[1000], i, ans = INT_MAX;\n  cin >> n >> m;\n  for (i = 0; i < m; i++) cin >> a[i];\n  sort(a, a + m);\n  for (i = 0; i <= m - n; i++) ans = min(ans, a[i + n - 1] - a[i]);\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  let n, m, and f with 1000 indices be int\n  read n and m\n  read f of i i times from 0 to m exclusive\n  sort f and f plus m\n  let least be f[n - 1] - f[0]\n  for i from to 1 m - n inclusive\n    if f[i + n - 1] - f[i] < least set least to least = f[i + n - 1] - f[i]\n  \n  print least\n  \n\n",
        "int main() {\n  int n, m, f[1000];\n  cin >> n >> m;\n  for (int i = 0; i < m; ++i) { cin >> f[i]; }\n  sort(f, f + m);\n  int least = f[n - 1] - f[0];\n  for (int i = 1; i <= m - n; ++i) {\n    if (f[i + n - 1] - f[i] < least) { least = f[i + n - 1] - f[i]; }\n  }\n  cout << least << endl;\n  return 0;\n}\n"
    ],
    [
        "create integers array dx initialized with 1, 0, -1, 0, 1, 1, -1, -1\ncreate integers array dy initialized with 0, 1, 0, -1, 1, -1, 1, -1\nin the function fast\ndeclare const long long md = 1e9 + 7\n\n  call fast()\n  create long longs n and m\n  read n and m\n  declare an array of long longs a with m + 5 elements\n  read a from the input m times\n  sort first m elements of a\n  declare long long variable ans = LLONG_MAX\n  for i from 0 to m - n inclusive, change ans to min of ans and a[i + (n - 1)] - a[i]\n  print ans\n  \n\n",
        "int dx[] = {1, 0, -1, 0, 1, 1, -1, -1};\nint dy[] = {0, 1, 0, -1, 1, -1, 1, -1};\nvoid fast() {}\nconst long long md = 1e9 + 7;\nint main() {\n  fast();\n  long long n, m;\n  cin >> n >> m;\n  long long a[m + 5];\n  for (int i = 0; i < m; i++) cin >> a[i];\n  sort(a, a + m);\n  long long ans = LLONG_MAX;\n  for (int i = 0; i <= m - n; i++) { ans = min(ans, a[i + (n - 1)] - a[i]); }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, m = integers\n  read n, m\n  arr = integer array of size 100000\n  for i = 0 to m exclusive, read arr[i]\n  sort arr and arr + m\n  mindiff = integer with mindiff = INT_MAX\n  for i = 0 to m - (n - 1) exclusive\n    diff = integer with diff = arr[i + n - 1] - arr[i]\n    if diff < mindiff, mindiff = diff\n  \n  print mindiff\n  \n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  int arr[100000];\n  for (int i = 0; i < m; ++i) { cin >> arr[i]; }\n  sort(arr, arr + m);\n  int mindiff = INT_MAX;\n  for (int i = 0; i < m - (n - 1); i++) {\n    int diff = arr[i + n - 1] - arr[i];\n    if (diff < mindiff) { mindiff = diff; }\n  }\n  cout << mindiff << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create new variables n, m, i, j, total, val, diff and mini be ints with total = 0 and mini = 10000\n  declare new vector of integers called v\n  read variables n and m from the input\n  for i = 0 to m exclusive\n    read val\n    push val to the end of v\n  \n  sort v\n  start for loop from i = 0 to m - n inclusive incrementing i\n    change val to abs(v[i] - v[i + n - 1])\n    change mini to min of mini and val\n  \n  print mini\n\n",
        "int main() {\n  int n, m, i, j, total = 0, val, diff, mini = 10000;\n  vector<int> v;\n  cin >> n >> m;\n  for (i = 0; i < m; i++) {\n    cin >> val;\n    v.push_back(val);\n  }\n  sort(v.begin(), v.end());\n  for (i = 0; i <= m - n; i++) {\n    val = abs(v[i] - v[i + n - 1]);\n    mini = min(mini, val);\n  }\n  cout << mini << endl;\n}\n"
    ],
    [
        "\n  create integers n and m, and an array of integers f with size 1000\n  read input to n and m\n  for integer i = 0 to m exclusive, read input to f[i]\n  sort m elements of f\n  create integer least = f[n - 1] - f[0]\n  for i from 1 to m - n inclusive\n    if f[i + n - 1] - f[i] is less than least, assign f[i + n - 1] - f[i] to least\n  \n  print least\n  \n\n",
        "int main() {\n  int n, m, f[1000];\n  cin >> n >> m;\n  for (int i = 0; i < m; ++i) { cin >> f[i]; }\n  sort(f, f + m);\n  int least = f[n - 1] - f[0];\n  for (int i = 1; i <= m - n; ++i) {\n    if (f[i + n - 1] - f[i] < least) { least = f[i + n - 1] - f[i]; }\n  }\n  cout << least << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n,m,mn be integers wtih mn = 1005 and a be an integer array of size 60\n  input n\n  input m\n  input m number of items into a\n  call sort with parameters a, a+m\n  for i = 0 to m-n\n    set integer d to a[i + n - 1] - a[i]\n    if d < mn set mn = d\n  \n  print mn\n  \n\n",
        "int main() {\n  int n, m, a[60], mn = 1005;\n  cin >> n;\n  cin >> m;\n  for (int i = 0; i < m; i++) { cin >> a[i]; }\n  sort(a, a + m);\n  for (int i = 0; i < m - n + 1; i++) {\n    int d = a[i + n - 1] - a[i];\n    if (d < mn) mn = d;\n  }\n  cout << mn << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare x, y as integers\n  read x, y\n  declare integer array m size y\n  declare integer array arr size y\n  for i = 0 to y exclusive, read arr[i]\n  sort elements from arr to arr + y\n  declare integer k with k = 0\n  for i = 0 to y - x + 1 exclusive\n    let m[k] be arr[x-1+i] - arr[i]\n    increment k\n  \n  let integer min be 99999\n  for j = 0 to k exclusive\n    if min is greater than m[j], let min be m[j]\n  \n  print min, newline\n  \n\n",
        "int main() {\n  int x, y;\n  cin >> x >> y;\n  int m[y];\n  int arr[y];\n  for (int i = 0; i < y; i++) { cin >> arr[i]; }\n  sort(arr, arr + y);\n  int k = 0;\n  for (int i = 0; i < y - x + 1; i++) {\n    m[k] = arr[x - 1 + i] - arr[i];\n    k++;\n  }\n  int min = 99999;\n  for (int j = 0; j < k; j++) {\n    if (min > m[j]) min = m[j];\n  }\n  cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let i, a, b, j, s, c, d be integers with c = array of integers of length 1000, d = array of integers of length 1000\n  read a, b\n  for i = 0 to b exclusive , read c[i]\n  sort the values c and c + b\n  for i = 0, j = 0, i is less than b - a + 1, increment i , j by 1, d[j] is equal to c[i + a - 1] - c[i]\n  sort the values d, d + b - a + 1\n  print d[0] and newline\n\n",
        "int main() {\n  int i, a, b, j, s, c[1000], d[1000];\n  cin >> a >> b;\n  for (i = 0; i < b; i++) { cin >> c[i]; }\n  sort(c, c + b);\n  for (i = 0, j = 0; i < b - a + 1; i++, j++) { d[j] = c[i + a - 1] - c[i]; }\n  sort(d, d + b - a + 1);\n  cout << d[0] << endl;\n}\n"
    ],
    [
        "create int array A of size 1000100\n\n  let ints n and m\n  read n and m\n  for i = 0 to m exclusive, read A[i]\n  sort A\n  create ints high = n - 1 and low = 0\n  let int mini = A[high] - A[low]\n  while high is less than m\n    increment low\n    increment high\n    if high is less than m, set mini to the min of mini and A[high] - A[low]\n  \n  print mini\n\n",
        "int A[100010];\nint main() {\n  int n, m;\n  cin >> n >> m;\n  for (int i = 0; i < m; i++) cin >> A[i];\n  sort(A, A + m);\n  int high = n - 1, low = 0;\n  int mini = A[high] - A[low];\n  while (high < m) {\n    low++;\n    high++;\n    if (high < m) mini = min(mini, A[high] - A[low]);\n  }\n  cout << mini << '\\n';\n}\n"
    ],
    [
        "\n  create ints num and buy\n  create int vector v\n  read num and buy\n  for i = 0 to buy exclusive\n    let int x\n    read x\n    append x to vector v\n  \n  sort vector v\n  let ints max = 0, min = 0, and differ = 1000000\n  for i = 0 to size of v exclusive\n    if i + num is greater than the size of v\n      break loop\n    otherwise do\n      set min to the min value in v\n      set max to the max value in v\n      if v.at(max) - v.at(min) is less than differ, set differ to v.at(max) - v.at(min)\n    \n  \n  for i = 0 to size of v exclusive\n    let int total = count(v.begin(), v.end(), v.at(i));\n    if total is greater than or equal to num\n      set differ to 0\n      break loop\n    \n  \n  print differ\n\n",
        "int main() {\n  int num, buy;\n  vector<int> v;\n  cin >> num >> buy;\n  for (int i = 0; i < buy; i++) {\n    int x;\n    cin >> x;\n    v.push_back(x);\n  }\n  sort(v.begin(), v.end());\n  int max = 0, min = 0, differ = 1000000;\n  for (int i = 0; i < v.size(); i++) {\n    if ((i + num) > v.size())\n      break;\n    else {\n      min = min_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n      max = max_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n      if ((v.at(max) - v.at(min)) < differ) { differ = v.at(max) - v.at(min); }\n    }\n  }\n  for (int i = 0; i < v.size(); i++) {\n    int total = count(v.begin(), v.end(), v.at(i));\n    if (total >= num) {\n      differ = 0;\n      break;\n    }\n  }\n  cout << differ << endl;\n}\n"
    ],
    [
        "\n  let n,m be integers\n  read n and m\n  a = array of integers of length m\n  for i = 0 to m exclusive , read a[i]\n  sort the values a and a + m\n  let min be a integer with min = 1000000\n  for i = 0 to m - n + 1 exclusive\n    if a[i + n - 1] - a[i] is less than min , the value of min is equal to a[i + n - 1] - a[i]\n  \n  if min is equal to 1000000\n    print 0 and newline\n  else do the following\n    print min and newline\n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  int a[m];\n  for (int i = 0; i < m; i++) cin >> a[i];\n  sort(a, a + m);\n  int min = 1000000;\n  for (int i = 0; i < m - n + 1; i++) {\n    if ((a[i + n - 1] - a[i]) < min) { min = a[i + n - 1] - a[i]; }\n  }\n  if (min == 1000000)\n    cout << \"0\\n\";\n  else\n    cout << min << \"\\n\";\n}\n"
    ],
    [
        "\n  set precision to 10\n  print fixed\n  n, m = integers\n  read n, m\n  v = vector of integer with v = m\n  for i = 0 to m exclusive, print v[i]\n  sort v.begin() and v.end()\n  diff = vector of integer\n  for i = 0 to m - n + 1 exclusive, append (abs(v[i] - v[n + i - 1])) in diff\n  print pointer min_element(diff.begin(), diff.end())\n\n",
        "int main() {\n  cout.precision(10);\n  cout << fixed;\n  int n, m;\n  cin >> n >> m;\n  vector<int> v(m);\n  for (int i = 0; i < m; i++) cin >> v[i];\n  sort(v.begin(), v.end());\n  vector<int> diff;\n  for (int i = 0; i < m - n + 1; i++) { diff.push_back(abs(v[i] - v[n + i - 1])); }\n  cout << *min_element(diff.begin(), diff.end()) << endl;\n}\n"
    ],
    [
        "\n  declare int variables n and m\n  read n and m from the input\n  arr is a new array ofintegers with m elements\n  in the for loop, change i from 0 to m exclusive, reading variable arr[i] from the input\n  sort arr from index 0 to m exclusive\n  declare integer mn = 1e9\n  for i = 0 to m - n inclusive, change mn to min of mn and arr[i + n - 1] - arr[i]\n  print mn to the standard output\n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  int arr[m];\n  for (int i = 0; i < m; ++i) cin >> arr[i];\n  sort(arr, arr + m);\n  int mn = 1e9;\n  for (int i = 0; i <= m - n; ++i) mn = min(mn, arr[i + n - 1] - arr[i]);\n  cout << mn << endl;\n}\n"
    ],
    [
        "\n  numbuy=int\n  v=vector of int\n  read num,buy\n  for i=0 to buy exclusive\n    x=int\n    read x\n    add x at end of v\n  \n  sort v\n  max,min=0, differ=1000000\n  for i=0 to size of v exclusive\n    if i+num > size of v\n      break\n    else\n      min=min_element(first item of v+i, first item of v+i+num) - first item of v\n      max=max_element(first item of v+i, first item of v+i+num) - first item of v\n      if pos of max in v - pos of min in v < differ differ = pos of max in v - pos of min in v\n    \n  \n  for i=0 to size of v exclusive\n    total=count(occurrences of i in v)\n    if total >= num\n      differ=0\n      break\n    \n  \n  print differ\n\n",
        "int main() {\n  int num, buy;\n  vector<int> v;\n  cin >> num >> buy;\n  for (int i = 0; i < buy; i++) {\n    int x;\n    cin >> x;\n    v.push_back(x);\n  }\n  sort(v.begin(), v.end());\n  int max = 0, min = 0, differ = 1000000;\n  for (int i = 0; i < v.size(); i++) {\n    if ((i + num) > v.size())\n      break;\n    else {\n      min = min_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n      max = max_element(v.begin() + i, v.begin() + (i + num)) - v.begin();\n      if ((v.at(max) - v.at(min)) < differ) { differ = v.at(max) - v.at(min); }\n    }\n  }\n  for (int i = 0; i < v.size(); i++) {\n    int total = count(v.begin(), v.end(), v.at(i));\n    if (total >= num) {\n      differ = 0;\n      break;\n    }\n  }\n  cout << differ << endl;\n}\n"
    ],
    [
        "\n  declare integers n, m\n  read n, m\n  declare integer array a size m\n  for i = 0 to m exclusive, read a[i]\n  sort from a to a + m\n  declare integers i = 0, j = n - 1\n  declare psum = a[j]-a[i] as integer\n  while j is less than m\n    declare sum = a[j]-a[i] as integer\n    if sum is less than or equal to psum, let psum = sum\n    increment i\n    increment j\n  \n  print psum, \"\\n\"\n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  int a[m];\n  for (int i = 0; i < m; i++) { cin >> a[i]; }\n  sort(a, a + m);\n  int i = 0, j = n - 1;\n  int psum = a[j] - a[i];\n  while (j < m) {\n    int sum = a[j] - a[i];\n    if (sum <= psum) psum = sum;\n    i++;\n    j++;\n  }\n  cout << psum << \"\\n\";\n}\n"
    ],
    [
        "\n  noOfStudents, noOfprizes, minimum = int with minimum = 100000\n  read noOfStudents then noOfprizes\n  a = int array of size noOfprizes\n  read noOfprizes values into a\n  sort a\n  for i = 0 to noOfprizes - noOfStudents + 1 set minimum to min of a[i + noOfStudents - 1] - a[i], minimum\n  print minimum\n  \n\n",
        "int main() {\n  int noOfStudents, noOfprizes, minimum = 100000;\n  cin >> noOfStudents >> noOfprizes;\n  int a[noOfprizes];\n  for (int i = 0; i < noOfprizes; i++) { cin >> a[i]; }\n  sort(a, a + noOfprizes);\n  for (int i = 0; i + noOfStudents - 1 < noOfprizes; i++) { minimum = min(a[i + noOfStudents - 1] - a[i], minimum); }\n  cout << minimum << endl;\n  return 0;\n}\n"
    ],
    [
        "create long long ans = 1000000\n\n  declare long long int variables n and m\n  read input to n and m\n  declare long long int array a with m + 2 elements\n  for integer i = 0 to m exclusive, read a[i]\n  sort m elements of a\n  declare long long int k = m - n\n  for i from 0 to k inclusive, assign min of ans and a[i + (n - 1)] - a[i] to ans\n  print ans\n  \n\n",
        "long long ans = 1000000;\nint main() {\n  long long int n, m;\n  cin >> n >> m;\n  long long int a[m + 2];\n  for (int i = 0; i < m; i++) cin >> a[i];\n  sort(a, a + m);\n  long long int k = m - n;\n  for (int i = 0; i <= k; i++) { ans = min(ans, a[i + (n - 1)] - a[i]); }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n,m=int\n  while read n, m\n    a=array of 55 int\n    for i=0 to m exclusive read a[i]\n    sort first m items of a\n    min2=999999999, t=int\n    for i=n-1 to m exclusive\n      t=a[i]-a[i-n+1]\n      if min2>t min2=t\n    \n    print min2\n  \n\n",
        "int main() {\n  int n, m;\n  while (cin >> n >> m) {\n    int a[55];\n    for (int i = 0; i < m; i++) cin >> a[i];\n    sort(a, a + m);\n    int min2 = 999999999, t;\n    for (int i = n - 1; i < m; i++) {\n      t = a[i] - a[i - n + 1];\n      if (min2 > t) min2 = t;\n    }\n    cout << min2 << endl;\n  }\n}\n"
    ],
    [
        "\n  create long longs n, m\n  read n read m\n  create long long vector a initialized with ( m, 0 )\n  for i = 0 to m exclusive, read a[i]\n  sort elements from beginning of a to end of a\n  create long longs l, r\n  set l to r to 0\n  set r to n - 1\n  create long long mn with mn = a[m - 1] - a[0]\n  while r is not m\n    set mn to minimum of ( mn and a[r] - a[l] )\n    increment l\n    increment r\n  \n  print mn print newline\n  \n\n",
        "int main() {\n  long long n, m;\n  cin >> n >> m;\n  vector<long long> a(m, 0);\n  for (long long i = 0; i < m; i++) { cin >> a[i]; }\n  sort(a.begin(), a.end());\n  long long l, r;\n  l = r = 0;\n  r = n - 1;\n  long long mn = a[m - 1] - a[0];\n  while (r != m) {\n    mn = min(mn, a[r] - a[l]);\n    l++;\n    r++;\n  }\n  cout << mn << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, m be integers\n  read n and m\n  arr = vector\n  while m is greater than 0\n    let i be int\n    read i\n    push_back i onto r\n    decrement m\n  \n  sort with functions arr.begin and arr.end\n  let distance be integer with value 1e9\n  for i from 0 to arr size minus n + 1 exclusive\n    if arr[i + n - 1] - arr[i] < distance then set distance to arr[i + n - 1] - arr[i]\n  \n  print distance\n  \n\n",
        "int main() {\n  int n, m;\n  cin >> n >> m;\n  vector<int> arr;\n  while (m > 0) {\n    int i;\n    cin >> i;\n    arr.push_back(i);\n    m--;\n  }\n  sort(arr.begin(), arr.end());\n  int distance = 1e9;\n  for (int i = 0; i < arr.size() - n + 1; i++) {\n    if (arr[i + n - 1] - arr[i] < distance) { distance = arr[i + n - 1] - arr[i]; }\n  }\n  cout << distance << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers k, d and i\n  read k and d\n  if d = 0\n    if k = 1\n      print 0 and a new line\n    else\n      print \"No solution\\n\"\n    \n  else\n    print d\n    for i = 1 to k exclusive, print 0\n    print new line\n  \n  \n\n",
        "int main() {\n  int k, d, i;\n  cin >> k >> d;\n  if (d == 0) {\n    if (k == 1) {\n      cout << 0 << endl;\n    } else {\n      cout << \"No solution\\n\";\n    }\n  } else {\n    cout << d;\n    for (i = 1; i < k; i++) { cout << 0; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers k, d\n  read k read d\n  if d is 0 and k is greater than 1\n    print \"No solution\\n\"\n    \n  \n  print d\n  decrement k\n  while decrement k is true, print 0\n  print newline\n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\\n\";\n    return 0;\n  }\n  cout << d;\n  k--;\n  while (k--) cout << 0;\n  cout << endl;\n}\n"
    ],
    [
        "\n  k and d = integers\n  read k and d\n  if d = 0\n    if k = 1\n      print \"0\" and a new line\n    else\n      print \"No solution\" and a new line\n  else\n    print d\n    print \"0\" k - 1 times\n    print new line\n  \n  \n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (d == 0) {\n    if (k == 1)\n      cout << \"0\" << endl;\n    else\n      cout << \"No solution\" << endl;\n  } else {\n    cout << d;\n    for (int i = 0; i < k - 1; ++i) { cout << \"0\"; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let k be a integer\n  let d be a character\n  read the values k and d\n  if (d is equal to 0 and k is greater than 1)\n    print No solution and newline\n    \n  \n  let temp be a string\n  push temp vector to back when element d is given( temp.push_back(d))\n  for (int i is equal to 1, i is less than k; increment i value by 1) ,temp.push_back('0')\n  print temp and newline\n  \n\n",
        "int main() {\n  int k;\n  char d;\n  cin >> k >> d;\n  if (d == '0' && k > 1) {\n    cout << \"No solution\" << endl;\n    return 0;\n  }\n  string temp;\n  temp.push_back(d);\n  for (int i = 1; i < k; i++) temp.push_back('0');\n  cout << temp << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers k, d\n  read k read d\n  if k is 1 and d is 0\n    print \"0\" print newline\n  else if k is greater than 1 and d is 0\n    print \"No solution\" print newline\n  else\n    print d\n    for i = 0 to k - 1 exclusive, print \"0\"\n    print newline\n  \n  \n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (k == 1 && d == 0) {\n    cout << \"0\" << endl;\n  } else if (k > 1 && d == 0) {\n    cout << \"No solution\" << endl;\n  } else {\n    cout << d;\n    for (int i = 0; i < k - 1; i++) { cout << \"0\"; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  k, d=integers\n  Read k and d\n  if d is equal to 0 and k is greater than 1\n    print No solution and a new line\n  else do the following\n    print d\n    for i = 1 to k, exclusive, print 0\n    print a new line\n  \n  \n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\" << endl;\n  } else {\n    cout << d;\n    for (int i = 1; i < k; i++) cout << 0;\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  k, d =integers\n  Read k, d\n  if d is equal to 0 and k is greater than 1\n    print No solution and a new line\n    \n  \n  print d\n  for j = 1 to k exclusive, print 0\n  print a new line\n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\" << endl;\n    return 0;\n  }\n  cout << d;\n  for (int i = 1; i < k; i++) { cout << 0; }\n  cout << endl;\n}\n"
    ],
    [
        "\n  k, d, i, j =integers\n  Read k and d\n  if d is equal to 0\n    if k is greater than 1\n      print No solution and a new line\n    else do the following\n      print 0 and a new line\n    \n  \n  print d\n  for i = 0 to k exclusive, print 0\n  print a new line\n\n",
        "int main() {\n  int k, d, i, j;\n  cin >> k >> d;\n  if (d == 0) {\n    if (k > 1)\n      cout << \"No solution\" << endl;\n    else\n      cout << 0 << endl;\n    return 0;\n  }\n  cout << d;\n  for (i = 1; i < k; i++) cout << 0;\n  cout << endl;\n}\n"
    ],
    [
        "\n  k, d = integers\n  read k and d\n  if k is greater than 1 and d is 0\n    print No solution\n    \n  \n  print d\n  for i=1 to k exclusive print 0\n  print new line\n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (k > 1 && d == 0) {\n    cout << \"No solution\\n\";\n    return 0;\n  }\n  cout << d;\n  for (int i = 1; i < k; i++) { cout << 0; }\n  cout << endl;\n}\n"
    ],
    [
        "\n  d = large long\n  read k and d\n  if d = 0 and k > 1\n    print No Solution\n  else\n    print d\n    increment k\n    while k > -\n      print 0\n      decrement k\n    \n    print newline\n  \n  \n\n",
        "int main() {\n  long long k, d;\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\" << endl;\n  } else {\n    cout << d;\n    k--;\n    while (k) {\n      cout << 0;\n      k--;\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare desperate_optimization with integer precision as argument, returning void\n  set cout stream flag ios::fixed\n  set cout stream flag ios::showpoint\n  set cout floating point precision to precision\n\n\n  run desperate_optimization with 10 as argument\n  create integers n, k\n  read n read k\n  if k is 0 and n is not 1\n    print \"No solution\" print '\\n'\n    \n  \n  if k is 0\n    print 0 print '\\n\n  else\n    print k\n    for i = 1 to n exclusive, print 0\n    print '\\n'\n  \n  \n\n",
        "void desperate_optimization(int precision) {\n  cout.setf(ios::fixed);\n  cout.setf(ios::showpoint);\n  cout.precision(precision);\n}\nint main() {\n  desperate_optimization(10);\n  int n, k;\n  cin >> n >> k;\n  if (k == 0 && n != 1) {\n    cout << \"No solution\" << '\\n';\n    return 0;\n  }\n  if (k == 0)\n    cout << 0 << '\\n';\n  else {\n    cout << k;\n    for (int i = 1; i < n; i++) cout << 0;\n    cout << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "create integers k, d\n\n  read k read d\n  if d is 0 and k is greater than 1\n    print \"No solution\" print newline\n    \n  \n  print d\n  decrement k\n  while decrement k is true, print 0\n  print newline\n  \n\n",
        "int k, d;\nint main() {\n  cin >> k >> d;\n  if (d == 0 && k > 1) {\n    cout << \"No solution\" << endl;\n    return 0;\n  }\n  cout << d;\n  k--;\n  while (k--) cout << 0;\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers k, q, with q = 1\n  create character d\n  create string s with s = \"\"\n  read k read d\n  if d - '0' is 0\n    if k is 1\n      print 0 print newline\n    else\n      print \"No solution\" print newline\n  else\n    increment s by d\n    for i = 1 to k exclusive, increment s by \"0\"\n    print s print newline\n  \n  \n\n",
        "int main() {\n  int k, q = 1;\n  char d;\n  string s = \"\";\n  cin >> k >> d;\n  if (d - '0' == 0) {\n    if (k == 1)\n      cout << 0 << endl;\n    else\n      cout << \"No solution\" << endl;\n  } else {\n    s += d;\n    for (int i = 1; i < k; i++) s += \"0\";\n    cout << s << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers k and d\n  read k and d\n  if k is greater than 1 and d is 0\n    print \"No solution\" and a new line\n    \n  \n  print d\n  decrease k by one\n  print 0 in the loop while decrementing k\n  print new line\n  \n\n",
        "int main() {\n  int k, d;\n  cin >> k >> d;\n  if (k > 1 && !d) {\n    cout << \"No solution\" << endl;\n    return 0;\n  }\n  cout << d;\n  k--;\n  while (k--) cout << 0;\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "Mod = const int with Mod = 1e9 + 7\nn, p = integers\nchoose, ans = long long with choose = 2d array of 30025 rows and 600 columns, ans = 1\nPedy = map from int to int\n\n  read n\n  index 0, 0 of choose = 1\n  for i = 1 to 30024\n    index i and 0 of choose = 1\n    for j = 1 to n index i and j of choose = (choose[i - 1][j - 1] + choose[i - 1][j]) modulo Mod\n  \n  for i = 0 to n exclusive\n    read p\n    for j = 2 to j * j <= p\n      if p modulo j is 0\n        while not(p modulo j)\n          p = p / j\n          increment Pedy[j]\n        \n      \n    if p > 1, increment Pedy[p]\n  \n  for it = Pedy.begin() to it is not Pedy.end()\n    p = second in it\n    ans = (ans * choose[p + n - 1][n - 1]) modulo Mod\n  \n  print ans\n  \n\n",
        "const int Mod = 1e9 + 7;\nint n, p;\nlong long choose[30000 + 25][600], ans = 1;\nmap<int, int> Pedy;\nint main() {\n  cin >> n;\n  choose[0][0] = 1;\n  for (int i = 1; i < 30000 + 25; i++) {\n    choose[i][0] = 1;\n    for (int j = 1; j <= n; j++) choose[i][j] = (choose[i - 1][j - 1] + choose[i - 1][j]) % Mod;\n  }\n  for (int i = 0; i < n; i++) {\n    cin >> p;\n    for (int j = 2; j * j <= p; j++)\n      if (p % j == 0) {\n        while (not(p % j)) {\n          p /= j;\n          Pedy[j]++;\n        }\n      }\n    if (p > 1) Pedy[p]++;\n  }\n  for (map<int, int>::iterator it = Pedy.begin(); it != Pedy.end(); it++) {\n    p = it->second;\n    ans = (ans * choose[p + n - 1][n - 1]) % Mod;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "me is a map of long long to long long\ncreate long long array fine with 100000 + 5 elements\npre is a void function\n  for long long i = 2 to 100000 inclusive\n    if fine[i] is equal to 0\n      for j from 2 * i to 100000 inclusive increasing j by i, assign 1 to fine[j]\n    \n  \n\ncreate an arrays of long longs fact and invfact with 100000 elements each\npow is a long long function with long long arguments a, b and m\n  declare long long variable ans = 1\n  while b is not 1\n    if b & 1 is not 0, assign (ans * a) % m to ans\n    divide b by 2\n    change a to (a * a) % m\n  \n  return ans\n\nlong long function modinv with long long argument k\n  return pow(k, 1000000007 - 2, 1000000007)\n\ndefine function precompute\n  set fact[0] to set fact[1] to 1\n  for i from 2 to 100000 exclusive\n    assign fact[i - 1] * i to fact[i]\n    fact[i] %= 1000000007\n  \n  set invfact[100000 - 1] to modinv(fact[100000 - 1])\n  for i from 100000-2 to 0 inclusive decrementing i\n    change invfact[i] to invfact[i + 1] * (i + 1)\n    invfact[i] %= 1000000007\n  \n\nfunction nCr with long long arguments x and y that returns long long\n  if y is greater than x, return 0\n  set long long num to fact[x]\n  multiply num by invfact[y]\n  num % =1000000007\n  multiply num by invfact[x - y]\n  num % =1000000007\n  return num\n\n\n  create long long n\n  read n\n  call precompute()\n  call pre()\n  loop i from 1 to n inclusive\n    create long long temp\n    read temp\n    for j = 2 to 100000 inclusive\n      create long long cur = 0\n      if temp <= 1, stop the loop\n      while temp modulo j = 0 && temp > 1\n        increment cur\n        divide temp by j\n      \n      if cur != 0, increase me[j] by cur\n    \n    if temp != 1, increase me[temp] by 1\n  \n  create map iterator it\n  declare long long ans = 1\n  move it through me in a loop\n    declare long long variable temp = it->second\n    multiply ans by nCr(temp + n - 1, temp)\n    ans % =1000000007\n  \n  print ans\n  \n\n",
        "map<long long, long long> me;\nlong long fine[100000 + 5];\nvoid pre() {\n  for (long long i = 2; i <= 100000; i++) {\n    if (fine[i] == 0) {\n      for (long long j = 2 * i; j <= 100000; j += i) { fine[j] = 1; }\n    }\n  }\n}\nlong long fact[100000], invfact[100000];\nlong long pow(long long a, long long b, long long m) {\n  long long ans = 1;\n  while (b) {\n    if (b & 1) ans = (ans * a) % m;\n    b /= 2;\n    a = (a * a) % m;\n  }\n  return ans;\n}\nlong long modinv(long long k) {\n  return pow(k, 1000000007 - 2, 1000000007);\n}\nvoid precompute() {\n  fact[0] = fact[1] = 1;\n  for (long long i = 2; i < 100000; i++) {\n    fact[i] = fact[i - 1] * i;\n    fact[i] %= 1000000007;\n  }\n  invfact[100000 - 1] = modinv(fact[100000 - 1]);\n  for (long long i = 100000 - 2; i >= 0; i--) {\n    invfact[i] = invfact[i + 1] * (i + 1);\n    invfact[i] %= 1000000007;\n  }\n}\nlong long nCr(long long x, long long y) {\n  if (y > x) return 0;\n  long long num = fact[x];\n  num *= invfact[y];\n  num %= 1000000007;\n  num *= invfact[x - y];\n  num %= 1000000007;\n  return num;\n}\nint main() {\n  long long n;\n  cin >> n;\n  precompute();\n  pre();\n  for (long long i = 1; i <= n; i++) {\n    long long temp;\n    cin >> temp;\n    for (long long j = 2; j <= 100000; j++) {\n      long long cur = 0;\n      if (temp <= 1) break;\n      while (temp % j == 0 && temp > 1) {\n        cur++;\n        temp /= j;\n      }\n      if (cur != 0) me[j] += cur;\n    }\n    if (temp != 1) me[temp] += 1;\n  }\n  map<long long, long long>::iterator it;\n  long long ans = 1;\n  for (it = me.begin(); it != me.end(); it++) {\n    long long temp = it->second;\n    ans *= nCr(temp + n - 1, temp);\n    ans %= 1000000007;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, l, r, a, b, sum = int with sum = 0 and my = int array of size 105 with all values set to 0\n  read n\n  read l then r\n  for i = 0 to n - 1\n    read a then b\n    for j = a + 1 to b inclusive set m[j] to 1\n  \n  for i = l + 1 to r inclusive\n    if m[i] is 0 increment sum\n  print sum\n  \n\n",
        "int main() {\n  int n, my[105] = {0}, l, r, a, b, sum = 0;\n  cin >> n;\n  cin >> l >> r;\n  for (int i = 0; i < n - 1; i++) {\n    cin >> a >> b;\n    for (int j = a + 1; j <= b; j++) my[j] = 1;\n  }\n  for (int i = l + 1; i <= r; i++)\n    if (my[i] == 0) sum++;\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array arrx with size 101\n\n  create integer n\n  read n\n  create integers l, r\n  read l read r\n  for i = 1 to n exclusive\n    create integers a, b\n    read a read b\n    for j = a to b exclusive, set arrx[j] to 1\n  \n  create integer total with total = 0\n  for i = l to r exclusive, increment total by 0 if arrx[i] is true, else 1\n  print total print newline\n\n",
        "int arrx[101];\nint main() {\n  int n;\n  cin >> n;\n  int l, r;\n  cin >> l >> r;\n  for (int i = 1; i < n; i++) {\n    int a, b;\n    cin >> a >> b;\n    for (int j = a; j < b; j++) arrx[j] = 1;\n  }\n  int total = 0;\n  for (int i = l; i < r; i++) { total += arrx[i] ? 0 : 1; }\n  cout << total << endl;\n}\n"
    ],
    [
        "declare constant integer N = 100 + 5\ndeclare boolean array mark with N elements\n\n  declare int variables n, st and en\n  read input to n, st and en\n  for i = 1 to n exclusive\n    create integers l and r\n    read l and r\n    for j from l to r exclusive, set mark[j] to true\n  \n  create int ans = 0\n  for i = st to en exclusive, increase ans by !mark[i]\n  print ans\n  \n\n",
        "const int N = 100 + 5;\nbool mark[N];\nint main() {\n  int n, st, en;\n  cin >> n >> st >> en;\n  for (int i = 1; i < n; i++) {\n    int l, r;\n    cin >> l >> r;\n    for (int j = l; j < r; j++) mark[j] = true;\n  }\n  int ans = 0;\n  for (int i = st; i < en; i++) ans += !mark[i];\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "N=105\nmm = array of N bool\n\n  n=int\n  read n\n  k1,k2=int\n  read k1,k2\n  fill mm with false\n  for i=k1 to k2 exclusive mm[i]=true\n  for i=0 to n-1 exclusive\n    read k1,k2\n    for j=k1 to k2 exclusive mm[j]=false\n  \n  ans=0\n  for i=0 to 101 exclusive\n    if mm[i] increment ans\n  print ans\n  \n\n",
        "const int N = 105;\nbool mm[N];\nint main() {\n  int n;\n  cin >> n;\n  int k1, k2;\n  cin >> k1 >> k2;\n  memset(mm, false, sizeof(mm));\n  for (int i = int(k1); i < int(k2); ++i) mm[i] = true;\n  for (int i = int(0); i < int(n - 1); ++i) {\n    cin >> k1 >> k2;\n    for (int j = int(k1); j < int(k2); ++j) mm[j] = false;\n  }\n  int ans = 0;\n  for (int i = int(0); i < int(101); ++i)\n    if (mm[i]) ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create int arr[1000]\n\n  let n be int\n  read n\n  create int l and r\n  read l, r\n  decrement n\n  while decrement n\n    create integers x and y\n    read x, y\n    for i=x to y exclusive, increment arr[i]\n  \n  assign 0 to ans\n  for i=l to r exclusive\n    if arr[i] =0, add 1 to ans\n  print ans\n  \n\n",
        "int arr[1000];\nint main() {\n  int n;\n  cin >> n;\n  int l, r;\n  cin >> l >> r;\n  n--;\n  while (n--) {\n    int x, y;\n    cin >> x >> y;\n    for (int i = x; i < y; i++) arr[i]++;\n  }\n  int ans = 0;\n  for (int i = l; i < r; i++)\n    if (arr[i] == 0) ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create int n, l, r, a[200], x, y, ans, z, w, set ans to 0\n\n  read n\n  read x and y\n  for i=0 to n-1 exclusive\n    read l and r\n    for j= l to r exclusive, set a[j] to 1\n  \n  for i=x to y exclusive\n    if a[i] is 0, increment ans\n  \n  print ans\n  \n\n",
        "int n, l, r, a[200], x, y, ans = 0, z, w;\nint main() {\n  cin >> n;\n  cin >> x >> y;\n  for (int i = 0; i < n - 1; i++) {\n    cin >> l >> r;\n    for (int j = l; j < r; j++) a[j] = 1;\n  }\n  for (int i = x; i < y; i++) {\n    if (!a[i]) ans++;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n=int\n  l,r=int\n  vis=array of 101 int\n  while read n\n    fill vis with 0\n    read l,r\n    for i=l+1 to r inclusive vis[i]=1\n    x,y=int\n    for i=1 to n-1 inclusive\n      read x,y\n      for j=x+1 to y inclusive vis[j]=0\n    \n    cnt=0\n    for i=l+1 to r inclusive add vis[i] to cnt\n    print cnt\n  \n\n",
        "int main() {\n  int n;\n  int l, r;\n  int vis[101];\n  while (cin >> n) {\n    memset(vis, 0, sizeof(vis));\n    cin >> l >> r;\n    for (int i = l + 1; i <= r; i++) { vis[i] = 1; }\n    int x, y;\n    for (int i = 1; i <= n - 1; i++) {\n      cin >> x >> y;\n      for (int j = x + 1; j <= y; j++) { vis[j] = 0; }\n    }\n    int cnt = 0;\n    for (int i = l + 1; i <= r; i++) { cnt += vis[i]; }\n    cout << cnt << endl;\n  }\n}\n"
    ],
    [
        "in int function miniel which takes an int vecotr v and an int x\n  let l = int = 11111111\n  for i = 0 to x inclusive\n    if v at i < l then set l = v at 1\n  \n  return l\n\n\n  let n, s, e, p be integers\n  read n, s, e\n  let arr be an integer array of length 100, with arr[0] = 0\n  sum = int = 0\n  l = int = -111\n  for i = 1 to n\n    let x, y be int\n    read x and y\n    if e <= y\n      set p to e\n    else\n      set p to y\n    \n    for i = x to p, set arr[i] to arr[i] + 1\n  \n  for i = s to e\n    if arr at i is 0 then increment sum\n  \n  print sum and new line\n  \n\n",
        "int minel(vector<int> v, int x) {\n  int l = 11111111;\n  for (int i = 0; i <= x; i++) {\n    if (v[i] < l) { l = v[i]; }\n  }\n  return l;\n}\nint main() {\n  int n, s, e, p;\n  cin >> n >> s >> e;\n  int arr[100] = {0};\n  int sum = 0;\n  int l = -111;\n  for (int i = 1; i < n; i++) {\n    int x, y;\n    cin >> x >> y;\n    if (e <= y) {\n      p = e;\n    } else {\n      p = y;\n    }\n    for (int i = x; i < p; i++) { arr[i] = arr[i] + 1; }\n  }\n  for (int i = s; i < e; i++) {\n    if (arr[i] == 0) { sum++; }\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "create int n, a, b, c, d, ans\ncreate int array dryer of length 101\n\n  read n, a and b\n  while pre decrement n\n    read c and d\n    for i=c to d exclusive, set dryer[i] to 1\n  \n  for i=a to b exclusive\n    if dryer[i] equal to 0, increment ans\n  \n  print ans\n  \n\n",
        "int n, a, b, c, d, ans;\nint dryer[101];\nint main() {\n  cin >> n >> a >> b;\n  while (--n) {\n    cin >> c >> d;\n    for (int i = c; i < d; i++) { dryer[i] = 1; }\n  }\n  for (int i = a; i < b; i++) {\n    if (dryer[i] == 0) { ans++; }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create const int maxn = 100 + 10\nlet bool array mark size of maxn\n\n  let int n\n  read n\n  make ints L and R\n  for i = 0 to n exclusive\n    let ints l and r\n    read l and r\n    if i is greater than 0\n      for j = l to r exclusive, set mark[j] to true\n    else\n      set L to l and R to r\n  \n  make integer ans = 0\n  for i = 0 to maxn exclusive\n    if !mark[i] is truthy and L is less than or equal to i and i is less than R, increment ans\n  print ans\n  \n\n",
        "const int maxn = 100 + 10;\nbool mark[maxn];\nint main() {\n  int n;\n  cin >> n;\n  int L, R;\n  for (int i = 0; i < n; i++) {\n    int l, r;\n    cin >> l >> r;\n    if (i > 0)\n      for (int j = l; j < r; j++) mark[j] = true;\n    else\n      L = l, R = r;\n  }\n  int ans = 0;\n  for (int i = 0; i < maxn; i++)\n    if (!mark[i] && L <= i && i < R) ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  b, a, n, i, c, d, m, j = integers\n  v = integer array of size 110\n  while read n, c, d\n    m = 0\n    for i = 0 to 100, v[i] = 0\n    for i = 0 to n - 1 exclusive\n      read a, b\n      for j = a + 1 to b, v[j] = -1\n    \n    for i = c + 1 to d\n      if v[i] is 0, increment m\n    print m\n  \n  \n\n",
        "int main() {\n  int b, a, n, i, c, d, m, j;\n  int v[110];\n  while (cin >> n >> c >> d) {\n    m = 0;\n    for (i = 0; i < 101; i++) v[i] = 0;\n    for (i = 0; i < n - 1; i++) {\n      cin >> a >> b;\n      for (j = a + 1; j <= b; j++) v[j] = -1;\n    }\n    for (i = c + 1; i <= d; i++)\n      if (v[i] == 0) m++;\n    cout << m << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "N=100011\nuse=array of N bool\n\n  n=int\n  read n\n  l,r=int\n  read l,r\n  for i=1 to n exclusive\n    l,r=int\n    read l,r\n    for j=l to r exclusive use[j]=1\n  \n  ans=0\n  for i=l to r exclusive\n    if use[i] is 0 increment ans\n  print ans\n\n",
        "const int N = 1e5 + 11;\nbool use[N];\nint main() {\n  int n;\n  cin >> n;\n  int l, r;\n  cin >> l >> r;\n  for (int i = 1; i < n; i++) {\n    int l, r;\n    cin >> l >> r;\n    for (int j = l; j < r; j++) use[j] = 1;\n  }\n  int ans = 0;\n  for (int i = l; i < r; i++)\n    if (use[i] == 0) ans++;\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  i = int\n  x = int vector of size n\n  y = int vector of size n\n  z = int vector of size 101 with all values set to 1\n  read n values into x then y\n  k = int\n  for i = 1 to n\n    for j = x[i] to y[i] set z[k] to 0\n  \n  ct = int with ct = 0\n  for i = x[0] to y[0]\n    if z[i] is 1 increment ct\n  \n  print ct\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int i;\n  vector<int> x(n);\n  vector<int> y(n);\n  vector<int> z(101, 1);\n  for (i = 0; i < n; i++) { cin >> x[i] >> y[i]; }\n  int k;\n  for (i = 1; i < n; i++) {\n    for (k = x[i]; k < y[i]; k++) { z[k] = 0; }\n  }\n  int ct = 0;\n  for (i = x[0]; i < y[0]; i++) {\n    if (z[i] == 1) { ct++; }\n  }\n  cout << ct << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n be a integer\n  read n\n  let x, y be integers\n  read x, y\n  let d be a integer with d = y - x\n  a = array of integers of length d\n  for i = 0 to d exclusive , the value of a[i] is equal to 1\n  for i = 0 to n - 1 exclusive\n    let m, n be integers\n    read m, n\n    decrement n by 1\n    for p = m to n inclusive\n      if p >= y or p is less than x, proceed to next\n      the value of a[p - x] is equal to 0\n    \n  \n  let sum be a integer with sum = 0\n  for j = 0 to d exclusive, increment sum by a[j]\n  print sum and newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int x, y;\n  cin >> x >> y;\n  int d = y - x;\n  int a[d];\n  for (int i = 0; i < d; i++) a[i] = 1;\n  for (int i = 0; i < n - 1; i++) {\n    int m, n;\n    cin >> m >> n;\n    n--;\n    for (int p = m; p <= n; p++) {\n      if (p >= y || p < x) continue;\n      a[p - x] = 0;\n    }\n  }\n  int sum = 0;\n  for (int j = 0; j < d; j++) sum += a[j];\n  cout << sum << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create int array v[105]\n\n  create long long n and sum, set sum to 0\n  read n\n  let x and y be int\n  read x, y\n  for i=2 to n inclusive\n    create int a and b\n    read a and b\n    for j= a+1 to b inclusive, set v[j] to 1\n  \n  for i=x+1 to y inclusive, assign sum + 1 - v[i] to sum\n  print sum and a newline\n  \n\n",
        "int v[105];\nint main() {\n  long long n, sum = 0;\n  cin >> n;\n  int x, y;\n  cin >> x >> y;\n  for (int i = 2; i <= n; ++i) {\n    int a, b;\n    cin >> a >> b;\n    for (int j = a + 1; j <= b; ++j) v[j] = 1;\n  }\n  for (int i = x + 1; i <= y; ++i) sum += 1 - v[i];\n  cout << sum << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create int array a of length 105\ncreate integers n, x, y, i, l, r\nlet sum and j be integers\n\n  read n\n  read x and y\n  for i=1 to n exclusive\n    read l and r\n    for j=l to r exclusive, set a[j] to 1\n  \n  assign 0 to sum\n  for i=x to y exclusive\n    if a[i] equal to 0, sum = sum +1\n  \n  print sum\n\n",
        "int a[105];\nint n, x, y, i, l, r;\nint sum, j;\nint main() {\n  cin >> n;\n  cin >> x >> y;\n  for (i = 1; i < n; i++) {\n    cin >> l >> r;\n    for (j = l; j < r; j++) { a[j] = 1; }\n  }\n  sum = 0;\n  for (i = x; i < y; i++) {\n    if (a[i] == 0) sum++;\n  }\n  cout << sum << endl;\n}\n"
    ],
    [
        "\n  n, i, j, sum, alexeyI and alexeyJ are integers with sum = 0\n  create int array dryer with size 101\n  call fill_n(dryer, 101, 1)\n  read n\n  read input to alexeyI and alexeyJ\n  for integer l = 0 to n - 1 exclusive\n    read i and j\n    for k from i to j exclusive, set dryer[k] to 0\n  \n  for k from alexeyI to alexeyJ exclusive, add dryer[k] to sum\n  print sum\n  \n\n",
        "int main() {\n  int n, i, j, sum = 0, alexeyI, alexeyJ;\n  int dryer[101];\n  fill_n(dryer, 101, 1);\n  cin >> n;\n  cin >> alexeyI >> alexeyJ;\n  for (int l = 0; l < n - 1; l++) {\n    cin >> i >> j;\n    for (int k = i; k < j; k++) { dryer[k] = 0; }\n  }\n  for (int k = alexeyI; k < alexeyJ; k++) { sum += dryer[k]; }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "create int array arr with size 1000\n\n  declare integer variable n\n  read n\n  create integers l and r\n  read l and r\n  decrement n by one\n  while n != 0, decrement it and continue the loop\n    create ints x and y\n    read input to x and y\n    for i = y to x exclusive counting down, increment arr[i] by one\n  \n  declare int variable ans = 0\n  for i = r to l exclusive counting down\n    if arr[i] is equal to 0, increment ans by one\n  print ans\n  \n\n",
        "int arr[1000];\nint main() {\n  int n;\n  cin >> n;\n  int l, r;\n  cin >> l >> r;\n  n--;\n  while (n--) {\n    int x, y;\n    cin >> x >> y;\n    for (int i = y; i > x; i--) arr[i]++;\n  }\n  int ans = 0;\n  for (int i = r; i > l; i--)\n    if (arr[i] == 0) ans++;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "in function File\n  call freopen of \"output.txt\", \"w\" and stdout\n  call freopen of \"input.txt\", \"r\" and stdin\n\ndefine empty function fast\npi = const double with pi = 2 * acos of 0.0\nnn = const int with nn = 2e5 + 5\noo = const int with oo = 0x3f3f3f3f\n\n  call fast\n  n, b, e, ans = int with ans = 0\n  arr = int array of size nn\n  read n\n  read b then e\n  for i = 0 to n - 1\n    x, y = int\n    read x then y\n    for j = x to y increment arr[j]\n  \n  for i = b to e\n    if arr8i] is 0 increment ans\n  print ans\n  \n\n",
        "void File() {\n  freopen(\"output.txt\", \"w\", stdout);\n  freopen(\"input.txt\", \"r\", stdin);\n}\nvoid fast() {}\nconst double pi = 2 * acos(0.0);\nconst int nn = 2e5 + 5;\nconst int oo = 0x3f3f3f3f;\nint main() {\n  fast();\n  int n, b, e, ans = 0;\n  int arr[nn] = {};\n  cin >> n;\n  cin >> b >> e;\n  for (int i = 0; i < n - 1; i++) {\n    int x, y;\n    cin >> x >> y;\n    for (int j = x; j < y; j++) arr[j]++;\n  }\n  for (int i = b; i < e; i++)\n    if (!arr[i]) ans++;\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create long longs A, B, ans with ans = -0x7fffffff\ncreate long longs bxb, bex, bob, bpb\n\n  read A read B\n  if B is 0\n    print A * A print newline\n    for i = 0 to A exclusive print \"o\"\n    print newline\n    \n  \n  if B is 1\n    print A * A - 1 print newline\n    for i = 0 to A exclusive, print \"o\"\n    print \"x\" print newline\n    \n  \n  if A is 0\n    print -B * B print newline\n    for i = 0 to B exclusive, print \"x'\n    print newline\n    \n  \n  for xb = 2 to minimum of (B and A + 1) inclusive\n    create integer ob with ob = xb - 1\n    create long long score with score = ob - 1\n    increment score by (A - (ob - 1)) * (A - (ob - 1))\n    end statement\n    create long long pb with pb = B / xb\n    create long long ex with ex = B % xb\n    decrement score by ( xb - ex ) * pb * pb\n    decrement score by ex * ( pb + 1 ) * ( pb + 1 )\n    if score is greater than ans\n      set ans to score\n      set bxb to xb\n      set bex to ex\n      set bob to ob\n      set bpb to pb\n    \n  \n  print ans print newline\n  for i = 0 to bxb exclusive\n    for j = 0 to bpb exclusive, print \"x\"\n    if i is less than bex, print \"x\"\n    if i is 0\n      for j = 0 to A - ( bob - 1 ) exclusive, print \"o\"\n    else if i + 1 is less than bxb\n      print \"o\"\n  \n  print newline\n  \n\n",
        "long long A, B, ans = -0x7fffffff;\nlong long bxb, bex, bob, bpb;\nint main() {\n  cin >> A >> B;\n  if (B == 0) {\n    cout << A * A << endl;\n    for (int i = 0; i < A; i++) cout << \"o\";\n    cout << endl;\n    return 0;\n  }\n  if (B == 1) {\n    cout << A * A - 1 << endl;\n    for (int i = 0; i < A; i++) cout << \"o\";\n    cout << \"x\" << endl;\n    return 0;\n  }\n  if (A == 0) {\n    cout << -B * B << endl;\n    for (int i = 0; i < B; i++) cout << \"x\";\n    cout << endl;\n    return 0;\n  }\n  for (int xb = 2; xb <= min(B, A + 1); xb++) {\n    int ob = xb - 1;\n    long long score = ob - 1;\n    score += (A - (ob - 1)) * (A - (ob - 1));\n    ;\n    long long pb = B / xb;\n    long long ex = B % xb;\n    score -= (xb - ex) * pb * pb;\n    score -= ex * (pb + 1) * (pb + 1);\n    if (score > ans) {\n      ans = score;\n      bxb = xb;\n      bex = ex;\n      bob = ob;\n      bpb = pb;\n    }\n  }\n  cout << ans << endl;\n  for (int i = 0; i < bxb; i++) {\n    for (int j = 0; j < bpb; j++) cout << \"x\";\n    if (i < bex) cout << \"x\";\n    if (i == 0)\n      for (int j = 0; j < A - (bob - 1); j++) cout << \"o\";\n    else if (i + 1 < bxb)\n      cout << \"o\";\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "declare integer variables co and cx\ncreate const long long inf = -1e16\ninlined long long function gox with int argument num\n  return inf if num is greater than cx\n  declare int ex = cx % num\n  declare int variable anch = cx / num\n  declare long long variable ans = 1LL * (anch + 1) * (anch + 1) * ex\n  increase ans by 1LL * anch * anch * (num - ex)\n  return -ans\n\ninlined long long function goo with int argument num\n  if num is greater than co\n  declare int variable juntos = co - num + 1\n  create long long ans = 1LL * juntos * juntos\n  increase ans by num - 1\n  return ans\n\ninlined void function build with int arguments x and o\n  create string s\n  declare integer xx = cx / x\n  create bool flag = true if x > o, else false\n  declare bool variable fst = true\n  create integer ex = cx % x\n  declare integer prim = co - o + 1\n  while either x or o is true\n    if flag is true\n      push 'x' into s xx times\n      if ex is greater than 0, push 'x' into s and decrement ex\n      decrement x\n    else\n      if fst is true\n        push 'o' into s prim times\n        set fst to false\n      else\n        push 'o' into s\n      decrement o\n    \n    invert the value of flag\n  \n  print s\n\n\n  read co and cx\n  if co is 0 or cx is 0\n    if co is greater than 0\n      print 1LL * co * co\n      print 'o' co times\n      print a new line\n    \n    if cx is greater than 0\n      print - 1LL * cx * cx\n      print 'x' cx times\n      print\n    \n    \n  \n  declare int lim = min of co and cx\n  create long long ans = LLONG_MIN\n  pos is a pair of integers\n  for integer i = 1 to lim + 1 exclusive\n    if ans is less than gox(i) + goo(i)\n      assign gox(i) + goo(i) to ans\n      pos = {i, i}\n    \n  \n  for i = 2 to cx + 1 exclusive\n    if ans is less than gox(i) + goo(i - 1)\n      change ans to gox(i) + goo(i - 1)\n      pos = {i, i - 1}\n    \n  \n  for i = 2 to co + 1 exclusive\n    if ans is less than gox(i - 1) + goo(i)\n      set ans to gox(i - 1) + goo(i)\n      pos = {i - 1, i}\n    \n  \n  print ans\n  call build with arguments pos.first and pos.second\n  \n\n",
        "int co, cx;\nconst long long inf = -1e16;\ninline long long gox(int num) {\n  if (num > cx) return inf;\n  int ex = cx % num;\n  int anch = cx / num;\n  long long ans = 1LL * (anch + 1) * (anch + 1) * ex;\n  ans += 1LL * anch * anch * (num - ex);\n  return -ans;\n}\ninline long long goo(int num) {\n  if (num > co) return inf;\n  int juntos = co - num + 1;\n  long long ans = 1LL * juntos * juntos;\n  ans += num - 1;\n  return ans;\n}\ninline void build(int x, int o) {\n  string s;\n  int xx = cx / x;\n  bool flag = (x > o);\n  bool fst = true;\n  int ex = cx % x;\n  int prim = co - o + 1;\n  while (x || o) {\n    if (flag) {\n      for (int i = int(0); i < int(xx); ++i) s.push_back('x');\n      if (ex > 0) s.push_back('x'), ex--;\n      x--;\n    } else {\n      if (fst) {\n        for (int i = int(0); i < int(prim); ++i) s.push_back('o');\n        fst = false;\n      } else\n        s.push_back('o');\n      o--;\n    }\n    flag = (!flag);\n  }\n  cout << s << endl;\n}\nint main() {\n  cin >> co >> cx;\n  if (co == 0 || cx == 0) {\n    if (co > 0) {\n      cout << 1LL * co * co << endl;\n      for (int i = int(0); i < int(co); ++i) cout << 'o';\n      cout << endl;\n    }\n    if (cx > 0) {\n      cout << -1LL * cx * cx << endl;\n      for (int i = int(0); i < int(cx); ++i) cout << 'x';\n      cout << endl;\n    }\n    return 0;\n  }\n  int lim = min(co, cx);\n  long long ans = LLONG_MIN;\n  pair<int, int> pos;\n  for (int i = int(1); i < int(lim + 1); ++i) {\n    if (ans < gox(i) + goo(i)) {\n      ans = gox(i) + goo(i);\n      pos = {i, i};\n    }\n  }\n  for (int i = int(2); i < int(cx + 1); ++i) {\n    if (ans < gox(i) + goo(i - 1)) {\n      ans = gox(i) + goo(i - 1);\n      pos = {i, i - 1};\n    }\n  }\n  for (int i = int(2); i < int(co + 1); ++i) {\n    if (ans < gox(i - 1) + goo(i)) {\n      ans = gox(i - 1) + goo(i);\n      pos = {i - 1, i};\n    }\n  }\n  cout << ans << endl;\n  build(pos.first, pos.second);\n  return 0;\n}\n"
    ],
    [
        "\n  create long long a and b\n  read a,b\n  if a equal to 0\n    print -1 * b * b\n    for i=0 to b exclusive, print x\n    print a newline\n  else if b = 0\n    print a * a\n    for i=0 to a exclusive, print o\n    print a newline\n  else if b equal to 1\n    print a*a -1\n    for i=0 to a exclusive, print o\n    print x\n    print a newline\n  else\n    ser ret to LLONG_MIN\n    set foo=0\n    for j=1 to min of b-1 and a\n      assign (a - j + 1) * (a - j + 1) + (j - 1) to pos\n      set q = b / (j + 1) and r to b % (j + 1)\n      set neg = r * (q + 1) * (q + 1) + (j + 1 - r) * q * q\n      if pos - neg greater than ret\n        ret = pos - neg\n        assign j + 1 to foo\n      \n    \n    print ret\n    set q = b / foo, r = b % foo\n    assign (a - (foo - 1) + 1) to g\n    for j=1 to foo + 1 exclusive\n      for i=0 to q exclusive, print x\n      if <= r, print x\n      if j different from foo\n        if j equal to 1\n          for i=0 to g exclusive, print o\n        else\n          print o\n      \n    \n    print a newline\n  \n  \n\n",
        "int main() {\n  long long a, b;\n  cin >> a >> b;\n  if (a == 0) {\n    cout << -1 * b * b << endl;\n    for (int(i) = (0); (i) < (b); ++(i)) cout << 'x';\n    cout << endl;\n  } else if (b == 0) {\n    cout << a * a << endl;\n    for (int(i) = (0); (i) < (a); ++(i)) cout << 'o';\n    cout << endl;\n  } else if (b == 1) {\n    cout << a * a - 1 << endl;\n    for (int(i) = (0); (i) < (a); ++(i)) cout << 'o';\n    cout << 'x';\n    cout << endl;\n  } else {\n    long long ret = LLONG_MIN;\n    long long foo = 0;\n    for (long long j = 1; j <= min(b - 1, a); j++) {\n      long long pos = (a - j + 1) * (a - j + 1) + (j - 1);\n      long long q = b / (j + 1), r = b % (j + 1);\n      long long neg = r * (q + 1) * (q + 1) + (j + 1 - r) * q * q;\n      if (pos - neg > ret) {\n        ret = pos - neg;\n        foo = j + 1;\n      }\n    }\n    cout << ret << endl;\n    long long q = b / foo, r = b % foo;\n    long long g = (a - (foo - 1) + 1);\n    for (int(j) = (1); (j) < (foo + 1); ++(j)) {\n      for (int(i) = (0); (i) < (q); ++(i)) cout << 'x';\n      if (j <= r) cout << 'x';\n      if (j != foo) {\n        if (j == 1)\n          for (int(i) = (0); (i) < (g); ++(i)) cout << 'o';\n        else\n          cout << 'o';\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer vector v\n\n  create integers n, p, k\n  read n read p read k\n  for x = p - k to p + k inclusive\n    if x is less than 1, break current loop iteration\n    if x is greater than n, break current loop iteration\n    add element x to end of v\n  \n  if v[0] is not 1, print \"<< \"\n  for i = 0 to integer casted size of v exclusive\n    if v[i] is p, print \"(\"\n    print v[i]\n    if v[i] is p, print \")\"\n    if i is integer casted size of v - 1\n      if v[i] is less than n\n        print \" >>\" print newline\n      else\n        print newline\n    else\n      print \" \"\n  \n  \n\n",
        "vector<int> v;\nint main() {\n  int n, p, k;\n  cin >> n >> p >> k;\n  for (int x = p - k; x <= p + k; x++) {\n    if (x < 1) continue;\n    if (x > n) continue;\n    v.push_back(x);\n  }\n  if (v[0] != 1) cout << \"<< \";\n  for (int(i) = (0); (i) < (((int)v.size())); ++(i)) {\n    if (v[i] == p) cout << \"(\";\n    cout << v[i];\n    if (v[i] == p) cout << \")\";\n    if (i == ((int)v.size()) - 1) {\n      if (v[i] < n)\n        cout << \" >>\" << endl;\n      else\n        cout << endl;\n    } else\n      cout << \" \";\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer queue q\ncreate boolean array p with size 10000 with p = {}\ncreate integer pe\ndeclare print with integers c, a, b as arguments, returning void\n  if a is less than c or a is greater than b or p[a] or a is greater than pe or a is less than 1, return from function\n  set p[a] to true\n  run print with c, a - 1, b as arguments\n  add element a to end of q\n  run print with c, a + 1, b as arguments\n\n\n  create integers n, k\n  read pe read n read k\n  if n - k is greater than 1, print \"<< \"\n  run print with n - k, n, n + k as arguments\n  while q is not empty\n    if size of q is not 1 and front of q is not n\n      print front of q print \" \"\n    else if front of q is n\n      print \"(\" print front of q\n      if size of q is not 1\n        print \") \"\n      else\n        print \")\"\n    else\n      print front of q\n    remove element from end of q\n  \n  if n + k is less than pe, print \" >>\"\n  print newline\n\n",
        "queue<int> q;\nbool p[10000] = {};\nint pe;\nvoid print(int c, int a, int b) {\n  if (a < c || a > b || p[a] || a > pe || a < 1) return;\n  p[a] = true;\n  print(c, a - 1, b);\n  q.push(a);\n  print(c, a + 1, b);\n}\nint main() {\n  int n, k;\n  cin >> pe >> n >> k;\n  if (n - k > 1) { cout << \"<< \"; }\n  print(n - k, n, n + k);\n  while (!q.empty()) {\n    if (q.size() != 1 && q.front() != n)\n      cout << q.front() << \" \";\n    else if (q.front() == n) {\n      cout << \"(\" << q.front();\n      if (q.size() != 1) {\n        cout << \") \";\n      } else\n        cout << \")\";\n    } else\n      cout << q.front();\n    q.pop();\n  }\n  if (n + k < pe) { cout << \" >>\"; }\n  cout << endl;\n}\n"
    ],
    [
        "in the function desperate_optimization\n  set format flag ios::fixed of the output\n  set format flag ios::showpoint of the output\n  set output precision to precision\n\n\n  call desperate_optimization(10)\n  let n, p and k be integers\n  read n, p and k\n  if p - k is greater than 1\n  for i = max of 1 and p - k to p exclusive, print i and \" \"\n  print \"(\", p and \")\"\n  for i = p + 1 to min of n and p + k inclusive, print \" \" and i\n  if p + k is less than n, print \" >>\"\n  print '\\n'\n  \n\n",
        "void desperate_optimization(int precision) {\n  cout.setf(ios::fixed);\n  cout.setf(ios::showpoint);\n  cout.precision(precision);\n}\nint main() {\n  desperate_optimization(10);\n  int n, p, k;\n  cin >> n >> p >> k;\n  if (p - k > 1) cout << \"<< \";\n  for (int i = max(1, p - k); i < p; i++) { cout << i << \" \"; }\n  cout << \"(\" << p << \")\";\n  for (int i = p + 1; i <= min(n, p + k); i++) { cout << \" \" << i; }\n  if (p + k < n) cout << \" >>\";\n  cout << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, p, k\n  create booleans start, end with start = 1, end = 0\n  read n read p read k\n  for i = p - k to p + k inclusive\n    if start is true\n      if i is less than or equal to 1\n        if p is 1\n          print \"(\" print 1 print \")\"\n        else\n          print 1\n        set i to 1\n      else\n        print \"<< \" print i\n      set start to 0\n      break current loop iteration\n    \n    if i is greater than or equal to n\n      set end to 1\n      if p is n\n        print \" (\" print n print \")\"\n      else\n        print \" \" print n\n      break loop\n    \n    if i is p\n      print \" (\" print i print \")\"\n    else\n      print \" \" print i\n    \n  \n  if not end print \" >>\"\n  print '\\n'\n\n",
        "int main() {\n  int n, p, k;\n  bool start = 1, end = 0;\n  cin >> n >> p >> k;\n  for (int i = p - k; i <= p + k; i++) {\n    if (start) {\n      if (i <= 1) {\n        if (p == 1)\n          cout << \"(\" << 1 << \")\";\n        else\n          cout << 1;\n        i = 1;\n      } else\n        cout << \"<< \" << i;\n      start = 0;\n      continue;\n    }\n    if (i >= n) {\n      end = 1;\n      if (p == n)\n        cout << \" (\" << n << \")\";\n      else\n        cout << \" \" << n;\n      break;\n    }\n    if (i == p)\n      cout << \" (\" << i << \")\";\n    else {\n      cout << \" \" << i;\n    }\n  }\n  if (!end) cout << \" >>\";\n  cout << '\\n';\n}\n"
    ],
    [
        "pi = const double with pi = 3.14159265359\nMOD = const long long with MOD = 1000 * 1000 * 1000 + 7\nN = const int with N = 200 * 1000 + 10\n\n  a, b = int\n  read a then b\n  aa, bb = int with aa = a * a and bb = b * b\n  as = int vector\n  bs = int vector\n  for i = 1 to aa\n    int sq = sqrt of aa - i * -\n    if sq * sq + i * i is aa then append i to as\n  \n  for i = 1 to bb\n    sq = int with sq = sqrt of bb - i * i\n    if sq * sq + i * i is bb then append i to bs\n  \n  for i = 0 to size of as\n    for j = 0 to size of bs\n      xa = int with xa = as[i]\n      ya = int with ya = sqrt of aa - xa * xa\n      xb = int with xb = bs[j]\n      yb = int with yb = sqrt of bb - xb * xb\n      if (xb - xa) * (xb - xa) + (ya + yb) * (ya + yb) is aa + bb and xb is not xa\n        print \"YES\"\n        print xa and ya\n        print xb and -yb\n        print 0 and 0\n        \n      \n    \n  \n  print \"NO\"\n\n",
        "const double pi = 3.14159265359;\nconst long long MOD = 1000 * 1000 * 1000 + 7;\nconst int N = 200 * 1000 + 10;\nint main() {\n  int a, b;\n  cin >> a >> b;\n  int aa = a * a, bb = b * b;\n  vector<int> as;\n  vector<int> bs;\n  for (int i = 1; i < aa; i++) {\n    int sq = sqrt(aa - i * i);\n    if (sq * sq + i * i == aa) as.push_back(i);\n  }\n  for (int i = 1; i < bb; i++) {\n    int sq = sqrt(bb - i * i);\n    if (sq * sq + i * i == bb) bs.push_back(i);\n  }\n  for (int i = 0; i < as.size(); i++) {\n    for (int j = 0; j < bs.size(); j++) {\n      int xa = as[i];\n      int ya = sqrt(aa - xa * xa);\n      int xb = bs[j];\n      int yb = sqrt(bb - xb * xb);\n      if ((xb - xa) * (xb - xa) + (ya + yb) * (ya + yb) == aa + bb && xb != xa) {\n        cout << \"YES\\n\";\n        cout << xa << \" \" << ya << '\\n';\n        cout << xb << \" \" << -yb << '\\n';\n        cout << 0 << \" \" << 0 << '\\n';\n        return 0;\n      }\n    }\n  }\n  cout << \"NO\\n\";\n}\n"
    ],
    [
        "\n  create integers n and v\n  read n and v\n  a is an array of doubles with size n\n  read n elements into array a\n  declare double called minvalue = INT_MAX\n  b is an array of doubles with size n\n  for integer i = 0 to n exclusive\n    read b[i]\n    assign value of min of minvalue and b[i] to the minvalue\n  \n  l is double = 0\n  let r be double = 1e18\n  answer is double = 0\n  for integer i = 1 to 100 inclusive\n    double mid = (l + (r - l) / 2)\n    sum is double = 0\n    flag is integer = 0\n    for i = 0 to n exclusive\n      set double value to a[i] * mid\n      if value is greater than b[i]\n        set flag to 1\n        break the loop\n      else\n        increase sum by (a[i] * mid)\n    \n    if flag = 1\n      set value of r to mid - 1\n      skip the rest of the loop\n    \n    if sum <= v\n      set answer to sum\n      l = mid + 1\n    else\n      r = mid - 1\n    \n  \n  print setprecision(6), fixed, answer and \"\\n\"\n  \n\n",
        "int main() {\n  int n, v;\n  cin >> n >> v;\n  double a[n];\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  double minvalue = INT_MAX;\n  double b[n];\n  for (int i = 0; i < n; i++) {\n    cin >> b[i];\n    minvalue = min(minvalue, b[i]);\n  }\n  double l = 0;\n  double r = 1e18;\n  double answer = 0;\n  for (int i = 1; i <= 100; i++) {\n    double mid = (l + (r - l) / 2);\n    double sum = 0;\n    int flag = 0;\n    for (int i = 0; i < n; i++) {\n      double value = a[i] * mid;\n      if (value > b[i]) {\n        flag = 1;\n        break;\n      } else\n        sum += (a[i] * mid);\n    }\n    if (flag == 1) {\n      r = mid - 1;\n      continue;\n    }\n    if (sum <= v) {\n      answer = sum;\n      l = mid + 1;\n    } else {\n      r = mid - 1;\n    }\n  }\n  cout << setprecision(6) << fixed << answer << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read input to n\n  let A be integer array with size n\n  read n elements into A\n  create integer ansf = 1\n  create integer j = 0\n  create integer ch = 0\n  create integer max1 = 1\n  create integer x = 1\n  declare integer array dp with size n filled with 0\n  for integer i = 1 to n exclusive incrementing i\n    if A[i] is greater than A[i - 1]\n      change dp[i] to dp[i - 1] + 1\n    else\n      assign 0 to dp[i]\n    \n  \n  loop i from 1 to n exclusive\n    if A[i] is greater than A[i - 1]\n      increment ansf by one\n    else\n      if ch is 0\n        assign A[i] to x\n        assign A[i - 1] + 1 to A[i]\n        change j to i\n        assign 1 to ch\n        increment ansf by one\n      else\n        assign i - j to ansf\n        change A[j] to x\n        if ansf = 1\n          if A[i] is greater than A[i - 1]\n            increment ansf by one\n            change x to A[i - 2]\n            increment ansf by one\n            assign i - 2 to j\n            change A[i - 2] to A[i - 1] - 1\n            if i >= 3 and A[i - 2] > A[i - 3], increase ansf by dp[i - 2]\n          else\n            increment ansf\n            assign A[i - 1] to x\n            assign i - 1 to j\n            change A[i - 1] to A[i] - 1\n            if A[i - 1] is greater than A[i - 2], increase ansf by dp[i - 1]\n          \n        else\n          if A[j] is less than A[j + 1], increment ansf\n          change x to A[i]\n          set j to i\n          change A[i] to A[i - 1] + 1\n        \n      \n    \n    change max1 to max of max1 and ansf\n  \n  print max1 and \"\\n\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int A[n];\n  for (int i = 0; i < n; i++) { cin >> A[i]; }\n  int ansf = 1;\n  int j = 0;\n  int ch = 0;\n  int max1 = 1;\n  int x = 0;\n  int dp[n] = {0};\n  for (int i = 1; i < n; i++) {\n    if (A[i] > A[i - 1]) {\n      dp[i] = dp[i - 1] + 1;\n    } else {\n      dp[i] = 0;\n    }\n  }\n  for (int i = 1; i < n; i++) {\n    if (A[i] > A[i - 1]) {\n      ansf++;\n    } else {\n      if (ch == 0) {\n        x = A[i];\n        A[i] = A[i - 1] + 1;\n        j = i;\n        ch = 1;\n        ansf++;\n      } else {\n        ansf = i - j;\n        A[j] = x;\n        if (ansf == 1) {\n          if (A[i] > A[i - 1]) {\n            ansf++;\n            x = A[i - 2];\n            ansf++;\n            j = i - 2;\n            A[i - 2] = A[i - 1] - 1;\n            if (i >= 3 && A[i - 2] > A[i - 3]) ansf = ansf + dp[i - 2];\n          } else {\n            ansf++;\n            x = A[i - 1];\n            j = i - 1;\n            A[i - 1] = A[i] - 1;\n            if (A[i - 1] > A[i - 2]) ansf = ansf + dp[i - 1];\n          }\n        } else {\n          if (A[j] < A[j + 1]) ansf++;\n          x = A[i];\n          j = i;\n          A[i] = A[i - 1] + 1;\n        }\n      }\n    }\n    max1 = max(max1, ansf);\n  }\n  cout << max1 << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "v = vector array of long long of size 100005\nin the function solve\n  n, x, b, y, ans = long long with x = 0, ans = 0\n  read n\n  a = array of long long of size n\n  for i = 0 to n exclusive\n    read a[i]\n    if i is 0\n      append a[i] in v[x]\n      continue iteration\n    \n    if a[i] <= a[i - 1], increment x\n    append a[i] in v[x]\n  \n  if x is 0\n    print v[0].size()\n    return\n  \n  for i = 0 to x + 1\n    if i is x\n      y = v[i].size() + 1\n    else\n      n = long long with n = v[i].size()\n      m = long long with m = v[i + 1].size()\n      if m is 1\n        y = n + 1;\n      else if n is 1\n        y = m + 1\n      else if v[i + 1][1] - v[i][n - 1] > 1\n        y = n + m\n      else if v[i + 1][0] - v[i][n - 2] > 1\n        y = n + m\n      else\n        y = n + 1\n    \n    ans = max of ans and y\n  \n  print ans\n  return\n\n\n  TESTS = long long with TESTS = 1\n  while postfix decrement TESTS, call solve\n  \n\n",
        "vector<long long> v[100005];\nvoid solve() {\n  long long n, x = 0, b, y, ans = 0;\n  cin >> n;\n  long long a[n];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    if (i == 0) {\n      v[x].push_back(a[i]);\n      continue;\n    }\n    if (a[i] <= a[i - 1]) x++;\n    v[x].push_back(a[i]);\n  }\n  if (x == 0) {\n    cout << v[0].size() << '\\n';\n    return;\n  }\n  for (long long i = 0; i < x + 1; i++) {\n    if (i == x) {\n      y = v[i].size() + 1;\n    } else {\n      long long n = v[i].size();\n      long long m = v[i + 1].size();\n      if (m == 1) {\n        y = n + 1;\n      } else if (n == 1) {\n        y = m + 1;\n      } else if (v[i + 1][1] - v[i][n - 1] > 1) {\n        y = n + m;\n      } else if (v[i + 1][0] - v[i][n - 2] > 1) {\n        y = n + m;\n      } else\n        y = n + 1;\n    }\n    ans = max(ans, y);\n  }\n  cout << ans << '\\n';\n  return;\n}\nint main() {\n  long long TESTS = 1;\n  while (TESTS--) { solve(); }\n  return 0;\n}\n"
    ],
    [
        "create constant integer max4 with max4 = 10004\ncreate constant integer maxx with maxx = 200005\ncreate constant integer max6 with max6 = 1000006\ncreate constant integer lg5 with lg5 = 17\ncreate constant integer INF with INF = 1000000007\ncreate constant long long INFLL with INFLL = 4LL * 1000000000 * 1000000000\ndeclare powmod with integers a, b, mod as arguments, returning integer\n  create integer res with res = 1\n  set a to a % mod\n  for b, setting b to b bitshift right 1\n    if b bitwise and 1, set res to 1LL * res * a % mod\n    set a to 1LL * a * a % mod\n  \n  return res from function\n\ndeclare gcd with integers a, b as arguments, returning integer\n  while b is greater than 0\n    create integer t with t = a % b\n    set a to b, set b to t\n  \n  return a from function\n\ndeclare lcm with integers a, b as arguments, returning integer\n  return ( a / ( result of run gcd with a, b as arguments ) ) * b\n\ndeclare is_prime with integer n as argument, returning integer\n  if n is less than or equal to 1 or n is greater than 3 and ( n % 2 is 0 or n % 3 is 0 ), return 0 from function\n  for i = 5, t = 2 to i * i is less than or equal to n, incrementing i by t, setting t to 6 - t\n    if n % i is 0, return 0 from function\n  return 1 from function\n\ncreate integer n, create integer arrays arr, pref, suff, with arr size maxx, pref size maxx, suff size maxx\n\n  read n\n  if n is 1, return print 1 print '\\n', 0 from function\n  for i = 1 to n inclusive, read arr[i]\n  for i = 1 to n inclusive\n    if arr[i] is greater than arr[i-1]\n      set pref[i] to pref[i-1] + 1\n    else\n      set pref[i] to 1\n    \n  \n  for i = n to 1 inclusive, decrementing i\n    if i is n or arr[i] is less than arr[i+1]\n      set suff[i] to suff[i+1] + 1\n    else\n      set suff[i] to 1\n    \n  \n  create integer res with res = 2\n  for i = 2 to n exclusive\n    if arr[i+1] is greater than arr[i-1] + 1, set res to maximum of ( res and pref[i-1] + suff[i+1] + 1 )\n  \n  for i = 2 to n exclusive, set res to maximum of ( res and maximum of ( pref[i] and suff[i] ) + 1 )\n  print res print '\\n'\n  \n\n",
        "const int max4 = 10004;\nconst int maxx = 200005;\nconst int max6 = 1000006;\nconst int lg5 = 17;\nconst int INF = 1000000007;\nconst long long INFLL = 4LL * 1000000000 * 1000000000;\nint powmod(int a, int b, int mod) {\n  int res = 1;\n  a %= mod;\n  for (; b; b >>= 1) {\n    if (b & 1) { res = 1LL * res * a % mod; }\n    a = 1LL * a * a % mod;\n  }\n  return res;\n}\nint gcd(int a, int b) {\n  while (b > 0) {\n    int t = a % b;\n    a = b, b = t;\n  }\n  return a;\n}\nint lcm(int a, int b) {\n  return (a / gcd(a, b)) * b;\n}\nint is_prime(int n) {\n  if (n <= 1 || n > 3 && (n % 2 == 0 || n % 3 == 0)) return 0;\n  for (int i = 5, t = 2; i * i <= n; i += t, t = 6 - t)\n    if (n % i == 0) return 0;\n  return 1;\n}\nint n, arr[maxx], pref[maxx], suff[maxx];\nint main() {\n  cin >> n;\n  if (n == 1) { return cout << 1 << '\\n', 0; }\n  for (int i = 1; i <= n; i++) { cin >> arr[i]; }\n  for (int i = 1; i <= n; i++) {\n    if (arr[i] > arr[i - 1]) {\n      pref[i] = pref[i - 1] + 1;\n    } else {\n      pref[i] = 1;\n    }\n  }\n  for (int i = n; i >= 1; i--) {\n    if (i == n || arr[i] < arr[i + 1]) {\n      suff[i] = suff[i + 1] + 1;\n    } else {\n      suff[i] = 1;\n    }\n  }\n  int res = 2;\n  for (int i = 2; i < n; i++) {\n    if (arr[i + 1] > arr[i - 1] + 1) { res = max(res, pref[i - 1] + suff[i + 1] + 1); }\n  }\n  for (int i = 2; i < n; i++) { res = max(res, max(pref[i], suff[i]) + 1); }\n  cout << res << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create const long long inf = 1e9 + 7\n\n  declare integer n\n  read from the input to n\n  create long long ans = 0 and long long arrays a, left and right with size n + 2\n  change a[0] to - 1\n  assign inf to a[n + 1]\n  loop i from 1 to n inclusive incrementing i\n  set right[0] to 0\n  loop i from 1 to n inclusive, change right[i] to right[i - 1] + 1 if a[i] > a[i - 1], or else 1\n  set left[n + 1] to 0\n  loop i from n to 0 inclusive decrementing i, change left[i] to left[i + 1] + 1 if a[i] < a[i + 1], or else 1\n  loop i from 1 to n inclusive\n    if a[i - 1] + 1 is less than a[i+1]\n      set ans to max of ans and 1 + left[i + 1] + right[i - 1]\n    else\n      set ans to max of ans and (max of left[i] and right[i] + 1)\n  \n  print ans\n\n",
        "const long long inf = 1e9 + 7;\nint main() {\n  int n;\n  cin >> n;\n  long long a[n + 2], left[n + 2], right[n + 2], ans = 0;\n  a[0] = -1;\n  a[n + 1] = inf;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  right[0] = 0;\n  for (int i = 1; i <= n; i++) right[i] = (a[i] > a[i - 1] ? right[i - 1] + 1 : 1);\n  left[n + 1] = 0;\n  for (int i = n; i > 0; i--) left[i] = (a[i] < a[i + 1] ? left[i + 1] + 1 : 1);\n  for (int i = 1; i <= n; i++) {\n    if (a[i - 1] + 1 < a[i + 1])\n      ans = max(ans, 1 + left[i + 1] + right[i - 1]);\n    else\n      ans = max(ans, max(left[i], right[i]) + 1);\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "maxn = const integer with maxn = 100005\nINF = const integer with INF = 0x3fffffff\neps = double with eps = 1e-8\npi = double with pi = acos of -1\nf = integer array of size maxn\ng = integer array of size maxn\na = integer array of size maxn\nn = integer\n\n  read n\n  for i = 1 to n, read a[i]\n  for i = 1 to n\n    if a[i] > a[i - 1]\n      f[i] = f[i - 1] + 1\n    else\n      f[i] = 1\n  \n  for i = n down to 1\n    if a[i] < a[i + 1]\n      g[i] = g[i + 1] + 1\n    else\n      g[i] = 1\n  \n  ans = integer with ans = 0\n  for i = 1 to n\n    if a[i + 1] - a[i - 1] > 1\n      ans = max of ans and f[i - 1] + g[i + 1] + 1\n    else\n      ans = max of ans and max(f[i - 1] + 1, g[i + 1] + 1)\n    \n  \n  print ans\n\n",
        "const int maxn = 100005;\nconst int INF = 0x3fffffff;\ndouble eps = 1e-8;\ndouble pi = acos(-1);\nint f[maxn];\nint g[maxn];\nint a[maxn];\nint n;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = 1; i <= n; i++) {\n    if (a[i] > a[i - 1])\n      f[i] = f[i - 1] + 1;\n    else\n      f[i] = 1;\n  }\n  for (int i = n; i >= 1; i--) {\n    if (a[i] < a[i + 1])\n      g[i] = g[i + 1] + 1;\n    else\n      g[i] = 1;\n  }\n  int ans = 0;\n  for (int i = 1; i <= n; i++) {\n    if (a[i + 1] - a[i - 1] > 1) {\n      ans = max(ans, f[i - 1] + g[i + 1] + 1);\n    } else {\n      ans = max(ans, max(f[i - 1] + 1, g[i + 1] + 1));\n    }\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "a, dp1, dp2 = int array of size 100005 each\n\n  n = int\n  read n\n  for i = 1 to n inclusive read a[i]\n  set a[0] to 0x3f3f3f3f\n  set a[n + 1] to 0x3f3f3f3f\n  ans = int with ans = 0\n  for i = 1 to n inclusive set dp1[i] and dp2[i] to 1\n  for i = 1 to n inclusive\n    if a[i] is greater than a[i - 1] then set dp1[i] to dp1[i - 1] + 1\n    set ans to max of ans and dp1[i]\n  \n  for i = n to 0 decrementing i\n    if a[i] is less than a[i + 1] then set dp2[i] to dp2[i + 1] + 1\n    set ans to max of ans and dp2[i]\n  \n  for i = 2 to n inclusive set ans to max of ans and dp2[i] + 1\n  for i = 1 to n set ans to max of ans and dp1[i] + 1\n  for i = 2 to n\n    if a[i + 1] - a[i - 1] is greater than 1 then set ans to max of ans and dp2[i + 1] + dp1[i - 1] + 1\n  \n  print ans\n  \n\n",
        "int a[100005], dp1[100005], dp2[100005];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) { cin >> a[i]; }\n  a[0] = 0x3f3f3f3f;\n  a[n + 1] = 0x3f3f3f3f;\n  int ans = 0;\n  for (int i = 1; i <= n; i++) { dp1[i] = dp2[i] = 1; }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] > a[i - 1]) { dp1[i] = dp1[i - 1] + 1; }\n    ans = max(ans, dp1[i]);\n  }\n  for (int i = n; i > 0; i--) {\n    if (a[i] < a[i + 1]) { dp2[i] = dp2[i + 1] + 1; }\n    ans = max(ans, dp2[i]);\n  }\n  for (int i = 2; i <= n; i++) { ans = max(ans, dp2[i] + 1); }\n  for (int i = 1; i < n; i++) { ans = max(ans, dp1[i] + 1); }\n  for (int i = 2; i < n; i++) {\n    if (a[i + 1] - a[i - 1] > 1) { ans = max(ans, dp2[i + 1] + dp1[i - 1] + 1); }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a,n,b,c=int\n  s=array of 8 char\n  w=array of 8 char filled with \"jolteon\", q=array of 8 char filled with \"flareon\"\n  v=array of 8 char filled with \"umbreon\", z=array of 8 char filled with \"leafeon\", l=array of 8 char filled with \"glaceeon\", m=array of 8 char filled with \"sylveon\"\n  read n\n  read s\n  if n is 8\n    print \"vaporeon\"\n  else if n is 6\n    print \"espeon\"\n  else\n    a=0\n    b=0\n    c=0\n    d=0\n    e=0\n    f=0\n    for i=0 to 8 exclusive\n      if s[i] is w[i] increment a\n    \n    for i=0 to 8 exclusive\n      if s[i] is q[i] increment b\n    \n    for i=0 to 8 exclusive\n      if s[i] is v[i] increment c\n    \n    for i=0 to 8 exclusive\n      if s[i] is z[i] increment d\n    \n    for i=0 to 8 exclusive\n      if s[i] is l[i] increment e\n    \n    for i=0 to 8 exclusive\n      if s[i] is m[i] increment f\n    \n    if a>b and a>c and a>d and a>e and a>f\n      print \"jolteon\"\n    if b>a and b>c and b>d and b>e and b>f\n      print \"flareon\"\n    if c>a and c>b and c>d and c>e and c>f\n      print \"umbreon\"\n    if d>a and d>b and d>c and d>e and d>f\n      print \"leafeon\"\n    if e>a and e>b and e>c and e>d and e>f\n      print \"glaceon\"\n    if f>a and f>b and f>c and f>d and f>e\n      print \"sylveon\"\n    \n  \n  \n\n",
        "int main() {\n  int a, n, b, c;\n  char s[8];\n  char w[8] = \"jolteon\", q[8] = \"flareon\";\n  char v[8] = \"umbreon\", z[8] = \"leafeon\", l[8] = \"glaceon\", m[8] = \"sylveon\";\n  cin >> n;\n  cin >> s;\n  if (n == 8) {\n    cout << \"vaporeon\" << endl;\n  } else if (n == 6) {\n    cout << \"espeon\" << endl;\n  } else {\n    a = 0;\n    b = 0;\n    c = 0;\n    int d = 0;\n    int e = 0;\n    int f = 0;\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == w[i]) { a++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == q[i]) { b++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == v[i]) { c++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == z[i]) { d++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == l[i]) { e++; }\n    }\n    for (int i = 0; i < 8; i++) {\n      if (s[i] == m[i]) { f++; }\n    }\n    if (a > b && a > c && a > d && a > e && a > f) {\n      cout << \"jolteon\" << endl;\n    } else if (b > a && b > c && b > d && b > e && b > f) {\n      cout << \"flareon\" << endl;\n    } else if (c > a && c > b && c > d && c > e && c > f) {\n      cout << \"umbreon\" << endl;\n    } else if (d > a && d > c && d > b && d > e && d > f) {\n      cout << \"leafeon\" << endl;\n    } else if (e > a && e > c && e > d && e > b && e > f) {\n      cout << \"glaceon\" << endl;\n    } else if (f > a && f > c && f > d && f > e && f > b) {\n      cout << \"sylveon\" << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create pair of integer, integer array par with size 10001\ncreate string set str\n\n  create string s\n  create integers n, i\n  read n read s\n  if n is 8\n    print \"vaporeon\" print newline\n  else if n is 6\n    print \"espeon\" print newline\n  else if n is 7\n    if s[0] is '.'\n      if s[1] is 'o'\n        print \"jolteon\" print newline\n        \n      \n      if s[1] is 'm'\n        print \"umbreon\" print newline\n        \n      \n      if s[1] is 'e'\n        print \"leafeon\" print newline\n        \n      \n      if s[1] is 'y'\n        print \"sylveon\" print newline\n        \n      \n      if s[1] is 'l'\n        if s[3] is 'r'\n          print \"flareon\" print newline\n          \n        else\n          print \"glaceon\" print newline\n          \n        \n      \n      if s[1] is '.'\n        if s[2] is 'b'\n          print \"umbreon\" print newline\n          \n        \n        if s[2] is 'l'\n          if s[3] is 't'\n            print \"jolteon\" print newline\n            \n          else\n            print \"sylveon\" print newline\n            \n          \n        \n        if s[2] is 'a'\n          if s[3] is 'r'\n            print \"flareon\" print newline\n            \n          \n          if s[3] is 'c'\n            print \"glaceon\" print newline\n            \n          else\n            print \"leafeon\" print newline\n            \n          \n        \n        if s[2] is '.'\n          if s[3] is 'r'\n            print \"flareon\" print newline\n            \n          \n          if s[3] is 'c'\n            print \"glaceon\" print newline\n            \n          \n          if s[3] is 'f'\n            print \"leafeon\" print newline\n            \n          \n          if s[3] is 't'\n            print \"jolteon\" print newline\n            \n          \n          if s[3] is 'v'\n            print \"sylveon\" print newline\n            \n          else\n            print \"umbreon\" print newline\n            \n          \n        \n      \n    \n    if s[0] is 'j'\n      print \"jolteon\" print newline\n      \n    \n    if s[0] is 'f'\n      print 'flareon\" print newline\n      \n    \n    if s[0] is 'u'\n      print \"umbreon\" print newline\n      \n    \n    if s[0] is 'l'\n      print \"leafeon\" print newline\n      \n    \n    if s[0] is 'g'\n      print \"glaceon\" print newline\n      \n    \n    if s[0] is 's'\n      print \"sylveon\" print newline\n      \n    \n  \n  \n\n",
        "pair<int, int> par[10001];\nset<string> str;\nint main() {\n  string s;\n  int n, i;\n  cin >> n >> s;\n  if (n == 8)\n    cout << \"vaporeon\" << endl;\n  else if (n == 6)\n    cout << \"espeon\" << endl;\n  else if (n == 7) {\n    if (s[0] == '.') {\n      if (s[1] == 'o') {\n        cout << \"jolteon\" << endl;\n        return 0;\n      }\n      if (s[1] == 'm') {\n        cout << \"umbreon\" << endl;\n        return 0;\n      }\n      if (s[1] == 'e') {\n        cout << \"leafeon\" << endl;\n        return 0;\n      }\n      if (s[1] == 'y') {\n        cout << \"sylveon\" << endl;\n        return 0;\n      }\n      if (s[1] == 'l') {\n        if (s[3] == 'r') {\n          cout << \"flareon\" << endl;\n          return 0;\n        } else {\n          cout << \"glaceon\" << endl;\n          return 0;\n        }\n      }\n      if (s[1] == '.') {\n        if (s[2] == 'b') {\n          cout << \"umbreon\" << endl;\n          return 0;\n        }\n        if (s[2] == 'l') {\n          if (s[3] == 't') {\n            cout << \"jolteon\" << endl;\n            return 0;\n          } else {\n            cout << \"sylveon\" << endl;\n            return 0;\n          }\n        }\n        if (s[2] == 'a') {\n          if (s[3] == 'r') {\n            cout << \"flareon\" << endl;\n            return 0;\n          }\n          if (s[3] == 'c') {\n            cout << \"glaceon\" << endl;\n            return 0;\n          } else {\n            cout << \"leafeon\" << endl;\n            return 0;\n          }\n        }\n        if (s[2] == '.') {\n          if (s[3] == 'r') {\n            cout << \"flareon\" << endl;\n            return 0;\n          }\n          if (s[3] == 'c') {\n            cout << \"glaceon\" << endl;\n            return 0;\n          }\n          if (s[3] == 'f') {\n            cout << \"leafeon\" << endl;\n            return 0;\n          }\n          if (s[3] == 't') {\n            cout << \"jolteon\" << endl;\n            return 0;\n          }\n          if (s[3] == 'v') {\n            cout << \"sylveon\" << endl;\n            return 0;\n          } else {\n            cout << \"umbreon\" << endl;\n            return 0;\n          }\n        }\n      }\n    }\n    if (s[0] == 'j') {\n      cout << \"jolteon\" << endl;\n      return 0;\n    }\n    if (s[0] == 'f') {\n      cout << \"flareon\" << endl;\n      return 0;\n    }\n    if (s[0] == 'u') {\n      cout << \"umbreon\" << endl;\n      return 0;\n    }\n    if (s[0] == 'l') {\n      cout << \"leafeon\" << endl;\n      return 0;\n    }\n    if (s[0] == 'g') {\n      cout << \"glaceon\" << endl;\n      return 0;\n    }\n    if (s[0] == 's') {\n      cout << \"sylveon\" << endl;\n      return 0;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  str = string array of size 12\n  n, i, j, ck = int\n  read n then str[0]\n  set str[1] to \"vaporeon\"\n  set str[2] to \"jolteon\"\n  set str[3] to \"flareon\"\n  set str[4] to \"espeon\"\n  set str[5] to \"umbreon\"\n  set str[6] to \"leafeon\"\n  set str[7] to \"glaceon\"\n  set str[8] to \"sylveon\"\n  for i = 1 to 8 inclusive\n    if size of str[i] is n\n      set ck to 1\n      for j = 0 to n\n        if str[0][j] >= 'a' and str[0][j] <= 'z'\n          if str[0][j] is not str[i][j]\n            set ck to 0\n            break\n          \n        \n      \n      if ck is 1\n        print str[i]\n        \n      \n    \n  \n  print newline\n  \n\n",
        "int main() {\n  string str[12];\n  int n, i, j, ck;\n  cin >> n >> str[0];\n  str[1] = \"vaporeon\";\n  str[2] = \"jolteon\";\n  str[3] = \"flareon\";\n  str[4] = \"espeon\";\n  str[5] = \"umbreon\";\n  str[6] = \"leafeon\";\n  str[7] = \"glaceon\";\n  str[8] = \"sylveon\";\n  for (i = 1; i <= 8; i++) {\n    if (str[i].size() == n) {\n      ck = 1;\n      for (j = 0; j < n; j++) {\n        if (str[0][j] >= 'a' && str[0][j] <= 'z') {\n          if (str[0][j] != str[i][j]) {\n            ck = 0;\n            break;\n          }\n        }\n      }\n      if (ck == 1) {\n        cout << str[i] << endl;\n        return 0;\n      }\n    }\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer N\n  create string jolteon with jolteon = \"jolteaon\"\n  create integer jol with jol = 0\n  create string flareon with flareon = \"flareon\"\n  create integer fla with fla = 0\n  create string umbreon with umbreon = \"umbreon\"\n  create integer umb with umb = 0\n  create string leafeon with leafeon = \"leafeon\"\n  create integer leaf with leaf = 0\n  create string glaceon with glaceon = \"glaceon\"\n  create integer gla with gla = 0\n  create string sylveon with sylveon = \"sylveon\"\n  create integer syl with syl = 0\n  create string eevee\n  read N\n  read eevee\n  if N is 8\n    print \"vaporeon\\n\"\n  else if N is 6\n    print \"espeon\\n\"\n  else\n    for x = 0 to N exclusive\n      if eevee[x] is not '.'\n        iif eevee[x] is flareon[x] and fla is 0\n          if x is not 2, set leaf to 1\n          set jol to 1\n          set syl to 1\n          set umb to 1\n          if x is not 1 and x is not 2, set gla to 1\n        \n        if eevee[x] is glaceon[x] and gla is 0\n          if x is not 2, set leaf to 1\n          set jol to 1\n          set syl to 1\n          set umb to 1\n          if x is not 1 and x is not 2, set fla to 1\n        \n        if eevee[x] is leafeon[x] and leaf is 0\n          if x is not 2\n            set fla to 1\n            set gla to 1\n          \n          set jol to 1\n          set syl to 1\n          set umb to 1\n        \n        if eevee[x] is jolteon[x] and jol is 0\n          set leaf to 1\n          set fla to 1\n          if x is not 2, set syl to 1\n          set umb to 1\n          set gla to 1\n        \n        if eevee[x] is umbreon[x] and umb is 0\n          set leaf to 1\n          set jol to 1\n          set syl to 1\n          set fla to 1\n          set gla to 1\n        \n        if eevee[x] is sylveon[x] and syl is 0\n          set leaf to 1\n          set fla to 1\n          if x is not 2, set jol to 1\n          set umb to 1\n          set gla to 1\n        \n        if syl + leaf + jol + umb + gla + fla is 5\n          if syl is 0, print sylveon print \"\\n\"\n          if gla is 0, print glaceon print \"\\n\"\n          if fla is 0, print flareon print \"\\n\"\n          if jol is 0, print jolteon print \"\\n\"\n          if umb is 0 print umbreon print \"\\n\"\n          if leaf is 0 print leafon print \"\\n\"\n          break loop\n        \n      \n    \n  \n\n",
        "int main() {\n  int N;\n  string jolteon = \"jolteon\";\n  int jol = 0;\n  string flareon = \"flareon\";\n  int fla = 0;\n  string umbreon = \"umbreon\";\n  int umb = 0;\n  string leafeon = \"leafeon\";\n  int leaf = 0;\n  string glaceon = \"glaceon\";\n  int gla = 0;\n  string sylveon = \"sylveon\";\n  int syl = 0;\n  string eevee;\n  cin >> N;\n  cin >> eevee;\n  if (N == 8) {\n    cout << \"vaporeon\\n\";\n  } else if (N == 6) {\n    cout << \"espeon\\n\";\n  } else {\n    for (int x = 0; x < N; x++) {\n      if (eevee[x] != '.') {\n        if (eevee[x] == flareon[x] && fla == 0) {\n          if (x != 2) { leaf = 1; }\n          jol = 1;\n          syl = 1;\n          umb = 1;\n          if (x != 1 && x != 2) { gla = 1; }\n        }\n        if (eevee[x] == glaceon[x] && gla == 0) {\n          if (x != 2) { leaf = 1; }\n          jol = 1;\n          syl = 1;\n          umb = 1;\n          if (x != 1 && x != 2) { fla = 1; }\n        }\n        if (eevee[x] == leafeon[x] && leaf == 0) {\n          if (x != 2) {\n            fla = 1;\n            gla = 1;\n          }\n          jol = 1;\n          syl = 1;\n          umb = 1;\n        }\n        if (eevee[x] == jolteon[x] && jol == 0) {\n          leaf = 1;\n          fla = 1;\n          if (x != 2) { syl = 1; }\n          umb = 1;\n          gla = 1;\n        }\n        if (eevee[x] == umbreon[x] && umb == 0) {\n          leaf = 1;\n          jol = 1;\n          syl = 1;\n          fla = 1;\n          gla = 1;\n        }\n        if (eevee[x] == sylveon[x] && syl == 0) {\n          leaf = 1;\n          fla = 1;\n          if (x != 2) { jol = 1; }\n          umb = 1;\n          gla = 1;\n        }\n        if (syl + leaf + jol + umb + gla + fla == 5) {\n          if (syl == 0) { cout << sylveon << \"\\n\"; }\n          if (gla == 0) { cout << glaceon << \"\\n\"; }\n          if (fla == 0) { cout << flareon << \"\\n\"; }\n          if (jol == 0) { cout << jolteon << \"\\n\"; }\n          if (umb == 0) { cout << umbreon << \"\\n\"; }\n          if (leaf == 0) { cout << leafeon << \"\\n\"; }\n          break;\n        }\n      }\n    }\n  }\n}\n"
    ],
    [
        "\n  let n be an integer\n  read n\n  define n number of pair pr with two integer elements\n  for i= 0 to n exclusive , read\n  sort pr, pr+n\n  for j=0 to n-1 (exclusive)\n    if first element of jth pair is less than j+1 th pair , and second element of jth pair is greater than j+1th pair, do the following\n      print Happy Alex and a new line\n      \n    \n  \n  print Poor Alex and a new line\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  pair<int, int> pr[n];\n  for (int i = 0; i < n; i++) { cin >> pr[i].first >> pr[i].second; }\n  sort(pr, pr + n);\n  for (int j = 0; j < n - 1; j++) {\n    if (pr[j].first < pr[j + 1].first && pr[j].second > pr[j + 1].second) {\n      cout << \"Happy Alex\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  t, a, b, h, p = int with h = 0 and p = 0\n  read t\n  loop t times\n    read a then b\n    if a is not equal to b increment p\n  \n  if p is not equal 0\n    print \"Happy Alex\"\n  else\n    print \"Poor Alex\"\n  \n\n",
        "int main() {\n  int t, a, b, h = 0, p = 0;\n  cin >> t;\n  while (t--) {\n    cin >> a >> b;\n    if (a != b) p++;\n  }\n  if (p != 0)\n    cout << \"Happy Alex\" << endl;\n  else\n    cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  create doubles x and y\n  create double z\n  double pointer *arr points to new array of doubles with size n\n  for i = 0 to n exclusive\n    read x and y\n    declare double variable q = x + (y / 100000)\n    set value of arr[i] to q\n  \n  sort arr\n  for integer i = 0 to n - 1 exclusive\n    if arr[i] != arr[i + 1]\n      if arr[i + 1] - arr[i] is less than 1\n        print \"Happy Alex\"\n        \n      \n    \n  \n  print \"Poor Alex\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  double x, y;\n  double z;\n  double *arr = new double[n];\n  for (int i = 0; i < n; i++) {\n    cin >> x >> y;\n    double q = x + (y / 100000);\n    arr[i] = q;\n  }\n  sort(arr, arr + n);\n  for (int i = 0; i < n - 1; i++) {\n    if (int(arr[i]) != int(arr[i + 1])) {\n      if (arr[i + 1] - arr[i] < 1) {\n        cout << \"Happy Alex\" << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  count, i, j, n = int with count = 0 and a, b = int array of size 100001 each\n  read n\n  read n values into a then b\n  for j = 0 to n\n    if a[j] is not b[j]\n      print \"Happy Alex\"\n      set count to 1\n      break loop\n    \n  \n  if count is 0 then print \"Poor Alex\"\n  \n\n",
        "int main() {\n  int a[100001], b[100001], count = 0, i, j, n;\n  cin >> n;\n  for (i = 0; i < n; i++) { cin >> a[i] >> b[i]; }\n  for (j = 0; j < n; j++) {\n    if (a[j] != b[j]) {\n      cout << \"Happy Alex\" << endl;\n      count = 1;\n      break;\n    }\n  }\n  if (count == 0) cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create pair array of integer, integer pr with size n\n  for i = 0 to n exclusive, read first element of pr[i] read second element of pr[i]\n  sort elements from pr to pr + n\n  for j = 0 to n - 1 exclusive\n    if first element of pr[j] is less than first element of pr[j+1] and second element of pr[j] is greater than second element of pr[j+1]\n      print \"Happy Alex\" print newline\n      \n    \n  \n  print \"Poor Alex\" print newline\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  pair<int, int> pr[n];\n  for (int i = 0; i < n; i++) { cin >> pr[i].first >> pr[i].second; }\n  sort(pr, pr + n);\n  for (int j = 0; j < n - 1; j++) {\n    if (pr[j].first < pr[j + 1].first && pr[j].second > pr[j + 1].second) {\n      cout << \"Happy Alex\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variables n, a and b\n  read input to n\n  for integer i = 1 to n inclusive\n    read a and b\n    if a != b\n      print \"Happy Alex\"\n      \n    \n  \n  print \"Poor Alex\"\n  \n\n",
        "int main() {\n  int n, a, b;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a >> b;\n    if (a != b) {\n      cout << \"Happy Alex\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Poor Alex\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer MAXN with MAXN = 100000 + 10\ncreate constant long double eps with eps = 1e-10\ncreate integer array cnt with size MAXN\ndeclare check with integer n as argument, returning integer\n  for i = 0 to i + 2 is less than n, incrementing i\n    if cnt[i] is 0, break current loop iteration\n    if cnt[i] is greater than or equal to 2 and cnt[i+1] is greater than or equal to 0, return 1 from function\n    if cnt[i] is less than or equal to -2 and cnt[i+1] is less than or equal to 0, return -1 from function\n    increment cnt[i+1] by cnt[i]\n    increment cnt[i+2] by cnt[i]\n  \n  create long double p with p = square root of (long double casted 5) + 1\n  set p to p / 2\n  create long double ret with ret = p * cnt[n - 2] + cnt[n - 1]\n  if absolute value of ret is less than eps, return 0 from function\n  if ret is greater than 0, return 1 from function\n  return -1 from function\n\n\n  create strings s1, s2\n  read s1 read s2\n  create integer n with n = maximum of size of s1 and size of s2\n  if size of s1 is less than n, set s1 to string initialized with ( n - size of s1, '0' ) + s1\n  if size of s2 is less than n, set s2 to string initialized with ( n - size of s2, '0' ) + s2\n  for i = 0 to n exclusive\n    create integer a with a = s1[i] - '0'\n    create integer b with b = s2[i] - '0'\n    set cnt[i] to a - b\n  \n  create integer ret with ret = result of run check with n as argument\n  if ret is 0\n    print \"=\" print newline\n  else if ret is -1\n    print \"<\" print newline\n  else\n    print \">\" print newline\n  \n\n",
        "const int MAXN = 100000 + 10;\nconst long double eps = 1e-10;\nint cnt[MAXN];\nint check(int n) {\n  for (int i = 0; i + 2 < n; i++) {\n    if (cnt[i] == 0) continue;\n    if (cnt[i] >= 2 && cnt[i + 1] >= 0) return 1;\n    if (cnt[i] <= -2 && cnt[i + 1] <= 0) return -1;\n    cnt[i + 1] += cnt[i];\n    cnt[i + 2] += cnt[i];\n  }\n  long double p = sqrt((long double)5) + 1;\n  p /= 2;\n  long double ret = p * cnt[n - 2] + cnt[n - 1];\n  if (fabs(ret) < eps) return 0;\n  if (ret > 0) return 1;\n  return -1;\n}\nint main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  int n = max(s1.size(), s2.size());\n  if (s1.size() < n) s1 = string(n - s1.size(), '0') + s1;\n  if (s2.size() < n) s2 = string(n - s2.size(), '0') + s2;\n  for (int i = 0; i < n; i++) {\n    int a = s1[i] - '0';\n    int b = s2[i] - '0';\n    cnt[i] = a - b;\n  }\n  int ret = check(n);\n  if (ret == 0)\n    cout << \"=\" << endl;\n  else if (ret == -1)\n    cout << \"<\" << endl;\n  else\n    cout << \">\" << endl;\n  return 0;\n}\n"
    ],
    [
        "s1, s2 = string\n\n  read a line into s1 using cin\n  read a line into s2 using cin\n  sz1 = int with sz1 = size of s1\n  sz2 = int with sz2 = size of s2\n  swaped = bool with swaped = false\n  if sz1 is less than sz2\n    call swap on s1 and s2\n    call swap on sz1 and sz2\n    set swaped to true\n  \n  if sz1 is greater than sz2\n    aux = string with aux = \"\"\n    for i = 1 to sz1 - sz2 inclusive append \"0\" to aux\n    prepend aux to s2\n  \n  prepend \"0\" to s1\n  prepend \"0\" to s2\n  increment sz1\n  for i = 1 to sz1 - 1\n    if s1[i] and s1[i + 1] are both '1'\n      set s1[i - 1] to '1'\n      set s1[i] to '0'\n      set s1[i + 1] to '0'\n      j = int with j = i - 2\n      loop while j is greater than 0 and s1[j] is '1'\n        set s1[j - 1] to '1'\n        set s1[j] to '0'\n        set s1[j + 1] to '0'\n        decrement j by 2\n      \n    \n    if s2[i] and s2[i + 1] are both '1'\n      set s2[i - 1] to '1'\n      set s2[i] to '0'\n      set s2[i + 1] to '0'\n      j = int with j = i - 2\n      loop while j is greater than 0 and s2[j] is '1'\n        set s2[j - 1] to '1'\n        set s2[j] to '0'\n        set s2[j + 1] to '0'\n        decrement j by 2\n      \n    \n  \n  for i = 0 to sz1\n    if s1[i] is greater than s2[i]\n      if swaped is false\n        print '>'\n      else\n        print '<'\n      \n      \n    if s18i] is less than s2[i]\n      if swaped is false\n        print '<'\n      else\n        print '>'\n      \n      \n    \n  \n  print '='\n  \n\n",
        "string s1, s2;\nint main() {\n  getline(cin, s1);\n  getline(cin, s2);\n  int sz1 = s1.size();\n  int sz2 = s2.size();\n  bool swaped = 0;\n  if (sz1 < sz2) {\n    swap(s1, s2);\n    swap(sz1, sz2);\n    swaped = 1;\n  }\n  if (sz1 > sz2) {\n    string aux = \"\";\n    for (int i = 1; i + sz2 <= sz1; ++i) { aux += \"0\"; }\n    s2 = aux + s2;\n  }\n  s1 = \"0\" + s1;\n  s2 = \"0\" + s2;\n  sz1++;\n  for (int i = 1; i + 1 < sz1; ++i) {\n    if (s1[i] == '1' and s1[i + 1] == '1') {\n      s1[i - 1] = '1';\n      s1[i] = '0';\n      s1[i + 1] = '0';\n      int j = i - 2;\n      while (j - 1 >= 0 and s1[j] == '1') {\n        s1[j - 1] = '1';\n        s1[j] = '0';\n        s1[j + 1] = '0';\n        j -= 2;\n      }\n    }\n    if (s2[i] == '1' and s2[i + 1] == '1') {\n      s2[i - 1] = '1';\n      s2[i] = '0';\n      s2[i + 1] = '0';\n      int j = i - 2;\n      while (j - 1 >= 0 and s2[j] == '1') {\n        s2[j - 1] = '1';\n        s2[j] = '0';\n        s2[j + 1] = '0';\n        j -= 2;\n      }\n    }\n  }\n  for (int i = 0; i < sz1; ++i) {\n    if (s1[i] > s2[i]) {\n      if (!swaped) {\n        cout << '>' << '\\n';\n      } else {\n        cout << '<' << '\\n';\n      }\n      return 0;\n    } else if (s1[i] < s2[i]) {\n      if (!swaped) {\n        cout << '<' << '\\n';\n      } else {\n        cout << '>' << '\\n';\n      }\n      return 0;\n    }\n  }\n  cout << '=' << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create constant double PI with PI = 3.14159265358979323846264338327\n\n  create strings a, b\n  read a read b\n  create integer vectors a1, b1 with a1 initialized with 100020, b1 initialized with 100020\n  for i = size of a - 1 to 0 inclusive, decrementing i, set a1[size of a - 1 - i ] to a[i] - '0'\n  for i = size of b - 1 to 0 inclusive, decrementing i, set b1[size of b - 1 - i ] to b[i] - '0'\n  for i = 100010 to 0 inclusive, decrementing i\n    for j = i to a1[j] and a1[j+1], incrementing j by 2, set a1[j] to a1[j+1] to 0, set a1[j+2] to 1\n    for j = i to b1[j] and b1[j+1], incrementing j by 2, set b1[j] to b1[j+1] to 0, set b1[j+2] to 1\n  \n  for i = 100010 to 0 inclusive, decrementing i\n    if a1[i] is less than b1[i], return print '<' print newline, 0 from function\n    if a1[i] is greater than b1[i], return print '>' print newline, 0\n  \n  print '=' print newline\n  \n\n",
        "const double PI = 3.14159265358979323846264338327;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  vector<int> a1(100020), b1(100020);\n  for (int i = a.size() - 1; i >= 0; i--) a1[a.size() - 1 - i] = a[i] - '0';\n  for (int i = b.size() - 1; i >= 0; i--) b1[b.size() - 1 - i] = b[i] - '0';\n  for (int i = 100010; i >= 0; i--) {\n    for (int j = i; a1[j] && a1[j + 1]; j += 2) a1[j] = a1[j + 1] = 0, a1[j + 2] = 1;\n    for (int j = i; b1[j] && b1[j + 1]; j += 2) b1[j] = b1[j + 1] = 0, b1[j + 2] = 1;\n  }\n  for (int i = 100010; i >= 0; i--) {\n    if (a1[i] < b1[i]) return cout << '<' << endl, 0;\n    if (a1[i] > b1[i]) return cout << '>' << endl, 0;\n  }\n  cout << '=' << endl;\n  return 0;\n}\n"
    ],
    [
        "create a map from integers to strings with name m\ncreate iterator it for map of int to strings\n\n  s = array of characters of size 20\n  declare integer variable n\n  m[0] = \"January\"\n  m[1] = \"February\"\n  m[2] = \"March\"\n  m[3] = \"April\"\n  m[4] = \"May\"\n  m[5] = \"June\"\n  m[6] = \"July\"\n  m[7] = \"August\"\n  m[8] = \"September\"\n  m[9] = \"October\"\n  m[10] = \"November\"\n  m[11] = \"December\"\n  while cin >> s >> n\n    create integer j with value 0\n    move it through m from the beginning\n      increment j\n      if it->second = s. break\n    \n    print m[(j + n - 1) % 12] and a new line\n  \n  \n\n",
        "map<int, string> m;\nmap<int, string>::iterator it;\nint main() {\n  char s[20];\n  int n;\n  m[0] = \"January\";\n  m[1] = \"February\";\n  m[2] = \"March\";\n  m[3] = \"April\";\n  m[4] = \"May\";\n  m[5] = \"June\";\n  m[6] = \"July\";\n  m[7] = \"August\";\n  m[8] = \"September\";\n  m[9] = \"October\";\n  m[10] = \"November\";\n  m[11] = \"December\";\n  while (cin >> s >> n) {\n    int j = 0;\n    for (it = m.begin(); it != m.end(); it++) {\n      ++j;\n      if (it->second == s) break;\n    }\n    cout << m[(j + n - 1) % 12] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create map m from integer to string\ncreate map iterator it from integer to string\n\n  create character array s with size 20\n  create integer n\n  set m[0] to \"January\"\n  set m[1] to \"February\"\n  set m[2] to \"March\"\n  set m[3] to \"April\"\n  set m[4] to \"May\"\n  set m[5] to \"June\"\n  set m[6] to \"July\"\n  set m[7] to \"August\"\n  set m[8] to \"September\"\n  set m[9] to \"October\"\n  set m[10] to \"November\"\n  set m[11] to \"December\"\n  while read s read n\n    create integer j with j = 0\n    for it = beginning of m to it is not end of m, incrementing it\n      increment j\n      if second element of it is s, break loop\n    \n    print m[(j + n - 1) % 12] print newline\n  \n  \n\n",
        "map<int, string> m;\nmap<int, string>::iterator it;\nint main() {\n  char s[20];\n  int n;\n  m[0] = \"January\";\n  m[1] = \"February\";\n  m[2] = \"March\";\n  m[3] = \"April\";\n  m[4] = \"May\";\n  m[5] = \"June\";\n  m[6] = \"July\";\n  m[7] = \"August\";\n  m[8] = \"September\";\n  m[9] = \"October\";\n  m[10] = \"November\";\n  m[11] = \"December\";\n  while (cin >> s >> n) {\n    int j = 0;\n    for (it = m.begin(); it != m.end(); it++) {\n      ++j;\n      if (it->second == s) break;\n    }\n    cout << m[(j + n - 1) % 12] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let a be string\n  s = integer\n  read a and s\n  declare integer variable d\n  if a is equal to \"January\"\n    set d to 1\n  else if a is equal to \"February\"\n    set value of d to 2\n  else if a is equal to \"March\"\n    set value of d to 3\n  else if a is equal to \"April\"\n    set value of d to 4\n  else if a is equal to \"May\"\n    set d to 5\n  else if a is equal to \"June\"\n    set value of d to 6\n  else if a is equal to \"July\"\n    set value of d to 7\n  else if a is equal to \"August\"\n    set value of d to 8\n  else if a is equal to \"September\"\n    set d to 9\n  else if a is equal to \"October\"\n    set d to 10\n  else if a is equal to \"November\"\n    d = 11\n  else\n    d = 12\n  decrease d by one\n  d = d + s\n  d = d % 12\n  if d is equal to 0\n    a = \"January\"\n  else if d is equal to 1\n    a = \"February\"\n  else if d is equal to 2\n    a = \"March\"\n  else if d is equal to 3\n    a = \"April\"\n  else if d is equal to 4\n    a = \"May\"\n  else if d is equal to 5\n    a = \"June\"\n  else if d is equal to 6\n    a = \"July\"\n  else if d is equal to 7\n    a = \"August\"\n  else if d is equal to 8\n    a = \"September\"\n  else if d is equal to 9\n    a = \"October\"\n  else if d is equal to 10\n    a = \"November\"\n  else\n    a = \"December\"\n  print a and a new line\n\n",
        "int main() {\n  string a;\n  int s;\n  cin >> a >> s;\n  int d;\n  if (a == \"January\")\n    d = 1;\n  else if (a == \"February\")\n    d = 2;\n  else if (a == \"March\")\n    d = 3;\n  else if (a == \"April\")\n    d = 4;\n  else if (a == \"May\")\n    d = 5;\n  else if (a == \"June\")\n    d = 6;\n  else if (a == \"July\")\n    d = 7;\n  else if (a == \"August\")\n    d = 8;\n  else if (a == \"September\")\n    d = 9;\n  else if (a == \"October\")\n    d = 10;\n  else if (a == \"November\")\n    d = 11;\n  else\n    d = 12;\n  d--;\n  d = d + s;\n  d = d % 12;\n  if (d == 0)\n    a = \"January\";\n  else if (d == 1)\n    a = \"February\";\n  else if (d == 2)\n    a = \"March\";\n  else if (d == 3)\n    a = \"April\";\n  else if (d == 4)\n    a = \"May\";\n  else if (d == 5)\n    a = \"June\";\n  else if (d == 6)\n    a = \"July\";\n  else if (d == 7)\n    a = \"August\";\n  else if (d == 8)\n    a = \"September\";\n  else if (d == 9)\n    a = \"October\";\n  else if (d == 10)\n    a = \"November\";\n  else\n    a = \"December\";\n  cout << a << endl;\n}\n"
    ],
    [
        "\n  v is a vector of strings with 120 elements\n  for integer i = 0 to 120 exclusive\n    v[i] = \"January\"\n    v[i + 1] = \"February\"\n    v[i + 2] = \"March\"\n    v[i + 3] = \"April\"\n    v[i + 4] = \"May\"\n    v[i + 5] = \"June\"\n    v[i + 6] = \"July\"\n    v[i + 7] = \"August\"\n    v[i + 8] = \"September\"\n    v[i + 9] = \"October\"\n    v[i + 10] = \"November\"\n    v[i + 11] = \"December\"\n  \n  x = string\n  read x\n  declare integers n and z\n  read n\n  for i = 0 to 120 exclusive\n    if v[i] = x\n      assign value of i to the z\n      break the loop\n    \n  \n  print v[z + n] and a new line\n\n",
        "int main() {\n  vector<string> v(120);\n  for (int i = 0; i < 120; i += 12) {\n    v[i] = \"January\";\n    v[i + 1] = \"February\";\n    v[i + 2] = \"March\";\n    v[i + 3] = \"April\";\n    v[i + 4] = \"May\";\n    v[i + 5] = \"June\";\n    v[i + 6] = \"July\";\n    v[i + 7] = \"August\";\n    v[i + 8] = \"September\";\n    v[i + 9] = \"October\";\n    v[i + 10] = \"November\";\n    v[i + 11] = \"December\";\n  }\n  string x;\n  cin >> x;\n  int n, z;\n  cin >> n;\n  for (int i = 0; i < 120; i++) {\n    if (v[i] == x) {\n      z = i;\n      break;\n    }\n  }\n  cout << v[z + n] << endl;\n}\n"
    ],
    [
        "let num be an array of integers of length 3005\ncreate a map from strings to integers with name ma\nset integer ans to 0\nboolean function is_prime with integer arguments u\n\n  s = string\n  s = \"January\"\n  ma[s] = 1\n  s = \"February\"\n  ma[s] = 2\n  s = \"March\"\n  ma[s] = 3\n  s = \"April\"\n  set value of ma[s] to 4\n  s = \"May\"\n  ma[s] = 5\n  ma[\"June\"] = 6\n  ma[\"July\"] = 7\n  ma[\"August\"] = 8\n  ma[\"September\"] = 9\n  ma[\"October\"] = 10\n  ma[\"November\"] = 11\n  ma[\"December\"] = 12\n  n = integer\n  read s\n  read n\n  if n % 12 = 0\n    print s and a new line\n  else\n    set integer a to ma[s]\n    increase n by a\n    if n % 12 = 1, print \"January\" and a new line\n    if n % 12 = 2, print \"February\" and a new line\n    if n % 12 = 3, print \"March\" and a new line\n    if n % 12 = 4, print \"April\" and a new line\n    if n % 12 = 5, print \"May\" and a new line\n    if n % 12 = 6, print \"June\" and a new line\n    if n % 12 = 7, print \"July\" and a new line\n    if n % 12 = 8, print \"August\" and a new line\n    if n % 12 = 9, print \"September\" and a new line\n    if n % 12 = 10, print \"October\" and a new line\n    if n % 12 = 11, print \"November\" and a new line\n    if n % 12 = 0, print \"December\" and a new line\n  \n\n",
        "int num[3005];\nmap<string, int> ma;\nint ans = 0;\nbool is_prime(int u);\nint main() {\n  string s;\n  s = \"January\";\n  ma[s] = 1;\n  s = \"February\";\n  ma[s] = 2;\n  s = \"March\";\n  ma[s] = 3;\n  s = \"April\";\n  ma[s] = 4;\n  s = \"May\";\n  ma[s] = 5;\n  ma[\"June\"] = 6;\n  ma[\"July\"] = 7;\n  ma[\"August\"] = 8;\n  ma[\"September\"] = 9;\n  ma[\"October\"] = 10;\n  ma[\"November\"] = 11;\n  ma[\"December\"] = 12;\n  int n;\n  cin >> s;\n  cin >> n;\n  if (n % 12 == 0)\n    cout << s << endl;\n  else {\n    int a = ma[s];\n    n += a;\n    if (n % 12 == 1) cout << \"January\" << endl;\n    if (n % 12 == 2) cout << \"February\" << endl;\n    if (n % 12 == 3) cout << \"March\" << endl;\n    if (n % 12 == 4) cout << \"April\" << endl;\n    if (n % 12 == 5) cout << \"May\" << endl;\n    if (n % 12 == 6) cout << \"June\" << endl;\n    if (n % 12 == 7) cout << \"July\" << endl;\n    if (n % 12 == 8) cout << \"August\" << endl;\n    if (n % 12 == 9) cout << \"September\" << endl;\n    if (n % 12 == 10) cout << \"October\" << endl;\n    if (n % 12 == 11) cout << \"November\" << endl;\n    if (n % 12 == 0) cout << \"December\" << endl;\n  }\n}\n"
    ],
    [
        "declare inline nxt with no arguments, returning long long\n  create long longs _x, _tmp with _x = 0, _tmp = 1\n  create character _tc with _tc = read character\n  while _tc is less than '0' or _tc is greater than '9' and _tc is not '-', set _tc to read character\n  if _tc is '-', set _tc to read character, set _tmp to -1\n  while _tc is greater than or equal to '0' and _tc is less than or equal to '9', set _x to _x * 10, increment _x by (_tc - '0'), set _tc to read character\n  return _x * _tmp from function\n\n\n  create string array s with size 170\n  for i = 1 to 160 inclusive\n    if (i % 12 == 1) s[i] = \"January\";\n    if (i % 12 == 2) s[i] = \"February\";\n    if (i % 12 == 3) s[i] = \"March\";\n    if (i % 12 == 4) s[i] = \"April\";\n    if (i % 12 == 5) s[i] = \"May\";\n    if (i % 12 == 6) s[i] = \"June\";\n    if (i % 12 == 7) s[i] = \"July\";\n    if (i % 12 == 8) s[i] = \"August\";\n    if (i % 12 == 9) s[i] = \"September\";\n    if (i % 12 == 10) s[i] = \"October\";\n    if (i % 12 == 11) s[i] = \"November\";\n    if (i % 12 == 0) s[i] = \"December\";\n  \n  create string str\n  create integer n\n  read str read n\n  for i = 1 to 12 inclusive\n    if s[i] is str, print s[i+n] print newline\n  \n\n",
        "inline long long nxt() {\n  long long _x = 0, _tmp = 1;\n  char _tc = getchar();\n  while ((_tc < '0' || _tc > '9') && _tc != '-') _tc = getchar();\n  if (_tc == '-') _tc = getchar(), _tmp = -1;\n  while (_tc >= '0' && _tc <= '9') _x *= 10, _x += (_tc - '0'), _tc = getchar();\n  return _x * _tmp;\n}\nint main() {\n  string s[170];\n  for (int i = 1; i <= 160; ++i) {\n    if (i % 12 == 1) s[i] = \"January\";\n    if (i % 12 == 2) s[i] = \"February\";\n    if (i % 12 == 3) s[i] = \"March\";\n    if (i % 12 == 4) s[i] = \"April\";\n    if (i % 12 == 5) s[i] = \"May\";\n    if (i % 12 == 6) s[i] = \"June\";\n    if (i % 12 == 7) s[i] = \"July\";\n    if (i % 12 == 8) s[i] = \"August\";\n    if (i % 12 == 9) s[i] = \"September\";\n    if (i % 12 == 10) s[i] = \"October\";\n    if (i % 12 == 11) s[i] = \"November\";\n    if (i % 12 == 0) s[i] = \"December\";\n  }\n  string str;\n  int n;\n  cin >> str >> n;\n  for (int i = 1; i <= 12; ++i) {\n    if (s[i] == str) { cout << s[i + n] << endl; }\n  }\n}\n"
    ],
    [
        "declare map from integer to string m\ndeclare map iterator from integer to string it\n\n  declare character array s size 20\n  declare integer n\n  let m[0] be \"January\"\n  let m[1] be \"February\"\n  let m[2] be \"March\"\n  let m[3] be \"April\"\n  let m[4] be \"May\"\n  let m[5] be \"June\"\n  let m[6] be \"July\"\n  let m[7] be \"August\"\n  let m[8] be \"September\"\n  let m[9] be \"October\"\n  let m[10] be \"November\"\n  let m[11] be \"December\"\n  while read s, n\n    declare integer j = 0\n    for it = beginning of m to it is not end of m, incrementing it\n      increment j\n      if second element of it is s, end loop\n    \n    print m[(j + n - 1) % 12], newline\n  \n  \n\n",
        "map<int, string> m;\nmap<int, string>::iterator it;\nint main() {\n  char s[20];\n  int n;\n  m[0] = \"January\";\n  m[1] = \"February\";\n  m[2] = \"March\";\n  m[3] = \"April\";\n  m[4] = \"May\";\n  m[5] = \"June\";\n  m[6] = \"July\";\n  m[7] = \"August\";\n  m[8] = \"September\";\n  m[9] = \"October\";\n  m[10] = \"November\";\n  m[11] = \"December\";\n  while (cin >> s >> n) {\n    int j = 0;\n    for (it = m.begin(); it != m.end(); it++) {\n      ++j;\n      if (it->second == s) break;\n    }\n    cout << m[(j + n - 1) % 12] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers n, m, a, b, rub, with rub = 0\n  read n, m, a and b\n  while n is greater than 0\n    if n is less than m\n      set integer flag to n * a\n      if flag is less than b\n        increase rub by flag\n        n = 0\n      else\n        increase rub by b\n        decrease n by m\n      \n    else if (a * m) is greater than b\n      decrease n by m\n      increase rub by b\n    else\n      increase rub by n * a\n      assign value of 0 to the n\n    \n  \n  print rub and \"\\n\"\n\n",
        "int main() {\n  int n, m, a, b, rub = 0;\n  cin >> n >> m >> a >> b;\n  while (n > 0) {\n    if (n < m) {\n      int flag = n * a;\n      if (flag < b) {\n        rub += flag;\n        n = 0;\n      } else {\n        rub += b;\n        n -= m;\n      }\n    } else if ((a * m) > b) {\n      n -= m;\n      rub += b;\n    } else {\n      rub += n * a;\n      n = 0;\n    }\n  }\n  cout << rub << \"\\n\";\n}\n"
    ],
    [
        "\n  create integers n, m, a, b, r, d, cost with cost = 0\n  read n read m read a read b\n  set r to n % m\n  set d to n / m\n  if m is greater than n\n    if b is less than a * b\n      print b print newline\n      \n    else\n      print a * n print newline\n      \n    \n  \n  if d * b is less than a * ( n - r )\n    increment cost by d * b\n    if r * a is less than b\n      increment cost by r * a\n    else\n      increment cost by b\n    \n  else\n    increment cost by a * n\n  \n  print cost print newline\n  \n\n",
        "int main() {\n  int n, m, a, b, r, d, cost = 0;\n  cin >> n >> m >> a >> b;\n  r = n % m;\n  d = n / m;\n  if (m > n) {\n    if (b < a * n) {\n      cout << b << endl;\n      return 0;\n    } else {\n      cout << a * n << endl;\n      return 0;\n    }\n  }\n  if (d * b < a * (n - r)) {\n    cost += (d * b);\n    if (r * a < b) {\n      cost += (r * a);\n    } else {\n      cost += b;\n    }\n  } else {\n    cost += (a * n);\n  }\n  cout << cost << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, m, a, b =integers\n  Read n, m, a, b\n  x = integer, set to (n / m) * b + (n % m) * a\n  y = integer, set to (n / m + 1) * b\n  z = integer, set to n * a\n  print minimum value of x and minimum value of y and z and a new line\n\n",
        "int main() {\n  int n, m, a, b;\n  cin >> n >> m >> a >> b;\n  int x = (n / m) * b + (n % m) * a;\n  int y = (n / m + 1) * b;\n  int z = n * a;\n  cout << min(x, min(y, z)) << endl;\n}\n"
    ],
    [
        "\n  create integer TESTS with TESTS = 1\n  while decrementing TESTS is true\n    create long longs n, m, a, b\n    read n read m read a read b\n    create long long integer vector v\n    if b is greater than or equal to m * a\n      read n * a read '\\n'\n    else\n      create long long c with c = n / m\n      create long long ans with ans = c * b\n      decrement n by c * m\n      increment ans by minimum of b and a * n\n      print ans print '\\n'\n    \n  \n  \n\n",
        "int main() {\n  int TESTS = 1;\n  while (TESTS--) {\n    long long n, m, a, b;\n    cin >> n >> m >> a >> b;\n    vector<long long int> v;\n    if (b >= m * a)\n      cout << n * a << '\\n';\n    else {\n      long long c = n / m;\n      long long ans = c * b;\n      n -= c * m;\n      ans += min(b, a * n);\n      cout << ans << '\\n';\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, m, a, b are long long\n  read n,m,a,b\n  if m*a < b\n    print n*a\n  else\n    price = n/m*b + min(n modulo m * a, b)\n    print price\n  \n  \n\n",
        "int main() {\n  long long n, m, a, b;\n  cin >> n >> m >> a >> b;\n  if (m * a < b) {\n    cout << n * a << endl;\n  } else {\n    long long price = (n / m) * b + min((n % m) * a, b);\n    cout << price << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m, a, b\n  read n read m read a read b\n  if m * a is greater than b\n    print minimum of ( (n / m) * b + (n % m) * a and ((n / m) + 1) * b ) print newline\n    \n  \n  print minimum of n * a and ((n / m) + 1) * b print newline\n  \n\n",
        "int main() {\n  int n, m, a, b;\n  cin >> n >> m >> a >> b;\n  if (m * a > b) {\n    cout << min((n / m) * b + (n % m) * a, ((n / m) + 1) * b) << endl;\n    return 0;\n  }\n  cout << min(n * a, ((n / m) + 1) * b) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m\n  create floats a, b\n  read n read m read a read b\n  create integer sum with sum = 0\n  if ( n % m ) * a is less than or equal to b\n    increment sum by n / m * b + ( n % m ) * a\n  else\n    set sum to ( n / m + 1 ) * b\n  if sum is greater than n * a, set sum to n * a\n  print sum print newline\n\n",
        "int main() {\n  int n, m;\n  float a, b;\n  cin >> n >> m >> a >> b;\n  int sum = 0;\n  if ((n % m) * a <= b) {\n    sum += n / m * b + (n % m) * a;\n  } else\n    sum = (n / m + 1) * b;\n  if (sum > n * a) sum = n * a;\n  cout << sum << endl;\n}\n"
    ],
    [
        "\n  create long long integers n, m, a , b\n  read n read m read a read b\n  if m * a is less than b\n    print n * a print newline\n  else\n    create long long integer price with price = (n/m)*b+minimum of (n % m ) * b and b\n    print price print newline\n  \n  \n\n",
        "int main() {\n  long long int n, m, a, b;\n  cin >> n >> m >> a >> b;\n  if (m * a < b) {\n    cout << n * a << endl;\n  } else {\n    long long int price = (n / m) * b + min((n % m) * a, b);\n    cout << price << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare long longs n, m, a and b\n  read n, m, a and b\n  if m * a is less than b\n    print n * a and a new line\n  else\n    create variable price of type long long = (n / m) * b + min of (n % m) * a and b\n    print price and a new line\n  \n  \n\n",
        "int main() {\n  long long n, m, a, b;\n  cin >> n >> m >> a >> b;\n  if (m * a < b) {\n    cout << n * a << endl;\n  } else {\n    long long price = (n / m) * b + min((n % m) * a, b);\n    cout << price << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers m, n, a, b and cost\n  read n, m, a and b\n  if a is greater than b / m\n    cost = (n / m) * b\n    if a * (n % m) is less than b\n      add a * (n % m) to cost\n    else\n      increase cost by b\n  else\n    cost = n * a\n  print cost and a new line\n  \n\n",
        "int main() {\n  int m, n, a, b, cost;\n  cin >> n >> m >> a >> b;\n  if (a > (b / m)) {\n    cost = (n / m) * b;\n    if (a * (n % m) < b)\n      cost += a * (n % m);\n    else\n      cost += b;\n  } else\n    cost = n * a;\n  cout << cost << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m, a, b\n  read n, m, a, b\n  create integer sum with sum = a * n\n  create integer msum with msum = b\n  create integer rides with rides = m\n  do the following while rides less than or equal to n\n    add b to msum\n    add m to rides\n  \n  subtract b from msum\n  subtract m from rides\n  if sum less than or equal to msum then do the following\n    print sum and a new line\n  else do the following\n    if rides less than n\n      create integer newsum with newsum = msum + (n - rides) * a\n      add b to msum\n      add m to rides\n      create numsum1 with newsum1 = msum\n      if newsum1 less than or equal to newsum then do the following\n        print newsum1 and a new line\n      else do the following\n        print newsum and a new line\n    else if rides greater than n then do the following\n      create integer newsum with newsum = msum + (n - rides) * a\n      add b to msum\n      add m to rides\n      create newsum1 with newsum1 = msum\n      if newsum1 less than or equal to newsum then do the following\n        print newsum1 and a new line\n      else do the following\n        print newsum and a new line\n    else do the following\n      print msum and a new line\n    \n  \n\n",
        "int main() {\n  int n, m, a, b;\n  cin >> n >> m >> a >> b;\n  int sum = a * n;\n  int msum = b;\n  int rides = m;\n  while (rides <= n) {\n    msum += b;\n    rides += m;\n  }\n  msum -= b;\n  rides -= m;\n  if (sum <= msum) {\n    cout << sum << \"\\n\";\n  } else {\n    if (rides < n) {\n      int newsum = msum + (n - rides) * a;\n      msum += b;\n      rides += m;\n      int newsum1 = msum;\n      if (newsum1 <= newsum)\n        cout << newsum1 << endl;\n      else\n        cout << newsum << endl;\n    } else if (rides > n) {\n      int newsum = msum + (n - rides) * a;\n      msum += b;\n      rides += m;\n      int newsum1 = msum;\n      if (newsum1 <= newsum)\n        cout << newsum1 << endl;\n      else\n        cout << newsum << endl;\n    } else {\n      cout << msum << \"\\n\";\n    }\n  }\n}\n"
    ],
    [
        "\n  n and m = integers with m = 2\n  read n\n  print m\n  for i = 1 to n - 1 exclusive\n    increase m by i + 1\n    if m % n is equal to 0\n      print \" \" and n\n    else\n      print \" \" and m % n\n  \n  print new line\n  \n\n",
        "int main() {\n  int n, m = 2;\n  cin >> n;\n  cout << m;\n  for (int i = 1; i < n - 1; i++) {\n    m += (i + 1);\n    if (m % n == 0)\n      cout << \" \" << n;\n    else\n      cout << \" \" << m % n;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m with m = 2\n  read n\n  print m\n  for i = 1 to n - 1 exclusive\n    increment m by i + 1\n    if m % n is 0\n      print \" \" print n\n    else\n      print \" \" print m % n\n  \n  print newline\n  \n\n",
        "int main() {\n  int n, m = 2;\n  cin >> n;\n  cout << m;\n  for (int i = 1; i < n - 1; i++) {\n    m += (i + 1);\n    if (m % n == 0)\n      cout << \" \" << n;\n    else\n      cout << \" \" << m % n;\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  set integer cur to 0\n  for integer i = 1 to n exclusive\n    if i is greater than 1 print whitespace\n    increase cur by i\n    set cur to remainder of division of cur by n\n    print cur + 1\n  \n  print new line\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int cur = 0;\n  for (int i = 1; i < n; ++i) {\n    if (i > 1) cout << \" \";\n    cur += i;\n    cur %= n;\n    cout << cur + 1;\n  }\n  cout << endl;\n}\n"
    ],
    [
        "\n  create integers n, i, create integer array a with size 200\n  read n\n  set a[0] to 1\n  for i = 1 to n - 1 inclusive\n    set a[i] to (a[i - 1] + i) % n\n    if a[i] is 0, set a[i] to n\n  \n  for i = 1 to n - 1 exclusive, print a[i] print \" \"\n  print a[n-1] print newline\n  \n\n",
        "int main() {\n  int n, a[200], i;\n  cin >> n;\n  a[0] = 1;\n  for (i = 1; i <= n - 1; i++) {\n    a[i] = (a[i - 1] + i) % n;\n    if (a[i] == 0) a[i] = n;\n  }\n  for (i = 1; i < n - 1; i++) { cout << a[i] << \" \"; }\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  integers n and i, integer array a of size 200\n  read n\n  set value of a[0] to 1\n  for i = 1 to n - 1 inclusive\n    a[i] = (a[i - 1] + i) % n\n    set a[i] to n if a[i] is 0\n  \n  for i = 1 to n - 1 exclusive print a[i] and \" \"\n  print a[n - 1] and a new line\n  \n\n",
        "int main() {\n  int n, a[200], i;\n  cin >> n;\n  a[0] = 1;\n  for (i = 1; i <= n - 1; i++) {\n    a[i] = (a[i - 1] + i) % n;\n    if (a[i] == 0) a[i] = n;\n  }\n  for (i = 1; i < n - 1; i++) { cout << a[i] << \" \"; }\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "mp = map from long long to long long\ndeclare vector of strings called s\ndeclare vector of integers called v\n\n  declare integer variable m\n  read m\n  let k, i and j be integers with k = m, i = 1 and j = 1\n  decrease m by one\n  while m--\n    increase j by i\n    integer ans = j % k\n    if ans is equal to 0 set ans to j\n    print ans\n    if m is equal to 0\n      print new line\n    else\n      print \" \"\n    increase i by one\n    j %= k\n    if j is equal to 0, set j to ans\n  \n  \n\n",
        "map<long long, long long> mp;\nvector<string> s;\nvector<int> v;\nint main() {\n  int m;\n  cin >> m;\n  int k = m, i = 1, j = 1;\n  m--;\n  while (m--) {\n    j += i;\n    int ans = j % k;\n    if (ans == 0) ans = j;\n    cout << ans;\n    if (m == 0)\n      cout << endl;\n    else\n      cout << \" \";\n    i++;\n    j %= k;\n    if (j == 0) j = ans;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer vector v initialized with 6\n  read v[0], v[1], v[2], v[3], [4], v[5]\n  sort from beginning of v to end of v\n  declare integers h, b\n  if v[0] is v[3]\n    let h be 4\n    let b be 5\n  else if v[1] is v[4]\n    let h be 0\n    let b be 5\n  else if v[2] is v[5]\n    let h be 0\n    let b be 1\n  else\n    print \"Alien\\n\"\n    \n  \n  print \"Bear\\n\" if v[h] is less than v[b], else \"Elephant\\n\"\n  \n\n",
        "int main() {\n  vector<int> v(6);\n  cin >> v[0] >> v[1] >> v[2] >> v[3] >> v[4] >> v[5];\n  sort(v.begin(), v.end());\n  int h, b;\n  if (v[0] == v[3]) {\n    h = 4;\n    b = 5;\n  } else if (v[1] == v[4]) {\n    h = 0;\n    b = 5;\n  } else if (v[2] == v[5]) {\n    h = 0;\n    b = 1;\n  } else {\n    cout << \"Alien\\n\";\n    return 0;\n  }\n  cout << (v[h] < v[b] ? \"Bear\\n\" : \"Elephant\\n\");\n  return 0;\n}\n"
    ],
    [
        "declare const int INF = 0x3f3f3f3f\ncreate int array a with size 11\n\n  declare integer variables n, m and t\n  declare integer variables i, j and k\n  for i = 0 to 6 exclusive, read t and increment a[t]\n  for i = 1 to 9 inclusive\n    if a[i] >= 4, break\n  if i is greater than 9\n    print \"Alien\"\n    \n  \n  for i from 1 to 9 inclusive\n    if a[i] = 2 or a[i] = 6, stop the loop\n  if i is greater than 9\n    print \"Bear\"\n    \n  \n  print \"Elephant\"\n  \n\n",
        "const int INF = 0x3f3f3f3f;\nint a[11];\nint main() {\n  int n, m, t;\n  int i, j, k;\n  for (i = 0; i < 6; i++) cin >> t, a[t]++;\n  for (i = 1; i <= 9; i++)\n    if (a[i] >= 4) break;\n  if (i > 9) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  for (i = 1; i <= 9; i++)\n    if (a[i] == 2 || a[i] == 6) break;\n  if (i > 9) {\n    cout << \"Bear\" << endl;\n    return 0;\n  }\n  cout << \"Elephant\" << endl;\n  return 0;\n}\n"
    ],
    [
        "declare new array of integers a with size 10\n\n  create new integer variable x\n  for i from 1 to 6 inclusive incrementing i\n    read variable x from the input\n    increment a[x]\n  \n  declare new ints y and z = -1\n  start for loop from i = 1 to 9 inclusive\n    if a[i] >= 4, assign i to z\n  \n  if z is not -1\n    assign a[z] - 4 to a[z]\n    for i = 1 to 9 inclusive\n      if a[i] is equal to 1 and y = -1, change y to i\n      if a[i] = 1 and y is not -1, set z to i\n      if a[i] is equal to 2, change y to set z to a[i]\n    \n    if y is equal to z\n      print \"Elephant\"\n    else\n      print \"Bear\" to the standard output\n  else\n    print \"Alien\"\n\n",
        "int a[10];\nint main() {\n  int x;\n  for (int i = 1; i <= 6; i++) {\n    cin >> x;\n    a[x]++;\n  }\n  int y = -1, z = -1;\n  for (int i = 1; i <= 9; i++) {\n    if (a[i] >= 4) { z = i; }\n  }\n  if (z != -1) {\n    a[z] = a[z] - 4;\n    for (int i = 1; i <= 9; i++) {\n      if (a[i] == 1 && y == -1) { y = i; }\n      if (a[i] == 1 && y != -1) { z = i; }\n      if (a[i] == 2) { y = z = a[i]; }\n    }\n    if (y == z)\n      cout << \"Elephant\" << endl;\n    else\n      cout << \"Bear\" << endl;\n  } else\n    cout << \"Alien\" << endl;\n}\n"
    ],
    [
        "\n  create integers i, j, n, p, q, flag with p = 0, flag = 0, create integer array a with size 10 with a = {0}\n  for i = 0 to 6 exclusive\n    read n\n    increment a[n]\n  \n  for i = 0 to 9 inclusive\n    if a[i] is greater than or equal to 4\n      decrement a[i] by 4\n      set flag to 1\n    \n  \n  if flag is 0\n    print \"Alien\" print newline\n    \n  \n  for i = 0 to 9 inclusive\n    if a[i] is 2\n      print \"Elephant\" print newline\n      \n    \n  \n  print \"Bear\" print newline\n  \n\n",
        "int main() {\n  int i, j, n, p = 0, q, flag = 0, a[10] = {0};\n  for (i = 0; i < 6; i++) {\n    cin >> n;\n    a[n]++;\n  }\n  for (i = 0; i <= 9; i++) {\n    if (a[i] >= 4) {\n      a[i] -= 4;\n      flag = 1;\n    }\n  }\n  if (flag == 0) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  for (i = 0; i <= 9; i++) {\n    if (a[i] == 2) {\n      cout << \"Elephant\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Bear\" << endl;\n  return 0;\n}\n"
    ],
    [
        "ar = int array of size 12\n\n  a, b, c, d, e, f = int\n  read a then b then c then d then e then f\n  increment ar[a]\n  increment ar[b]\n  increment ar[c]\n  increment ar[d]\n  increment ar[e]\n  increment ar[f]\n  paichi = bool with paichi = false\n  for i = 1 to 9 inclusive\n    if ar[i] >= 4 set paichi to true\n  \n  if not paichi print \"Alien\" and return 0\n  cnt = int with cnt = 0\n  for i = 1 to 9 inclusive\n    if ar[i] is 2 or 6 print \"Elephant\" and return 0\n  \n  print \"Bear\"\n  \n\n",
        "int ar[12];\nint main() {\n  int a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  ar[a]++;\n  ar[b]++;\n  ar[c]++;\n  ar[d]++;\n  ar[e]++;\n  ar[f]++;\n  bool paichi = false;\n  for (int i = 1; i <= 9; i++) {\n    if (ar[i] >= 4) { paichi = true; }\n  }\n  if (!paichi) return cout << \"Alien\\n\", 0;\n  int cnt = 0;\n  for (int i = 1; i <= 9; i++) {\n    if (ar[i] == 2 or ar[i] == 6) return cout << \"Elephant\\n\", 0;\n  }\n  cout << \"Bear\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integer A with size 6\n  for i = 0 to 6 exclusive, read A[i]\n  sort elements from A to A + 6\n  create integers B, C\n  if A[0] is A[3]\n    set B to A[4], set C to A[5]\n  else if A[1] is A[4]\n    set B to A[0], set C to A[5]\n  else if A[2] is A[5]\n    set B to A[0], set C to A[1]\n  else\n    print \"Alien\" print newline\n    \n  \n  if B is C\n    print \"Elephant\" print newline\n    \n  \n  if B is less than C\n    print \"Bear\" print newline\n    \n  \n\n",
        "int main() {\n  int A[6];\n  for (int i = 0; i < 6; ++i) { cin >> A[i]; }\n  sort(A, A + 6);\n  int B, C;\n  if (A[0] == A[3])\n    B = A[4], C = A[5];\n  else if (A[1] == A[4])\n    B = A[0], C = A[5];\n  else if (A[2] == A[5])\n    B = A[0], C = A[1];\n  else {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  if (B == C) {\n    cout << \"Elephant\" << endl;\n    return 0;\n  }\n  if (B < C) {\n    cout << \"Bear\" << endl;\n    return 0;\n  }\n}\n"
    ],
    [
        "dp = two dimensional char array of sizes 10 and 10\nmp = long long and long long map\n\n  n, x = long long\n  a = long long array of size 10\n  for i = 0 to 6\n    read a[i]\n    increment mp[a[i]]\n  \n  ok = bool with ok = false\n  for i = 0 to 6\n    if mp[a[i]] is 6 set ok to true\n  \n  if ok is true\n    print \"Elephant\"\n    \n  \n  for i = 0 to 6\n    if mp[a[i]] is 5 set ok to true\n  \n  if ok is true\n    print \"Bear\"\n    \n  \n  for i = 0 to 6\n    if mp[a[i]] is 4 set ok to true\n  \n  if ok is false\n    print \"Alien\"\n    \n  \n  for i = 0 to 6\n    if mp[a[i]] is 2 set ok to false\n  \n  if ok is true\n    print \"Bear\"\n  else\n    print \"Elephant\"\n  \n\n",
        "char dp[10][10];\nmap<long long, long long> mp;\nint main() {\n  long long n, x;\n  long long a[10];\n  for (int i = 0; i < 6; i++) {\n    cin >> a[i];\n    mp[a[i]]++;\n  }\n  bool ok = false;\n  for (int i = 0; i < 6; i++) {\n    if (mp[a[i]] == 6) ok = true;\n  }\n  if (ok) {\n    cout << \"Elephant\" << endl;\n    return 0;\n  }\n  for (int i = 0; i < 6; i++) {\n    if (mp[a[i]] == 5) ok = true;\n  }\n  if (ok) {\n    cout << \"Bear\" << endl;\n    return 0;\n  }\n  for (int i = 0; i < 6; i++) {\n    if (mp[a[i]] == 4) ok = true;\n  }\n  if (!ok) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  for (int i = 0; i < 6; i++) {\n    if (mp[a[i]] == 2) ok = false;\n  }\n  if (ok)\n    cout << \"Bear\" << endl;\n  else\n    cout << \"Elephant\" << endl;\n  return 0;\n}\n"
    ],
    [
        "declare int arrays b with size 10 and c with size 6\n\n  declare an array of integers a with size 6 and integer variables i, x and j with j = 0\n  for i = 0 to 6 exclusive\n    read a[i]\n    assign a[i] to x\n    increment b[x] by one\n  \n  for i = 1 to 9 inclusive\n    if b[i] != 0\n      set c[j] to b[i]\n      increment j by one\n    \n  \n  sort first 3 elements of c\n  if c[0] = 1 and c[1] = 1 and c[2] = 4\n    print \"Bear\"\n  else if c[0] = 0 and c[1] = 1 and c[2] = 5\n    print \"Bear\"\n  else if c[0] = 0 and c[1] = 2 and c[2] = 4\n    print \"Elephant\"\n  else if c[2] is equal to 6\n    print \"Elephant\"\n  else\n    print \"Alien\"\n  \n  \n\n",
        "int b[10], c[6];\nint main() {\n  int a[6], i, x, j = 0;\n  for (i = 0; i < 6; i++) {\n    cin >> a[i];\n    x = a[i];\n    b[x]++;\n  }\n  for (i = 1; i <= 9; i++) {\n    if (b[i] != 0) {\n      c[j] = b[i];\n      j++;\n    }\n  }\n  sort(c, c + 3);\n  if (c[0] == 1 && c[1] == 1 && c[2] == 4) {\n    cout << \"Bear\" << endl;\n  } else if (c[0] == 0 && c[1] == 1 && c[2] == 5) {\n    cout << \"Bear\" << endl;\n  } else if (c[0] == 0 && c[1] == 2 && c[2] == 4) {\n    cout << \"Elephant\" << endl;\n  } else if (c[2] == 6) {\n    cout << \"Elephant\" << endl;\n  } else {\n    cout << \"Alien\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integers i, j, n, p, q, flag, with p = 0, flag = 0, create integer array a with size 10 with a = {0}\n  for i = 0 to 6 exclusive\n    read n\n    increment a[n]\n  \n  for i = 0 to 9 inclusive\n    if a[i] is greater than or equal to 4\n      decrement a[i] by 4\n      set flag to 1\n    \n  \n  if flag is 0\n    print \"Alien\" print newline\n    \n  \n  for i = 0 to 9 inclusive\n    if a[i] is 2\n      print \"Elephant\" print newline\n      \n    \n  \n  print \"Bear\" print newline\n  \n\n",
        "int main() {\n  int i, j, n, p = 0, q, flag = 0, a[10] = {0};\n  for (i = 0; i < 6; i++) {\n    cin >> n;\n    a[n]++;\n  }\n  for (i = 0; i <= 9; i++) {\n    if (a[i] >= 4) {\n      a[i] -= 4;\n      flag = 1;\n    }\n  }\n  if (flag == 0) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  for (i = 0; i <= 9; i++) {\n    if (a[i] == 2) {\n      cout << \"Elephant\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Bear\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer array list size 10\n  set bytes from list to size of list to value 0\n  for i = 0 to 6 exclusive\n    declare temp as integer\n    read temp\n    increment list[temp]\n  \n  for i = 0 to 10 exclusive\n    if list[i] is 4\n      for j = 0 to 10 exclusive\n        if list[j] is 2\n          print \"Elephant\", newline\n          \n        \n      \n      print \"Bear\", newline\n      \n    else if list[i] is 5\n      print \"Bear\", newline\n      \n    else if list[i] is 6\n      print \"Elephant\", newline\n      \n    \n  \n  print \"Alien\", newline\n  \n\n",
        "int main() {\n  int list[10];\n  memset(list, 0, sizeof(list));\n  for (int i = 0; i < 6; i++) {\n    int temp;\n    cin >> temp;\n    list[temp]++;\n  }\n  for (int i = 0; i < 10; i++) {\n    if (list[i] == 4) {\n      for (int j = 0; j < 10; j++) {\n        if (list[j] == 2) {\n          cout << \"Elephant\" << endl;\n          return 0;\n        }\n      }\n      cout << \"Bear\" << endl;\n      return 0;\n    } else if (list[i] == 5) {\n      cout << \"Bear\" << endl;\n      return 0;\n    } else if (list[i] == 6) {\n      cout << \"Elephant\" << endl;\n      return 0;\n    }\n  }\n  cout << \"Alien\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array mp with size 20\n\n  create integer n\n  create integer vector Q\n  set bytes from mp to size of mp to value 0\n  for i = 1 to 6 inclusive\n    create integer p\n    read p\n    increment mp[p]\n    add character p to end of Q\n  \n  create integers flag1, flag2 with flag1 = 0, flag2 = 0\n  for i = 0 to size of Q exclusive\n    if mp[Q[i]] is greater than or equal to 4, set flag1 to 1\n    if mp[Q[i]] is 2, set flag2 to 1\n    if mp[Q[i]] is 6\n      set flag1 to 1\n      set flag2 to 1\n    \n  \n  if flag1 is 1 and flag2 is 0\n    print \"Bear\\n\"\n  else if flag1 is 1 and flag2 is 1\n    print \"Elephant\\n\"\n  else\n    print \"Alien\\n\"\n  \n  \n\n",
        "int mp[20];\nint main() {\n  int n;\n  vector<int> Q;\n  memset(mp, 0, sizeof mp);\n  for (int i = 1; i <= 6; i++) {\n    int p;\n    cin >> p;\n    mp[p]++;\n    Q.push_back(p);\n  }\n  int flag1 = 0, flag2 = 0;\n  for (int i = 0; i < Q.size(); i++) {\n    if (mp[Q[i]] >= 4) { flag1 = 1; }\n    if (mp[Q[i]] == 2) { flag2 = 1; }\n    if (mp[Q[i]] == 6) {\n      flag1 = 1;\n      flag2 = 1;\n    }\n  }\n  if (flag1 == 1 and flag2 == 0) {\n    cout << \"Bear\\n\";\n  } else if (flag1 == 1 and flag2 == 1) {\n    cout << \"Elephant\\n\";\n  } else {\n    cout << \"Alien\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "a, b, n = int and s = int array of size 10\n\n  for i = 0 to 6\n    read n\n    increment s[n]\n  \n  for i = 0 to 10\n    if s[i] is greater or equal to 4 set b to 1\n    if s[i] is 2 or 6 set a to 1\n  \n  if b is 0\n    print \"Alien\"\n  else if a is 1\n    print \"Elephant\"\n  else\n    print \"Bear\"\n  \n\n",
        "int s[10], a, b, n;\nint main() {\n  for (int i = 0; i < 6; i++) {\n    cin >> n;\n    s[n]++;\n  }\n  for (int i = 0; i < 10; i++) {\n    if (s[i] >= 4) { b = 1; }\n    if (s[i] == 2 || s[i] == 6) { a = 1; }\n  }\n  if (b == 0) {\n    cout << \"Alien\" << endl;\n  } else if (a == 1) {\n    cout << \"Elephant\" << endl;\n  } else {\n    cout << \"Bear\" << endl;\n  }\n}\n"
    ],
    [
        "create a map from integers to integers with name mp\n\n  for integer i = 0 to 6 exclusive\n    declare int p\n    read p\n    increment mp[p]\n  \n  if length of mp is greater than 3\n    print \"Alien\"\n    \n  \n  if length of mp is equal to 3\n    create integer f = 0\n    it is a map iterator\n    move it through mp\n      if it->second = 4\n        change f to 1\n        break the loop\n      \n    \n    if f != 0\n      print \"Bear\"\n      \n    else\n      print \"Alien\"\n      \n    \n  \n  if length of mp is equal to 2\n    declare integer variable f = 0\n    it is a map iterator\n    move it through mp\n      if it->second = 2\n        change f to 1\n        break the loop\n      \n      if if it->second = 3\n        print \"Alien\"\n        \n      \n    \n    if f != 0\n      print \"Elephant\"\n      \n    else\n      print \"Bear\"\n      \n    \n  \n  if length of mp = 1\n    print \"Elephant\"\n    \n  \n  \n\n",
        "map<int, int> mp;\nint main() {\n  for (int i = 0; i < 6; i++) {\n    int p;\n    cin >> p;\n    mp[p]++;\n  }\n  if (mp.size() > 3) {\n    cout << \"Alien\" << endl;\n    return 0;\n  }\n  if (mp.size() == 3) {\n    int f = 0;\n    map<int, int>::iterator it;\n    for (it = mp.begin(); it != mp.end(); it++) {\n      if (it->second == 4) {\n        f = 1;\n        break;\n      }\n    }\n    if (f) {\n      cout << \"Bear\" << endl;\n      return 0;\n    } else {\n      cout << \"Alien\" << endl;\n      return 0;\n    }\n  }\n  if (mp.size() == 2) {\n    int f = 0;\n    map<int, int>::iterator it;\n    for (it = mp.begin(); it != mp.end(); it++) {\n      if (it->second == 2) {\n        f = 1;\n        break;\n      }\n      if (it->second == 3) {\n        cout << \"Alien\" << endl;\n        return 0;\n      }\n    }\n    if (f) {\n      cout << \"Elephant\" << endl;\n      return 0;\n    } else {\n      cout << \"Bear\" << endl;\n      return 0;\n    }\n  }\n  if (mp.size() == 1) {\n    cout << \"Elephant\" << endl;\n    return 0;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  l, r = long long\n  read l then r\n  if r - l is greater than 1\n    if l is even\n      print l then ' ' then l + 1 then ' ' then l + 2\n    else\n      if r - l is greater than 2\n        print l + 1 then ' ' then l + 2 then ' ' then l + 3\n      else\n        print -1\n    \n  else\n    print -1\n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l > 1) {\n    if (l % 2 == 0)\n      cout << l << ' ' << l + 1 << ' ' << l + 2 << endl;\n    else {\n      if (r - l > 2)\n        cout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl;\n      else\n        cout << -1 << endl;\n    }\n  } else\n    cout << -1 << endl;\n}\n"
    ],
    [
        "tmp, min1, max1, sum_n, index_max, index_min = int\narr1 = two dimensional int array of sizes 1000 and 1000\narr3 = char array of size 100\narr = int array of size 10000\nin function display_vector taking an int vector v\n  for i = 0 to size of v print v[i] then \" \"\n  print newline\n\ndefine empty function speed\nin function min_max taking an int vector v and an int l\n  set min1 to INT_MAX\n  set max1 to INT_MIN\n  for i = l to size of v\n    if v[i] is less or equal to min1\n      set min1 to v[i]\n      set index_min to i\n    \n    if v[i] is greater or equal to max1\n      set max1 to v[i]\n      set index_max to i\n    \n  \n\nin function sum_v taking an int vector v and returning an int\n  for i = 0 to size of v increment sum_n by v[i]\n  return sum_n\n\nin function is_it_sorted_acs taking an int vector v and returning a bool\n  test1 = bool with test1 = false\n  for i = 0 to size of v - 1\n    if v[i + 1] is less or equal to v[i]\n      set test1 to false\n      return test1\n    \n  set test1 to true\n  return test1\n\nin function is_it_sorted_des taking an int vector v and returning a bool\n  test1 = bool with test1 = false\n  for i = 0 to size of v - 1\n    if v[i + 1] is greater or equal to v[i]\n      set test1 to false\n      return test1\n    \n  set test1 to true\n  return test1\n\n\n  call speed\n  l, r = long long\n  read l then r\n  if l is uneven then increment l\n  if r - l is less than 2 then print -1 and return 0\n  print l and l + 1 and l + 2\n\n",
        "int tmp, min1, max1, sum_n, index_max, index_min;\nint arr1[1000][1000];\nchar arr3[100];\nint arr[10000];\nvoid display_vector(vector<int> v) {\n  for (int i = 0; i < v.size(); i++) cout << v[i] << \" \";\n  cout << endl;\n}\nvoid speed() {}\nvoid min_max(vector<int> v, int l) {\n  min1 = INT_MAX;\n  max1 = INT_MIN;\n  for (int i = l; i < v.size(); i++) {\n    if (v[i] <= min1) {\n      min1 = v[i];\n      index_min = i;\n    }\n    if (v[i] >= max1) {\n      max1 = v[i];\n      index_max = i;\n    }\n  }\n}\nint sum_v(vector<int> v) {\n  for (int i = 0; i < v.size(); i++) sum_n += v[i];\n  return sum_n;\n}\nbool is_it_sorted_acs(vector<int> v) {\n  bool test1 = false;\n  for (int i = 0; i < v.size() - 1; i++)\n    if (v[i + 1] <= v[i]) {\n      test1 = false;\n      return test1;\n    }\n  test1 = true;\n  return test1;\n}\nbool is_it_sorted_des(vector<int> v) {\n  bool test1 = false;\n  for (int i = 0; i < v.size() - 1; i++)\n    if (v[i + 1] >= v[i]) {\n      test1 = false;\n      return test1;\n    }\n  test1 = true;\n  return test1;\n}\nint main() {\n  speed();\n  long long l, r;\n  cin >> l >> r;\n  if (l % 2 != 0) l++;\n  if (r - l < 2) return cout << -1 << endl, 0;\n  cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n}\n"
    ],
    [
        "\n  create long long l and r\n  read l and r\n  if r - l + 1 less than 3\n    print -1\n    \n  \n  if l is odd\n    print l, ' ', l+1, ' ', l+2\n    \n  \n  if r - l + 1 greater than 3\n    print l+1, ' ', l+2, ' ', l+3\n    \n  \n  print -1 and a newline\n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l + 1 < 3) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (l % 2 == 0) {\n    cout << l << ' ' << l + 1 << ' ' << l + 2 << endl;\n    return 0;\n  }\n  if (r - l + 1 > 3) {\n    cout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl;\n    return 0;\n  }\n  cout << -1 << endl;\n}\n"
    ],
    [
        "create long long l and r\n\n  read l, r\n  if r - l + 1 < 3\n    print -1\n    \n  \n  if l is even\n    print l, \" \", l+1, \" \", l+2\n    \n  \n  if r - l + 1 greater than 3\n    print l + 1, \" \", l + 2, \" \", l + 3\n    \n  \n  print -1 and a newline\n  \n  \n\n",
        "long long l, r;\nint main() {\n  cin >> l >> r;\n  if (r - l + 1 < 3) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (l % 2 == 0) {\n    cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n    return 0;\n  }\n  if (r - l + 1 > 3) {\n    cout << l + 1 << \" \" << l + 2 << \" \" << l + 3 << endl;\n    return 0;\n  }\n  cout << -1 << endl;\n  return 0;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer long longs l, r\n  read l read r\n  if l % 2 is not 0, increment l\n  if l + 2 is greater than r\n    print -1 print newline\n  else\n    print l print \" \" print l + 1 print \" \" print l + 2 print newline\n  \n\n",
        "int main() {\n  int long long l, r;\n  cin >> l >> r;\n  if (l % 2 != 0) l++;\n  if (l + 2 > r)\n    cout << -1 << endl;\n  else\n    cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare long long variables k and l\n  read k and l and keep looping\n    if l - k is less than 2\n      print - 1\n    else if k is even\n      print k, \" \", k + 1, \" \" and k + 2\n    else if k is odd && l - k >= 3\n      print k + 1, \" \", k + 2, \" \" and k + 3\n    else\n      print -1\n  \n  \n\n",
        "int main() {\n  long long k, l;\n  while (cin >> k >> l) {\n    if (l - k < 2)\n      cout << -1 << endl;\n    else if (!(k % 2)) {\n      cout << k << \" \" << k + 1 << \" \" << k + 2 << endl;\n    } else if (k % 2 && l - k >= 3) {\n      cout << k + 1 << \" \" << k + 2 << \" \" << k + 3 << endl;\n    } else\n      cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, m\n  read n read m\n  if m - n is less than 2\n    print -1 print newline\n  else\n    if n % 2 is 0\n      print n print \" \" print n + 1 print \" \" print n + 2 print newline\n    else if n % 2 is not 0 and n + 3 is less than or equal to m\n      print n + 1 print \" \" print n + 2 print \" \" print n + 3 print newline\n    else\n      print -1 print newline\n  \n\n",
        "int main() {\n  long long n, m;\n  cin >> n >> m;\n  if (m - n < 2)\n    cout << -1 << endl;\n  else {\n    if (n % 2 == 0)\n      cout << n << \" \" << n + 1 << \" \" << n + 2 << endl;\n    else if (n % 2 != 0 && n + 3 <= m)\n      cout << n + 1 << \" \" << n + 2 << \" \" << n + 3 << endl;\n    else\n      cout << -1 << endl;\n  }\n}\n"
    ],
    [
        "\n  a, b = long long integer\n  read a, b\n  if a modulo 2 is 0 and a + 2 <= b\n    print a,\" \",a + 1,\" \",a + 2\n  else if a modulo 2 is not 0 and a + 3 <= b\n    print a + 1,\" \",a + 2,\" \",a + 3\n  else\n    print -1\n  \n  \n\n",
        "int main() {\n  long long int a, b;\n  cin >> a >> b;\n  if (a % 2 == 0 && a + 2 <= b) {\n    cout << a << \" \" << a + 1 << \" \" << a + 2 << endl;\n  } else if (a % 2 != 0 && a + 3 <= b) {\n    cout << a + 1 << \" \" << a + 2 << \" \" << a + 3 << endl;\n  } else {\n    cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long l and r\n  read l and r\n  if r - l + 1 < 3\n    read -1\n    \n  \n  if r - l + 1 = 3 and r mod 2 different from 0 or l mod 2 different from 0\n    print -1\n    \n  \n  if l is even and l + 2 is even\n    print l, \" \", l + 1, \" \", l + 2\n  else\n    print l + 1, \" \", l + 2, \" \", l + 3\n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l + 1 < 3) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (r - l + 1 == 3 && (r % 2 != 0 || l % 2 != 0)) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (l % 2 == 0 && (l + 2) % 2 == 0)\n    cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n  else\n    cout << l + 1 << \" \" << l + 2 << \" \" << l + 3 << endl;\n}\n"
    ],
    [
        "\n  l, r = long long\n  read l, r\n  if r - l + 1 < 3\n    print -1\n    \n  \n  if l modulo 2 is 0\n    print l,' ',l + 1,' ',l + 2\n    \n  \n  if r - l + 1 > 3\n    print l + 1,' ',l + 2,' ',l + 3\n    \n  \n  print -1\n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l + 1 < 3) {\n    cout << -1 << endl;\n    return 0;\n  }\n  if (l % 2 == 0) {\n    cout << l << ' ' << l + 1 << ' ' << l + 2 << endl;\n    return 0;\n  }\n  if (r - l + 1 > 3) {\n    cout << l + 1 << ' ' << l + 2 << ' ' << l + 3 << endl;\n    return 0;\n  }\n  cout << -1 << endl;\n}\n"
    ],
    [
        "\n  create long long n1 and n2\n  read n1, n2\n  if n1 is odd, increase n1\n  if n2 - n1 less than 2\n    print -1\n  else\n    print n1, \" \", n1+1, \" \", n1+2\n  \n  \n\n",
        "int main() {\n  long long n1, n2;\n  cin >> n1 >> n2;\n  if (n1 % 2 != 0) n1++;\n  if (n2 - n1 < 2) {\n    cout << \"-1\" << endl;\n  } else {\n    cout << n1 << \" \" << n1 + 1 << \" \" << n1 + 2 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let l, r be long integers\n  read l and r\n  if r - l is less than 2\n    print -1 and newline\n  else if r - l is equal to 2\n    if r modulo 2\n      print -1 and newline\n    else do the following\n      print l and space and l + 1 and space and r and newline\n  else do the following\n    if l modulo 2\n      print l + 1 and space and l + 2 and space and l + 3 and newline\n    else do the following\n      print l and space and l + 1 and space and l + 2 and newline\n  \n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (r - l < 2)\n    cout << -1 << '\\n';\n  else if (r - l == 2) {\n    if (r % 2)\n      cout << -1 << '\\n';\n    else\n      cout << l << \" \" << l + 1 << \" \" << r << '\\n';\n  } else {\n    if (l % 2)\n      cout << l + 1 << \" \" << l + 2 << \" \" << l + 3 << '\\n';\n    else\n      cout << l << \" \" << l + 1 << \" \" << l + 2 << '\\n';\n  }\n}\n"
    ],
    [
        "\n  create long long l and r\n  read l and r\n  is l is even and l + 2 <= r\n    print l, \" \", l + 1, \" \", l + 2\n  else\n    l + 3 <= r\n      print l+1, \" \", l + 2, \" \", l + 3\n    else\n      print -1 and a newline\n  \n  \n\n",
        "int main() {\n  long long l, r;\n  cin >> l >> r;\n  if (l % 2 == 0 && l + 2 <= r)\n    cout << l << \" \" << l + 1 << \" \" << l + 2 << endl;\n  else {\n    if (l + 3 <= r)\n      cout << l + 1 << \" \" << l + 2 << \" \" << l + 3 << endl;\n    else\n      cout << -1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, res = integer with res = 0\n  read n\n  total = integer with total = 0\n  while total < n\n    increment res\n    total = total + res * (res + 1) / 2\n  \n  if total > n, decrement res\n  print res\n  \n\n",
        "int main() {\n  int n, res = 0;\n  cin >> n;\n  int total = 0;\n  while (total < n) {\n    res++;\n    total += res * (res + 1) / 2;\n  }\n  if (total > n) { res--; }\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints n, i, j, x, and mohi\n  create long long int sum = 0\n  create integer vector v\n  read n\n  for i = 1 to n\n    for j = 1 to i\n      set mohi to (j * (j + 1)) / 2\n      set sum to sum + mohi\n    \n    if sum is less than n\n      set x to i\n      break loop\n    \n    set sum to 0\n  \n  if n is equal to 1\n    print 1\n  otherwise\n    print x - 1\n\n",
        "int main() {\n  int n, i, j, x, mohi;\n  long long int sum = 0;\n  vector<int> v;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    for (j = 1; j <= i; j++) {\n      mohi = (j * (j + 1)) / 2;\n      sum += mohi;\n    }\n    if (sum > n) {\n      x = i;\n      break;\n    }\n    sum = 0;\n  }\n  if (n == 1)\n    cout << 1 << endl;\n  else\n    cout << x - 1 << endl;\n}\n"
    ],
    [
        "\n  n,ans,sum,sum2=int\n  while read n\n    ans, sum, sum2=0\n    while true\n      if sum2>n break\n      increment ans\n      add ans to sum\n      add sum to sum2\n    \n    print ans-1\n  \n  \n\n",
        "int main() {\n  int n, ans, sum, sum2;\n  while (cin >> n) {\n    ans = sum = sum2 = 0;\n    while (true) {\n      if (sum2 > n) break;\n      ans++;\n      sum += ans;\n      sum2 += sum;\n    }\n    cout << ans - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "int function Addition with int argument n\n  declare new integer s\n  set s to (n * (1 + n)) / 2\n  return s\n\n\n  a and i are integers with i = 0\n  read input to a\n  if a is greater than 0\n    change a to a - the result of Addition(i)\n    while a > 0\n      increment i\n      assign a - the result of Addition(i + 1) to a\n    \n    print i to the standard output\n  else\n    print \"0\" to the standard output\n\n",
        "int Addition(int n) {\n  int s;\n  s = (n * (1 + n)) / 2;\n  return s;\n}\nint main() {\n  int a, i = 0;\n  cin >> a;\n  if (a > 0) {\n    a = a - Addition(i);\n    while (a > 0) {\n      i++;\n      a = a - Addition(i + 1);\n    }\n    cout << i << endl;\n  } else\n    cout << \"0\" << endl;\n}\n"
    ],
    [
        "\n  n, a, b = integers with a = 0, b = 0\n  read n\n  for i = 1 to n exclusive\n    a = a + i\n    n = n - a\n    if n >= 0, increment b\n  \n  print b\n\n",
        "int main() {\n  int n, a = 0, b = 0;\n  cin >> n;\n  for (int i = 1; a < n; i++) {\n    a += i;\n    n -= a;\n    if (n >= 0) b++;\n  }\n  cout << b << endl;\n}\n"
    ],
    [
        "\n  declare integer array a with size 151; create integers sum and sum1 where sum1 = 0\n  read variable sum from the input\n  in the for loop, change i from 1 to 150 inclusive\n    set a[i] to (1 + i) * i / 2\n    increase sum1 by a[i]\n    set a[i + 1] to (2 + i) * (i + 1) / 2\n    if sum >= sum1 and sum < sum1 + a[i + 1]\n      print i to the standard output\n      break the loop\n    \n  \n  \n\n",
        "int main() {\n  int a[151], sum, sum1 = 0;\n  cin >> sum;\n  for (int i = 1; i <= 150; i++) {\n    a[i] = (1 + i) * i / 2;\n    sum1 += a[i];\n    a[i + 1] = (2 + i) * (i + 1) / 2;\n    if (sum >= sum1 && sum < sum1 + a[i + 1]) {\n      cout << i << endl;\n      break;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer, s = integer = 0\n  read n\n  loop indefinitely for i = 1 and increase i at the end of the loop\n    if s > n\n      print the result of i - 2\n      exit the for loop\n    else\n      s = s + (i * (i + 1)) / 2\n    \n  \n\n",
        "int main() {\n  int n, s = 0;\n  cin >> n;\n  for (int i = 1;; i++) {\n    if (s > n) {\n      cout << i - 2 << \"\\n\";\n      break;\n    } else {\n      s += (i * (i + 1)) / 2;\n    }\n  }\n}\n"
    ],
    [
        "\n  var, n, aux, x = int with var = 1 and aux = 0 and x = 0\n  read n\n  level = int with level = 0\n  loop infinitely\n    increment x by var\n    increment aux by x\n    if aux > n break\n    increment level\n    increment var\n  \n  print level\n\n",
        "int main() {\n  int var = 1, n, aux = 0, x = 0;\n  cin >> n;\n  int level = 0;\n  while (1) {\n    x += var;\n    aux += x;\n    if (aux > n) break;\n    level++;\n    var++;\n  }\n  cout << level << \"\\n\";\n}\n"
    ],
    [
        "create constant int INF = 1e9\nlet const integer N = 1e5\nlet int array arr of size 10001\ndeclare prework\n  set arr[0] to 0\n  for i = 1 to 10000, set arr[i] to arr[i - 1] + i\n\n\n  call prework\n  let ints n and cnt = 0\n  read n\n  for i = 1, loop indefinitely\n    if n is less than arr[i], break loop\n    set n to n - arr[i]\n    increment cnt\n  \n  print cnt\n  \n\n",
        "const int INF = 1e9;\nconst int N = 1e5;\nint arr[10001];\nvoid prework() {\n  arr[0] = 0;\n  for (int i = 1; i <= 10000; i++) { arr[i] = arr[i - 1] + i; }\n}\nint main() {\n  prework();\n  int n, cnt = 0;\n  cin >> n;\n  for (int i = 1;; i++) {\n    if (n < arr[i]) break;\n    n -= arr[i];\n    cnt++;\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints n, c = 0, d, and count = 0\n  read n\n  for i = 1 to n\n    set c to c + 1\n    if n is greater than or equal to c, increment count\n    set n to n - c\n  \n  print count\n  \n\n",
        "int main() {\n  int n, c = 0, d, count = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    c += i;\n    if (n >= c) count++;\n    n -= c;\n  }\n  cout << count << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  h = int with h = 1\n  temp = int with temp = ((h) * (h + 1) * (h + 2)) / 6\n  loop while temp <= n\n    increment h\n    set temp to ((h) * (h + 1) * (h + 2)) / 6\n  \n  print h - 1\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int h = 1;\n  int temp = ((h) * (h + 1) * (h + 2)) / 6;\n  while (temp <= n) {\n    h++;\n    temp = ((h) * (h + 1) * (h + 2)) / 6;\n  }\n  cout << h - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = long long\n  read n\n  val, ans = long long with val = 0 and ans = 0\n  for i = 0 to 10001\n    increment val by i\n    increment ans by val\n    if ans > n\n      print i - 1\n      \n    \n  \n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  long long val = 0, ans = 0;\n  for (long long i = 0; i < 10001; i++) {\n    val += i;\n    ans += val;\n    if (ans > n) {\n      cout << i - 1 << endl;\n      return 0;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "in function sum taking an int n and returning an int\n  s = int with s = (n * (n + 1)) / 2\n  return s\n\n\n  n = int\n  read n\n  i = int with i = 0\n  s = int with s = 0\n  loop infinitely\n    increment s by sum of i\n    if s > n\n      break\n    else\n      increment i\n    \n  \n  print i - 1\n\n",
        "int sum(int n) {\n  int s = (n * (n + 1)) / 2;\n  return s;\n}\nint main() {\n  int n;\n  cin >> n;\n  int i = 0;\n  int s = 0;\n  while (true) {\n    s = s + sum(i);\n    if (s > n) {\n      break;\n    } else {\n      i++;\n    }\n  }\n  cout << (i - 1) << endl;\n}\n"
    ],
    [
        "\n  n, count = int with count = 0\n  read n\n  flag, i, x = int with flag = 0 and i = 2 and x = 1\n  loop while flag <= n\n    increment flag by x\n    increment x by i\n    increment i\n    if flag <= n increment count\n  \n  print count\n  \n\n",
        "int main() {\n  int n, count = 0;\n  cin >> n;\n  int flag = 0, i = 2, x = 1;\n  while (flag <= n) {\n    flag += x;\n    x += i;\n    i++;\n    if (flag <= n) count++;\n  }\n  cout << count << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  tot, ans = int with tot = 0 and ans = 0\n  for i = 1 to n inclusive\n    increment tot by i * (i + 1) / 2\n    if tot > n break\n    set ans to i\n  \n  print ans\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int tot = 0, ans = 0;\n  for (int i = 1; i <= n; i += 1) {\n    tot += i * (i + 1) / 2;\n    if (tot > n) break;\n    ans = i;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n=long long, x, count and boxes=0\n  read n\n  i=1\n  j=1\n  while boxes+i+x <= n\n    add i to x\n    add j to i\n    increment count\n    add x to boxes\n  \n  print count\n\n",
        "int main() {\n  long long n, x = 0, count = 0, boxes = 0;\n  cin >> n;\n  long long i = 1;\n  long long j = 1;\n  while (boxes + i + x <= n) {\n    x += i;\n    i += j;\n    count++;\n    boxes += x;\n  }\n  cout << count << endl;\n}\n"
    ],
    [
        "\n  let i, n, k be integers\n  while read n\n    k is equal to 0\n    for i is equal to 1, n >= 0 , increment i by 1\n      increment k by i\n      decrement n by k\n    \n    print i - 2 and newline\n  \n\n",
        "int main() {\n  int i, n, k;\n  while (cin >> n) {\n    k = 0;\n    for (i = 1; n >= 0; i++) {\n      k += i;\n      n -= k;\n    }\n    cout << (i - 2) << endl;\n  }\n}\n"
    ],
    [
        "a = array of integers of length 10010\n\n  1st element in a is equal to 1\n  let sum, m be long integers\n  for i = 2 to 10000 inclusive , the value of a[i] is equal to a[i - 1] + i\n  while reading m\n    for i = 1 to 10000 inclusive\n      decrement m by a[i]\n      if m is less than a[i + 1]\n        print i and newline\n        stop\n      \n    \n  \n  \n\n",
        "int a[10010];\nint main() {\n  a[1] = 1;\n  long long int sum, m;\n  for (int i = 2; i <= 10000; i++) a[i] = a[i - 1] + i;\n  while (cin >> m) {\n    for (int i = 1; i <= 10000; i++) {\n      m -= a[i];\n      if (m < a[i + 1]) {\n        cout << i << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "declare integer vector sol\n\n  declare integer n\n  read n\n  declare integer sum = 0\n  for i = 1 to 150 inclusive\n    if sum is greater than n\n      print i - 2, newline\n      \n    \n    increment sum by ((i * (i + 1)) / 2)\n  \n\n",
        "vector<int> sol;\nint main() {\n  int n;\n  cin >> n;\n  int sum = 0;\n  for (int i = 1; i <= 150; i++) {\n    if (sum > n) {\n      cout << i - 2 << endl;\n      return 0;\n    }\n    sum += ((i * (i + 1)) / 2);\n  }\n}\n"
    ],
    [
        "create int array a of length 10010\n\n  set a[0] to 0\n  for i=1 to 10000 inclusive set a[i] = a[i - 1] + i\n  create int n\n  while read n\n    ans =0\n    loop over i starting from i=1\n      if n >= a[i]\n        set n to n - a[i], increment ans\n      else\n        break\n    \n    print ans\n  \n  \n\n",
        "int a[10010];\nint main() {\n  a[0] = 0;\n  for (int i = 1; i <= 10000; i++) a[i] = a[i - 1] + i;\n  int n;\n  while (cin >> n) {\n    int ans = 0;\n    for (int i = 1;; i++) {\n      if (n >= a[i])\n        n -= a[i], ans++;\n      else\n        break;\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, i, l, s = long long integer with s = 0\n  read n\n  for l = 0\n    s = s + l * (l + 1) / 2\n    if s > n, break loop\n  \n  print l - 1\n  \n\n",
        "int main() {\n  long long int n, i, l, s = 0;\n  cin >> n;\n  for (l = 0;; l++) {\n    s += l * (l + 1) / 2;\n    if (s > n) { break; }\n  }\n  cout << l - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  create int ans, t and q, set ans to 0 and t, q to 1\n  ans = ans + t\n  while n >= ans\n    increment q\n    set t to t + q\n    assign ans + t to ans\n  \n  print q - 1\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int ans = 0, t = 1, q = 1;\n  ans = ans + t;\n  while (n >= ans) {\n    q++;\n    t = t + q;\n    ans = ans + t;\n  }\n  cout << q - 1 << endl;\n}\n"
    ],
    [
        "\n  create int n\n  read n\n  create int a, c, b and i, set a, c and b to 0\n  for i=1 to n inclusive\n    set b to (i * (i + 1)) / 2\n    set a to a + b\n    if a > n, break\n    increment c\n  \n  print c\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a = 0, c = 0, b = 0, i;\n  for (int i = 1; i <= n; i++) {\n    b = (i * (i + 1)) / 2;\n    a += b;\n    if (a > n) break;\n    c++;\n  }\n  cout << c << endl;\n  return 0;\n}\n"
    ],
    [
        "create ints n and c\n\n  read n\n  for c = 1, loop as long as c * (c + 1) * (c + 2) / 6 <= n\n    end statement\n  print c - 1\n\n",
        "int n, c;\nint main() {\n  cin >> n;\n  for (c = 1; c * (c + 1) * (c + 2) / 6 <= n; c++)\n    ;\n  cout << c - 1 << '\\n';\n}\n"
    ],
    [
        "\n  let n be an integer\n  get input in n\n  let i = 2 = int\n  while n - i * (i + 1) / 2 is positive\n    decrement n by i * (i + 1) / 2\n    increment i\n  \n  print i-1\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int i = 2;\n  while (n - i * (i + 1) / 2 > 0) {\n    n -= i * (i + 1) / 2;\n    i++;\n  }\n  cout << i - 1 << endl;\n}\n"
    ],
    [
        "a is a new array of integers with size 10010\n\n  set a[1] to 1\n  declare new long long int variables sum and m\n  for i from 2 to 10000 inclusive, change a[i] to a[i - 1] + i\n  read m and loop further\n    start for loop from i = 1 to 10000 inclusive incrementing i\n      decrease m by a[i]\n      if m is less than a[i + 1]\n        print i\n        break the loop\n      \n    \n  \n  \n\n",
        "int a[10010];\nint main() {\n  a[1] = 1;\n  long long int sum, m;\n  for (int i = 2; i <= 10000; i++) a[i] = a[i - 1] + i;\n  while (cin >> m) {\n    for (int i = 1; i <= 10000; i++) {\n      m -= a[i];\n      if (m < a[i + 1]) {\n        cout << i << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  a = int with a = 0\n  b = int with b = 1\n  c = int with c = 0\n  read n\n  loop infinitely\n    for i = 1 to b inclusive increment a by i\n    increment b\n    if a > n break\n    increment c\n  \n  print c\n  \n\n",
        "int main() {\n  int n;\n  int a = 0;\n  int b = 1;\n  int c = 0;\n  cin >> n;\n  while (true) {\n    for (int i = 1; i <= b; i++) { a += i; }\n    b++;\n    if (a > n) { break; }\n    c++;\n  }\n  cout << c << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n, r, t = int with r = 0 and t = 0\n  read n\n  for i = 1\n    increment r by i\n    increment t by r\n    if t > n\n      print i - 1\n      break\n    \n  \n  \n\n",
        "int main() {\n  int n, r = 0, t = 0;\n  cin >> n;\n  for (int i = 1;; ++i) {\n    r += i;\n    t += r;\n    if (t > n) {\n      cout << (i - 1) << endl;\n      break;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let int n\n  read n and while n is truthy\n    let long long int sum = 0\n    let int i\n    for i = 1 loop indefinitely\n      make long long current = 1LL * i * (i + 1) / 2\n      if sum + current is less than or equal to n\n        set n to n - sum + current\n      else do\n        break loop\n    \n    print i - 1\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    long long sum = 0;\n    int i;\n    for (i = 1;; i++) {\n      long long current = 1LL * i * (i + 1) / 2;\n      if (sum + current <= n)\n        n -= sum + current;\n      else\n        break;\n    }\n    cout << i - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "cube = long long\n\n  res = long long\n  read cube\n  for i = 0 loop while i * (i + 1) * ( i + 2) <= 6 * cube set res to i\n  print res\n  \n\n",
        "long long cube;\nint main() {\n  long long res;\n  cin >> cube;\n  for (long long i = 0; i * (i + 1) * (i + 2) <= 6 * cube; ++i) { res = i; }\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "declare need with integer a as argument, returning integer\n  declare b as integer = 0\n  for i = 1 to a inclusive, increment b by i\n  return b from function\n\n\n  declare integer a\n  read a\n  declare integer i with i = 0\n  while a is greater than or equal to result of run need with i as argument\n    decrement a by need(1)\n    increment i\n  \n  print i - 1 print newline\n\n",
        "int need(int a) {\n  int b = 0;\n  for (int i = 1; i <= a; i++) { b += i; }\n  return b;\n}\nint main() {\n  int a;\n  cin >> a;\n  int i = 0;\n  while (a >= need(i)) {\n    a -= need(i);\n    i++;\n  }\n  cout << i - 1 << endl;\n}\n"
    ],
    [
        "\n  n = int\n  read n\n  sum, i, b = int\n  set sum, b, i to 1\n  loop infinitely\n    if sum is n\n      print i\n      break\n    else\n      if sum > n\n        print i - 1\n        break\n      else\n        increment i\n        increment b by i\n        increment sum by b\n      \n    \n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int sum, i, b;\n  sum = b = i = 1;\n  for (;;) {\n    if (sum == n) {\n      cout << i << endl;\n      break;\n    } else {\n      if (sum > n) {\n        cout << (i - 1) << endl;\n        break;\n      } else {\n        i++;\n        b += i;\n        sum += b;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n=int\n  read n\n  sum and height=0\n  while sum <= n\n    increment height\n    add height*(height+1)/2 to sum\n  \n  print height-1\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int sum = 0, height = 0;\n  while (sum <= n) {\n    height++;\n    sum += height * (height + 1) / 2;\n  }\n  cout << height - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, sum, level be integers\n  while read n\n    if n is equal to 1\n      print 1 and newline\n      proceed to next\n    \n    sum is equal to 1, level is equal to 1\n    for integer i is equal to 2 , the condition is always true, increment i by 1\n      increment level by i\n      increment sum by level\n      if sum is equal to n\n        print i and newline\n        stop\n      else if sum is greater than n\n        print i - 1 and newline\n        stop\n      \n    \n  \n  \n\n",
        "int main() {\n  int n, sum, level;\n  while (cin >> n) {\n    if (n == 1) {\n      cout << '1' << endl;\n      continue;\n    }\n    sum = 1, level = 1;\n    for (int i = 2;; i++) {\n      level += i;\n      sum += level;\n      if (sum == n) {\n        cout << i << endl;\n        break;\n      } else if (sum > n) {\n        cout << i - 1 << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n=int\n  read n\n  if n<4\n    print 1\n    \n  \n  cnt=0, m=1, i=1, sum=0\n  while sum+i <= n\n    addi to sum\n    increment cnt\n    increment m\n    add m to i\n  \n  print cnt\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  if (n < 4) {\n    cout << 1 << endl;\n    return 0;\n  }\n  int cnt = 0, m = 1, i = 1, sum = 0;\n  while (sum + i <= n) {\n    sum = sum + i;\n    cnt++;\n    m++;\n    i += m;\n  }\n  cout << cnt << endl;\n}\n"
    ],
    [
        "\n  let n be a integer\n  read n\n    the 1000th element of sum1 is equal to 0\n    the 1000th element of sum2 is equal to 1\n    let sum be a integer with sum = 0\n    for i = 1 to 50 exclusive\n      increment sum by i\n      sum1[i - 1] is equal to sum\n      sum1[i] is equal to sum1[i - 1] + i + 1\n      sum2[i] is equal to sum2[i - 1] + sum1[i]\n      if sum2[i - 1] <= n and sum2[i] is greater than n, print i and newline\n    \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    int sum1[1000] = {0};\n    int sum2[1000] = {1};\n    int sum = 0;\n    for (int i = 1; i < 50; i++) {\n      sum += i;\n      sum1[i - 1] = sum;\n      sum1[i] = sum1[i - 1] + i + 1;\n      sum2[i] = sum2[i - 1] + sum1[i];\n      if ((sum2[i - 1] <= n) && (sum2[i] > n)) cout << i << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  declare integer n\n  read n\n  declare integer cont = 0\n  declare integer sumador = 1\n  declare i = 1 as integer\n  while n is greater than 0 and n is greater than or equal to sumador\n    let n be n - sumador\n    increment cont\n    increment i\n    let sumador = sumador + 1\n  \n  print cont, \"\\n\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int cont = 0;\n  int sumador = 1;\n  int i = 1;\n  while (n > 0 && n >= sumador) {\n    n = n - sumador;\n    cont++;\n    i++;\n    sumador = sumador + i;\n  }\n  cout << cont << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "declare int variables n and i\n\n  read user input to n\n  for i from 1 to 40 inclusive incrementing i\n    if i * (i + 1) * (i + 2) / 6 is greater than n, stop the loop\n  print i - 1 to the standard output\n\n",
        "int n, i;\nint main() {\n  cin >> n;\n  for (i = 1; i <= 40; i++)\n    if (i * (i + 1) * (i + 2) / 6 > n) break;\n  cout << i - 1 << endl;\n}\n"
    ],
    [
        "\n  declare integers n, tmp = 0, hitung = 0\n  read n\n  for i = 1 to n inclusive\n    increment hitung by ((i * (i + 1)) / 2)\n    if hitung is n\n      set tmp to i\n      break loop\n    else if hitung is greater than n\n      set tmp to i - 1\n      break loop\n    \n  \n  print tmp, newline\n\n",
        "int main() {\n  int n, tmp = 0, hitung = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    hitung += ((i * (i + 1)) / 2);\n    if (hitung == n) {\n      tmp = i;\n      break;\n    } else if (hitung > n) {\n      tmp = i - 1;\n      break;\n    }\n  }\n  cout << tmp << endl;\n}\n"
    ],
    [
        "create integer length = 1e5\n\n  let ints n, i, and sum = 0\n  read n\n  create int vector a of size n + 1\n  set a[0] to 0\n  for i = 1 to n, set a[i] to a[i - 1] + i\n  for i = 1 until sum <= n and i <= n are false, set sum to sum + a[i]\n  if n is equal to 1, increase 1 by 1\n  print the result of i - 2\n  \n\n",
        "int length = 1e5;\nint main() {\n  int n, i, sum = 0;\n  cin >> n;\n  vector<int> a(n + 1);\n  a[0] = 0;\n  for (i = 1; i <= n; i++) { a[i] = a[i - 1] + i; }\n  for (i = 1; (sum <= n) && (i <= n); i++) { sum += a[i]; }\n  if (n == 1) i++;\n  cout << i - 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare new integer variable n\n  read n and keep looping\n    declare new long long variable sum with value 0\n    declare new integer called i\n    set i to 1 and increment it in a for loop\n      declare new long long variable current with value 1LL * i * (i + 1) / 2\n      if sum + current <= n\n        subtract sum + current from n\n      else\n        break the loop\n    \n    print i - 1 to the standard output\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    long long sum = 0;\n    int i;\n    for (i = 1;; i++) {\n      long long current = 1LL * i * (i + 1) / 2;\n      if (sum + current <= n)\n        n -= sum + current;\n      else\n        break;\n    }\n    cout << i - 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  while get n do the following till valid input\n    create long long sum, prev, x and set them to 0\n    for integer i=1 to n with increment i\n      add sum to prev\n      add i to sum\n      if sum+prev less than or equal to n\n        increment x\n      else do the following\n        break the loop\n    \n    print x\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    long long sum = 0, prev = 0, x = 0;\n    for (int i = 1; i <= n; i++) {\n      prev += sum;\n      sum += i;\n      if (sum + prev <= n)\n        x++;\n      else\n        break;\n    }\n    cout << x << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in function inum taking pointer to an int a, int k, int i returning int\n  for l = 1 to k\n    if a[l - 1] is not 1\n      set a[l] to a[l - 1] + (l + 1)\n    else\n      set a[l] to (inum of a, l, i) + l + 1\n    \n  \n  return value of (a + (k - 1))\n\nin function isum taking int i returning int\n  arr, a = int array of size i each\n  set arr[i] to -1\n  set a[i] to -1\n  set a[0] to 1\n  set arr[0] to 1\n  if i is 1\n    return i\n  else\n    j = int with j = 1\n    for j to i\n      if arr[j - 1] is not -1\n        set arr[j] to arr[j - 1] + inum of a, j + 1, i\n      else\n        set arr[j] to isnum of j + j + 1\n      \n    \n  \n  return value of arr + (i - 1)\n\n\n  n, i = int with i = 1\n  read n\n  loop while isnum of i <= n increment i\n  print i - 1\n  \n\n",
        "int inum(int *a, int k, int i) {\n  for (int l = 1; l < k; l++) {\n    if (a[l - 1] != -1) {\n      a[l] = a[l - 1] + (l + 1);\n    } else {\n      a[l] = inum(a, l, i) + l + 1;\n    }\n  }\n  return *(a + (k - 1));\n}\nint isum(int i) {\n  int arr[i], a[i];\n  arr[i] = {-1};\n  a[i] = {-1};\n  a[0] = 1;\n  arr[0] = 1;\n  if (i == 1) {\n    return i;\n  } else {\n    int j = 1;\n    for (j; j < i; j++) {\n      if (arr[j - 1] != -1) {\n        arr[j] = arr[j - 1] + inum(a, j + 1, i);\n      } else {\n        arr[j] = isum(j) + (j + 1);\n      }\n    }\n  }\n  return *(arr + (i - 1));\n}\nint main() {\n  int n, i = 1;\n  cin >> n;\n  while (isum(i) <= n) { i++; }\n  cout << (i - 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare n, cnt, sum, ans, i as long long integers\n  read n\n  let cnt be 0, ans be 0, sum be 0\n  for i = 1 to 10000 inclusive\n    increment ans by i\n    increment sum by ans\n    if sum is greater than n, break loop\n    increment cnt\n  \n  print cnt print newline\n  \n\n",
        "int main() {\n  long long int n, cnt, sum, ans, i;\n  cin >> n;\n  cnt = 0, ans = 0, sum = 0;\n  for (i = 1; i <= 10000; i++) {\n    ans += i;\n    sum += ans;\n    if (sum > n) break;\n    cnt++;\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  create integer array a with dimension 100\n  while get n do till valid input\n    create integer i, sum with i=2, sum=0\n    create integer cs with cs=0\n    set a[1] to 1\n    for integer i=2 with increment i till sum less than n\n      set a[i] to i + a[i-1]\n      add a[i] to sum\n      set cs to i-1\n    \n    print cs\n  \n\n",
        "int main() {\n  int n;\n  int a[100];\n  while (cin >> n) {\n    int i = 2, sum = 0;\n    int cs = 0;\n    a[1] = 1;\n    for (i = 2; sum < n; i++) {\n      a[i] = i + a[i - 1];\n      sum += a[i];\n      cs = i - 1;\n    }\n    cout << cs << endl;\n  }\n}\n"
    ],
    [
        "\n  create integer variables n, i and l with i and l = 0\n  read standard input to n\n  while l <= n\n    increment i by one\n    change l to sum of l and (i * (i + 1)) / 2\n  \n  print i - 1\n  \n\n",
        "int main() {\n  int n, i = 0, l = 0;\n  cin >> n;\n  while (l <= n) {\n    i++;\n    l += (i * (i + 1)) / 2;\n  }\n  cout << i - 1 << endl;\n  return 0;\n}\n"
    ],
    [
        "cum = long long array of size 102\n\n  for i = 1 to 100 inclusive set cum[i] to i\n  for i = 2 to 100 inclusive increment cum[i] by cum[i - 1]\n  n = int\n  read n\n  sum = long long with sum = 0\n  Count = int with Count = 0\n  i = int\n  iterate i starting at 1 while sum <= n\n    increment sum by cum[i]\n    if sum > n\n      break\n    else\n      increment Count\n  \n  print Count\n\n",
        "long long cum[100 + 2];\nint main() {\n  for (int i = 1; i <= 100; i++) cum[i] = i;\n  for (int i = 2; i <= 100; i++) { cum[i] += cum[i - 1]; }\n  int n;\n  cin >> n;\n  long long sum = 0;\n  int Count = 0;\n  int i;\n  for (i = 1; sum <= n; i++) {\n    sum += cum[i];\n    if (sum > n)\n      break;\n    else\n      Count++;\n  }\n  cout << Count << endl;\n}\n"
    ],
    [
        "\n  create int sum = 1\n  make int levels = 1\n  make integer counter = 0\n  let int n\n  read n\n  for i = 2 to n\n    increment counter\n    set levels to levels + i\n    set sum to sum + levels\n  \n  print counter\n\n",
        "int main() {\n  int sum = 1;\n  int levels = 1;\n  int counter = 0;\n  int n;\n  cin >> n;\n  for (int i = 2; sum <= n; i++) {\n    counter++;\n    levels = levels + i;\n    sum = sum + levels;\n  }\n  cout << counter << endl;\n}\n"
    ],
    [
        "\n  declare long long n\n  while read n is true\n    declare i as integer\n    declare long long t = 0\n    declare long long k = 0\n    declare last as integer\n    for i = 1, incrementing i\n      increment t by i\n      increment k by t\n      if n is greater than or equal to k\n        let last be i\n      else\n        break loop\n      \n    \n    if n is 0, let last be 0\n    print last, newline\n  \n\n",
        "int main() {\n  long long n;\n  while (cin >> n) {\n    int i;\n    long long t = 0;\n    long long k = 0;\n    int last;\n    for (i = 1;; i++) {\n      t += i;\n      k += t;\n      if (n >= k) {\n        last = i;\n      } else {\n        break;\n      }\n    }\n    if (n == 0) { last = 0; }\n    cout << last << endl;\n  }\n}\n"
    ],
    [
        "integer function check with string argument s and integer arguments i and j\n  declare integer variables l = i and r = j\n  while l is less than r\n    if s[l] = s[r]\n      increment l\n      decrease r by one\n      skip the rest of the loop\n    else\n      \n  \n  return 1\n\n\n  declare string variable s\n  read s\n  i, n and j are integers where n = length of s\n  set value of i to 0\n  set j to n - 1\n  while i is less than j\n    if s[i] != s[j]\n      if i + 1 = j\n        insert s[i] at position s.begin() + j + 1 of s\n        print s\n        \n      else\n        if check(s, i + 1, j) is 1\n          insert s[i] at position s.begin() + j + 1 of s\n          print s\n          \n        else if check(s, i, j - 1) is 1\n          insert s[j] at position s.begin() + i of s\n          print s\n          \n        else\n          print \"NA\"\n          \n        \n      \n    else\n      increase i\n      decrease j by one\n    \n  \n  if length of s is even\n    push character 'a' to s at position s.begin() + n / 2\n    print s\n    \n  else\n    push character aat s[n / 2] to s at position s.begin() + n / 2 + 1\n    print s\n    \n  \n\n",
        "int check(string s, int i, int j) {\n  int l = i, r = j;\n  while (l < r) {\n    if (s[l] == s[r]) {\n      l++;\n      r--;\n      continue;\n    } else\n      return 0;\n  }\n  return 1;\n}\nint main() {\n  string s;\n  cin >> s;\n  int i, n = s.length(), j;\n  i = 0;\n  j = n - 1;\n  while (i < j) {\n    if (s[i] != s[j]) {\n      if (i + 1 == j) {\n        s.insert(s.begin() + j + 1, s[i]);\n        cout << s << endl;\n        return 0;\n      } else {\n        if (check(s, i + 1, j)) {\n          s.insert(s.begin() + j + 1, s[i]);\n          cout << s << endl;\n          return 0;\n        } else if (check(s, i, j - 1)) {\n          s.insert(s.begin() + i, s[j]);\n          cout << s << endl;\n          return 0;\n        } else {\n          cout << \"NA\" << endl;\n          return 0;\n        }\n      }\n    } else {\n      i++;\n      j--;\n    }\n  }\n  if (s.length() % 2 == 0) {\n    s.insert(s.begin() + n / 2, 'a');\n    cout << s << endl;\n    return 0;\n  } else {\n    s.insert(s.begin() + n / 2 + 1, s[n / 2]);\n    cout << s << endl;\n    return 0;\n  }\n}\n"
    ],
    [
        "let s1 be character array with size 15\nset s2 be character array with size 15\nset s be character array with size 15\n\n  declare integer variable f = 0\n  read s1\n  declare integer variable n = length of s1\n  create boolean flag = 0\n  for i = 0 to 26 exclusive\n    for j = 0 to n inclusive\n      set f to 0\n      for k = 0 to j exclusive, set s[k] to s1[k]\n      s[j] = char('a' + i)\n      for k = j + 1 to n inclusive, set s[k] to s1[k - 1]\n      for i = 0, j = n while i < j increase i and decrease j\n        if s[i] != s[j]\n          increment f\n          if f >= 1, break\n        \n      \n      if f = 0\n        print n elements of s\n        print new line\n        \n      \n    \n  \n  print \"NA\"\n  \n\n",
        "char s1[15];\nchar s2[15];\nchar s[15];\nint main() {\n  int f = 0;\n  cin >> s1;\n  int n = strlen(s1);\n  bool flag = 0;\n  for (int i = 0; i < 26; i++) {\n    for (int j = 0; j <= n; j++) {\n      f = 0;\n      for (int k = 0; k < j; k++) { s[k] = s1[k]; }\n      s[j] = char('a' + i);\n      for (int k = j + 1; k <= n; k++) { s[k] = s1[k - 1]; }\n      for (int i = 0, j = n; i < j; i++, j--) {\n        if (s[i] != s[j]) {\n          f++;\n          if (f >= 1) { break; }\n        }\n      }\n      if (f == 0) {\n        for (int i = 0; i <= n; i++) { cout << s[i]; }\n        cout << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"NA\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string s\n  read s\n  declare integer variable pntr = length of s - 1\n  declare character c\n  for i = 0 to length of s / 2 exclusive\n    if s[i] != s[pntr]\n      declare boolean b = true\n      declare integer variable pntr2 = pntr\n      for integer j = i + 1 to (length of s + 1) / 2 exclusive\n        if s[j] != s[pntr2]\n          set b to false\n        else\n          decrease pntr2\n      if b is true\n        assign value of s[i] to c\n        for integer j = 0 to length of s exclusive\n          print s[j]\n          if j = pntr print c\n        \n        print new line\n        \n      \n      pntr2 = pntr - 1\n      set value of b to true\n      for integer j = i to (length of s + 1) / 2 exclusive\n        if s[j] != s[pntr2]\n          b = false\n        else\n          decrement pntr2\n      if b\n        assign value of s[pntr] to c\n        for integer j = 0 to length of s exclusive\n          if j = i\n          print s[j]\n        \n        print new line\n        \n      \n      print \"NA\"\n      \n    else\n      decrement pntr\n  \n  if length of s is an even number\n    for i = 0 to length of s exclusive\n      if i = (length of s) / 2\n        print s[i] and s[i]\n      else\n        print s[i]\n    print new line\n  else\n    for integer i = 0 to length of s exclusive\n      if i = (length of s / 2)\n        print \"a\" and s[i]\n      else\n        print s[i]\n    print new line\n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int pntr = s.size() - 1;\n  char c;\n  for (int i = 0; i < s.size() / 2; i++) {\n    if (s[i] != s[pntr]) {\n      bool b = true;\n      int pntr2 = pntr;\n      for (int j = i + 1; j < (s.size() + 1) / 2; j++)\n        if (s[j] != s[pntr2]) {\n          b = false;\n        } else\n          pntr2--;\n      if (b) {\n        c = s[i];\n        for (int j = 0; j < s.size(); j++) {\n          cout << s[j];\n          if (j == pntr) cout << c;\n        }\n        cout << endl;\n        return 0;\n      }\n      pntr2 = pntr - 1;\n      b = true;\n      for (int j = i; j < (s.size() + 1) / 2; j++)\n        if (s[j] != s[pntr2]) {\n          b = false;\n        } else\n          pntr2--;\n      if (b) {\n        c = s[pntr];\n        for (int j = 0; j < s.size(); j++) {\n          if (j == i) cout << c;\n          cout << s[j];\n        }\n        cout << endl;\n        return 0;\n      }\n      cout << \"NA\" << endl;\n      return 0;\n    } else\n      pntr--;\n  }\n  if (s.size() % 2) {\n    for (int i = 0; i < s.size(); i++)\n      if (i == (s.size()) / 2)\n        cout << s[i] << s[i];\n      else\n        cout << s[i];\n    cout << endl;\n  } else {\n    for (int i = 0; i < s.size(); i++)\n      if (i == (s.size() / 2))\n        cout << \"a\" << s[i];\n      else\n        cout << s[i];\n    cout << endl;\n  }\n}\n"
    ],
    [
        "declare string variable s\n\n  read s\n  for char = 'a' to 'z' inclusive going alphabetically\n    for integer i = 0 to length of s inclusive\n      declare string t = s\n      insert character c to the t at position i\n      create string k = t\n      reverse k\n      if k = t\n        print t\n        \n      \n    \n  print \"NA\"\n  \n\n",
        "string s;\nint main() {\n  cin >> s;\n  for (char c = 'a'; c <= 'z'; c++)\n    for (int i = 0; i <= s.size(); i++) {\n      string t = s;\n      t.insert(i, 1, c);\n      string k = t;\n      reverse(k.begin(), k.end());\n      if (k == t) {\n        cout << t << endl;\n        return 0;\n      }\n    }\n  cout << \"NA\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  read s\n  create integer flag with flag = -1\n  create integer sz with sz = size of s\n  for i = 0 to 26 exclusive\n    create string a\n    add element ( 'a' + i ) to end of a\n    increment a by s\n    for j = 0 to sz exclusive\n      create string b with b = 0\n      reverse element order from beginning of b to end of b\n      if a is b\n        print a print newline\n        \n      \n      swap element values from a[j] to a[j+1]\n    \n    create string b with b = a\n    reverse element order from beginning of b to end of b\n    if a is b\n      print a print newline\n      \n    \n  \n  print \"NA\" print newline\n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int flag = -1;\n  int sz = s.size();\n  for (int i = 0; i < 26; i++) {\n    string a;\n    a.push_back('a' + i);\n    a += s;\n    for (int j = 0; j < sz; j++) {\n      string b = a;\n      reverse(b.begin(), b.end());\n      if (a == b) {\n        cout << a << endl;\n        return 0;\n      }\n      swap(a[j], a[j + 1]);\n    }\n    string b = a;\n    reverse(b.begin(), b.end());\n    if (a == b) {\n      cout << a << endl;\n      return 0;\n    }\n  }\n  cout << \"NA\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create 2d integer array mp with size 1010 by 1010\n\n  create integers m, n, k\n  read m read n read k\n  set bytes from m to size of m to value 0\n  create integer flog with flag = 0\n  create integer ans with ans = 0\n  for i = 1 to k inclusive\n    create integers x, y\n    read x read y\n    set mp[x][y] to 1\n    if flag is 0\n      if (mp[x - 1][y] and mp[x - 1][y - 1] and mp[x][y - 1]), set flog to 1\n      if (mp[x + 1][y] and mp[x + 1][y + 1] and mp[x][y + 1]), set flog to 1\n      if (mp[x - 1][y] and mp[x - 1][y + 1] and mp[x][y + 1]), set flog to 1\n      if (mp[x + 1][y] and mp[x + 1][y - 1] and mp[x][y - 1]), set flog to 1\n      if flog is true\n        print i print newline\n        \n      \n    \n  \n  print \"0\" print newline\n\n",
        "int mp[1010][1010];\nint main() {\n  int m, n, k;\n  cin >> m >> n >> k;\n  memset(mp, 0, sizeof(mp));\n  int flog = 0;\n  int ans = 0;\n  for (int i = 1; i <= k; i++) {\n    int x, y;\n    cin >> x >> y;\n    mp[x][y] = 1;\n    if (flog == 0) {\n      if (mp[x - 1][y] && mp[x - 1][y - 1] && mp[x][y - 1]) flog = 1;\n      if (mp[x + 1][y] && mp[x + 1][y + 1] && mp[x][y + 1]) flog = 1;\n      if (mp[x - 1][y] && mp[x - 1][y + 1] && mp[x][y + 1]) flog = 1;\n      if (mp[x + 1][y] && mp[x + 1][y - 1] && mp[x][y - 1]) flog = 1;\n      if (flog) {\n        cout << i << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"0\" << endl;\n}\n"
    ],
    [
        "mp = two dimensional int array of sizes 1010 and 1010\n\n  m, n, k = int\n  read m then n then k\n  set all values of mp to 0\n  flog = int with flog = 0\n  ans = int with ans = 0\n  for i = 1 to k inclusive\n    x, y = int\n    read x then y\n    set mp[x][y] to 1\n    if flog is 0\n      if mp[x - 1][y] is not 0 and mp[x - 1][y - 1] is not 0 and mp[x][y - 1] is not 0 then set flog to 1\n      if mp[x + 1][y] is not 0 and mp[x + 1][y + 1] is not 0 and mp[x][y + 1] is not 0 then set flog to 1\n      if mp[x - 1][y] is not 0 and mp[x - 1][y + 1] is not 0 and mp[x][y + 1] is not 0 then set flog to 1\n      if mp[x + 1][y] is not 0 and mp[x + 1][y - 1] is not 0 and mp[x][y - 1] is not 0 then set flog to 1\n      if flog is not 0\n        print i\n        \n      \n    \n  \n  print \"0\"\n\n",
        "int mp[1010][1010];\nint main() {\n  int m, n, k;\n  cin >> m >> n >> k;\n  memset(mp, 0, sizeof(mp));\n  int flog = 0;\n  int ans = 0;\n  for (int i = 1; i <= k; i++) {\n    int x, y;\n    cin >> x >> y;\n    mp[x][y] = 1;\n    if (flog == 0) {\n      if (mp[x - 1][y] && mp[x - 1][y - 1] && mp[x][y - 1]) flog = 1;\n      if (mp[x + 1][y] && mp[x + 1][y + 1] && mp[x][y + 1]) flog = 1;\n      if (mp[x - 1][y] && mp[x - 1][y + 1] && mp[x][y + 1]) flog = 1;\n      if (mp[x + 1][y] && mp[x + 1][y - 1] && mp[x][y - 1]) flog = 1;\n      if (flog) {\n        cout << i << endl;\n        return 0;\n      }\n    }\n  }\n  cout << \"0\" << endl;\n}\n"
    ],
    [
        "let OO, NegOO, N, mod be constant integers with OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 1e3 + 5, mod = 1e9 + 7\nblack = 2d boolean array of N rows and N columns\nboolean check of int x, int z\n  if black[x + 1][z] and black[x + 1][z + 1] and black[x][z + 1], return the value 1\n  if black[x][z - 1] and black[x + 1][z - 1] and black[x + 1][z], return the value 1\n  if black[x][z - 1] and black[x - 1][z] and black[x - 1][z - 1], return the value 1\n  if black[x][z + 1] and black[x - 1][z] and black[x - 1][z + 1], return the value 1\n  \n\n\n  let n, m, k be integers\n  read n, m, k\n  let ans be a integer with ans = 0\n  let x, z be integers\n  for i = 0 to k exclusive\n    read x, z\n    set black[x][z] to 1\n    if not ans\n      if check ( x, z ) , ans is equal to i + 1\n    \n  \n  print ans and newline\n  \n\n",
        "const int OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 1e3 + 5, mod = 1e9 + 7;\nbool black[N][N];\nbool check(int x, int z) {\n  if (black[x + 1][z] && black[x + 1][z + 1] && black[x][z + 1]) return 1;\n  if (black[x][z - 1] && black[x + 1][z - 1] && black[x + 1][z]) return 1;\n  if (black[x][z - 1] && black[x - 1][z] && black[x - 1][z - 1]) return 1;\n  if (black[x][z + 1] && black[x - 1][z] && black[x - 1][z + 1]) return 1;\n  return 0;\n}\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  int ans = 0;\n  int x, z;\n  for (int i = 0; i < k; ++i) {\n    cin >> x >> z;\n    black[x][z] = 1;\n    if (!ans) {\n      if (check(x, z)) ans = i + 1;\n    }\n  }\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "declare long longs n, m, i, k, v1, v2 and f where f = 0, and 2d long long array a with size 1007 by 1007\n\n  read n, m and k\n  for i from 1 to k inclusive\n    read v1 and v2\n    change a[v1][v2] to 1\n    if (a[v1][v2] + a[v1 + 1][v2] + a[v1 + 1][v2 + 1] + a[v1][v2 + 1]) = 4\n      print i\n      assign 1 to f\n      break the loop\n    \n    if a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 + 1] + a[v1 - 1][v2 + 1] = 4\n      print i\n      set f to 1\n      stop the loop\n    \n    if a[v1][v2] + a[v1][v2 - 1] + a[v1 + 1][v2] + a[v1 + 1][v2 - 1] = 4\n      print i\n      set f to 1\n      stop the loop\n    \n    if a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 - 1] + a[v1 - 1][v2 - 1] = 4\n      print i\n      change f to 1\n      break the loop\n    \n  \n  if f is equal to 0, print 0\n  \n\n",
        "long long n, m, i, a[1007][1007], k, v1, v2, f = 0;\nint main() {\n  cin >> n >> m >> k;\n  for (i = 1; i <= k; i++) {\n    cin >> v1 >> v2;\n    a[v1][v2] = 1;\n    if ((a[v1][v2] + a[v1 + 1][v2] + a[v1 + 1][v2 + 1] + a[v1][v2 + 1]) == 4) {\n      cout << i << endl;\n      f = 1;\n      break;\n    }\n    if ((a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 + 1] + a[v1 - 1][v2 + 1]) == 4) {\n      cout << i << endl;\n      f = 1;\n      break;\n    }\n    if ((a[v1][v2] + a[v1][v2 - 1] + a[v1 + 1][v2] + a[v1 + 1][v2 - 1]) == 4) {\n      cout << i << endl;\n      f = 1;\n      break;\n    }\n    if ((a[v1][v2] + a[v1 - 1][v2] + a[v1][v2 - 1] + a[v1 - 1][v2 - 1]) == 4) {\n      cout << i << endl;\n      f = 1;\n      break;\n    }\n  }\n  if (f == 0) cout << 0 << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 1e5 + 5\ncreate integers x, y, create integer array arr with size 1005 by 1005\ndeclare solve with integers st1, st2 as arguments, returning boolean\n  for z = st1 to st1 + 1 inclusive\n    for v = st2 to st2 + 2 inclusive\n      if not arr[x+z][y+v], return false from function\n    \n  \n  return true from function\n\n\n  create integers n, m, k\n  read n read m read k\n  for i = 1 to k inclusive\n    read x read y\n    set arr[x][y] to 1\n    for t = -1 to 0 inclusive\n      for u = -1 to 0 inclusive\n        if result of run solve with t, u as arguments is true, return print i print \"\\n\", 0 from function\n      \n    \n  \n  return print 0 print \"\\n\", 0 from function\n  \n\n",
        "const int N = 1e5 + 5;\nint x, y, arr[1005][1005] = {};\nbool solve(int st1, int st2) {\n  for (int z = st1; z <= st1 + 1; ++z) {\n    for (int v = st2; v <= st2 + 1; ++v) {\n      if (!arr[x + z][y + v]) return false;\n    }\n  }\n  return true;\n}\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 1; i <= k; ++i) {\n    cin >> x >> y;\n    arr[x][y] = 1;\n    for (int t = -1; t <= 0; ++t) {\n      for (int u = -1; u <= 0; ++u) {\n        if (solve(t, u)) return cout << i << \"\\n\", 0;\n      }\n    }\n  }\n  return cout << 0 << \"\\n\", 0;\n  return 0;\n}\n"
    ],
    [
        "create 2d ingeger arrays a, vis, with a size 1005 by 1005, vis size 1005 by 1005\ncreate integer ans\ncreate integers n, m\ncreate 2d integer array fang with size 4 by 2 with fang = {1, 0, -1, 0, 0, 1, 0, -1}\ndeclare dfs with integers x, y as arguments, returning void\n  increment ans\n  for i = 0 to 4 exclusive\n    create integer nx with nx = x + fang[i][0]\n    create integer ny with ny = y + fang[i][1]\n    if nx is greater than 0 and nx is less than or equal to n and ny is greater than 0 and ny is less than or equal to m and a[nx][ny] and not vis[nx][ny]\n      set vis[nx][ny] to 1\n      run dfs with nx, ny as arguments\n    \n  \n\n\n  create integers k, i, j\n  while read n read m read k\n    set ans to 0\n    create integers x, y\n    set bytes from a to size of a to value 0\n    create integer res with res = 0\n    for i = 1 to k inclusive\n      read x read y\n      set a[x][y] to 1\n      if not res\n        increment ans\n        if (a[x][y] and a[x + 1][y] and a[x][y + 1] and a[x + 1][y + 1]),set res to 1\n        if (a[x][y] and a[x + 1][y] and a[x][y - 1] and a[x + 1][y - 1]),set res to 1\n        if (a[x][y] and a[x - 1][y] and a[x][y + 1] and a[x - 1][y + 1]),set res to 1\n        if (a[x][y] and a[x - 1][y] and a[x][y - 1] and a[x - 1][y - 1]),set res to 1\n      \n    \n    if not res, set ans to 0\n    print ans print newline\n  \n\n",
        "int a[1005][1005], vis[1005][1005];\nint ans;\nint n, m;\nint fang[4][2] = {1, 0, -1, 0, 0, 1, 0, -1};\nvoid dfs(int x, int y) {\n  ans++;\n  for (int i = 0; i < 4; ++i) {\n    int nx = x + fang[i][0];\n    int ny = y + fang[i][1];\n    if (nx > 0 && nx <= n && ny > 0 && ny <= m && a[nx][ny] && !vis[nx][ny]) {\n      vis[nx][ny] = 1;\n      dfs(nx, ny);\n    }\n  }\n}\nint main() {\n  int k, i, j;\n  while (cin >> n >> m >> k) {\n    ans = 0;\n    int x, y;\n    memset(a, 0, sizeof(a));\n    int res = 0;\n    for (i = 1; i <= k; ++i) {\n      cin >> x >> y;\n      a[x][y] = 1;\n      if (!res) {\n        ans++;\n        if (a[x][y] && a[x + 1][y] && a[x][y + 1] && a[x + 1][y + 1]) res = 1;\n        if (a[x][y] && a[x + 1][y] && a[x][y - 1] && a[x + 1][y - 1]) res = 1;\n        if (a[x][y] && a[x - 1][y] && a[x][y + 1] && a[x - 1][y + 1]) res = 1;\n        if (a[x][y] && a[x - 1][y] && a[x][y - 1] && a[x - 1][y - 1]) res = 1;\n      }\n    }\n    if (!res) ans = 0;\n    cout << ans << endl;\n  }\n}\n"
    ],
    [
        "create bool a[1005][1005]\n\n  create int n and m\n  read n, m\n  create int k\n  read k\n  for c=1 to k inclusive\n    create int x and y\n    read x, y\n    set a[x][y] = true\n    if a[x][y], a[x + 1][y], a[x][y + 1], a[x + 1][y + 1] are true\n      print c\n      \n    else if a[x][y] and a[x - 1][y] and a[x][y + 1] and a[x - 1][y + 1] are not false\n      print c and a newline\n      \n    else if a[x][y], a[x - 1][y], a[x][y - 1], a[x - 1][y - 1] = true\n      print c\n      \n    else if a[x][y] and a[x + 1][y] and a[x][y - 1] and a[x + 1][y - 1] different from false\n      print c\n      \n    \n  \n  print 0 and a newline\n  \n\n",
        "bool a[1005][1005];\nint main() {\n  int n, m;\n  cin >> n >> m;\n  int k;\n  cin >> k;\n  for (int c = 1; c <= k; c++) {\n    int x, y;\n    cin >> x >> y;\n    a[x][y] = true;\n    if (a[x][y] && a[x + 1][y] && a[x][y + 1] && a[x + 1][y + 1]) {\n      cout << c << endl;\n      return 0;\n    } else if (a[x][y] && a[x - 1][y] && a[x][y + 1] && a[x - 1][y + 1]) {\n      cout << c << endl;\n      return 0;\n    } else if (a[x][y] && a[x - 1][y] && a[x][y - 1] && a[x - 1][y - 1]) {\n      cout << c << endl;\n      return 0;\n    } else if (a[x][y] && a[x + 1][y] && a[x][y - 1] && a[x + 1][y - 1]) {\n      cout << c << endl;\n      return 0;\n    }\n  }\n  cout << 0 << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 1e3 + 5\ncreate 2d boolean array mark with size N by N\n\n  create integers n, m, k\n  read n read m read k\n  for i = 0 to k exclusive\n    create integers x, y\n    read x read y\n    set mark[decrement x][decrement y] to true\n    for a = x - 1 to x inclusive\n      for b = y - 1 to y inclusive\n        if bitwise not minimum of (a and b) and a + 1 is less than n and b + 1 is less than m\n          create boolean bad with bad = true\n          for c = 0 to 4 exclusive, set bad to bad bitwise and mark[ a + ( c bitwise and 1 ) ][ b + ( c bitshift right 1 bitwise and 1) ]\n          if bad, return print i + 1 print newline, 0\n        \n  \n  print \"0\\n\"\n  \n\n",
        "const int N = 1e3 + 5;\nbool mark[N][N];\nint main() {\n  int n, m, k;\n  cin >> n >> m >> k;\n  for (int i = 0; i < k; i++) {\n    int x, y;\n    cin >> x >> y;\n    mark[--x][--y] = true;\n    for (int a = x - 1; a <= x; a++)\n      for (int b = y - 1; b <= y; b++)\n        if (~min(a, b) && a + 1 < n && b + 1 < m) {\n          bool bad = true;\n          for (int c = 0; c < 4; c++) bad &= mark[a + (c & 1)][b + (c >> 1 & 1)];\n          if (bad) return cout << i + 1 << endl, 0;\n        }\n  }\n  cout << \"0\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  create strings str, s, ans, min with min = \"z\"\n  read str read n\n  for i = 0 to n exclusive\n    read s\n    if s is str\n      set min to str\n      break loop\n    \n    if first index of str in s is 0 and s is less than min, set min to s\n  \n  if min is \"z\"\n    print str print newline\n  else\n    print min print newline\n  \n\n",
        "int main() {\n  int n;\n  string str, s, ans, min = \"z\";\n  cin >> str >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> s;\n    if (s == str) {\n      min = str;\n      break;\n    }\n    if ((s.find(str) == 0) && (s < min)) min = s;\n  }\n  if (min == \"z\")\n    cout << str << endl;\n  else\n    cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string str, str2, ans, set ans to a\n  create int n and flag, assign 0 to flag\n  read str\n  set len to length of str\n  read n\n  for i=0 to n exclusive\n    read str2\n    set flag to 0\n    for j=0 to len\n      if str[j] different from str2[j]\n        flag =1\n        break\n      \n    \n    if flag=1, continue\n    if ans equal to a\n      set ans to str2\n    else if str2<ans\n      set ans = str2\n    \n  \n  if ans different from a\n    print ans\n  else\n    print str and a newline\n  \n  \n\n",
        "int main() {\n  string str, str2, ans = \"a\";\n  int n, flag = 0;\n  cin >> str;\n  int len = str.length();\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> str2;\n    flag = 0;\n    for (int j = 0; j < len; j++) {\n      if (str[j] != str2[j]) {\n        flag = 1;\n        break;\n      }\n    }\n    if (flag == 1) { continue; }\n    if (ans == \"a\") {\n      ans = str2;\n    } else if (str2 < ans) {\n      ans = str2;\n    }\n  }\n  if (ans != \"a\") {\n    cout << ans << endl;\n  } else {\n    cout << str << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let str, s be strings with s = array of strings of length 105\ncreate a vector of strings s1\nlet n be a integer\n\n  read str\n  read n\n  for i = 0 to n exclusive, read s[i]\n  sort the values s and s + n\n  for i = 0 to n exclusive\n    if s[i].find(str) is equal to 0 , push_back s[i] in s1\n  \n  if length of s1\n    print s1[0] and newline\n  else do the following\n    print str and newline\n  \n\n",
        "string str, s[105];\nvector<string> s1;\nint n;\nint main() {\n  cin >> str;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  sort(s, s + n);\n  for (int i = 0; i < n; i++) {\n    if (s[i].find(str) == 0) s1.push_back(s[i]);\n  }\n  if (s1.size())\n    cout << s1[0] << \"\\n\";\n  else\n    cout << str << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  str = string\n  read str\n  len = int with len = length of str\n  n = int\n  read n\n  vec = string vector\n  for i = 0 to n\n    temp = string\n    read temp\n    pos = int with pos = index of str in temp\n    if pos is 0\n      suffix = string with suffix = substr of len on temp\n      append suffix to vec\n    \n  \n  if size of vec is 0\n    pritn str\n  else\n    sort vec\n    print str + vec[0]\n  \n  \n\n",
        "int main() {\n  string str;\n  cin >> str;\n  int len = str.length();\n  int n;\n  cin >> n;\n  vector<string> vec;\n  for (int i = 0; i < n; i++) {\n    string temp;\n    cin >> temp;\n    int pos = temp.find(str);\n    if (pos == 0) {\n      string suffix = temp.substr(len);\n      vec.push_back(suffix);\n    }\n  }\n  if (vec.size() == 0) {\n    cout << str << endl;\n  } else {\n    sort(vec.begin(), vec.end());\n    cout << (str + vec[0]) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  s = string\n  read s\n  n = integer\n  read n\n  vs = vector string\n  for i = 0 to n exclusive\n    ss = string\n    read ss\n    append ss in vs\n  \n  sort vs.begin() and vs.end()\n  len = integer with len = s.size()\n  for i = 0 to n exclusive\n    if vs[i].substr(0, len) is s\n      print vs[i]\n      \n    \n  print s\n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int n;\n  cin >> n;\n  vector<string> vs;\n  for (int i = 0; i < n; i++) {\n    string ss;\n    cin >> ss;\n    vs.push_back(ss);\n  }\n  sort(vs.begin(), vs.end());\n  int len = s.size();\n  for (int i = 0; i < n; i++)\n    if (vs[i].substr(0, len) == s) {\n      cout << vs[i] << endl;\n      return 0;\n    }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let str be a string , s = array of strings of length 101\n  let n be a integer\n  read str\n  read n\n  for i = 1 to n inclusive, read s[i]\n  sort the values s + 1 and s + n + 1\n  for i = 1 to n inclusive\n    if s[i].substr(0, length of str ) is equal to str\n      print s[i] and newline\n      \n    \n  print str and newline\n  \n\n",
        "int main() {\n  string str, s[101];\n  int n;\n  cin >> str;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> s[i];\n  sort(s + 1, s + n + 1);\n  for (int i = 1; i <= n; i++)\n    if (s[i].substr(0, str.length()) == str) {\n      cout << s[i] << endl;\n      return 0;\n    }\n  cout << str << endl;\n  return 0;\n}\n"
    ],
    [
        "function subset (get strings n1 and n2 and int len, return bool)\n  for i=0 to len exclusive\n    if n1[i] != n2[i] return false\n  \n  return true\n\nfunction small_min(get strings n1 and n2, return string)\n  if length of n1 < length of n2 return n1\n  return n2\n\n\n  s,ans=string\n  read s\n  ara=array of 110 string\n  n=int\n  read n\n  f=0\n  for i=0 to n exclusive\n    read ara[i]\n    j=int\n    for j=0 to size of s exclusive\n      if ara[i][j] != s[j] break\n    \n    if j is size of s\n      if f is 0 ans=ara[i]\n      f=1\n      ans=min(ans, ara[i])\n    \n  \n  if f is 0\n    print s\n  else\n    print ans\n  \n\n",
        "bool subset(string n1, string n2, int len) {\n  for (int i = 0; i < len; i++) {\n    if (n1[i] != n2[i]) return false;\n  }\n  return true;\n}\nstring small_min(string n1, string n2) {\n  if (n1.length() < n2.length()) return n1;\n  return n2;\n}\nint main() {\n  string s, ans;\n  cin >> s;\n  string ara[110];\n  int n;\n  cin >> n;\n  int f = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> ara[i];\n    int j;\n    for (j = 0; j < s.size(); j++) {\n      if (ara[i][j] != s[j]) break;\n    }\n    if (j == s.size()) {\n      if (f == 0) ans = ara[i];\n      f = 1;\n      ans = min(ans, ara[i]);\n    }\n  }\n  if (f == 0)\n    cout << s << endl;\n  else\n    cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "arr = int array of size 1000000 and a = int array of size 1000 and ar = int array of size 100000\nm = char, int map\nmm = char, int map\n\n  s, m, k, n = string with k = \"\" and n = \"\"\n  x = int\n  read s then x\n  for i = 0 to x\n    read m\n    if size of m >= size of s\n      set n to first size of s chars of m\n      if n is s and (m <= k || k is \"\") set k to m\n    \n  \n  if k is not \"\"\n    print k\n  else\n    print s\n  \n\n",
        "int arr[1000000], a[1000], ar[100000];\nmap<char, int> m;\nmap<char, int> mm;\nint main() {\n  string s, m, k = \"\", n = \"\";\n  int x;\n  cin >> s >> x;\n  for (int i = 0; i < x; i++) {\n    cin >> m;\n    if (m.size() >= s.size()) {\n      n = m.substr(0, s.size());\n      if (n == s && (m <= k || k == \"\")) { k = m; }\n    }\n  }\n  if (k != \"\")\n    cout << k << endl;\n  else\n    cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create string pointer ch, create string var\n  create integer n\n  read var read n\n  set ch to new string array with size n\n  for i = 0 to n exclusive, read ch[i]\n  sort elements from ch to ch + n\n  for i = 0 to n exclusive\n    if first index of var in ch[i] is 0\n      print ch[i] print newline\n      \n    \n  \n  print var print newline\n  \n\n",
        "int main() {\n  string *ch, var;\n  int n;\n  cin >> var >> n;\n  ch = new string[n];\n  for (int i = 0; i < n; i++) cin >> ch[i];\n  sort(ch, ch + n);\n  for (int i = 0; i < n; i++) {\n    if (ch[i].find(var) == 0) {\n      cout << ch[i] << endl;\n      return 0;\n    }\n  }\n  cout << var << endl;\n  return 0;\n}\n"
    ],
    [
        "create string s and string array s1 with dimension 101\ncreate integer n, ok\n\n  get s,n\n  for integer i=1 to n with increment i do get s1[i]\n  for integer i=n to 1 with decrement i\n    for integer j=1 with increment j till j less than i\n      if s1[j] greater than s1[j+1] then swap s1[j] and s1[j+1]\n  for integer k=1 to n with increment k\n    set ok to 1\n    for integer i=0 to length of s -1 with increment i\n      if s[i] not equal to s1[k][i] then\n        set ok to 0\n        break the loop\n      \n    if ok not equal to 0 then\n      print s1[k]\n      \n    \n  \n  print s\n  \n\n",
        "string s, s1[101];\nint n, ok;\nint main() {\n  cin >> s >> n;\n  for (int i = 1; i <= n; ++i) cin >> s1[i];\n  for (int i = n; i >= 1; --i)\n    for (int j = 1; j < i; ++j)\n      if (s1[j] > s1[j + 1]) swap(s1[j], s1[j + 1]);\n  for (int k = 1; k <= n; ++k) {\n    ok = 1;\n    for (int i = 0; i < s.length(); ++i)\n      if (s[i] != s1[k][i]) {\n        ok = 0;\n        break;\n      }\n    if (ok) {\n      cout << s1[k] << endl;\n      return 0;\n    }\n  }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "M=110\ns=array of M by M char\na=array of M char\nf and t=array of M int\nb=array of M char\n\n  n=int\n  while read a\n    read n\n    c=0\n    fill f with 0\n    fill t with 0\n    len=length of a\n    for i=0 to n exclusive\n      read s[i]\n      len1=length of s[i]\n      if len1<len\n        t[i]=1\n        continue\n      \n      for j=0 to len exclusive\n        if a[j] is not s[i][j]\n          t[i]=1\n          break\n        \n      \n      if t[i] is 0\n        f[i]=1\n        fill b with 0\n        copy from s[i] to b\n        increment c\n      \n    \n    if c is 0\n      print a\n    else\n      for i=0 to n exclusive\n        if f[i] is 1\n          if b > s[i]\n            fill b with 0\n            copy from s[i] to b\n          \n        \n      \n      print b\n    \n  \n  \n\n",
        "const int M = 110;\nchar s[M][M];\nchar a[M];\nint f[M], t[M];\nchar b[M];\nint main() {\n  int n;\n  while (cin >> a) {\n    cin >> n;\n    int c = 0;\n    memset(f, 0, sizeof(f));\n    memset(t, 0, sizeof(t));\n    int len = strlen(a);\n    for (int i = 0; i < n; i++) {\n      cin >> s[i];\n      int len1 = strlen(s[i]);\n      if (len1 < len) {\n        t[i] = 1;\n        continue;\n      }\n      for (int j = 0; j < len; j++) {\n        if (a[j] != s[i][j]) {\n          t[i] = 1;\n          break;\n        }\n      }\n      if (t[i] == 0) {\n        f[i] = 1;\n        memset(b, 0, sizeof(b));\n        strcpy(b, s[i]);\n        c++;\n      }\n    }\n    if (c == 0)\n      cout << a << endl;\n    else {\n      for (int i = 0; i < n; i++) {\n        if (f[i] == 1) {\n          if (strcmp(b, s[i]) > 0) {\n            memset(b, 0, sizeof(b));\n            strcpy(b, s[i]);\n          }\n        }\n      }\n      cout << b << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variable with name ss\n  read standard input to ss\n  create new integer n\n  read variable n from the input\n  read and discard the input data\n  create string res = ss\n  declare new boolean noe with value 0\n  for integer i = 0 to n exclusive incrementing i\n    s is a new string\n    read variable s from the input\n    declare string tmp with value \"\"\n    for j = 0 and ii = 0 while j < length of s, increment j\n      if ss[ii] = s[j]\n        increment ii\n      else\n        assign 0 to ii\n      if ii is equal to length of ss\n        if noe is false\n          set res to the substring of s from index j - ii + 1 to the end; set noe to 1\n        else\n          change tmp to the substring of s from index j - ii + 1 to the end\n          set res to min of res and tmp\n          assign 0 to ii\n        \n      \n    \n  \n  print res and '\\n'\n  \n\n",
        "int main() {\n  string ss;\n  cin >> ss;\n  int n;\n  cin >> n;\n  cin.ignore();\n  string res = ss;\n  bool noe = 0;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    string tmp = \"\";\n    for (int j = 0, ii = 0; j < s.length(); j++) {\n      if (ss[ii] == s[j])\n        ii++;\n      else\n        ii = 0;\n      if (ii == ss.length()) {\n        if (!noe)\n          res = s.substr(j - ii + 1, s.length()), noe = 1;\n        else {\n          tmp = s.substr(j - ii + 1, s.length());\n          res = min(res, tmp);\n          ii = 0;\n        }\n      }\n    }\n  }\n  cout << res << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  read s\n  let int len = s.length()\n  let int n\n  read n\n  let string array array of size n\n  let string array output of size n\n  create integer count = 0\n  for i = 0 to n exclusive\n    read array[i]\n    let int flag = 0\n    if array[i].length() is less than len, continue to next loop iteration\n    for j = 0 to len exclusive\n      if array[i][j] is not equal to s[j]\n        set flag to 1\n        break loop\n      \n    \n    if flag is equal to 0, set output[count++] to array[i]\n  \n  if count is 0\n    print s\n    \n  \n  sort output using argument output + count\n  print output[0]\n  \n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int len = s.length();\n  int n;\n  cin >> n;\n  string array[n];\n  string output[n];\n  int count = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> array[i];\n    int flag = 0;\n    if (array[i].length() < len) { continue; }\n    for (int j = 0; j < len; j++) {\n      if (array[i][j] != s[j]) {\n        flag = 1;\n        break;\n      }\n    }\n    if (flag == 0) { output[count++] = array[i]; }\n  }\n  if (count == 0) {\n    cout << s << endl;\n    return 0;\n  }\n  sort(output, output + count);\n  cout << output[0] << endl;\n  return 0;\n}\n"
    ],
    [
        "v = string vector\n\n  x = string\n  read x\n  n, i = long long\n  y = string\n  read n\n  while n is not 0 subtract 1 from n and do\n    read y\n    append y to the end of v\n  \n  sort v\n  for i = 0 to size of v exclusive\n    f = long long with value of the position of x within v[i]\n    if f equals 0\n      print v[i]\n      \n    \n  \n  print x\n\n",
        "vector<string> v;\nint main() {\n  string x;\n  cin >> x;\n  long long n, i;\n  string y;\n  cin >> n;\n  while (n--) {\n    cin >> y;\n    v.push_back(y);\n  }\n  sort(v.begin(), v.end());\n  for (i = 0; i < v.size(); i++) {\n    long long f = v[i].find(x);\n    if (f == 0) {\n      cout << v[i] << \"\\n\";\n      return 0;\n    }\n  }\n  cout << x << \"\\n\";\n}\n"
    ],
    [
        "\n  create integer n\n  create string array s with size 110, create string st\n  read st read n\n  for i = 0 to n exclusive, read s[i]\n  sort elements from s to s + n\n  for i = 0 to n exclusive\n    if substring of s[i] from 0 to size of st is st\n      print s[i] print newline\n      \n    \n  print st print newline\n  \n\n",
        "int main() {\n  int n;\n  string s[110], st;\n  cin >> st >> n;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  sort(s, s + n);\n  for (int i = 0; i < n; i++)\n    if (s[i].substr(0, st.size()) == st) {\n      cout << s[i] << endl;\n      return 0;\n    }\n  cout << st << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer INF = 1e9\n\n  let string s\n  create int N\n  create string array A of size 128\n  read S and N\n  for i = 0 to N exclusive, read A[i]\n  sort A\n  let string ans = S\n  for i = 0 to N exclusive\n    let bool check = true\n    for j = 0 to size of S exclusive\n      if S[j] is not equal to A[i][j]\n        set check to false\n        break loop\n      \n    \n    if check is equal to false\n      continue loop\n    else\n      set ans to A[i]\n      break loop\n    \n  \n  print ans\n  \n\n",
        "const int INF = 1e9;\nint main() {\n  string S;\n  int N;\n  string A[128];\n  cin >> S >> N;\n  for (int i = 0; i < N; i++) { cin >> A[i]; }\n  sort(A, A + N);\n  string ans = S;\n  for (int i = 0; i < N; i++) {\n    bool check = true;\n    for (int j = 0; j < S.size(); j++) {\n      if (S[j] != A[i][j]) {\n        check = false;\n        break;\n      }\n    }\n    if (check == false)\n      continue;\n    else {\n      ans = A[i];\n      break;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s=string\n  n=int\n  read s,n\n  trig=0\n  c=0\n  a=string of n char\n  k=0\n  j=0\n  s2=string\n  z=length of s\n  for i=0 to n exclusive\n    read s2\n    a[i]=s2\n  \n  for i=0 to length of s\n    if s[i] != a[j][k]\n      trig=1\n      increment c\n    else\n      increment k\n    \n    if z is k\n      trig=3\n      break\n    \n    if trig is 1\n      increment j\n      i=-1\n      k=0\n      trig=0\n    \n    if c is n\n      trig=5\n      break\n    \n  \n  if trig is 5\n    print s\n    \n  \n  sort first n items of a\n  t=\"\"\n  if trig is 3\n    for i=0 to n\n      t=a[i]\n      for ind=0 to length of s exclusive\n        if s[ind] != t[ind]\n          a[i]='0'\n          break\n        \n      \n      t=\"\"\n    \n  \n  for i=0 to n exclusive\n    if a[i] is not \"0\"\n      print a[i]\n      \n    \n  \n  print s\n  \n\n",
        "int main() {\n  string s;\n  int n;\n  cin >> s >> n;\n  int trig = 0;\n  int c = 0;\n  string *a = new string[n];\n  int k = 0;\n  int j = 0;\n  string s2;\n  int z = s.length();\n  for (int i = 0; i < n; i++) {\n    cin >> s2;\n    a[i] = s2;\n  }\n  for (int i = 0; i < s.length(); i++) {\n    if (s[i] != a[j][k]) {\n      trig = 1;\n      c++;\n    } else {\n      k++;\n    }\n    if (z == k) {\n      trig = 3;\n      break;\n    }\n    if (trig == 1) {\n      j++;\n      i = -1;\n      k = 0;\n      trig = 0;\n    }\n    if (c == n) {\n      trig = 5;\n      break;\n    }\n  }\n  if (trig == 5) {\n    cout << s << endl;\n    return 0;\n  }\n  sort(a, a + n);\n  string t = \"\";\n  if (trig == 3) {\n    for (int i = 0; i < n; i++) {\n      t = a[i];\n      for (int ind = 0; ind < s.length(); ind++) {\n        if (s[ind] != t[ind]) {\n          a[i] = '0';\n          break;\n        }\n      }\n      t = \"\";\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    if (a[i] != \"0\") {\n      cout << a[i] << endl;\n      return 0;\n    }\n  }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "p, s, ans = string\nn = int\n\n  read p then n\n  set ans to \"\"\n  loop n times\n    read s\n    if size of s as int is greater or equal to size of p as int\n      aux = string with aux = substr of 0 and size of p as int on s\n      if aux is p and (s is less than ans or ans is \"\") set ans to s\n    \n  \n  print p if ans is \"\" else print ans\n\n",
        "string p, s, ans;\nint n;\nint main() {\n  cin >> p >> n;\n  ans = \"\";\n  while (n--) {\n    cin >> s;\n    if ((int)s.size() >= (int)p.size()) {\n      string aux = s.substr(0, (int)p.size());\n      if (aux == p && (s < ans || ans == \"\")) { ans = s; }\n    }\n  }\n  cout << (ans == \"\" ? p : ans) << \"\\n\";\n}\n"
    ],
    [
        "\n  s, t = string\n  n, j = int with j = 0\n  read s then n\n  ar = string array of size n\n  slength = int with slength = length of s\n  for i = 1 to n inclusive\n    read t\n    if t starts with s\n      set ar[j] to t\n      increment j\n    \n  \n  if j is 0\n    print s\n  else\n    sort ar from position 0 to j\n    print ar[0]\n  \n  \n\n",
        "int main() {\n  string s, t;\n  int n, j = 0;\n  cin >> s >> n;\n  string ar[n];\n  int slength = s.size();\n  for (int i = 1; i <= n; i++) {\n    cin >> t;\n    if (t.substr(0, slength) == s) {\n      ar[j] = t;\n      j++;\n    }\n  }\n  if (j == 0)\n    cout << s << '\\n';\n  else {\n    sort(ar, ar + j);\n    cout << ar[0] << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer constants OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 2e5 + 5 and mod = 1e9 + 7\n\n  create new string variable x\n  read variable x from the input\n  create integer n\n  read input to n\n  arr is a new array of strings with size n\n  for c from 0 to n exclusive, read standard input to arr[c]\n  sort arr from 0 to n\n  start for loop from c = 0 to n exclusive incrementing c\n    declare boolean flag = 1\n    for integer i = 0 to the size of x exclusive\n      change flag to 0 if i is less than size of arr[c] and x[i] != arr[c][i]\n    \n    if flag is not 0, return cout << arr[c] << \"\\n\", 0\n  \n  print x and \"\\n\" to the standard output\n  \n\n",
        "const int OO = 0x3f3f3f3f, NegOO = -1 * OO, N = 2e5 + 5, mod = 1e9 + 7;\nint main() {\n  string x;\n  cin >> x;\n  int n;\n  cin >> n;\n  string arr[n];\n  for (int c = 0; c < n; c++) { cin >> arr[c]; }\n  sort(arr, arr + n);\n  for (int c = 0; c < n; c++) {\n    bool flag = 1;\n    for (int i = 0; i < ((int)((x).size())); i++) {\n      if (i < ((int)((arr[c]).size())) && x[i] != arr[c][i]) flag = 0;\n    }\n    if (flag) return cout << arr[c] << \"\\n\", 0;\n  }\n  cout << x << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create string s\n  read s\n  make integer n\n  read n\n  make string vector a of size n\n  for i = 0 to n exclusive, read a[i]\n  let int opt = -1\n  for i = 0 to n exclusive\n    if (int)(a[i]).size() is less than (int)(s).size(), continue to next loop iteration\n    if a[i]. substr(0, (int)(s).size()) is not equal to s, continue to next loop iteration\n    if opt is equal to -1 or a[i] is less than a[opt], set opt to i\n  \n  if opt is not equal to -1\n    print a[opt]\n  else\n    print s\n  \n  print new line\n\n",
        "int main() {\n  string s;\n  cin >> s;\n  int n;\n  cin >> n;\n  vector<string> a(n);\n  for (int i = 0; i < n; ++i) { cin >> a[i]; }\n  int opt = -1;\n  for (int i = 0; i < n; ++i) {\n    if ((int)(a[i]).size() < (int)(s).size()) { continue; }\n    if (a[i].substr(0, (int)(s).size()) != s) { continue; }\n    if (opt == -1 || a[i] < a[opt]) { opt = i; }\n  }\n  if (opt != -1) {\n    cout << a[opt];\n  } else {\n    cout << s;\n  }\n  cout << \"\\n\";\n}\n"
    ],
    [
        "create new constant integer variable N with value 110\ndeclare new string input and string array hist with size N\ndeclare vector of strings called prefixed\ndeclare new integer n\nboolean function comp with string arguments s1 and s2\n  return true if s1 is less than s2 in lexicographic order, or false otherwise\n\nisPref is a boolean function with string arguments s1 and s2\n  if length of s1 is less than length of s2, return false\n  for integer i = 0 to length of s2 exclusive\n    if s1[i] != s2[i], return false\n  return true\n\n\n  read input and n from the input\n  for integer i = 0 to n exclusive incrementing i\n    read hist[i] from the user input\n    if isPref(hist[i], input) returned true, push hist[i] into prefixed\n  \n  if prefixed is not emptu\n    sort prefixed\n    print first element of prefixed to the standard output\n  else\n    print input\n\n",
        "const int N = 110;\nstring hist[N], input;\nvector<string> prefixed;\nint n;\nbool comp(string s1, string s2) {\n  return strcmp(s1.c_str(), s2.c_str()) < 0;\n}\nbool isPref(string s1, string s2) {\n  if (s1.size() < s2.size()) return false;\n  for (int i = 0; i < s2.size(); i++)\n    if (s1[i] != s2[i]) return false;\n  return true;\n}\nint main() {\n  cin >> input >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> hist[i];\n    if (isPref(hist[i], input)) prefixed.push_back(hist[i]);\n  }\n  if (!prefixed.empty()) {\n    sort(prefixed.begin(), prefixed.end(), comp);\n    cout << prefixed[0] << endl;\n  } else\n    cout << input << endl;\n}\n"
    ],
    [
        "\n  s is a new array of strings with size 101\n  declare integer variable n\n  declare new string t\n  read t from the user input\n  read standard input to n\n  in a for loop, change i from 0 to n exclusive, reading s[i] on each loop\n  sort s\n  in a for loop, change i from 0 to n exclusive\n    if length of s[i] is less than length of t, skip the rest of the loop\n    declare integer j with value 0\n    while j < length of t\n      if s[i][j] != t[j], break\n      increment j by one\n    \n    if j = length of t\n      print s[i] to the standard output\n      \n    \n  \n  print t\n  \n\n",
        "int main() {\n  string s[101];\n  int n;\n  string t;\n  cin >> t;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  sort(s, s + n);\n  for (int i = 0; i < n; i++) {\n    if (s[i].length() < t.length()) continue;\n    int j = 0;\n    while (j < (int)t.length()) {\n      if (s[i][j] != t[j]) break;\n      j++;\n    }\n    if (j == (int)t.length()) {\n      cout << s[i] << endl;\n      return 0;\n    }\n  }\n  cout << t << endl;\n  return 0;\n}\n"
    ],
    [
        "s = string\nn = integer\nin function Run that returns nothing\n  while s can be read as a valid string\n    ans, tmp = string\n    for i = 1 to 110 inclusive and increase i at the start of the loop, then ans = ans + z, tmp = tmp + z\n    read n\n    t = string t\n    for i = 1 to n inclusive\n      read t\n      if size of t < size of s, continue\n      if contents of t from the beginning of t to size of s elements away is s, then ans = lower value between ans and t\n    \n    if ans is tmp, then ans = s\n    print ans\n  \n\n\n  call Run\n  \n\n",
        "string s;\nint n;\ninline void Run() {\n  while (cin >> s) {\n    string ans = \"\", tmp = \"\";\n    for (int i = 1; i <= 110; ++i) ans += 'z', tmp += 'z';\n    cin >> n;\n    string t;\n    for (int i = 1; i <= n; ++i) {\n      cin >> t;\n      if (t.size() < s.size()) continue;\n      if (t.substr(0, s.size()) == s) ans = min(ans, t);\n    }\n    if (ans == tmp) ans = s;\n    cout << ans << endl;\n  }\n}\nint main() {\n  Run();\n  return 0;\n}\n"
    ],
    [
        "in the function lexi_comp that takes const string reference a,b and returns bool\n  n = integer with n = min of a.size() and b.size()\n  for i = 0 to n exclusive\n    if a[i] is not b[i], return a[i] < b[i]\n  \n  return a.size() < b.size()\n\nin the function isPrefix that takes const string reference a, b and returns bool\n  if b.size() < a.size(), return false\n  for i = 0 to a.size() exclusive\n    if a[i] is not b[i], return false\n  \n  return true\n\n\n  a, b, ans = string\n  n = integer\n  read a, n\n  ans = a + string on 100 an z\n  ok = bool with ok = false\n  for i = 0 to n exclusive\n    read b\n    if isPrefix on a and b\n      ok = true\n      if lexi_comp(b, ans), swap b and ans\n    \n  \n  if ok\n    print ans\n  else\n    print a\n  \n  \n\n",
        "bool lexi_comp(const string &a, const string &b) {\n  int n = min(a.size(), b.size());\n  for (int i = 0; i < n; i++) {\n    if (a[i] != b[i]) { return a[i] < b[i]; }\n  }\n  return a.size() < b.size();\n}\nbool isPrefix(const string &a, const string &b) {\n  if (b.size() < a.size()) { return false; }\n  for (int i = 0; i < a.size(); i++) {\n    if (a[i] != b[i]) { return false; }\n  }\n  return true;\n}\nint main() {\n  string a, b, ans;\n  int n;\n  cin >> a >> n;\n  ans = a + string(100, 'z');\n  bool ok = false;\n  for (int i = 0; i < n; i++) {\n    cin >> b;\n    if (isPrefix(a, b)) {\n      ok = true;\n      if (lexi_comp(b, ans)) { swap(b, ans); }\n    }\n  }\n  if (ok) {\n    cout << ans << endl;\n  } else {\n    cout << a << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create string st and string array st1 of size 102\nlet long long int n\n\n  read st and n\n  for i = 1 to n, read st1[i]\n  sort st1 + 1 using argument st1 + n + 1\n  for i = 1 to n\n    if st[i].find(st) is equal to 0\n      print st1[i]\n      \n    \n  print st\n  \n\n",
        "string st, st1[102];\nlong long n;\nint main() {\n  cin >> st >> n;\n  for (int i = 1; i <= n; i++) cin >> st1[i];\n  sort(st1 + 1, st1 + n + 1);\n  for (int i = 1; i <= n; i++)\n    if (st1[i].find(st) == 0) {\n      cout << st1[i] << endl;\n      return 0;\n    }\n  cout << st << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a=pointer to string, s=string\n  n=int\n  read s\n  a=array of n string\n  for i=0 to n exclusive read a[i]\n  sort first n items of a\n  for i=0 to n exclusive\n    if a[i] begins with s\n      print a[i]\n      \n    \n  \n  print s\n  \n\n",
        "int main() {\n  string *a, s;\n  int n;\n  cin >> s >> n;\n  a = new string[n];\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  sort(a, a + n);\n  for (int i = 0; i < n; i++) {\n    if (a[i].find(s) == 0) {\n      cout << a[i] << endl;\n      return 0;\n    }\n  }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s = string\n  n = integer\n  read s, n\n  v = vector of string with v = n + 1\n  for i = 0 to n exclusive, read v[i]\n  v[n] = s\n  sort v.begin() and v.end()\n  for i = 0 to n\n    if v[i] is s\n      if i < n and v[i] is v[i + 1].substring(0, (int)v[i].size())\n        print v[i + 1]\n        break loop\n      else\n        print v[i]\n        break loop\n      \n    \n  \n  \n\n",
        "int main() {\n  string s;\n  int n;\n  cin >> s >> n;\n  vector<string> v(n + 1);\n  for (int i = 0; i < n; i++) { cin >> v[i]; }\n  v[n] = s;\n  sort(v.begin(), v.end());\n  for (int i = 0; i <= n; i++) {\n    if (v[i] == s) {\n      if (i < n && v[i] == v[i + 1].substr(0, (int)v[i].size())) {\n        cout << v[i + 1] << endl;\n        break;\n      } else {\n        cout << v[i] << endl;\n        break;\n      }\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "declare check taking in strings s and t and returning bool\n  if length of s is less than length of t, return false\n  if i = 0 to length of t exclusive\n    if s[i] is not equal to t[i], return false\n  return true\n\n\n  let string t\n  read t\n  create integer n\n  read n\n  let string array s of size 1000\n  for i = 1 to n, read s[i]\n  create string min = \"\"\n  for i = 1 to n\n    if check(s[i], t) is true\n      if min is equal to \"\" or s[i] is less than min, set min to s[i]\n  if min is equal to \"\"\n    print t\n  else\n    print min\n  \n\n",
        "bool check(string s, string t) {\n  if (s.length() < t.length()) return false;\n  for (int i = 0; i < t.length(); i++)\n    if (s[i] != t[i]) return false;\n  return true;\n}\nint main() {\n  string t;\n  cin >> t;\n  int n;\n  cin >> n;\n  string s[1000];\n  for (int i = 1; i <= n; i++) cin >> s[i];\n  string min = \"\";\n  for (int i = 1; i <= n; i++)\n    if (check(s[i], t))\n      if (min == \"\" || s[i] < min) min = s[i];\n  if (min == \"\")\n    cout << t << endl;\n  else\n    cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  var = string and str = pointer to a string\n  n = int\n  read var then n\n  set str to new string array of size n\n  read n values into str\n  sort str\n  for i = 0 to n\n    if str[i] starts with var\n      print str[i]\n      \n    \n  \n  print var\n  \n\n",
        "int main() {\n  string *str, var;\n  int n;\n  cin >> var >> n;\n  str = new string[n];\n  for (int i = 0; i < n; i++) cin >> str[i];\n  sort(str, str + n);\n  for (int i = 0; i < n; i++) {\n    if (str[i].find(var) == 0) {\n      cout << str[i] << endl;\n      return 0;\n    }\n  }\n  cout << var << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  read n\n  create vector of booleans called good with n elements filled with 1\n  for i from 0 to n exclusive\n    for j from 0 to n exclusive\n      declare integer x\n      read input to x\n      if x <= 0\n        go to the start of the loop\n      else if x = 1\n        set good[i] to 0\n      else if x = 2\n        set good[j] to 0\n      else\n        set good[i] and good[j] to 0\n    \n  \n  declare vector of integers called sol\n  for i from 0 to n exclusive\n    if good[i] is true, push i + 1 to sol\n  print length of sol\n  if length of sol > 0\n    for integer i = 0 to length of sol exclusive\n      if i != 0, print ' '\n      print sol[i]\n    \n    print new line\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<bool> good(n, 1);\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n      int x;\n      cin >> x;\n      if (x <= 0)\n        continue;\n      else if (x == 1)\n        good[i] = 0;\n      else if (x == 2)\n        good[j] = 0;\n      else\n        good[i] = good[j] = 0;\n    }\n  }\n  vector<int> sol;\n  for (int i = 0; i < n; i++)\n    if (good[i]) sol.push_back(i + 1);\n  cout << sol.size() << endl;\n  if (sol.size() > 0) {\n    for (int i = 0; i < sol.size(); i++) {\n      if (i != 0) cout << ' ';\n      cout << sol[i];\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n,i,j,k,flag=int, a=array of 100 by 100 int, b=array of 100 int filled with 0\n  read n\n  for i=0 to n exclusive\n    for j=0 to n exclusive read a[i][j]\n  \n  k=0\n  for i=0 to n exclusive\n    flag=1\n    for j=0 to n exclusive\n      if i != j\n        if a[i][j] is 1 or 3 flag=0\n      \n    \n    if flag b[k] = i+1, increment k\n  \n  if b[0] is 0\n    print \"0\"\n  else\n    print k\n    for i=0 to k-1 excluisve print b[i], space\n    print b[k-1]\n  \n  \n\n",
        "int main() {\n  int n, i, j, a[100][100], b[100] = {0}, k, flag;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) { cin >> a[i][j]; }\n  }\n  k = 0;\n  for (i = 0; i < n; i++) {\n    flag = 1;\n    for (j = 0; j < n; j++) {\n      if (i != j) {\n        if (a[i][j] == 1 || a[i][j] == 3) flag = 0;\n      }\n    }\n    if (flag) b[k++] = i + 1;\n  }\n  if (b[0] == 0)\n    cout << \"0\" << endl;\n  else {\n    cout << k << endl;\n    for (i = 0; i < k - 1; i++) { cout << b[i] << \" \"; }\n    cout << b[k - 1] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "vis=array of 105 int, f=array of 105 by 105 int\n\n  n=int\n  read n\n  for i=1 to n inclusive\n    for j=1 to n inclusive\n      read f[i][j]\n      if f[i][j] is 1\n        vis[i]=1\n      else if f[i][j] is 2\n        vis[j]=1\n      else if f[i][j] is 3\n        vis[i] = vis[j] = 1\n    \n  \n  a=array of 105 int, top=0\n  for i=1 to n inclusive\n    if not vis[i] a[top]=i, increment top\n  \n  print top\n  for i=0 to top exclusive\n    if i is top-1\n      print a[i]\n    else\n      print a[i] and space\n  \n  \n\n",
        "int vis[105], f[105][105];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      cin >> f[i][j];\n      if (f[i][j] == 1)\n        vis[i] = 1;\n      else if (f[i][j] == 2)\n        vis[j] = 1;\n      else if (f[i][j] == 3)\n        vis[i] = vis[j] = 1;\n    }\n  }\n  int a[105], top = 0;\n  for (int i = 1; i <= n; i++) {\n    if (!vis[i]) { a[top++] = i; }\n  }\n  cout << top << endl;\n  for (int i = 0; i < top; i++) {\n    if (i == top - 1)\n      cout << a[i] << endl;\n    else\n      cout << a[i] << \" \";\n  }\n  return 0;\n}\n"
    ],
    [
        "declare vector of integers vec\n\n  declare int variable n\n  read input to n\n  create 2d array of ints arr with size n by n\n  for i from 0 to n exclusive\n    for j from 0 to n exclusive, read input to arr[i][j]\n  \n  declare int cnt = 0\n  for i from 0 to n exclusive\n    create bool t = true\n    for j = 0 to n exclusive\n      if arr[i][j] = 1 or arr[i][j] = 3\n        set t to false\n        stop the loop\n      \n    \n    if t is true\n      increment cnt by one\n      push i + 1 into vec\n    \n  \n  print cnt\n  declare integer len = length of vec\n  print all elements of vec except last with \" \" after each one\n  if cnt is greater than 0, print last element of vec\n\n",
        "vector<int> vec;\nint main() {\n  int n;\n  cin >> n;\n  int arr[n][n];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) { cin >> arr[i][j]; }\n  }\n  int cnt = 0;\n  for (int i = 0; i < n; i++) {\n    bool t = true;\n    for (int j = 0; j < n; j++) {\n      if (arr[i][j] == 1 || arr[i][j] == 3) {\n        t = false;\n        break;\n      }\n    }\n    if (t) {\n      cnt++;\n      vec.push_back(i + 1);\n    }\n  }\n  cout << cnt << endl;\n  int len = vec.size();\n  for (int i = 0; i < len - 1; i++) { cout << vec[i] << \" \"; }\n  if (cnt > 0) cout << vec[vec.size() - 1] << endl;\n}\n"
    ],
    [
        "\n  define ints n, i, j\n  define 2-dimensional int array a to be of 105 x 105 elements, int array f to be of 105 elements, int t, and int array b to be of 105 elements\n  read n\n  assign zero to t\n  for i by 1 from 0 to n (exclusive), set f[i] to 1\n  for i from 0 to n (exclusive) by 1\n    for j from 0 to n (exclusive) by 1\n      read a[i][j]\n      if a[i][j] is 1\n        set f[i] to 0\n      else if a[i][j] is two\n        zero f[j]\n      otherwise if a[i]j] = three\n        zero f[i] and f[j]\n    \n  \n  for i from 0 to n (exclusive) by 1\n    if f[i], then set b[t] to i + 1 and then increment t\n  \n  print t and newline\n  for i from 0 to t (exclusive) by 1\n    if i isn't t - 1\n      print b[i] and \" \"\n    else\n      print b[i] and newline\n  \n  \n\n",
        "int main() {\n  int n, i, j;\n  int a[105][105], f[105], t, b[105];\n  cin >> n;\n  t = 0;\n  for (i = 0; i < n; i++) f[i] = 1;\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      cin >> a[i][j];\n      if (a[i][j] == 1)\n        f[i] = 0;\n      else if (a[i][j] == 2)\n        f[j] = 0;\n      else if (a[i][j] == 3)\n        f[i] = f[j] = 0;\n    }\n  }\n  for (i = 0; i < n; i++) {\n    if (f[i]) b[t++] = i + 1;\n  }\n  cout << t << endl;\n  for (i = 0; i < t; i++) {\n    if (i != t - 1)\n      cout << b[i] << \" \";\n    else\n      cout << b[i] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n,d,s=int, dist=array of 105 int\n  read n\n  s=n\n  fill dist with 0\n  for i=1 to n inclusive\n    for j=1 to n inclusive\n      read d\n      if d is 1 increment dist[i]\n      if d is 2 increment dist[j]\n      if d is 3\n        increment dist[i]\n        increment dist[j]\n      \n    \n  \n  for i=0 to n inclusive\n    if dist[i] != 0 decrement s\n  \n  print s\n  flot=1\n  for i=1 to n inclusive\n    if dist[i] is 0 and flot\n      print i\n      flot=0\n    else if dist[i] is 0 and not flot\n      print space, i\n  \n  if s print newline\n  \n\n",
        "int main() {\n  int n, d, dist[105], s;\n  cin >> n;\n  s = n;\n  memset(dist, 0, sizeof(dist));\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      cin >> d;\n      if (d == 1) dist[i]++;\n      if (d == 2) dist[j]++;\n      if (d == 3) {\n        dist[i]++;\n        dist[j]++;\n      }\n    }\n  }\n  for (int i = 0; i <= n; i++) {\n    if (dist[i] != 0) s--;\n  }\n  cout << s << endl;\n  int flot = 1;\n  for (int i = 1; i <= n; i++) {\n    if (dist[i] == 0 && flot) {\n      cout << i;\n      flot = 0;\n    } else if (dist[i] == 0 && !flot)\n      cout << \" \" << i;\n  }\n  if (s) cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  define 2D int array r to be 200 x 200, and define ints a, b, c, d, and e\n  while read into a\n    define int dynamic array v2\n    define 200-elt. array v\n    for b from 1 to a by 1\n      set v[b] to 1\n      for c by 1 from 1 to a, read into r[b][c]\n    \n    for b by 1 from 1 to a\n      for c from 1 to a by 1\n        if b is c, then continue\n        if r[b][c] is one, then zero v[b]\n        if r[b][c] is two, then set v[c] to zero\n        if r[b][c] is three,then set v[b] and v[c] to zero\n      \n    \n    assign zero to c\n    for b from 1 to a by 1\n      if v[b] is one\n        increment c\n        append b onto v2\n      \n    \n    if c\n      print c and newline\n      for d from 1 to c by 1\n        if d is one\n          print v2[d - 1]\n        otherwise\n          print \" \" and v2[d - 1]\n        \n      \n      print newline\n    else\n      print c followed by newline\n    \n    clear out v2\n  \n  \n\n",
        "int main() {\n  int r[200][200], a, b, c, d, e;\n  while (cin >> a) {\n    vector<int> v2;\n    int v[200];\n    for (b = 1; b <= a; b++) {\n      v[b] = 1;\n      for (c = 1; c <= a; c++) { cin >> r[b][c]; }\n    }\n    for (b = 1; b <= a; b++) {\n      for (c = 1; c <= a; c++) {\n        if (b == c) continue;\n        if (r[b][c] == 1) v[b] = 0;\n        if (r[b][c] == 2) v[c] = 0;\n        if (r[b][c] == 3) v[b] = 0, v[c] = 0;\n      }\n    }\n    c = 0;\n    for (b = 1; b <= a; b++) {\n      if (v[b] == 1) {\n        c++;\n        v2.push_back(b);\n      }\n    }\n    if (c) {\n      cout << c << endl;\n      for (d = 1; d <= c; d++) {\n        if (d == 1) {\n          cout << v2[d - 1];\n        } else {\n          cout << \" \" << v2[d - 1];\n        }\n      }\n      cout << endl;\n    } else {\n      cout << c << endl;\n    }\n    v2.clear();\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n and a and int array ans of size 105\n  while cin >> n is truthy\n    set all contents of ans to 0\n    for i = 1 to n\n      for j = 1 to n\n        read a\n        if a is equal to 1 or a is equal to 3, set ans[i] to 1\n      \n    let int cnt = 0 and int array b of size 105\n    for i = 1 to n\n      if ans[i] is equal to 0, set b[cnt++] to i\n    \n    if cnt is truthy\n      print cnt\n      for i = 0 to cnt - 1 exclusive, print b[i] and ' '\n      print b[cnt - 1]\n    else\n      print 0\n  \n  \n\n",
        "int main() {\n  int n, a, ans[105];\n  while (cin >> n) {\n    memset(ans, 0, sizeof(ans));\n    for (int i = 1; i <= n; i++)\n      for (int j = 1; j <= n; j++) {\n        cin >> a;\n        if (a == 1 || a == 3) ans[i] = 1;\n      }\n    int cnt = 0, b[105];\n    for (int i = 1; i <= n; i++) {\n      if (ans[i] == 0) b[cnt++] = i;\n    }\n    if (cnt) {\n      cout << cnt << endl;\n      for (int i = 0; i < cnt - 1; i++) cout << b[i] << ' ';\n      cout << b[cnt - 1] << endl;\n    } else\n      cout << 0 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare 2d boolean array good with size 200\n\n  declare integer variable n\n  declare 2d integer array a with size 300 by 300\n  read input to n\n  for i = 1 to n inclusive\n    for j = 1 to n inclusive, read a[i][j]\n  \n  set sizeof(good) bytes at the pointer good to true\n  declare integer variable sum = 0\n  for i from 1 to n inclusive\n    for j from 1 to n inclusive\n      if a[i][j] = 1 or a[i][j] = 3\n        assign false to good[i]\n        stop the loop\n      \n    \n    if good[i] is false, go to the start of the loop\n    for j from 1 to n inclusive\n      if a[j][i] is equal to 2 or a[j][i] is equal to 3\n        change good[i] to false\n        break the loop\n      \n    \n    if good[i] is true, increment sum\n  \n  print sum\n  for i from 1 to n inclusive\n    if good[i] is true\n      if sum is equal to 1\n        print i\n      else\n        print i and ' '\n      decrement sum\n    \n  \n  \n\n",
        "bool good[200];\nint main() {\n  int n;\n  int a[300][300];\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) { cin >> a[i][j]; }\n  }\n  memset(good, true, sizeof(good));\n  int sum = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int j = 1; j <= n; j++) {\n      if (a[i][j] == 1 || a[i][j] == 3) {\n        good[i] = false;\n        break;\n      }\n    }\n    if (!good[i]) continue;\n    for (int j = 1; j <= n; j++) {\n      if (a[j][i] == 2 || a[j][i] == 3) {\n        good[i] = false;\n        break;\n      }\n    }\n    if (good[i]) sum++;\n  }\n  cout << sum << endl;\n  for (int i = 1; i <= n; i++) {\n    if (good[i]) {\n      if (sum == 1)\n        cout << i << endl;\n      else\n        cout << i << ' ';\n      sum--;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  v is a vector of 6 integers\n  for integer i = 0 to 6 exclusive read v[i]\n  declare integer suma = 0\n  create integer minA with value min of v[1] and v[5]\n  create integer maxA with value max of v[1] and v[5]\n  declare integer inicial = v[0] * 2 + 1\n  for i = 0 to minA exclusive\n    increase suma by inicial\n    increase inicial by 2\n  \n  decrement inicial if maxA != minA\n  for i = minA to maxA exclusive, increase suma by inicial\n  assign value of min of v[2] and v[4] to minA\n  assign value of max of v[2] and v[4] to maxA\n  inicial = v[3] * 2 + 1\n  for i = 0 to minA exclusive\n    increase suma by inicial\n    increase inicial by 2\n  \n  decrement inicial if maxA != minA\n  if v[1] = v[5]\n    for integer i = minA to maxA exclusive, increase suma by inicial\n  \n  print suma\n  \n\n",
        "int main() {\n  vector<int> v(6);\n  for (int i = 0; i < 6; i++) cin >> v[i];\n  int suma = 0;\n  int minA = min(v[1], v[5]);\n  int maxA = max(v[1], v[5]);\n  int inicial = v[0] * 2 + 1;\n  for (int i = 0; i < minA; i++) {\n    suma += inicial;\n    inicial += 2;\n  }\n  if (maxA != minA) inicial--;\n  for (int i = minA; i < maxA; i++) { suma += inicial; }\n  minA = min(v[2], v[4]);\n  maxA = max(v[2], v[4]);\n  inicial = v[3] * 2 + 1;\n  for (int i = 0; i < minA; i++) {\n    suma += inicial;\n    inicial += 2;\n  }\n  if (maxA != minA) inicial--;\n  if (v[1] == v[5]) {\n    for (int i = minA; i < maxA; i++) { suma += inicial; }\n  }\n  cout << suma << endl;\n  return 0;\n}\n"
    ],
    [
        "sq is a function that returns an integer and receive integer x\n  return square of x\n\n\n  a = array of integers of length 11\n  for ( integer i=0 to 6 exclusive),read i th element of array a\n  ans is an integer and equals square of (a[0] + a[1] + a[2])\n  decrement ans by square of a[0]) + sq(a[2]) + sq(a[4]\n  print ans and a new line\n  \n\n",
        "inline int sq(int x) {\n  return x * x;\n}\nint main() {\n  int a[11];\n  for (int i = 0; i < 6; i++) cin >> a[i];\n  int ans = sq(a[0] + a[1] + a[2]);\n  ans -= sq(a[0]) + sq(a[2]) + sq(a[4]);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long long array a with size 6\n\n  read 6 elements into array a\n  create long longs ans = 0 and c = 2 * a[0] - 1\n  for i = 0 to a[1] + a[2] exclusive\n    if i <= a[1] && i <= a[5]\n      increase c by 2\n    else if i > a[1] && i is greater than a[5]\n      decrease c by 2\n    if a[1] = a[5] && i = a[1] decrease c by 2\n    if i != a[1] && i = a[5] decrease c by 1\n    if i = a[1] && i != a[5] decrease c by 1\n    increase ans by c\n  \n  print ans\n  \n\n",
        "long long a[6];\nint main() {\n  for (long long i = 0; i < 6; i++) cin >> a[i];\n  long long c = 2 * a[0] - 1, ans = 0;\n  for (long long i = 0; i < a[1] + a[2]; i++) {\n    if (i <= a[1] && i <= a[5])\n      c += 2;\n    else if (i > a[1] && i > a[5])\n      c -= 2;\n    if (a[1] == a[5] && i == a[1]) c -= 2;\n    if (i != a[1] && i == a[5]) c--;\n    if (i == a[1] && i != a[5]) c--;\n    ans += c;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a1, a2, a3, a4, a5, a6 =integers\n  Read a1, a2, a3, a4, a5, a6\n  print (a1 + a2 + a3) * (a1 + a2 + a3) - a1 * a1 - a3 * a3 - a5 * a5 and a new line\n  \n\n",
        "int main() {\n  int a1, a2, a3, a4, a5, a6;\n  cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6;\n  cout << (a1 + a2 + a3) * (a1 + a2 + a3) - a1 * a1 - a3 * a3 - a5 * a5 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c, d, e, f, maxlevel = long\n  read a, b, c, d, e, f\n  maxlevel = b + c\n  curr = long with curr = a * 2 - 1\n  sum = long with sum = 0\n  for i = 0 to maxlevel exclusive\n    if b > 0\n      increment curr\n    else if b < 0\n      decrement curr\n    decrement b\n    if f > 0\n      increment curr\n    else if f < 0\n      decrement curr\n    decrement f\n    sum = sum + curr\n  \n  print sum\n  \n\n",
        "int main() {\n  long a, b, c, d, e, f, maxlevel;\n  cin >> a >> b >> c >> d >> e >> f;\n  maxlevel = b + c;\n  long curr = a * 2 - 1;\n  long sum = 0;\n  for (int i = 0; i < maxlevel; i++) {\n    if (b > 0)\n      curr++;\n    else if (b < 0)\n      curr--;\n    b--;\n    if (f > 0)\n      curr++;\n    else if (f < 0)\n      curr--;\n    f--;\n    sum += curr;\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer array a with 6 elements\n  read 6 elements into a\n  create integer n = a[0] + a[1]\n  declare integer arrays l and r with size n\n  for i = 0 to a[1] exclusive, set l[i] to 1\n  for integer i = a[1] + 1 to n exclusive, set l[i] to -1\n  for i = 0 to a[3] exclusive, set r[i] to 1\n  for i = a[3] + 1 to n exclusive, set r[i] to -1\n  declare integers ans = 0 and step = 2 * a[2] - 1\n  for integer i = 0 to n exclusive\n    increase step by l[i] + r[i]\n    increase ans by step\n  \n  print ans\n  \n\n",
        "int main() {\n  int a[6];\n  for (int i = 0; i < 6; ++i) cin >> a[i];\n  int n = a[0] + a[1];\n  int l[n] = {}, r[n] = {};\n  for (int i = 0; i < a[1]; ++i) l[i] = 1;\n  for (int i = a[1] + 1; i < n; ++i) l[i] = -1;\n  for (int i = 0; i < a[3]; ++i) r[i] = 1;\n  for (int i = a[3] + 1; i < n; ++i) r[i] = -1;\n  int ans = 0, step = 2 * a[2] - 1;\n  for (int i = 0; i < n; ++i) {\n    step += l[i] + r[i];\n    ans += step;\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer arrays a, b, with a size 10, b size 5005\n\n  set b[0] to 0\n  set b[1] to 1\n  for i = 2 to 5005 exclusive, set b[i] to i * i\n  create integer len with len = 0\n  for i = 1 to 6 inclusive, read a[i]\n  create integer m with m = a[1] + a[2] + a[3]\n  set len to b[m] - (b[a[1]] + b[a[3]] + b[a[5]])\n  print len print newline\n  \n\n",
        "int a[10], b[5005];\nint main() {\n  b[0] = 0;\n  b[1] = 1;\n  for (int i = 2; i < 5005; i++) { b[i] = i * i; }\n  int len = 0;\n  for (int i = 1; i <= 6; i++) { cin >> a[i]; }\n  int m = a[1] + a[2] + a[3];\n  len = b[m] - (b[a[1]] + b[a[3]] + b[a[5]]);\n  cout << len << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare long long variables a, b, c, d, e and f\n  read a, b, c, d, e and f\n  print (c + d + e) * (c + d + e) - (a * a) - (c * c) - (e * e) and \"\\n\"\n  \n\n",
        "int main() {\n  long long a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  cout << (c + d + e) * (c + d + e) - (a * a) - (c * c) - (e * e) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, c, d, e, and f\n  print a b c d e and f\n  set integer x equal to a + b + c\n  let res be an integer equal to (x * x) - (a * a) - (c * c) - (e * e)\n  print res and a new line\n  \n\n",
        "int main() {\n  int a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  int x = a + b + c;\n  int res = (x * x) - (a * a) - (c * c) - (e * e);\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "let a, b, c, d, e, f be ints\n\n  read a, b, c, d, e, f\n  print (a + b + c) * (a + b + c) - a * a - c * c - e * e and one newline\n\n",
        "int a, b, c, d, e, f;\nint main() {\n  cin >> a >> b >> c >> d >> e >> f;\n  cout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl;\n}\n"
    ],
    [
        "maxn = const int with maxn = 1e6\ninf = const double with inf = 0x3f3f3f3f3f3f3f3f\na, b, c, d, e, f = int\n\n  while reading a then b then c then d then e then f print (a + b + c) * (a + b + c) - a * a - c * c - e * e\n  \n\n",
        "const int maxn = 1e6;\nconst double inf = 0x3f3f3f3f3f3f3f3f;\nint a, b, c, d, e, f;\nint main() {\n  while (cin >> a >> b >> c >> d >> e >> f) { cout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl; }\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, c, d, e, f, ans, x, y and z are integers where ans, x, y and z = 0\n  read a, b, c, d, e and f\n  if b is greater than f\n    increase ans by 2 * a * f + f * (f + 1) - f\n    set value of x to a + f\n  else\n    increase ans by 2 * a * b + b * (b + 1) - b\n    set value of x to a + b\n  \n  if c is greater than e\n    increase ans by 2 * d * e + e * (e + 1) - e\n    assign value of c - e to y\n  else\n    increase ans by 2 * d * c + c * (c + 1) - c\n    y = e - c\n  \n  increase ans by 2 * x * y\n  print ans and '\\n'\n  \n\n",
        "int main() {\n  int a, b, c, d, e, f, ans = 0, x = 0, y = 0, z = 0;\n  cin >> a >> b >> c >> d >> e >> f;\n  if (b > f) {\n    ans += 2 * a * f + f * (f + 1) - f;\n    x = a + f;\n  } else {\n    ans += 2 * a * b + b * (b + 1) - b;\n    x = a + b;\n  }\n  if (c > e) {\n    ans += 2 * d * e + e * (e + 1) - e;\n    y = c - e;\n  } else {\n    ans += 2 * d * c + c * (c + 1) - c;\n    y = e - c;\n  }\n  ans += 2 * x * y;\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "declare integers n and res where n = 6 and array of integers a with 10 elements\n\n  for i = 1 to n inclusive read a[i]\n  declare integers root = a[1] * 2 + 1 and curr = root\n  create integers first_layer, second_layer and third_layer = 0\n  if a[2] >= a[n]\n    set first_layer = a[n] and second_layer = a[2] - a[n]\n  else\n    set first_layer = a[2] and second_layer = a[n] - a[2]\n  for i = 1 to first_layer inclusive\n    set value of res to res + curr\n    curr = curr + 2\n  \n  if first_layer = a[2]\n    second_layer = min of second_layer and a[3]\n  else\n    second_layer = min of second_layer and a[5]\n  for i = 1 to second_layer inclusive, increase res by curr - 1\n  set root = a[4] * 2 + 1 and curr = root\n  for integer i = 1 to min of a[3] and a[5] inclusive\n    res = res + curr\n    set curr to curr + 2\n  \n  print res and '\\n'\n  \n\n",
        "int n = 6, res, a[10];\nint main() {\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  int root = a[1] * 2 + 1, curr = root;\n  int first_layer = 0, second_layer = 0, third_layer = 0;\n  if (a[2] >= a[n])\n    first_layer = a[n], second_layer = a[2] - a[n];\n  else\n    first_layer = a[2], second_layer = a[n] - a[2];\n  for (int i = 1; i <= first_layer; i++) {\n    res = res + curr;\n    curr = curr + 2;\n  }\n  if (first_layer == a[2])\n    second_layer = min(second_layer, a[3]);\n  else\n    second_layer = min(second_layer, a[5]);\n  for (int i = 1; i <= second_layer; i++) res = res + curr - 1;\n  root = a[4] * 2 + 1, curr = root;\n  for (int i = 1; i <= min(a[3], a[5]); i++) {\n    res = res + curr;\n    curr = curr + 2;\n  }\n  cout << res << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  set ee and acc = 0\n  for i=0 to 6 exclusive\n    create int e\n    read e\n    if i is even, assign acc + e * e to acc\n    if i is less than 3, ee= ee +e\n  \n  set ans equal to ee * ee - acc\n  print ans\n\n",
        "int main() {\n  int ee = 0, acc = 0;\n  for (int i = 0; i < 6; i++) {\n    int e;\n    cin >> e;\n    if (i % 2 == 0) acc += e * e;\n    if (i < 3) ee += e;\n  }\n  int ans = ee * ee - acc;\n  cout << ans << endl;\n}\n"
    ],
    [
        "\n  a1, a2, a3, a4, a5, a6, result =integers with result = 0\n  Read a1, a2, a3, a4, a5, a6\n  set result to ((a1 + a2 + a3) * (a1 + a2 + a3)) - (a1 * a1) - (a3 * a3) - (a5 * a5)\n  print result and a new line\n  \n\n",
        "int main() {\n  int a1, a2, a3, a4, a5, a6, result = 0;\n  cin >> a1 >> a2 >> a3 >> a4 >> a5 >> a6;\n  result = ((a1 + a2 + a3) * (a1 + a2 + a3)) - (a1 * a1) - (a3 * a3) - (a5 * a5);\n  cout << result << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers a, b, c, d, e and f\n  read a, b, c, d, e and f\n  if e > c then swap e and c and swap f and b\n  print 2 * c * (d + e) - e * e + 2 * a * b + b * b\n\n",
        "int main() {\n  int a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  if (e > c) swap(e, c), swap(f, b);\n  cout << 2 * c * (d + e) - e * e + 2 * a * b + b * b << endl;\n}\n"
    ],
    [
        "\n  create int a, b, c, d, e, f\n  read a, b, c, d, e and f\n  print (a + b + c) * (a + b + c) - a * a - c * c - e * e\n  \n\n",
        "int main() {\n  long long a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  cout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl;\n  return 0;\n}\n"
    ],
    [
        "maxn = constant integer with value of 105\n\n  a, b, c, d, e, f = integers\n  read a, b, c, d, e, and f\n  print (a + b + c) * (a + b + c) - a * a - c * c - e * e\n\n",
        "const int maxn = 105;\nint main() {\n  int a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  cout << (a + b + c) * (a + b + c) - a * a - c * c - e * e << endl;\n}\n"
    ],
    [
        "declare int array side with size 7\n\n  for integer i = 1 to 6 inclusive read side[i]\n  create integer h1 = min of side[2] and side[6]\n  create integer h2 = min of side[3] and side[5]\n  declare int h3 = side[2] + side[3] - h1 - h2\n  create int ans = 0\n  for integer i = side[1] + 1 to side[1] + h1 inclusive, increase ans by 2 * i - 1\n  for integer i = side[4] + 1 to side[4] + h2 inclusive, increase ans by 2 * i - 1\n  for i = 1 to h3 inclusive, increase ans by (side[1] + h1) * 2\n  print ans\n  \n\n",
        "int side[7];\nint main() {\n  for (int i = 1; i <= 6; ++i) cin >> side[i];\n  int h1 = min(side[2], side[6]);\n  int h2 = min(side[3], side[5]);\n  int h3 = side[2] + side[3] - h1 - h2;\n  int ans = 0;\n  for (int i = side[1] + 1; i <= side[1] + h1; ++i) ans += 2 * i - 1;\n  for (int i = side[4] + 1; i <= side[4] + h2; ++i) ans += 2 * i - 1;\n  for (int i = 1; i <= h3; ++i) ans += (side[1] + h1) * 2;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs a, b, c, d, e, f\n  read a read b read c read d read e read f\n  create long long ans with ans = (a + b + c) * (a + b + c) - a * a - c * c - e * e\n  print ans print newline\n  \n\n",
        "int main() {\n  long long a, b, c, d, e, f;\n  cin >> a >> b >> c >> d >> e >> f;\n  long long ans = (a + b + c) * (a + b + c) - a * a - c * c - e * e;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "in function sq taking an int a and returning an int\n  return a * a\n\n\n  i, j, k, a, b, c = int and A = int array of size 6\n  read 6 values into A\n  set a to A[0] + A[1] + A[2]\n  set b to sq of a\n  set c to sq of A[0] + sq of A[2] + sq of A[4]\n  set j to b - c\n  print j\n  \n\n",
        "int sq(int a) {\n  return a * a;\n}\nint main() {\n  int A[6], i, j, k, a, b, c;\n  for (i = 0; i < 6; i++) { cin >> A[i]; }\n  a = A[0] + A[1] + A[2];\n  b = sq(a);\n  c = sq(A[0]) + sq(A[2]) + sq(A[4]);\n  j = b - c;\n  cout << j << endl;\n  return 0;\n}\n"
    ],
    [
        "a = integer array of size 7\nin the function p that takes integer x and returns integer\n  return x * x\n\n\n  for i = 1 to 6, read a[i]\n  ans = integer with ans = p(a[1] + a[2] + a[3]) - p(a[1]) - p(a[3]) - p(a[5])\n  print ans\n  \n\n",
        "int a[7];\nint p(int x) {\n  return x * x;\n}\nint main() {\n  for (int i = 1; i <= 6; i++) { cin >> a[i]; }\n  int ans = p(a[1] + a[2] + a[3]) - p(a[1]) - p(a[3]) - p(a[5]);\n  cout << ans << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  declare ints i, j, l, test, ans and len with test = 0\n  declare character ch and array of characters str with 1003 elements\n  declare doubles maps and k where maps = 0\n  read l\n  for i from 0 to l exclusive\n    read input to str\n    if str is \"ABSINTH\"\n      increment test\n    if str is \"BEER\"\n      increment test by one\n    if str is \"BRANDY\"\n      increment test by one\n    if str is \"CHAMPAGNE\"\n      increment test by one\n    if str is \"GIN\"\n      increment test by one\n    if str is \"RUM\"\n      increment test\n    if str is \"SAKE\"\n      increment test by one\n    if str is \"TEQUILA\"\n      increment test by one\n    if str is \"VODKA\"\n      increment test by one\n    if str is \"WHISKEY\"\n      increment test\n    if str is \"WINE\"\n      increment test by one\n    else if str[0] >= 48 and str[0] <= 57\n      assign length of str to len\n      set k to 0\n      set maps to 0\n      for j = len - 1 to 0 inclusive counting down\n        change str[j] to str[j] - '0'\n        assign maps + (str[j] * pow(10.0, k)) to maps\n        increment k\n      \n      change ans to maps\n      if ans is less than 18, increment test\n    \n  \n  print test\n\n",
        "int main() {\n  int i, j, l, test = 0, ans, len;\n  char str[1003], ch;\n  double maps = 0, k;\n  cin >> l;\n  for (i = 0; i < l; i++) {\n    cin >> str;\n    if (strcmp(str, \"ABSINTH\") == 0) {\n      test++;\n    } else if (strcmp(str, \"BEER\") == 0) {\n      test++;\n    } else if (strcmp(str, \"BRANDY\") == 0) {\n      test++;\n    } else if (strcmp(str, \"CHAMPAGNE\") == 0) {\n      test++;\n    } else if (strcmp(str, \"GIN\") == 0) {\n      test++;\n    } else if (strcmp(str, \"RUM\") == 0) {\n      test++;\n    } else if (strcmp(str, \"SAKE\") == 0) {\n      test++;\n    } else if (strcmp(str, \"TEQUILA\") == 0) {\n      test++;\n    } else if (strcmp(str, \"VODKA\") == 0) {\n      test++;\n    } else if (strcmp(str, \"WHISKEY\") == 0) {\n      test++;\n    } else if (strcmp(str, \"WINE\") == 0) {\n      test++;\n    } else if (str[0] >= 48 && str[0] <= 57) {\n      len = strlen(str);\n      k = 0;\n      maps = 0;\n      for (j = len - 1; j >= 0; j--) {\n        str[j] = str[j] - '0';\n        maps = maps + (str[j] * pow(10.0, k));\n        k++;\n      }\n      ans = (int)maps;\n      if (ans < 18) { test++; }\n    }\n  }\n  cout << test << endl;\n}\n"
    ],
    [
        "\n  mp = map of string and int\n  set mp[\"ABSINTH\"] and mp[\"BEER\"] and mp[\"BRANDY\"] and mp[\"CHAMPAGNE\"] to 1\n  set mp[\"GIN\"] and mp[\"RUM\"] and mp[\"SAKE\"] and mp[\"TEQUILA\"] and mp[\"VODKA\"] to 1\n  set mp[\"WHISKEY\"] and mp[\"WINE\"] to 1\n  n = int\n  read n\n  cnt = int with cnt = 0\n  loop n times\n    s = string\n    read s\n    if mp[s] is not 0\n      increment cnt\n    else if s[0] is numeric char\n      geek = stringstream initialized with s\n      x = int with x = 0\n      read into x from geek\n      if x is less than 18 then increment cnt\n    \n  \n  print cnt\n  \n\n",
        "int main() {\n  map<string, int> mp;\n  mp[\"ABSINTH\"] = mp[\"BEER\"] = mp[\"BRANDY\"] = mp[\"CHAMPAGNE\"] = 1;\n  mp[\"GIN\"] = mp[\"RUM\"] = mp[\"SAKE\"] = mp[\"TEQUILA\"] = mp[\"VODKA\"] = 1;\n  mp[\"WHISKEY\"] = mp[\"WINE\"] = 1;\n  int n;\n  cin >> n;\n  int cnt = 0;\n  while (n--) {\n    string s;\n    cin >> s;\n    if (mp[s])\n      cnt++;\n    else if (s[0] >= '0' && s[0] <= '9') {\n      stringstream geek(s);\n      int x = 0;\n      geek >> x;\n      if (x < 18) cnt++;\n    }\n  }\n  cout << cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "s = string\nans = integer with ans = 0\nin the function make\n  len = integer with len = s.length()\n  if s[0] <= 9 and s[0] >= 0\n    year = integer with year = 0\n    for i = 0 to len exclusive, year = year * 10 + s[i] - 0\n    if year < 18, increment ans\n  else\n    if s is BRANDY\n      increment ans\n    else if s is BEER\n      increment ans\n    else if s is ABSINTH\n      increment ans\n    else if s is CHAMPAGNE\n      increment ans\n    else if s is GIN\n      increment ans\n    else if s is RUM\n      increment ans\n    else if s is SAKE\n      increment ans\n    else if s is TEQUILA\n      increment ans\n    else if s is VODKA\n      increment ans\n    else if s is WHISKEY\n      increment ans\n    else if s is WINE\n      increment ans\n    \n  \n\n\n  n = integer\n  read n\n  for i = 1 to n\n    read s\n    call make\n  \n  print ans\n  \n\n",
        "string s;\nint ans = 0;\nvoid make() {\n  int len = s.length();\n  if (s[0] <= '9' && s[0] >= '0') {\n    int year = 0;\n    for (int i = 0; i < len; i++) { year = year * 10 + s[i] - '0'; }\n    if (year < 18) { ans++; }\n  } else {\n    if (s == \"BRANDY\") {\n      ans++;\n    } else if (s == \"BEER\") {\n      ans++;\n    } else if (s == \"ABSINTH\") {\n      ans++;\n    } else if (s == \"CHAMPAGNE\") {\n      ans++;\n    } else if (s == \"GIN\") {\n      ans++;\n    } else if (s == \"RUM\") {\n      ans++;\n    } else if (s == \"SAKE\") {\n      ans++;\n    } else if (s == \"TEQUILA\") {\n      ans++;\n    } else if (s == \"VODKA\") {\n      ans++;\n    } else if (s == \"WHISKEY\") {\n      ans++;\n    } else if (s == \"WINE\") {\n      ans++;\n    }\n  }\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> s;\n    make();\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers i, j, l, test, ans and len where test = 0\n  declare character array str with size 1003 and a character variable ch\n  declare double variables maps = 0 and k\n  read input to l\n  loop i from 0 to l exclusive\n    read str\n    if str is \"ABSINTH\"\n      increment test\n    else if str is \"BEER\"\n      increment test\n    else if str is \"BRANDY\"\n      increment test by one\n    else if str is \"CHAMPAGNE\"\n      increment test by one\n    else if str is \"GIN\"\n      increment test by one\n    else if str is \"RUM\"\n      increment test\n    else if str is \"SAKE\"\n      increment test\n    else if str is \"TEQUILA\"\n      increment test\n    else if str is \"VODKA\"\n      increment test\n    else if str is \"WHISKEY\"\n      increment test by one\n    else if str is \"WINE\"\n      increment test\n    else if str[0] >= 48 and str[0] <= 57\n      change len to length of str\n      change k to 0\n      change maps to 0\n      loop j from len - 1 to 0 inclusive counting down\n        assign str[j] - '0' to str[j]\n        change maps to maps + (str[j] * (10.0 in power k))\n        increment k by one\n      \n      change ans to maps\n      if ans is less than 18, increment test by one\n    \n  \n  print test\n\n",
        "int main() {\n  int i, j, l, test = 0, ans, len;\n  char str[1003], ch;\n  double maps = 0, k;\n  cin >> l;\n  for (i = 0; i < l; i++) {\n    cin >> str;\n    if (strcmp(str, \"ABSINTH\") == 0) {\n      test++;\n    } else if (strcmp(str, \"BEER\") == 0) {\n      test++;\n    } else if (strcmp(str, \"BRANDY\") == 0) {\n      test++;\n    } else if (strcmp(str, \"CHAMPAGNE\") == 0) {\n      test++;\n    } else if (strcmp(str, \"GIN\") == 0) {\n      test++;\n    } else if (strcmp(str, \"RUM\") == 0) {\n      test++;\n    } else if (strcmp(str, \"SAKE\") == 0) {\n      test++;\n    } else if (strcmp(str, \"TEQUILA\") == 0) {\n      test++;\n    } else if (strcmp(str, \"VODKA\") == 0) {\n      test++;\n    } else if (strcmp(str, \"WHISKEY\") == 0) {\n      test++;\n    } else if (strcmp(str, \"WINE\") == 0) {\n      test++;\n    } else if (str[0] >= 48 && str[0] <= 57) {\n      len = strlen(str);\n      k = 0;\n      maps = 0;\n      for (j = len - 1; j >= 0; j--) {\n        str[j] = str[j] - '0';\n        maps = maps + (str[j] * pow(10.0, k));\n        k++;\n      }\n      ans = (int)maps;\n      if (ans < 18) { test++; }\n    }\n  }\n  cout << test << endl;\n}\n"
    ],
    [
        "declare const int maxn = 1e6\ncreate an array of integers prime with maxn + 1 elements\nfunction getPrime\n  set first sizeof(prime) bytes at the pointer prime to 0\n  for i from 2 to maxn inclusive\n    if prime[i] is 0, increment prime[0] and set prime[prime[0]] to i\n    for j from 1 to prime[0] inclusive while prime[j] <= maxn / i, incrementing j\n      prime[prime[j] * i] = 1\n      if i % prime[j] is equal to 0, break the loop\n    \n  \n\n\n  call getPrime()\n  declare int variable n\n  loop, reading n from the input\n    declare vector of integers v\n    clear v\n    declare integer variables key = prime[1] and id=1\n    loop i from 1 to n inclusive\n      create int key = prime[i]\n      while key <= n\n        push key into v\n        multiply key by prime[i]\n      \n    \n    print length of v\n    for integer i = 0 to length of v exclusive, print v[i] and \"\\n\" if i = length of v - 1 or \" \" if it is not\n  \n\n",
        "const int maxn = 1e6;\nint prime[maxn + 1];\nvoid getPrime() {\n  memset(prime, 0, sizeof(prime));\n  for (int i = 2; i <= maxn; i++) {\n    if (!prime[i]) prime[++prime[0]] = i;\n    for (int j = 1; j <= prime[0] && prime[j] <= maxn / i; j++) {\n      prime[prime[j] * i] = 1;\n      if (i % prime[j] == 0) break;\n    }\n  }\n}\nint main() {\n  getPrime();\n  int n;\n  while (cin >> n) {\n    vector<int> v;\n    v.clear();\n    int key = prime[1], id = 1;\n    for (int i = 1; prime[i] <= n; i++) {\n      int key = prime[i];\n      while (key <= n) {\n        v.push_back(key);\n        key *= prime[i];\n      }\n    }\n    cout << v.size() << endl;\n    for (int i = 0; i < v.size(); i++) cout << v[i] << (i == v.size() - 1 ? \"\\n\" : \" \");\n  }\n}\n"
    ],
    [
        "maxn = const integer with maxn = 1010\nv = vector of integer\nis_prime = bool array of size maxn\nprime = integer array of size maxn\nk = integer\nin the function Euler that takes integer n\n  i, j = integers\n  k = 0\n  for i = 2 to n exclusive\n    if is_prime[i] is false, prime[increment k] = i\n    for j < k and i * prime[j] < n\n      is_prime[i * prime[j]] = true\n      if i modulo prime[j] is 0, break loop\n    \n  \n\n\n  n, x = integer\n  Euler of maxn\n  ans = integer with ans = (0)\n  read n\n  for i = 0 to k exclusive\n    if prime[i] <= n\n      p = integer with p = prime[i]\n      while p <= n\n        append p in v\n        p = p * prime[i]\n      \n    \n  \n  print v.size()\n  if v.size() > 0\n    for i = 0 to v.size() - 1 exclusive, print v[i]\n    print v[v.size() - 1]\n  \n  \n\n",
        "const int maxn = 1010;\nvector<int> v;\nbool is_prime[maxn];\nint prime[maxn];\nint k;\nvoid Euler(int n) {\n  int i, j;\n  k = 0;\n  for (i = 2; i < n; i++) {\n    if (is_prime[i] == false) prime[k++] = i;\n    for (j = 0; j < k && i * prime[j] < n; j++) {\n      is_prime[i * prime[j]] = true;\n      if (i % prime[j] == 0) break;\n    }\n  }\n}\nint main() {\n  int n, x;\n  Euler(maxn);\n  int ans(0);\n  cin >> n;\n  for (int i = 0; i < k; i++) {\n    if (prime[i] <= n) {\n      int p = prime[i];\n      while (p <= n) {\n        v.push_back(p);\n        p *= prime[i];\n      }\n    }\n  }\n  cout << v.size() << endl;\n  if (v.size() > 0) {\n    for (int i = 0; i < v.size() - 1; i++) cout << v[i] << ' ';\n    cout << v[v.size() - 1] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer array a with size 1005\ndeclare zhi with integer n as argument, returning boolean\n  for i = 2 to n exclusive\n    if n % i is 0, return false from function\n  \n  return true from function\n\n\n  create integer n\n  while read n\n    if n is 1\n      print 0 print newline\n      break current loop iteration\n    \n    set bytes from a to size of a to value 0\n    create integer j with j = 0\n    for i = 2 to n inclusive\n      if result of run zhi with i as argument is true\n        set a[j] to i\n        increment j\n        create integer t with t = i\n        set t to t * i\n        while t is less than or equal to n\n          set a[j] to t\n          increment j\n          set t to t * i\n        \n      \n    \n    print j print newline\n    for i = 0 to j - 1 exclusive, print a[i] print \" \"\n    print a[j-1] print newline\n  \n\n",
        "int a[1005];\nbool zhi(int n) {\n  for (int i = 2; i < n; i++) {\n    if (n % i == 0) return false;\n  }\n  return true;\n}\nint main() {\n  int n;\n  while (cin >> n) {\n    if (n == 1) {\n      cout << 0 << endl;\n      continue;\n    }\n    memset(a, 0, sizeof(a));\n    int j = 0;\n    for (int i = 2; i <= n; i++) {\n      if (zhi(i)) {\n        a[j] = i;\n        j++;\n        int t = i;\n        t *= i;\n        while (t <= n) {\n          a[j] = t;\n          j++;\n          t *= i;\n        }\n      }\n    }\n    cout << j << endl;\n    for (int i = 0; i < j - 1; i++) { cout << a[i] << \" \"; }\n    cout << a[j - 1] << endl;\n  }\n}\n"
    ],
    [
        "\n  declare double variables a, b and c\n  read a, b and c\n  print b / (b + c) * a\n  \n\n",
        "int main() {\n  double a, b, c;\n  cin >> a >> b >> c;\n  cout << b / (b + c) * a << endl;\n  return 0;\n}\n"
    ],
    [
        "a, b, r = integers\n\n  Read l, p, q\n  print l / (q + p) * p and a new line\n  \n\n",
        "double l, p, q;\nint main() {\n  cin >> l >> p >> q;\n  cout << l / (q + p) * p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  double integers = l,p,q\n  read l,p,q\n  output l / (p + q) * p\n  \n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  cout << l / (p + q) * p << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create constant integer maxn with maxn = integer casted 1e5 + 5\ncreate constant long long mod with mod = 1e9 + 7\n\n  create doubles l, p, q\n  read l read p read q\n  create double t1 with t1 = ((2 * l) / (p + q))\n  create double t2 with t2 = l / (p + q)\n  create double ans with ans = p * (t1 - t2)\n  print ans print newline\n  \n\n",
        "const int maxn = (int)1e5 + 5;\nconst long long mod = 1e9 + 7;\nint main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  double t1 = ((2 * l) / (p + q));\n  double t2 = l / (p + q);\n  double ans = p * (t1 - t2);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  define floating point numbers m, a, s\n  define doubles i, j\n  while read m, i, j\n    set a to i + j\n    assign m / a to s\n    print s * i and a newline\n  \n  \n\n",
        "int main() {\n  double m, a, s;\n  double i, j;\n  while (cin >> m >> i >> j) {\n    a = i + j;\n    s = m / a;\n    cout << s * i << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int l, p and q\n  read l, p and q\n  print l * p / (p + q)\n  \n\n",
        "int main() {\n  int l, p, q;\n  cin >> l >> p >> q;\n  cout << l * p / (double)(p + q) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  double integers = d,n,m\n  read d,n,m\n  output (d * n) / (n + m)\n\n",
        "int main() {\n  double d, n, m;\n  cin >> d >> n >> m;\n  cout << (d * n) / (n + m) << endl;\n}\n"
    ],
    [
        "inf = const integer with inf = 0x3f3f3f3f\nmod1 = const integer with mod1 = 1e9 + 7\nmod = const long long with mod = 1e16\nmaxn = const integer with maxn = 1000\ndx, dy = integer array of size 5 with dx = {0, 1, 0, -1, 0}, dy = {1, 0, -1, 0, 0}\ndir = integer array of size [4][2] with dir = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}}\n\n  n, x, y = double\n  read n, x, y\n  d = double with d = n / (x + y)\n  e = double with e = d * x\n  print e\n  \n\n",
        "const int inf = 0x3f3f3f3f;\nconst int mod1 = 1e9 + 7;\nconst long long mod = 1e16;\nconst int maxn = 1000;\nint dx[5] = {0, 1, 0, -1, 0}, dy[5] = {1, 0, -1, 0, 0};\nint dir[4][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};\nint main() {\n  double n, x, y;\n  cin >> n >> x >> y;\n  double d = n / (x + y);\n  double e = d * x;\n  cout << e << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array h with size 3\n\n  create long long doubles a, b, c\n  read a read b read c\n  create long long double f with f = b + c\n  create long long double t with t = a / f\n  print b * t print '\\n'\n  \n\n",
        "int h[3];\nint main() {\n  long double a, b, c;\n  cin >> a >> b >> c;\n  long double f = b + c;\n  long double t = a / f;\n  cout << b * t << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create doubles l, p and q\n  read input to l, p and q\n  declare double variable t_total = 3 * l / (p + q)\n  declare double t1 = l / (p + q)\n  print (t_total - 2 * t1) * p\n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  double t_total = 3 * l / (p + q);\n  double t1 = l / (p + q);\n  cout << (t_total - 2 * t1) * p << endl;\n}\n"
    ],
    [
        "\n  l, x, y = double\n  read l\n  read x, y\n  if y > x\n    print l - ((l / (x + y)) * the greatest value between x and y)\n  else\n    print ((l / (x + y)) * the greatest value between x and y)\n  \n  \n\n",
        "int main() {\n  double l, x, y;\n  cin >> l;\n  cin >> x >> y;\n  if (y > x) {\n    cout << l - ((l / (x + y)) * max(x, y)) << endl;\n  } else {\n    cout << (l / (x + y)) * max(x, y) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "N = const long long with N = 1e5\nl, p, q = flaot\n\n  read l then p then q\n  print l / (p + q) * p\n  print newline\n  \n\n",
        "const long long N = 1e5;\nfloat l, p, q;\nint main() {\n  cin >> l >> p >> q;\n  cout << l / (p + q) * p;\n  cout << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  set a, b and c to 0\n  print a, b and c\n  if b equal to c\n    print 0.5*a\n    \n  \n  print b / (c+b)*a and a newline\n\n",
        "int main() {\n  double a = 0, b = 0, c = 0;\n  cin >> a >> b >> c;\n  if (b == c) {\n    cout << 0.5 * a << endl;\n    return 0;\n  }\n  cout << b / (c + b) * a << endl;\n}\n"
    ],
    [
        "create constant integer N with N = 5000 + 100\n\n  create doubles l, q, p, t, ans\n  while read l is true\n    read p read q\n    set t to l / ( p + q )\n    set ans to p * t\n    print ans print newline\n  \n  \n\n",
        "const int N = 5000 + 100;\nint main() {\n  double l, q, p, t, ans;\n  while (cin >> l) {\n    cin >> p >> q;\n    t = l / (p + q);\n    ans = p * t;\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  l, p, q = double\n  read l, p, q\n  print result of p * l / (p + q)\n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  cout << p * l / (p + q) << endl;\n}\n"
    ],
    [
        "\n  let l, p, q be double values\n  read l, p, q\n  print (l * p) / (p + q) and newline\n  \n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  cout << (l * p) / (p + q) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  set float a,s,c,d,e all to 0 and set float for i,j,k,l,f\n  read k,l,f\n  set s to (l + f) / 2\n  set s to k / s\n  set s to s / 2\n  set a to l * s\n  output a\n  \n\n",
        "int main() {\n  float a = 0, s = 0, c = 0, d = 0, e = 0, i, j, k, l, f;\n  cin >> k >> l >> f;\n  s = (l + f) / 2;\n  s = k / s;\n  s = s / 2;\n  a = l * s;\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create doubles l, p and q\n  read l, p and q\n  print (l / (p + q)) * p and \"\\n\"\n  \n\n",
        "int main() {\n  double l, p, q;\n  cin >> l >> p >> q;\n  cout << (l / (p + q)) * p << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "a,b,c,tt = long long integers\n\n  read a,b,c\n  output (float)a / (b + c) * b\n\n",
        "long long int a, b, c, tt;\nint main() {\n  cin >> a >> b >> c;\n  cout << (float)a / (b + c) * b << endl;\n}\n"
    ],
    [
        "MOD = const long long integer with MOD = 1000000007\nN, M, K, H, W, L, R = long long integer\n\n  a, b, c = long double\n  read a, b, c\n  a = a / (b + c)\n  a = a * b\n  print a\n  \n\n",
        "const long long int MOD = 1000000007;\nlong long int N, M, K, H, W, L, R;\nint main() {\n  long double a, b, c;\n  cin >> a >> b >> c;\n  a /= (b + c);\n  a *= b;\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare int variables l, p and q\n  create doubles sum and su\n  read l, p and q and keep looping\n    change sum to l / (2 * (p + q))\n    assign l - sum * q * 2 to su\n    print su\n  \n\n",
        "int main() {\n  int l, p, q;\n  double sum, su;\n  while (cin >> l >> p >> q) {\n    sum = (double)l / (2 * (p + q));\n    su = (double)l - sum * q * 2;\n    cout << su << endl;\n  }\n}\n"
    ],
    [
        "\n  create doubles l, a, b\n  read l read a read b\n  print l / ( a + b ) * a print newline\n  \n\n",
        "int main() {\n  double l, a, b;\n  cin >> l >> a >> b;\n  cout << l / (a + b) * a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare doubles d, a and b\n  read d, a and b\n  create double t = d / (a + b)\n  print t * a\n\n",
        "int main() {\n  double d, a, b;\n  cin >> d >> a >> b;\n  double t = d / (a + b);\n  cout << t * a << endl;\n}\n"
    ],
    [
        "\n  let a double\n  let l, p, q doubles\n  read l, p, and q\n  set a to l * p / (p + q)\n  print a\n  \n\n",
        "int main() {\n  double a;\n  double l, p, q;\n  cin >> l >> p >> q;\n  a = l * p / (p + q);\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare floats l, p and q\n  read input to l, p and q\n  print l / (p + q) * p\n  \n\n",
        "int main() {\n  float l, p, q;\n  cin >> l >> p >> q;\n  cout << l / (p + q) * p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare constant double PI with PI = acosign of -1.0\ndeclare fast_in_out with no arguments, returning void\ndeclare pause with no arguments, returning void\n\n  run fast_in_out\n  declare ar as integer array = {2, 4, 8, 16, 32, 64, 128, 256, 512}\n  declare integers n, b, q\n  read n and b and q\n  declare integers x = 0, y = n * q\n  for i = 8 to 0 inclusive, decrementing i\n    if n is less than ar[i], break current loop iteration\n    declare integer k with k = ar[i]\n    let n be n - k\n    increment n by k / 2\n    increment i\n    let k = k * b + (k / 2)\n    increment x by k\n  \n  print x, \" \", y, '\\n'\n  run pause\n  \n\n",
        "const double PI = acos(-1.0);\nvoid fast_in_out() {}\nvoid pause() {}\nint main() {\n  fast_in_out();\n  int ar[] = {2, 4, 8, 16, 32, 64, 128, 256, 512};\n  int n, b, q;\n  cin >> n >> b >> q;\n  int x = 0, y = n * q;\n  for (int i = 8; i >= 0; i--) {\n    if (n < ar[i]) continue;\n    int k = ar[i];\n    n = n - k;\n    n += k / 2;\n    i++;\n    k = k * b + (k / 2);\n    x += k;\n  }\n  cout << x << \" \" << y << '\\n';\n  pause();\n  return 0;\n}\n"
    ],
    [
        "create ints n, b, p, x = 0, and y\n\n  read n, b, and p\n  set b to 2 * b + 1\n  set y to n * p\n  while n is greater than 1\n    create integer k = 1\n    while 2 * k is less than or equal to n, set k to k * 2\n    set x to x + b * k / 2\n    set n to n - k / 2\n  \n  print x, \" \", and y\n  \n\n",
        "int n, b, p, x = 0, y;\nint main() {\n  cin >> n >> b >> p;\n  b = 2 * b + 1;\n  y = n * p;\n  while (n > 1) {\n    int k = 1;\n    while (2 * k <= n) k *= 2;\n    x += b * k / 2;\n    n -= k / 2;\n  }\n  cout << x << \" \" << y << '\\n';\n  return 0;\n}\n"
    ],
    [
        "INF = const long long int with INF = (1LL bitshift left by 60) - 1\nMAX = const long long int with MAX = 2000001\nin function fast_exp taking three long long ints base, exp and m and returning a long long int\n  res = long long int with res = 1\n  loop while exp is greater than 0\n    if exp is uneven set res to (res * base) mod m\n    set base to (base * base) mod m\n    set exp to exp / 2\n  \n  return res mod m\n\n\n  n, b, p = int\n  read n then b then p\n  bottle, towel = int with bottle = 0 and towel = 0\n  set towel to p * n\n  loop while n is greater than 1\n    k = int with k = 1\n    loop while k is less or equal to n set k to k * 2\n    set k to k / 2\n    set n to (n - k) + k / 2\n    increment bottle by (k / 2) * (2 * b + 1)\n  \n  print bottle and towel\n  \n\n",
        "const long long int INF = (1LL << 60) - 1;\nconst long long int MAX = 2000001;\nlong long int fast_exp(long long int base, long long int exp, long long int m) {\n  long long int res = 1;\n  while (exp > 0) {\n    if (exp % 2 == 1) { res = (res * base) % m; }\n    base = (base * base) % m;\n    exp /= 2;\n  }\n  return res % m;\n}\nint main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int bottle = 0, towel = 0;\n  towel = p * n;\n  while (n > 1) {\n    int k = 1;\n    while (k <= n) { k *= 2; }\n    k /= 2;\n    n = (n - k) + k / 2;\n    bottle += (k / 2) * (2 * b + 1);\n  }\n  cout << bottle << \" \" << towel << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n,m,p=int\n  read n,m,p\n  ans=0\n  c=n\n  while n is not 1\n    add n/2 to ans\n    subtract n/2 from n\n  \n  print ans*(m*2+1), space, c*p\n\n",
        "int main() {\n  int n, m, p;\n  cin >> n >> m >> p;\n  int ans = 0;\n  int c = n;\n  while (n != 1) {\n    ans += n / 2;\n    n -= n / 2;\n  }\n  cout << ans * (m * 2 + 1) << \" \" << c * p << endl;\n}\n"
    ],
    [
        "create const ints N = 1e6 + 5, MAX = 3e7 and MOD = 1e9 + 7\ndeclare ints n, p, b, x and y\n\n  read n, p and b\n  set y to b * n\n  while n is not 0\n    if n / 2 is true\n      increase x by (n - n % 2) * p + n / 2\n    else\n      break the loop\n    assign n / 2 + n % 2 to n\n  \n  print x, \" \", y and \"\\n\"\n\n",
        "const int N = 1e6 + 5, MAX = 3e7, MOD = 1e9 + 7;\nint n, p, b, x, y;\nint main() {\n  cin >> n >> p >> b;\n  y = b * n;\n  while (n) {\n    if (n / 2)\n      x += ((n - n % 2) * p + n / 2);\n    else\n      break;\n    n = n / 2 + n % 2;\n  }\n  cout << x << \" \" << y << \"\\n\";\n}\n"
    ],
    [
        "\n  create integers m, b, p, total and total_p where total = 0\n  read variables m, b and p from the input\n  assign m * p to total_p\n  start infinite loop\n    declare integer variable k = [](int n)->int\n      declare ints i = 1 and res = pow(2, 0)\n      looping infinitely\n        declare new integer variable temp = 2 in the power of i\n        if temp is greater than n, break\n        set res to temp\n        increment i by one\n      \n      return res\n    (m)\n    create integer variable with name matches and value = k / 2\n    change total to sum of total and matches * (2 * b)\n    increase total by matches\n    assign (k / 2) + (m - k) to m\n    if matches = 0, break the loop\n  \n  print total, \" \" and total_p\n  \n\n",
        "int main() {\n  int m, b, p, total = 0, total_p;\n  cin >> m >> b >> p;\n  total_p = m * p;\n  while (1) {\n    int k = [](int n) -> int {\n      int i = 1, res = pow(2, 0);\n      while (1) {\n        int temp = pow(2, i);\n        if (temp > n) break;\n        res = temp;\n        i++;\n      }\n      return res;\n    }(m);\n    int matches = k / 2;\n    total += matches * (2 * b);\n    total += matches;\n    m = (k / 2) + (m - k);\n    if (matches == 0) break;\n  }\n  cout << total << \" \" << total_p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, agua, toalha = int with toalha = 0\n  read n then agua then toalha\n  nrod, tagua, ttoalha = int with ttoalha = 0\n  set nrod to n - 1\n  set tagua to nrod + nrod * agua * 2\n  set ttoalha to toalha * n\n  print tagua and ttoalha\n  \n\n",
        "int main() {\n  int n, agua, toalha = 0;\n  cin >> n >> agua >> toalha;\n  int nrod, tagua, ttoalha = 0;\n  nrod = n - 1;\n  tagua = nrod + nrod * agua * 2;\n  ttoalha = toalha * n;\n  cout << tagua << \" \" << ttoalha << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, b, p be integers\n  read n, b, p\n  let bottles, towels be integers with bottles = 0, towels = n * p\n  while n is greater than 1\n    let matches be a integer with matches = (1 << (int)log2(n)) / 2\n    increment bottles by matches * (2 * b + 1)\n    decrement n by matches\n  \n  print bottles and space and towels and newline\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int bottles = 0, towels = n * p;\n  while (n > 1) {\n    int matches = (1 << (int)log2(n)) / 2;\n    bottles += matches * (2 * b + 1);\n    n -= matches;\n  }\n  cout << bottles << \" \" << towels << endl;\n  return 0;\n}\n"
    ],
    [
        "create ints n, b, and p\n\n  read n, b, and p\n  set b to b * 2 + 1\n  create integer now = 1\n  while now is less than or equal to n, shift the bits of now one place to the left\n  shift the bits of now one place to the right\n  create int t = n\n  let long long integer ans = 0\n  while t is greater than 1\n    set ans to ans + 1LL * now / 2 * b\n    set t to t - now / 2\n    while now is truthy and now > t is true, shift the bits of now one place to the right\n  \n  print ans, \" \", and n * p\n  \n\n",
        "int n, b, p;\nint main() {\n  cin >> n >> b >> p;\n  b = b * 2 + 1;\n  int now = 1;\n  while (now <= n) { now <<= 1; }\n  now >>= 1;\n  int t = n;\n  long long ans = 0;\n  while (t > 1) {\n    ans += 1LL * now / 2 * b;\n    t -= now / 2;\n    while (now && now > t) { now >>= 1; }\n  }\n  cout << ans << \" \" << n * p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare g taking in int n and returning integer\n  while _builtin_popcount(n) is greater than 1, set n to n & (n - 1)\n  return n\n\n\n  let ints n, b, p, r = 0, and m\n  read n, b, and p\n  set m to n\n  while n is greater than 1\n    create int x = g(n)\n    set r to r + x * (b)\n    set r to r + x / 2\n    set n to n - x / 2\n  \n  print r, \" \", and p * m\n  \n\n",
        "int g(int n) {\n  while (__builtin_popcount(n) > 1) n = n & (n - 1);\n  return n;\n}\nint main() {\n  int n, b, p, r = 0, m;\n  cin >> n >> b >> p;\n  m = n;\n  while (n > 1) {\n    int x = g(n);\n    r += x * (b);\n    r += x / 2;\n    n -= x / 2;\n  }\n  cout << r << \" \" << p * m << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints participants, bottles, and towels\n  let ints total_b = 0, total_t = 0, and matches\n  read participants, bottles, and towels\n  set total_t to the result of participants * towels\n  while participants is not 1\n    set matches to participants / 2\n    if participants modulo 2 is equal to 1\n      set total_ b to total_b + (participants - 1) * bottles + matches\n      set participants to participants / 2 + 1\n    otherwise do\n      set total_b to total_b + participants * bottles + matches\n      set participants to the result of participants / 2\n    \n  \n  print total_b, \" \", and total_t\n  \n\n",
        "int main() {\n  int participants, bottles, towels;\n  int total_b = 0, total_t = 0, matches;\n  cin >> participants >> bottles >> towels;\n  total_t = participants * towels;\n  while (participants != 1) {\n    matches = participants / 2;\n    if (participants % 2 == 1) {\n      total_b += (participants - 1) * bottles + matches;\n      participants = participants / 2 + 1;\n    } else {\n      total_b += participants * bottles + matches;\n      participants = participants / 2;\n    }\n  }\n  cout << total_b << \" \" << total_t << endl;\n  return 0;\n}\n"
    ],
    [
        "create map m1 from long long ints to long long ints\ncreate map iterator itr from long long ints to long long ints\n\n  create long long int n, b, and p\n  read n, b, and p\n  make long long int ans2 = n * p\n  make long long int ans1 = 0\n  while n is greater than 1\n    let long long int i\n    for i = 0, loop indefinitely\n      if pow(2, i) is greater than n, break loop\n    \n    decrease i\n    create long long integer z = pow(2, i)\n    set ans1 to ans1 + (z / 2) * (2 * b + 1)\n    set n to n - z / 2\n  \n  print ans1, \" \", and ans2\n  \n\n",
        "map<long long int, long long int> m1;\nmap<long long int, long long int>::iterator itr;\nint main() {\n  long long int n, b, p;\n  cin >> n >> b >> p;\n  long long int ans2 = n * p;\n  long long int ans1 = 0;\n  while (n > 1) {\n    long long int i;\n    for (i = 0;; i++) {\n      if (pow(2, i) > n) break;\n    }\n    i--;\n    long long int z = pow(2, i);\n    ans1 += (z / 2) * (2 * b + 1);\n    n = n - z / 2;\n  }\n  cout << ans1 << \" \" << ans2 << endl;\n  return 0;\n}\n"
    ],
    [
        "N = int\nA = int\nT = int\nvalues = two dimensional int array of sizes 1001 and 1001\npagamento = int array of size 1001\naguinha = int\nin function strlen taking char array of size 1001 t and returning int\n  ret = int with ret = 0\n  loop while t[ret] is not '\\0' increment ret\n  return ret\n\nin function maxfunc taking int t1, int t2 and returning int\n  ret = int with ret = t1\n  if t2 > t1 set ret to t2\n  return ret\n\nin function minfunc taking int t1, int t2 and returning int\n  ret = int with ret = t1\n  if t2 < t1 set ret to t2\n  return ret\n\nin function epar taking int x and returning int\n  ret = int with ret = 0\n  if x is even set ret to 1\n  return ret\n\nin function atoifunc taking char x and returning int\n  return x - '0'\n\n\n  result = int with result = =\n  size = int\n  set N to 0\n  N = int\n  A = int\n  T = int\n  read N then A then T\n  set aguinha to A * 2 + 1\n  njogos = int with njogos = 0\n  resta = int with resta = N\n  loop while resta is not 1\n    increment njogos by resta / 2\n    if epar of resta\n      set resta to resta / a\n    else\n      set resta to resta / 2 + 1\n    \n  \n  print njogos * aguinha and N * T\n  \n\n",
        "int N;\nint A;\nint T;\nint values[1001][1001];\nint pagamento[1001];\nint aguinha;\nint strlen(char t[1001]) {\n  int ret = 0;\n  while (t[ret] != '\\0') { ret++; }\n  return ret;\n}\nint maxfunc(int t1, int t2) {\n  int ret = t1;\n  if (t2 > t1) { ret = t2; }\n  return ret;\n}\nint minfunc(int t1, int t2) {\n  int ret = t1;\n  if (t2 < t1) { ret = t2; }\n  return ret;\n}\nint epar(int x) {\n  int ret = 0;\n  if ((x % 2) == 0) { ret = 1; }\n  return ret;\n}\nint atoifunc(char x) {\n  return x - '0';\n}\nint main() {\n  int result = 0;\n  int size;\n  N = 0;\n  int N;\n  int A;\n  int T;\n  cin >> N >> A >> T;\n  aguinha = A * 2 + 1;\n  int njogos = 0;\n  int resta = N;\n  while (resta != 1) {\n    njogos += resta / 2;\n    if (epar(resta)) {\n      resta = (resta / 2);\n    } else {\n      resta = (resta / 2) + 1;\n    }\n  }\n  cout << njogos * aguinha << ' ' << N * T << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, b, p = int\n  read n then b then p\n  fp = int with fp = n * p\n  m = int with m = 0\n  loop while n > 1\n    po = int with po = floor of log2 of n\n    compete = int with compete = pow of 2, po\n    diff = int with diff = n - pow of 2, po\n    increment m by compete / 2\n    set n to compete / 2 + diff\n  \n  fb = int with fb = m * 2 * b + m\n  print fb and fp\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int fp = n * p;\n  int m = 0;\n  while (n > 1) {\n    int po = floor(log2(n));\n    int compete = pow(2, po);\n    int diff = n - pow(2, po);\n    m += compete / 2;\n    n = compete / 2 + diff;\n  }\n  int fb = m * 2 * b + m;\n  cout << fb << \" \" << fp << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let n, b, p be integers\n  read n, b, p\n  let ats1 , ats2 be integers with ats1 = 0, ats2 = p * n\n  while n is not equal to 1\n    let k be a integer with k = 1\n    while 2 * k <= n , k is equal to k * 2\n    increment ats1 by k * b + k / 2\n    decrement n by k / 2\n  \n  print ats1 and space and ats2 and newline\n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int ats1 = 0, ats2 = p * n;\n  while (n != 1) {\n    int k = 1;\n    while (2 * k <= n) k *= 2;\n    ats1 += k * b + k / 2;\n    n -= k / 2;\n  }\n  cout << ats1 << \" \" << ats2 << \"\\n\";\n}\n"
    ],
    [
        "\n  create integer variables p, b, t and x\n  read input to p, b and t\n  create new integer match with value 0\n  change x to p\n  while p != 1\n    change match to match + (p / 2)\n    set p to (p / 2) + (p % 2)\n  \n  print match + (2 * match * b), \" \" and x * t to the standard output\n\n",
        "int main() {\n  int p, b, t, x;\n  cin >> p >> b >> t;\n  int match = 0;\n  x = p;\n  while (p != 1) {\n    match += (p / 2);\n    p = (p / 2) + (p % 2);\n  }\n  cout << match + (2 * match * b) << \" \" << x * t << endl;\n}\n"
    ],
    [
        "\n  n, p, b = integers\n  read n, p, b\n  print (n - 1) * p * 2 + (n - 1)\n  print b * n\n  \n\n",
        "int main() {\n  int n, p, b;\n  cin >> n >> p >> b;\n  cout << (n - 1) * p * 2 + (n - 1) << \" \";\n  cout << b * n << endl;\n  return 0;\n}\n"
    ],
    [
        "in the function solve\n  n, b, p = integers\n  read n, b, p\n  br = integer with br = 0\n  tr = integer with tr = n * p;\n  while n > 1\n    x = integer with x = 1\n    while 2 * x < n, x = x * 2\n    br = br + x * (2 * b + 1\n    n = n - x\n  \n  print br,\" \",tr\n\n\n  call solve\n\n",
        "void solve() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int br = 0;\n  int tr = n * p;\n  while (n > 1) {\n    int x = 1;\n    while (2 * x < n) { x *= 2; }\n    br += x * (2 * b + 1);\n    n -= x;\n  }\n  cout << br << \" \" << tr << endl;\n}\nint main() {\n  solve();\n}\n"
    ],
    [
        "\n  n, b, p, k, ptot, btot = int\n  read n then b then p\n  set ptot to p * n\n  set btot to 0\n  loop while n is greater than 1\n    set k to 1 bitshift left by (floor of log2 of n) as int\n    decrement n by k / 2\n    increment btot by (k * b) + (k / 2)\n  \n  print btot and ptot\n  \n\n",
        "int main() {\n  int n, b, p, k, ptot, btot;\n  cin >> n >> b >> p;\n  ptot = p * n;\n  btot = 0;\n  while (n > 1) {\n    k = 1 << ((int)floor(log2(n)));\n    n = n - (k / 2);\n    btot += ((k * b) + (k / 2));\n  }\n  cout << btot << \" \" << ptot << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "declare gcd with long longs a, b as arguments, returning long long\n  if b is 0, return a from function\n  return result of gcd(b,a%b)\n\ndeclare long long lcm with long longs a, b as arguments\n  return a * b / gcd(a,b) from function\n\ndeclare long long f with long longs n, b as arguments\n  if n is less than or equal to 1, return 0\n  declare i as long long = 1\n  while i * 2 is less than or equal to n, let i be i * 2\n  return result of run f with (n - i + i / 2, b) as arguments + i / 2 * (2 * b + 1)\n\n\n  declare long longs n, b, p\n  read n read b read p\n  print result of run f(n,b), print \" \", n * p, newline\n\n",
        "long long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long lcm(long long a, long long b) {\n  return a * b / gcd(a, b);\n}\nlong long f(long long n, long long b) {\n  if (n <= 1) return 0;\n  long long i = 1;\n  while (i * 2 <= n) i *= 2;\n  return f(n - i + i / 2, b) + i / 2 * (2 * b + 1);\n}\nint main() {\n  long long n, b, p;\n  cin >> n >> b >> p;\n  cout << f(n, b) << \" \" << n * p << endl;\n}\n"
    ],
    [
        "\n  n, b, p, m = int\n  read n then b then p\n  set p to p * n\n  for m = 0 to n is greater or equal to 2 setting m to m + n / 2 and n to n / 2 + n mod 2\n    noop\n  print (b * 2 + 1) * m and p\n  \n\n",
        "int main() {\n  int n, b, p, m;\n  cin >> n >> b >> p;\n  p = p * n;\n  for (m = 0; n >= 2; m = m + n / 2, n = n / 2 + n % 2)\n    ;\n  cout << (b * 2 + 1) * m << \" \" << p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare integer array p2 = {1, 2, 4, 8, 16, 32, 64, 128, 256}\n\n  declare integers n, b, p, k, m\n  declare integer bn = 0\n  read n, b, p\n  let m be n\n  while m is greater than 1\n    for k = 8 to 0 inclusive, decrementing k\n      if p2[k] is less than or equal to m\n        increment bn by p2[k] / 2 + p2[k] * b\n        end loop\n      \n    \n    let m be p2[k] / 2 + (m - p2[k])\n  \n  print bn and \" \" and n * p and newline\n  \n\n",
        "int p2[] = {1, 2, 4, 8, 16, 32, 64, 128, 256};\nint main() {\n  int n, b, p, k, m;\n  int bn = 0;\n  cin >> n >> b >> p;\n  m = n;\n  while (m > 1) {\n    for (k = 8; k >= 0; k--) {\n      if (p2[k] <= m) {\n        bn += p2[k] / 2 + p2[k] * b;\n        break;\n      }\n    }\n    m = p2[k] / 2 + (m - p2[k]);\n  }\n  cout << bn << \" \" << n * p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare new integer water\ncreate integers s, n, b and p\n\n  read from the input to n, b and p\n  declare new integer called k = n\n  set water to 0\n  while n is not 1\n    change s to n / 2\n    if n is even\n      set n to n divided by 2\n    else\n      change n to n / 2 + 1\n    \n    change water to sum of water and s * (2 * b + 1)\n  \n  print water, \" \" and k * p to the standard output\n\n",
        "int water;\nint s, n, b, p;\nint main() {\n  cin >> n >> b >> p;\n  int k = n;\n  water = 0;\n  while (n != 1) {\n    s = n / 2;\n    if (n % 2 == 0) {\n      n /= 2;\n    } else {\n      n = n / 2 + 1;\n    }\n    water += s * (2 * b + 1);\n  }\n  cout << water << \" \" << k * p << endl;\n}\n"
    ],
    [
        "function read (no args, return long long)\n  c=getchar()\n  while c is not '-' and (c < '0' or c > '9') c=getchar()\n  k=0, kk=1\n  if c is '-' c=getchar(), kk=-1\n  while c >= '0' and c <= '9' k=k*10+c-'0', c=getchar()\n  return kk*k\n\nfunction write (get long long x, return nothing)\n  if x<0 x=-x, putchar('-')\n  if x/10 write(w/10)\n  putchar(x modulo 10+'0')\n\nfunction writlne (get long long x, return nothing)\n  write(x)\n  puts(\"\")\n\nn,b,p=long long\n\n  n=read()\n  b=read()\n  p=read()\n  write((b+b+1)*(n-1))\n  putchar(' ')\n  writeln(p*n)\n\n",
        "inline long long read() {\n  char c = getchar();\n  while (c != '-' && (c < '0' || c > '9')) c = getchar();\n  long long k = 0, kk = 1;\n  if (c == '-') c = getchar(), kk = -1;\n  while (c >= '0' && c <= '9') k = k * 10 + c - '0', c = getchar();\n  return kk * k;\n}\nvoid write(long long x) {\n  if (x < 0) x = -x, putchar('-');\n  if (x / 10) write(x / 10);\n  putchar(x % 10 + '0');\n}\nvoid writeln(long long x) {\n  write(x);\n  puts(\"\");\n}\nlong long n, b, p;\nint main() {\n  n = read();\n  b = read();\n  p = read();\n  write((b + b + 1) * (n - 1));\n  putchar(' ');\n  writeln(p * n);\n}\n"
    ],
    [
        "in function solve that returns nothing\nin function speed_up that returns nothing\n\n  call speed_up\n  call solve\n  \n\nin function solve that returns nothing\n  n, b, p = long long\n  read n, b, p\n  y = long long = n * p\n  sor = long long = 0\n  while n > 1\n    st = long long = 2\n    while st * 2 <= n, then st = st * 2\n    sor = sor + (st / 2) * (b * 2 + 1)\n    n = n - st / 2\n  \n  print sor y\n\n",
        "void solve();\nvoid speed_up() {}\nint main() {\n  speed_up();\n  solve();\n  return 0;\n}\nvoid solve() {\n  long long n, b, p;\n  cin >> n >> b >> p;\n  long long y = n * p;\n  long long sor = 0;\n  while (n > 1) {\n    long long st = 2;\n    while (st * 2 <= n) st *= 2;\n    sor += (st / 2) * (b * 2 + 1);\n    n -= st / 2;\n  }\n  cout << sor << \" \" << y << \"\\n\";\n}\n"
    ],
    [
        "\n  declare ints n, b and p\n  read variables n, b and p from the input\n  create ints bowl = 0 and towl = n * p\n  while n > 1\n    new integer k = pow(2, (log(n) / log(2)))\n    increase bowl by k / 2 * (2 * b + 1)\n    change n to n - k / 2\n  \n  print bowl, ' ' and towl to the standard output\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int bowl = 0, towl = n * p;\n  while (n > 1) {\n    int k = pow(2, (int)(log(n) / log(2)));\n    bowl += k / 2 * (2 * b + 1);\n    n -= k / 2;\n  }\n  cout << bowl << ' ' << towl << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare new integers n, agua and toalha with toalha = 0\n  read user input to n, agua and toalha\n  declare integers nrod, tagua and ttoalha with ttoalha = 0\n  assign n - 1 to nrod\n  change tagua to nrod + nrod * agua * 2\n  assign toalha * n to ttoalha\n  print tagua, \" \" and ttoalha\n  \n\n",
        "int main() {\n  int n, agua, toalha = 0;\n  cin >> n >> agua >> toalha;\n  int nrod, tagua, ttoalha = 0;\n  nrod = n - 1;\n  tagua = nrod + nrod * agua * 2;\n  ttoalha = toalha * n;\n  cout << tagua << \" \" << ttoalha << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, b, p = int\n  read n then b then p\n  bottles = int with bottles = 0\n  towels = int with towels = n * p\n  loop while n is greater than 1\n    k = int with k = 0\n    for i = 32 - 1 to 0 inclusive decrementing i\n      if n bitwise-and (1 bitshift left by i) is 1\n        set k to 1 bitshift left by i\n        break\n      \n    \n    set n to (n - k) + k / 2\n    increment bottles by b * k + k / 2\n  \n  print bottles and towels\n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  int bottles = 0;\n  int towels = n * p;\n  while (n > 1) {\n    int k = 0;\n    for (int i = 32 - 1; i >= 0; i--) {\n      if (n & (1 << i)) {\n        k = (1 << i);\n        break;\n      }\n    }\n    n = (n - k) + k / 2;\n    bottles += b * k + k / 2;\n  }\n  cout << bottles << \" \" << towels << \"\\n\";\n}\n"
    ],
    [
        "\n  let m, b, p, total , total_p be integers with total = 0\n  read m, b, p\n  the value of total_p = m * p\n  while 1 is an infinite loop since condition is always true\n    le k be a integer with k = [](int n) -> int\n      let i , res be integers with i = 1, res = 2 ^ 0\n      while 1 is an infinite loop since condition is always true\n        let temp be a integer with temp = 2 ^ i\n        if temp is greater than n, stop\n        the value of res = temp\n        increment i by 1\n      \n      return the value of res\n    m\n    let matches be a integer with matches = k / 2\n    increment total by matches * (2 * b)\n    increment total by matches\n    the value of m = (k / 2) + (m - k)\n    if matches is equal to 0 , stop\n  \n  print total and space and total_p and newline\n  \n\n",
        "int main() {\n  int m, b, p, total = 0, total_p;\n  cin >> m >> b >> p;\n  total_p = m * p;\n  while (1) {\n    int k = [](int n) -> int {\n      int i = 1, res = pow(2, 0);\n      while (1) {\n        int temp = pow(2, i);\n        if (temp > n) break;\n        res = temp;\n        i++;\n      }\n      return res;\n    }(m);\n    int matches = k / 2;\n    total += matches * (2 * b);\n    total += matches;\n    m = (k / 2) + (m - k);\n    if (matches == 0) break;\n  }\n  cout << total << \" \" << total_p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  i, b, p, j, n, m, k = int\n  read n, b, p\n  print (2 * b + 1) * (n - 1) and space and n * p\n\n",
        "int main() {\n  int i, b, p, j, n, m, k;\n  cin >> n >> b >> p;\n  cout << (2 * b + 1) * (n - 1) << \" \" << n * p << endl;\n}\n"
    ],
    [
        "\n  declare new long longs n, b and p\n  read variables n, b and p from the input\n  B is a new long long = 0\n  declare new long long called T = n * p\n  while n > 1\n    create long long variable with name now = 1\n    while now * 2 <= n\n    change B to B + (now / 2) * (2 * b + 1)\n    set n to now / 2 + (n - now)\n  \n  print B, \" \" and T\n  \n\n",
        "int main() {\n  long long n, b, p;\n  cin >> n >> b >> p;\n  long long B = 0;\n  long long T = n * p;\n  while (n > 1) {\n    long long now = 1;\n    while (now * 2 <= n) now *= 2;\n    B += (now / 2) * (2 * b + 1);\n    n = now / 2 + (n - now);\n  }\n  cout << B << \" \" << T << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare new integers N, B and P\n  read from the input to N, B and P\n  Ile is a new integer variable with value 0\n  create new integer variable Reczniki with value N * P\n  while N > 1\n    declare integer variable Potega with value 1\n    while Potega * 2 <= N\n    declare new integer IleMeczy = Potega / 2\n    add IleMeczy * 2 * B + IleMeczy to Ile\n    change N to (N - Potega) + IleMeczy\n  \n  print Ile, \" \", Reczniki and \"\\n\"\n\n",
        "int main() {\n  int N, B, P;\n  cin >> N >> B >> P;\n  int Ile = 0;\n  int Reczniki = N * P;\n  while (N > 1) {\n    int Potega = 1;\n    while (Potega * 2 <= N) { Potega *= 2; }\n    int IleMeczy = Potega / 2;\n    Ile += IleMeczy * 2 * B + IleMeczy;\n    N = (N - Potega) + IleMeczy;\n  }\n  cout << Ile << \" \" << Reczniki << \"\\n\";\n}\n"
    ],
    [
        "\n  create int n, b, p\n  read n, b, p\n  print (n - 1) * (2 * b + 1), \" \", n*p and a newline\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  cout << (n - 1) * (2 * b + 1) << \" \" << n * p << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  P=array of 9 int filled with 1,2,4,8,16,32,64,128,256\n  n,b,p=int\n  read n,b,p\n  B=0\n  N=n\n  while n>1\n    k=int\n    for i=8 down to -1 exclusive\n      if P[i] <= n\n        k=P[i]\n        break\n      \n    \n    add k*(2*b+1)/2 to B\n    subtract k/2 from n\n  \n  print B, space, N*p\n  \n\n",
        "int main() {\n  int P[9] = {1, 2, 4, 8, 16, 32, 64, 128, 256};\n  int n, b, p;\n  cin >> n >> b >> p;\n  int B = 0;\n  int N = n;\n  while (n > 1) {\n    int k;\n    for (int i = 8; i > -1; i--) {\n      if (P[i] <= n) {\n        k = P[i];\n        break;\n      }\n    }\n    B += k * (2 * b + 1) / 2;\n    n -= k / 2;\n  }\n  cout << B << \" \" << N * p << endl;\n  return 0;\n}\n"
    ],
    [
        "declare fast with no arguments, returning void\ndeclare mn = 1e9 as long long\ndeclare lucky with long longs a, c, integer b as arguments, returning void\n  if a is greater than 1e11, return from function\n  if a is greater than or equal to b and c is 0, let mn be minimum of mn and a\n  run lucky with a * 10 + 7, c - 1, b as arguments\n  run lucky with a * 10 + 4, c + 1, b as arguments\n\ndeclare integer n\ndeclare fff with string s, integer c as arguments, returning void\n  if size of s is 2 * n\n    if c is 0, print s and newline\n    return from function\n  \n  run fff with s + \"(\", c + 1 as arguments\n  if c is greater than 0, run fff with s + \")\", c - 1 as arguments\n\ndeclare toint with string s as argument, returning long long\n  declare a = 0, c = 1 as long longs\n  end statement\n  for i = 0 to size of s exclusive\n    increment a by (s[size of s - i - 1] - '0') * c\n    let c be c * 10\n  \n  return a from function\n\n\n  run fast\n  declare a, b = 0, c = 0, d = 1, sum = 0, x = 0 as long longs\n  declare strings s, ss = \"\"\n  read a, b, c\n  let d be a\n  while a is greater than 1\n    let x be a / 2\n    decrement a by x\n    while decrement x is ture, increment sum by ((2 * b) + 1)\n  \n  print sum and \" \" and d * c and \"\\n\"\n  \n\n",
        "void fast() {}\nlong long mn = 1e9;\nvoid lucky(long long a, long long c, int b) {\n  if (a > 1e11) return;\n  if (a >= b && c == 0) mn = min(mn, a);\n  lucky(a * 10 + 7, c - 1, b);\n  lucky(a * 10 + 4, c + 1, b);\n}\nint n;\nvoid fff(string s, int c) {\n  if (s.size() == 2 * n) {\n    if (c == 0) cout << s << endl;\n    return;\n  }\n  fff(s + \"(\", c + 1);\n  if (c > 0) fff(s + \")\", c - 1);\n}\nlong long toint(string s) {\n  long long a = 0, c = 1;\n  ;\n  for (int i = 0; i < s.size(); i++) {\n    a += (s[s.size() - i - 1] - '0') * c;\n    c *= 10;\n  }\n  return a;\n}\nint main() {\n  fast();\n  long long a, b = 0, c = 0, d = 1, sum = 0, x = 0;\n  string s, ss = \"\";\n  cin >> a >> b >> c;\n  d = a;\n  while (a > 1) {\n    x = a / 2;\n    a -= x;\n    while (x--) sum += ((2 * b) + 1);\n  }\n  cout << sum << \" \" << d * c << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "n, b, p = long long int\n\n  read n, b, p\n  bByGame = long long integer with bByGame = b * 2 + 1\n  towels = long long integer with towels = p * n\n  bottles = long long integer with bottles = 0\n  while n > 1\n    num = long long integer with num = log2(n)\n    bottles = bottles + num * bByGame\n    n = n - num\n  \n  print bottles,\" \",towels\n  \n\n",
        "long long int n, b, p;\nint main() {\n  cin >> n >> b >> p;\n  long long int bByGame = b * 2 + 1;\n  long long int towels = p * n;\n  long long int bottles = 0;\n  while (n > 1) {\n    long long int num = log2(n);\n    bottles += num * bByGame;\n    n -= num;\n  }\n  cout << bottles << \" \" << towels << endl;\n  return 0;\n}\n"
    ],
    [
        "function min with int arguments a and b that returns integer\n  return a if a < b, or b otherwise\n\nmax is an integer function with int arguments a and b\n  return a if a > b, or b otherwise\n\n\n  declare integer variables n, b, p and matches with the value of matches = 0\n  create integer variable with name x = 256\n  read n, b and p\n  declare integer N with value n\n  while n != 1\n    if x is greater than n\n      change the value of x to x divided by 2\n      skip the rest of the loop\n    \n    subtract x / 2 from n\n    add x / 2 to matches\n  \n  print matches * (1 + 2 * b), \" \" and N * p to the standard output\n\n",
        "int min(int a, int b) {\n  return a < b ? a : b;\n}\nint max(int a, int b) {\n  return a > b ? a : b;\n}\nint main() {\n  int n, b, p, matches = 0;\n  int x = 256;\n  cin >> n >> b >> p;\n  int N = n;\n  while (n != 1) {\n    if (x > n) {\n      x /= 2;\n      continue;\n    }\n    n -= x / 2;\n    matches += x / 2;\n  }\n  cout << matches * (1 + 2 * b) << \" \" << N * p << endl;\n}\n"
    ],
    [
        "\n  n, b, p = long long\n  read n then b then p\n  s1, s2 = long long with s1 = 0LL and s2 = p * n\n  loop while n > 1\n    k = long long with k = 1\n    loop while k < n set k to k * 2\n    if k > n set k to k / 2\n    increment s1 by (k / 2) * (2 * b + 1)\n    m = long long with m = n - k\n    l = long long with l = k / 2\n    set n to l + m\n  \n  print s1 and s2\n  \n\n",
        "int main() {\n  long long n, b, p;\n  cin >> n >> b >> p;\n  long long s1 = 0LL, s2 = p * n;\n  while (n > 1) {\n    long long k = 1;\n    while (k < n) k *= 2;\n    if (k > n) k /= 2;\n    s1 += (k / 2) * (2 * b + 1);\n    long long m = n - k;\n    long long l = k / 2;\n    n = l + m;\n  }\n  cout << s1 << \" \" << s2 << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create new constant integer maxn with value 1e6+5\ncreate constant integer variable mod = 1e9+7\ncreate long long arrays fac and y with size maxn\ndeclare long long variables n and k\nlong long function qpow with long long arguments a, b and c\n  declare long long variable with name ans with value 1\n  change a to the remainder of a divided by c\n  change b to b modulo c\n  while b > 0\n    if b is even, set ans to (ans * a) modulo c\n    change b to b / 2\n    change a to a squared modulo c\n  \n  return ans\n\ninteger function pow_2 with integer argument m\n  create new integer called res with value 1\n  declare new integer variable left = 1\n  looping infinitely\n    if res << left <= m and res << (left + 1) > m, return res\n    increment left\n  \n\n\n  create ints n, b and p\n  declare new integer called ans with value 0\n  read standard input to n, b and p\n  declare integer tow with value n * p\n  declare new integer called left with value 0\n  while n > 1\n    create integer k with value pow_2 of n\n    set left to n - k\n    add b * k + k / 2 to ans\n    change n to k / 2 + left\n  \n  print ans, ' ', tow and '\\n' to standard output\n  \n\n",
        "const int maxn = 1e6 + 5;\nconst int mod = 1e9 + 7;\nlong long fac[maxn], y[maxn];\nlong long n, k;\nlong long qpow(long long a, long long b, long long c) {\n  long long ans = 1;\n  a %= c;\n  b %= c;\n  while (b > 0) {\n    if (b % 2 == 1) ans = (ans * a) % c;\n    b = b / 2;\n    a = (a * a) % c;\n  }\n  return ans;\n}\nint pow_2(int m) {\n  int res = 1;\n  int left = 1;\n  while (true) {\n    if (res << left <= m && res << (left + 1) > m) return res << left;\n    left++;\n  }\n}\nint main() {\n  int n, b, p;\n  int ans = 0;\n  cin >> n >> b >> p;\n  int tow = n * p;\n  int left = 0;\n  while (n > 1) {\n    int k = pow_2(n);\n    left = n - k;\n    ans += b * k + k / 2;\n    n = k / 2 + left;\n  }\n  cout << ans << ' ' << tow << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  let participants, bottles, towels be integers\n  let total_b , total_t , matches be integers with total_b = 0, total_t = 0\n  read participants, bottles, towels\n  the value of total_t = participants * towels\n  while participants is not equal to 1\n    the value of matches = participants / 2\n    if participants modulo 2 is equal to 1\n      total_b is equal to total_b + (participants - 1) * bottles + matches\n      the value of participants = participants / 2 + 1\n    else do the following\n      total_b is equal to total_b + participants * bottles + matches\n      the value of participants = participants / 2\n    \n  \n  print total_b and space and total_t and newline\n  \n\n",
        "int main() {\n  int participants, bottles, towels;\n  int total_b = 0, total_t = 0, matches;\n  cin >> participants >> bottles >> towels;\n  total_t = participants * towels;\n  while (participants != 1) {\n    matches = participants / 2;\n    if (participants % 2 == 1) {\n      total_b += (participants - 1) * bottles + matches;\n      participants = participants / 2 + 1;\n    } else {\n      total_b += participants * bottles + matches;\n      participants = participants / 2;\n    }\n  }\n  cout << total_b << \" \" << total_t << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, b, p = int\n  read n then b then p\n  print (n - 1) * (b * 2 + 1) and p * n\n  \n\n",
        "int main() {\n  int n, b, p;\n  cin >> n >> b >> p;\n  cout << (n - 1) * (b * 2 + 1) << \" \" << p * n << '\\n';\n  return 0;\n}\n"
    ],
    [
        "N, B, P = int\nqplays = int\nqplayers = int\nqoutplayers = int\ntplays = int\ntplayers = int\nin function calc taking int n\n  k = int with k = 1\n  loop while k < n set k to k bithsift left by 1\n  if k > n set k to k bitshift right by 1\n  set qplays to k - 1\n  set qoutplayers to n - k\n  set qplayers to 0\n  loop while k >= 1\n    increment qplayers by k\n    set k to k bitshift right by 1\n  \n  decrement qplayers\n\n\n  read N then B then P\n  set tplays to 0\n  set tplayers to 0\n  set qoutplayers to 0\n  n = int with n = N\n  do\n    call calc of n\n    increment tplayers by qplayers\n    increment tplays by qplays\n    set n to 1 + qoutplayers\n  while qoutplayers > 0\n  print ((tplayers * B) + tplays) and N * P\n  \n\n",
        "int N, B, P;\nint qplays;\nint qplayers;\nint qoutplayers;\nint tplays;\nint tplayers;\nvoid calc(int n) {\n  int k = 1;\n  while (k < n) k <<= 1;\n  if (k > n) k >>= 1;\n  qplays = k - 1;\n  qoutplayers = n - k;\n  qplayers = 0;\n  while (k >= 1) {\n    qplayers += k;\n    k >>= 1;\n  }\n  --qplayers;\n}\nint main() {\n  cin >> N >> B >> P;\n  tplays = 0;\n  tplayers = 0;\n  qoutplayers = 0;\n  int n = N;\n  do {\n    calc(n);\n    tplayers += qplayers;\n    tplays += qplays;\n    n = 1 + qoutplayers;\n  } while (qoutplayers > 0);\n  cout << ((tplayers * B) + tplays) << \" \" << (N * P) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "n, b, p, x, ans = long long\nl = bool with l = true\n\n  read n, b, p\n  x = n\n  while n > 1\n    ans = ans + (n / 2) * (b * 2 + 1)\n    n = ceil(n / 2.0)\n  \n  print ans,\" \",x * p\n  \n\n",
        "long long n, b, p, x, ans;\nbool l = true;\nint main() {\n  cin >> n >> b >> p;\n  x = n;\n  while (n > 1) {\n    ans += (n / 2) * (b * 2 + 1);\n    n = ceil(n / 2.0);\n  }\n  cout << ans << \" \" << x * p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n, m, p\n  get n, m, p\n  create integer ans with ans=0\n  create integer c with c=n\n  while n not equal to 1 do the following\n    add n/2 to ans\n    subtract n/2 from n\n  \n  compute and print two expressions ans*(m*2+1) and c*p with a blank space between\n\n",
        "int main() {\n  int n, m, p;\n  cin >> n >> m >> p;\n  int ans = 0;\n  int c = n;\n  while (n != 1) {\n    ans += n / 2;\n    n -= n / 2;\n  }\n  cout << ans * (m * 2 + 1) << \" \" << c * p << endl;\n}\n"
    ],
    [
        "p2 = int array with the values 1, 2, 4, 8, 16, 32, 64, 128, 256\n\n  n, b, p, k, m = int\n  bn = int with bn = 0\n  read n then b then p\n  set m to n\n  loop while m is greater than 1\n    for k = 8 to 0 inclusive decrementing k\n      if p2[k] is less or equal to m\n        increment bn by p2[k] / 2 + p2[k] * b\n        break\n      \n    \n    set m to p2[k] / 2 + (m - p2[k])\n  \n  print bn and n * p\n  \n\n",
        "int p2[] = {1, 2, 4, 8, 16, 32, 64, 128, 256};\nint main() {\n  int n, b, p, k, m;\n  int bn = 0;\n  cin >> n >> b >> p;\n  m = n;\n  while (m > 1) {\n    for (k = 8; k >= 0; k--) {\n      if (p2[k] <= m) {\n        bn += p2[k] / 2 + p2[k] * b;\n        break;\n      }\n    }\n    m = p2[k] / 2 + (m - p2[k]);\n  }\n  cout << bn << \" \" << n * p << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, p = int\n  str = string array of size 45\n  sum, now = long long\n  read n then p\n  set sum and now to 0\n  for i = n - 1 to 0 inclusive decrementing i read str[i]\n  for i = 0 to n - 1 inclusive\n    if str[i] is \"half\"\n      increment sum by now * p\n      set now to now * 2\n    else\n      increment sum by now * p + p / 2\n      set now to now * 2 + 1\n    \n  \n  print sum\n  \n\n",
        "int main() {\n  int n, p;\n  string str[45];\n  long long sum, now;\n  cin >> n >> p;\n  sum = 0, now = 0;\n  for (int i = n - 1; i >= 0; i--) cin >> str[i];\n  for (int i = 0; i <= n - 1; i++) {\n    if (str[i] == \"half\") {\n      sum += now * p;\n      now = now * 2;\n    } else {\n      sum += now * p + p / 2;\n      now = now * 2 + 1;\n    }\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, p\n  read n read p\n  create string array str with size n\n  create long long i\n  create long longs ans, fans with fans = 0\n  for i = 0 to n exclusive, read str[i]\n  reverse sort elements from str to str + n\n  if str[0] is \"half\"\n    set ans to 2\n  else\n    set ans to 1\n  increment fans by ans * p / 2\n  for i = 1 to n exclusive\n    if str[i] is \"half\"\n      set ans to ans * 2\n    else\n      set ans to ans * 2 + 1\n    increment fans by ans * p / 2\n  \n  print fans print newline\n\n",
        "int main() {\n  long long n, p;\n  cin >> n >> p;\n  string str[n];\n  long long i;\n  long long ans, fans = 0;\n  for (i = 0; i < n; i++) cin >> str[i];\n  reverse(str, str + n);\n  if (str[0] == \"half\")\n    ans = 2;\n  else\n    ans = 1;\n  fans += ans * p / 2;\n  for (i = 1; i < n; i++) {\n    if (str[i] == \"half\")\n      ans *= 2;\n    else\n      ans = ans * 2 + 1;\n    fans += ans * p / 2;\n  }\n  cout << fans << endl;\n}\n"
    ],
    [
        "declare solve\n  create ints n and p\n  read n and p\n  let long double ans = 0\n  let int cnt = 0\n  create string vector v\n  for i = 0 to n exclusive\n    let string s\n    read s\n    append s to vector v\n  \n  reverse order of contents of vector v\n  for i = 0 to n exclusive\n    if v[i] is equal to \"halfplus\"\n      set ans to ans + 0.5\n      set ans to ans * 2\n      increment cnt\n    otherwise do:\n      set ans to ans * 2\n    \n  \n  print the result of (long long)(ans)*p - cnt * (p / 2)\n\n\n  call solve()\n  \n\n",
        "void solve() {\n  int n, p;\n  cin >> n >> p;\n  long double ans = 0;\n  int cnt = 0;\n  vector<string> v;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    v.push_back(s);\n  }\n  reverse(v.begin(), v.end());\n  for (int i = 0; i < n; i++) {\n    if (v[i] == \"halfplus\") {\n      ans += 0.5;\n      ans *= 2;\n      cnt++;\n    } else {\n      ans *= 2;\n    }\n  }\n  cout << (long long)(ans)*p - cnt * (p / 2) << endl;\n}\nint main() {\n  solve();\n  return 0;\n}\n"
    ],
    [
        "\n  str = string array of size 41\n  n, p, i, flag = int with flag = 0\n  a = long long with a = 0\n  read n then p\n  for i = 1 to n inclusive read str[i]\n  if str[i - 1] is \"halfplus\"\n    increment a by p / 2\n    increment flag\n  \n  for j = i - 2 to 0 decrementing j\n    if str[j] is \"halfplus\"\n      set a to a + (a + flag * p / 2 + p / 2)\n      increment flag\n    \n    if str[j] is \"half\" increment a by a + flag * p / 2\n  \n  print a\n\n",
        "int main() {\n  string str[41];\n  int n, p, i, flag = 0;\n  long long a = 0;\n  cin >> n >> p;\n  for (i = 1; i <= n; i++) { cin >> str[i]; }\n  if (str[i - 1] == \"halfplus\") {\n    a += p / 2;\n    flag++;\n  }\n  for (int j = i - 2; j > 0; j--) {\n    if (str[j] == \"halfplus\") {\n      a = a + (a + flag * p / 2 + p / 2);\n      flag++;\n    }\n    if (str[j] == \"half\") { a = a + (a + flag * p / 2); }\n  }\n  cout << a << endl;\n}\n"
    ],
    [
        "op = array of strings 444\n\n  let n, p be long integers\n  read n and p\n  the value of p = p / 2\n  for i = 1 to n inclusive, read op[i]\n  let ans, send be long integers with ans = 0, send = 0\n  for i is equal to n , i >= 1, decrement i by 1\n    send = send * 2\n    if op[i] is equal to halfplus , increment send by 1\n    increment ans by send\n  \n  print ans * p and newline\n  \n\n",
        "string op[444];\nint main() {\n  long long n, p;\n  cin >> n >> p;\n  p /= 2;\n  for (int i = 1; i <= n; i++) { cin >> op[i]; }\n  long long ans = 0, send = 0;\n  for (int i = n; i >= 1; i--) {\n    send *= 2;\n    if (op[i] == \"halfplus\") { send++; }\n    ans += send;\n  }\n  cout << ans * p << endl;\n  return 0;\n}\n"
    ],
    [
        "in the function GCD that takes integer a, b\n  if a < b, swap a and b\n  a = a modulo b\n  if a is 0\n    return b\n  else\n    return GCD of a and b\n\nINF = const integer with INF = 1000000000\nINF64 = const long long with INF64 = 1e18;\nN = const integer with N = 2020\nM = const integer with M = 2000\nMOD = const integer with MOD = 1000000007\n\n  n, p = long long\n  read n, p\n  a = vector of integer with a = n\n  for i = 0 to cast to int(n)\n    s = string\n    read s\n    if s is half\n      a[i] = 0\n    else\n      a[i] = 1\n  \n  k = long long with k = 0\n  half = long long with half = 0\n  for i = n - 1 down to 0\n    k = k * 2 + a[i]\n    half = half + a[i]\n  \n  res = long long with res = k * p - half * (p / 2)\n  print res\n\n",
        "int GCD(int a, int b) {\n  if (a < b) swap(a, b);\n  a %= b;\n  if (a == 0)\n    return b;\n  else\n    return GCD(a, b);\n}\nconst int INF = 1000000000;\nconst long long INF64 = 1e18;\nconst int N = 2020;\nconst int M = 2000;\nconst int MOD = 1000000007;\nint main() {\n  long long n, p;\n  cin >> n >> p;\n  vector<int> a(n);\n  for (int i = 0; i < int(n); i++) {\n    string s;\n    cin >> s;\n    if (s == \"half\")\n      a[i] = 0;\n    else\n      a[i] = 1;\n  }\n  long long k = 0;\n  long long half = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    k = k * 2 + a[i];\n    half += a[i];\n  }\n  long long res = k * p - half * (p / 2);\n  cout << res << endl;\n}\n"
    ],
    [
        "set maxn to 5005\nassign 0x3f3f3f3f to inf\n\n  create int a and b\n  read a, b\n  create string s of size 50\n  for i=1 to a inclusive, read s[i]\n  set ans to b/2 and num to 1\n  for i=a-1 to 1 inclusive\n    if s[i] = halfplus\n      set ans to ans + (num + 0.5) * b\n      assign num*2 + 1 to num\n    else\n      set ans to ans + bum*b\n      num= num*2\n    \n  \n  print ans\n  \n\n",
        "const int maxn = 5005;\nconst int inf = 0x3f3f3f3f;\nint main() {\n  int a, b;\n  cin >> a >> b;\n  string s[50];\n  for (int i = 1; i <= a; i++) { cin >> s[i]; }\n  long long ans = b / 2, num = 1;\n  for (int i = a - 1; i >= 1; i--) {\n    if (s[i] == \"halfplus\") {\n      ans += (num + 0.5) * b;\n      num = num * 2 + 1;\n    } else {\n      ans += num * b;\n      num *= 2;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create string array s with size 2525\n\n  create long longs n, p, m, l, with m = 0, l = 0\n  read n read p\n  for i = 1 to n inclusive, read s[i]\n  for i = n to 1 inclusive, decrementing i\n    set m to m * 2\n    if s[i] is \"halfplus\" increment m\n    increment l by m\n  \n  print l * p / 2 print newline\n  \n\n",
        "string s[2525];\nint main() {\n  long long n, p, m = 0, l = 0;\n  cin >> n >> p;\n  for (int i = 1; i <= n; i++) cin >> s[i];\n  for (int i = n; i >= 1; i--) {\n    m *= 2;\n    if (s[i] == \"halfplus\") m++;\n    l += m;\n  }\n  cout << l * p / 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integers n, p and halfs where halfs = 0\n  create long long current = 0\n  read n and p from the user input\n  create new stack of strings s\n  create string variable temp\n  for i from 0 to n exclusive\n    read standard input to temp\n    push temp to the stack s\n    if temp is equal to \"halfplus\", increment halfs\n  \n  if top element of s is equal to \"halfplus\"\n    assign 1 to current\n    remove top element from s\n  \n  loop while s is not empty\n    change the value of current to current multiplied by 2\n    if value of the top element of s is \"halfplus\", increment current by one\n    remove top element from s\n  \n  change current to current * p - (0.5 * p * halfs)\n  print current\n  \n\n",
        "int main() {\n  int n, p, halfs = 0;\n  long long current = 0;\n  cin >> n >> p;\n  stack<string> s;\n  string temp;\n  for (int i = 0; i < n; i++) {\n    cin >> temp;\n    s.push(temp);\n    if (temp == \"halfplus\") halfs++;\n  }\n  if (s.top() == \"halfplus\") {\n    current = 1;\n    s.pop();\n  }\n  while (!s.empty()) {\n    current *= 2;\n    if (s.top() == \"halfplus\") current++;\n    s.pop();\n  }\n  current = current * p - (0.5 * p * halfs);\n  cout << current << endl;\n  return 0;\n}\n"
    ],
    [
        "let ret an array of long longs of length 50\n\n  let n, p ints\n  read n and p\n  let ans, temp be long longs with ans = 1, tmp = 0\n  for i = 0 to n exclusive\n    let s a string\n    read s\n    if s is half\n      set ret[i] to 1\n    otherwise\n      set ret[i] to 2 and increment tmp\n  \n  for i = n-2 down to 0 inclusive\n    if ret[i] is 1\n      multiply ans by 2\n    otherwise\n      set ans to ans * 2 + 1\n  \n  set ans to ans * p - tmp * (p / 2)\n  print ans\n  \n\n",
        "long long ret[50];\nint main() {\n  int n, p;\n  cin >> n >> p;\n  long long ans = 1, tmp = 0;\n  for (int i = 0; i < n; i++) {\n    string s;\n    cin >> s;\n    if (s == \"half\")\n      ret[i] = 1;\n    else\n      ret[i] = 2, tmp++;\n  }\n  for (int i = n - 2; i >= 0; i--) {\n    if (ret[i] == 1)\n      ans = ans * 2;\n    else\n      ans = ans * 2 + 1;\n  }\n  ans = ans * p - tmp * (p / 2);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long ints n, p, count = 0, and y = 0\n  let string x\n  read n and p\n  make string vector a\n  for i = 0 to n exclusive\n    read x\n    append x to vector a\n  \n  for i = n - 1 to 0\n    if a[i] is equal to \"halfplus\"\n      set count to count * 2 + 1\n      increment y\n    \n    if a[i] is equal to \"half\", set count to 2 * count\n  \n  let long long int ans = p * count - (p * y) / 2\n  print ans\n  \n\n",
        "int main() {\n  long long n, p, count = 0, y = 0;\n  string x;\n  cin >> n >> p;\n  vector<string> a;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    a.push_back(x);\n  }\n  for (int i = n - 1; i >= 0; i--) {\n    if (a[i] == \"halfplus\") {\n      count = count * 2 + 1;\n      y++;\n    }\n    if (a[i] == \"half\") { count = 2 * count; }\n  }\n  long long ans = p * count - (p * y) / 2;\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "declare long longs p, he and shu\ndeclare integer n\ndeclare an array of strings s with 50 elements\n\n  read input to n and p\n  divide p by 2\n  for i = 1 to n inclusive, read s[i]\n  for integer i = n to 1 inclusive counting down\n    set shu to shu * 2\n    if s[i] != \"half\", increase shu by 1\n    add shu to he\n  \n  print he * p\n  \n\n",
        "long long p, he, shu;\nint n;\nstring s[50];\nint main() {\n  cin >> n >> p;\n  p /= 2;\n  for (int i = 1; i <= n; i++) cin >> s[i];\n  for (int i = n; i >= 1; i--) {\n    shu = shu * 2;\n    if (s[i] != \"half\") shu += 1;\n    he += shu;\n  }\n  cout << he * p << endl;\n  return 0;\n}\n"
    ],
    [
        "set N to 1e6 + 5, MAX to 3e7 and MOD = 1e9 + 7\ncreate int n and p\ncreate string a[N]\nlet ans be ans ans\n\n  read n and p\n  for i=0 to n exclusive, read a[i]\n  curr = 0\n  for i= n-1 to 0 inclusive\n    if a[i] = half\n      set ans to ans + curr*p\n      assign curr*2 to curr\n    else\n      assign ans + curr * p to ans\n      set ans to ans + p/2\n      set curr= curr*2\n      increment curr\n    \n  \n  print ans and a newline\n\n",
        "const int N = 1e6 + 5, MAX = 3e7, MOD = 1e9 + 7;\nint n, p;\nstring a[N];\nlong long ans;\nint main() {\n  cin >> n >> p;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  long long curr = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    if (a[i] == \"half\") {\n      ans += curr * p;\n      curr *= 2;\n    } else {\n      ans += curr * p;\n      ans += p / 2;\n      curr *= 2;\n      curr++;\n    }\n  }\n  cout << ans << \"\\n\";\n}\n"
    ],
    [
        "\n  let n and p be long long integers\n  read n and p\n  let cost be a long long in with value 0\n  arr with n elements = string\n  read i long long elements into arr from 0 to n exclusive\n  let num = long long int with value 0\n  for i from n - 1 to 0 inclusive decreasing\n    if arr at element i equals halfplus\n      num equals num times 2 plus 1\n    else\n      num equals itself times 2\n  \n  for i from 0 to n exclusive\n    if arr at i equals halfplus\n      cost equals cost plus (num / 2) * p + (p / 2)\n      num equals num minus half of num minus 1\n    else\n      cost equals cost plus (num / 2) * p\n      num equals num minus half of num\n    \n  \n  print cost\n\n",
        "int main() {\n  long long int n, p;\n  cin >> n >> p;\n  long long int cost = 0;\n  string arr[n];\n  for (long long int i = 0; i < n; i++) { cin >> arr[i]; }\n  long long int num = 0;\n  for (long long int i = n - 1; i >= 0; i--) {\n    if (arr[i] == \"halfplus\")\n      num = (num * 2) + 1;\n    else\n      num = (num * 2);\n  }\n  for (long long int i = 0; i < n; i++) {\n    if (arr[i] == \"halfplus\") {\n      cost += (num / 2) * p + (p / 2);\n      num = num - (num / 2) - 1;\n    } else {\n      cost += (num / 2) * p;\n      num = num - (num / 2);\n    }\n  }\n  cout << cost << endl;\n}\n"
    ],
    [
        "create constant long long mod with mod = 1e9 + 7\ncreate constant double esp with esp = 1e-5\n\n  create long longs n, p\n  create string array a with size 50\n  while read n read p is true\n    for i = 1 to n inclusive, read a[i]\n    create long longs num, t, with num = 1, t = 1\n    for i = n - 1 to 1 inclusive, decrementing i\n      if a[i] is \"halfplus\"\n        set num to ( num + 0.5 ) * 2\n        increment t\n      else\n        set num to num * 2\n      \n    \n    create long long ans with ans = 0\n    set ans to num * p - t * (p / 2)\n    print ans print newline\n  \n\n",
        "const long long mod = 1e9 + 7;\nconst double esp = 1e-5;\nint main() {\n  long long n, p;\n  string a[50];\n  while (cin >> n >> p) {\n    for (long long i = 1; i <= n; i++) cin >> a[i];\n    long long num = 1, t = 1;\n    for (int i = n - 1; i >= 1; i--) {\n      if (a[i] == \"halfplus\") {\n        num = (num + 0.5) * 2;\n        t++;\n      } else {\n        num = num * 2;\n      }\n    }\n    long long ans = 0;\n    ans = num * p - t * (p / 2);\n    cout << ans << endl;\n  }\n}\n"
    ],
    [
        "create string array s with size 41\ncreate long longs n, p, sum\ncreate double curr\n\n  read n read p\n  for i = 0 to n exclusive, read s[i]\n  for i = n - 1 to 0 inclusive, decrementing i\n    if s[i] is \"halfplus\", increment curr by 0.5\n    increment sum by curr * p\n    set curr to curr * 2\n  \n  print sum print newline\n  \n\n",
        "string s[41];\nlong long n, p, sum;\ndouble curr;\nint main() {\n  cin >> n >> p;\n  for (int i = 0; i < n; i++) cin >> s[i];\n  for (int i = n - 1; i >= 0; i--) {\n    if (s[i] == \"halfplus\") curr += 0.5;\n    sum += curr * p;\n    curr *= 2;\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "declare constant int N = 1e6\ncreate integer array aa with size N + 2\n\n  declare integers n and p\n  read n and p\n  for i from 1 to n inclusive\n    declare string s\n    read input to s\n    if s is equal to \"half\"\n      set aa[i] to 0\n    else\n      set aa[i] to 1\n  \n  declare long longs app and ans where ans = 0\n  for integer i = n to 1 inclusive decrementing i\n    if i = n\n      set app to 1\n    else\n      set app to app * 2 + aa[i]\n    add ((app / 2) * 1LL) * p to ans\n    if app is odd, increase ans by p / 2\n  \n  print ans\n  \n\n",
        "const int N = 1e6;\nint aa[N + 2];\nint main() {\n  int n, p;\n  cin >> n >> p;\n  for (int i = 1; i <= n; i++) {\n    string s;\n    cin >> s;\n    if (s == \"half\")\n      aa[i] = 0;\n    else\n      aa[i] = 1;\n  }\n  long long app, ans = 0;\n  for (int i = n; i >= 1; i--) {\n    if (i == n)\n      app = 1;\n    else\n      app = app * 2 + aa[i];\n    ans += ((app / 2) * 1LL) * p;\n    if (app % 2) ans += (p / 2);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create ints n and p\n  read n\n  read p\n  create long double apples = 0\n  let long long answer = 0\n  create string vector data\n  for i = 0 to n exclusive\n    create string temp\n    read temp\n    append temp to data\n  \n  for i = n - 1 to 0\n    if data[i] is equal to \"halfplus\"\n      set apples to apples + 0.5\n      set apples to apples * 2\n      set answer to answer + (apples / 2.0) * p\n    else\n      set apples to apples * 2\n      set answer to answer + (apples / 2.0) * p\n    \n  \n  print answer\n  read n\n\n",
        "int main() {\n  int n, p;\n  cin >> n;\n  cin >> p;\n  long double apples = 0;\n  long long answer = 0;\n  vector<string> data;\n  for (int i = 0; i < n; i++) {\n    string temp;\n    cin >> temp;\n    data.push_back(temp);\n  }\n  for (int i = n - 1; i >= 0; i--) {\n    if (data[i] == \"halfplus\") {\n      apples += 0.5;\n      apples *= 2;\n      answer += (apples / 2.0) * p;\n    } else {\n      apples *= 2;\n      answer += (apples / 2.0) * p;\n    }\n  }\n  cout << answer << endl;\n  cin >> n;\n}\n"
    ],
    [
        "declare string array op size 444\n\n  declare long longs n, p\n  read n, p\n  let p be p / 2\n  for i = 1 to n inclusive, read op[i]\n  declare long longs ans = 0, send = 0\n  for i = n to 1 inclusive, decrementing i\n    let send be send * 2\n    if op[i] is \"halfplus\", increment send\n    increment ans by send\n  \n  print ans * p, newline\n  \n\n",
        "string op[444];\nint main() {\n  long long n, p;\n  cin >> n >> p;\n  p /= 2;\n  for (int i = 1; i <= n; i++) { cin >> op[i]; }\n  long long ans = 0, send = 0;\n  for (int i = n; i >= 1; i--) {\n    send *= 2;\n    if (op[i] == \"halfplus\") { send++; }\n    ans += send;\n  }\n  cout << ans * p << endl;\n  return 0;\n}\n"
    ],
    [
        "create long longs n, p, k with k = 0\n\n  read n read p\n  create boolean vector a initialized with n\n  for i = 0 to n exclusive\n    create string t\n    read t\n    set a[i] to length of t is greater than 4\n    increment k by a[i]\n  \n  create double ans with ans = 0\n  create long long sum with sum = 0\n  reverse sort elements from beginning of a to end of a\n  for i = 0 to n exclusive\n    if a[i] is true\n      set ans to ans * 2 + 0.5\n      increment sum by ans * p\n    else\n      set ans to ans * 2\n      increment sum by ans * p\n    \n  \n  print sum print newline\n  \n\n",
        "long long n, p, k = 0;\nint main() {\n  cin >> n >> p;\n  vector<bool> a(n);\n  for (int i = 0; i < n; ++i) {\n    string t;\n    cin >> t;\n    a[i] = t.length() > 4;\n    k += a[i];\n  }\n  double ans = 0;\n  long long sum = 0;\n  reverse(a.begin(), a.end());\n  for (int i = 0; i < n; ++i) {\n    if (a[i]) {\n      ans = ans * 2 + 0.5;\n      sum += ans * p;\n    } else {\n      ans *= 2;\n      sum += ans * p;\n    }\n  }\n  cout << sum << endl;\n  return 0;\n}\n"
    ],
    [
        "N=int\nP=long long\nS=array of 2000010 string\n\n  read N,P\n  for i=1 to N inclusive read S[i]\n  fans=0\n  for i=N down to 1 inclusive\n    if S[i] is \"halfplus\"\n      add 0.5 to fans\n      multiply fans by 2\n    else\n      multiply fans by 2\n    \n  \n  cost=0\n  for i=1 to N inclusive\n    add (fans/2)*P to cost\n    if S[i] is \"half\"\n      divide fans by 2\n    else\n      divide fans by 2\n      subtract 0.5 from fans\n    \n  \n  print cost with 0 decimal digits\n  \n\n",
        "int N;\nlong long P;\nstring S[2000010];\nint main() {\n  cin >> N >> P;\n  for (int i = 1; i <= N; i++) { cin >> S[i]; }\n  long double fans = 0;\n  for (int i = N; i >= 1; i--) {\n    if (S[i] == \"halfplus\") {\n      fans += 0.5;\n      fans *= 2.00000000;\n    } else {\n      fans *= 2.00000000;\n    }\n  }\n  long double cost = 0;\n  for (int i = 1; i <= N; i++) {\n    cost += (fans / 2.00000) * (P);\n    if (S[i] == \"half\") {\n      fans /= 2.000;\n    } else {\n      fans /= 2.000;\n      fans -= 0.500;\n    }\n  }\n  cout << fixed << setprecision(0) << cost << endl;\n  return 0;\n}\n"
    ],
    [
        "c array of size 500005],s,bit array size of 100, origin array size of 100 = long long integers\n\n  integers = n\n  read n\n  for i = 0 to less than n do the following\n    ong a,b = long long integers\n    read a,b\n    set s ^= a, c[i] to a ^ b\n  \n  set integer cnt to 0\n  for i = 0 to less than n do the following\n    for j = 0 to less than cnt do the following\n      if c[i] & bit[j] is true\n    set if (c[i]) is true then origin[cnt] equals c[i], bit[cnt] equals c[i] and -c[i], and add 1 to cnt\n  \n  for j = 0 to less than cnt do the following\n    if s & bit[j] is true\n  if s is true\n    output 1/1\n  else\n    output (1ll,cnt) - 1,/,(1ll << cnt)\n  \n\n",
        "long long c[500005], s, bit[100], origin[100];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; ++i) {\n    long long a, b;\n    cin >> a >> b;\n    s ^= a, c[i] = a ^ b;\n  }\n  int cnt = 0;\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < cnt; ++j)\n      if (c[i] & bit[j]) c[i] ^= origin[j];\n    if (c[i]) origin[cnt] = c[i], bit[cnt] = c[i] & -c[i], ++cnt;\n  }\n  for (int j = 0; j < cnt; ++j)\n    if (s & bit[j]) s ^= origin[j];\n  if (s)\n    cout << \"1/1\" << endl;\n  else\n    cout << (1ll << cnt) - 1 << '/' << (1ll << cnt) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n\n  create vector of integers T with 1001 element filled with 1\n  create vector of chararcters rla\n  read n\n  for i = 0 to n - 1 exclusive\n    create character c\n    read c\n    push c to rla\n  \n  for integer i = 0 to n - 1 exclusive\n    if rla[i] is 'R'\n      T[i + 1] = max(T[i + 1], T[i] + 1)\n    else if rla[i] is '='\n      T[i + 1] = T[i]\n    \n  \n  for i = n - 2 to 0\n    if rla[i] is 'L'\n      assign value of max of T[i] and T[i + 1] + 1 to T[i]\n    else if rla[i] is '='\n      set T[i] to T[i + 1]\n    \n  \n  for i = 0 to n exclusive print T[i], \" \\n\" and [i == n - 1]\n  print flush\n  \n\n",
        "int main() {\n  int n;\n  vector<int> T(1001, 1);\n  vector<char> rla;\n  cin >> n;\n  for (int i = 0; i < n - 1; i++) {\n    char c;\n    cin >> c;\n    rla.push_back(c);\n  }\n  for (int i = 0; i < n - 1; i++) {\n    if (rla[i] == 'R') {\n      T[i + 1] = max(T[i + 1], T[i] + 1);\n    } else if (rla[i] == '=') {\n      T[i + 1] = T[i];\n    }\n  }\n  for (int i = n - 2; i >= 0; i--) {\n    if (rla[i] == 'L') {\n      T[i] = max(T[i], T[i + 1] + 1);\n    } else if (rla[i] == '=') {\n      T[i] = T[i + 1];\n    }\n  }\n  for (int i = 0; i < n; i++) { cout << T[i] << \" \\n\"[i == n - 1]; }\n  cout << flush;\n  return 0;\n}\n"
    ],
    [
        "vector_in is a int vector function with int argument n\n  create vector of integers v with n elements\n  loop i from 0 to n exclusive, reading v[i]\n  return v\n\nfunction vector_out with vector of ints argument v\n  for i from 0 to length of v exclusive, print v[i] and \" \"\n  print new line\n\nfunction vector_sum with vector of ints argument v that returns integer\n  create integer sum\n  for i = 0 to length of v exclusive, increase sum by v[i]\n  return sum\n\n\n  declare int n\n  create vector of integers T with 1001 element filled with 1\n  create characters vector rla\n  read input to n\n  loop i from 0 to n - 1 exclusive\n    declare character variable c\n    read c\n    push c into rla\n  \n  for i from 0 to n-1 exclusive\n    if rla[i] = 'R'\n      set T[i + 1] to max of T[i + 1] and T[i] + 1\n    else if rla[i] is '='\n      change T[i + 1] to T[i]\n    \n  \n  for integer i = n - 2 to 0 inclusive counting down\n    if rla[i] is equal to 'L'\n      assign max of T[i] and T[i + 1] + 1 to T[i]\n    else if rla[i] is '='\n      set T[i] to T[i + 1]\n    \n  \n  for i from 0 to n exclusive, print T[i] and \" \\n\"[i=n - 1]\n  print flush\n  \n\n",
        "vector<int> vector_in(int n) {\n  vector<int> v(n);\n  for (int i = 0; i < n; i++) cin >> v[i];\n  return v;\n}\nvoid vector_out(vector<int> v) {\n  for (int i = 0; i < v.size(); i++) cout << v[i] << \" \";\n  cout << endl;\n}\nint vector_sum(vector<int> v) {\n  int sum;\n  for (int i = 0; i < v.size(); i++) sum += v[i];\n  return sum;\n}\nint main() {\n  int n;\n  vector<int> T(1001, 1);\n  vector<char> rla;\n  cin >> n;\n  for (int i = 0; i < n - 1; i++) {\n    char c;\n    cin >> c;\n    rla.push_back(c);\n  }\n  for (int i = 0; i < n - 1; i++) {\n    if (rla[i] == 'R') {\n      T[i + 1] = max(T[i + 1], T[i] + 1);\n    } else if (rla[i] == '=') {\n      T[i + 1] = T[i];\n    }\n  }\n  for (int i = n - 2; i >= 0; i--) {\n    if (rla[i] == 'L') {\n      T[i] = max(T[i], T[i + 1] + 1);\n    } else if (rla[i] == '=') {\n      T[i] = T[i + 1];\n    }\n  }\n  for (int i = 0; i < n; i++) { cout << T[i] << \" \\n\"[i == n - 1]; }\n  cout << flush;\n  return 0;\n}\n"
    ],
    [
        "n = long long integers\nintegers = answer array with size of 2000\n\n  read n\n  set integer small to 1\n  create character variable s\n  read n values into array s\n  make n values of array answer = 1\n  for i = n - 2 to greater than or equal to 0 then do\n    if s[i] is L then do the following\n      set answer[i] to answer[i + 1] + 1\n    else if s[i] is = then do the following\n      set answer[i] to answer[i + 1]\n  \n  for i = 0 to less than n - 1 do the following\n    if s[i] = R and answer[i] is greater than or equal to answer[i + 1] then do the following\n      set answer[i + 1] to answer[i] + 1\n    else if s[i] is = then do the following\n      set answer[i + 1] to answer[i]\n  \n  output n values from array answer\n\n",
        "long long int n;\nint answer[2000];\nint main() {\n  cin >> n;\n  int small = 1;\n  char s[n];\n  for (int i = 0; i < n - 1; i++) cin >> s[i];\n  for (int i = 0; i < n; i++) answer[i] = 1;\n  for (int i = n - 2; i >= 0; i--) {\n    if (s[i] == 'L')\n      answer[i] = answer[i + 1] + 1;\n    else if (s[i] == '=')\n      answer[i] = answer[i + 1];\n  }\n  for (int i = 0; i < n - 1; i++) {\n    if (s[i] == 'R' && answer[i] >= answer[i + 1])\n      answer[i + 1] = answer[i] + 1;\n    else if (s[i] == '=')\n      answer[i + 1] = answer[i];\n  }\n  for (int i = 0; i < n; i++) cout << answer[i] << \" \\n\"[i == n - 1];\n}\n"
    ],
    [
        "mod = const long long with mod = 1000000007\nin function powmod taking two long longs a and b and returning a long long\n  res = long long with res = 1\n  set a to a mod mod\n  call assert on b is greater or equal to 0\n  loop while b is not 0 setting b to b bitwise rightshift 1 each time\n    if b bitwise and 1 is 1 then set re to res * a modulo mod\n    set a to a * a modulo mod\n  \n  return res\n\nin = ifstream of \"txt.in\"\nout = ofstream of \"txt.out\"\n\n  call fixed and setprecision of 12 on cout\n  a, b = long long\n  read a then b\n  n = long long\n  read n\n  mx = double with mx = 2e9\n  for i = 1 to n inclusive\n    x, y, k = long long\n    read x then y then k\n    dis = double with dis = result of sqrt of (x - a) * (x - a) + (y - b) * (y - b) / k\n    mx = min of mx and dis\n  \n  print mx\n  \n\n",
        "long long const mod = 1000000007;\nlong long powmod(long long a, long long b) {\n  long long res = 1;\n  a %= mod;\n  assert(b >= 0);\n  for (; b; b >>= 1) {\n    if (b & 1) res = res * a % mod;\n    a = a * a % mod;\n  }\n  return res;\n}\nifstream in(\"txt.in\");\nofstream out(\"txt.out\");\nint main() {\n  cout << fixed << setprecision(12);\n  long long a, b;\n  cin >> a >> b;\n  long long n;\n  cin >> n;\n  double mx = 2e9;\n  for (int i = 1; i <= n; ++i) {\n    long long x, y, k;\n    cin >> x >> y >> k;\n    double dis = sqrt((x - a) * (x - a) + (y - b) * (y - b)) / k;\n    mx = min(mx, dis);\n  }\n  cout << mx << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create integers n and i and an arrays of integers a and b with size 100000\n  read n\n  read n elements into a\n  for i = 0 to n - 1 exclusive, set value of b[i] to a[i] + a[i + 1]\n  set value of b[n - 1] to a[n - 1]\n  for i = 0 to n - 1 exclusive print b[i] and \" \"\n  print b[n - 1]\n  \n\n",
        "int main() {\n  int n, i, a[100000], b[100000];\n  cin >> n;\n  for (i = 0; i < n; i++) { cin >> a[i]; }\n  for (i = 0; i < n - 1; i++) { b[i] = a[i] + a[i + 1]; }\n  b[n - 1] = a[n - 1];\n  for (i = 0; i < n - 1; i++) { cout << b[i] << \" \"; }\n  cout << b[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "declare integers n, z and a\n\n  read n\n  for integer i = 1 to n inclusive\n    read a\n    if i != 1, print a + z and \" \"\n    set z to a\n  \n  print a\n  \n\n",
        "int n, z, a;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a;\n    if (i != 1) { cout << a + z << \" \"; }\n    z = a;\n  }\n  cout << a << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  create long long array a with 100050 elements\n  for integer i = 0 to n exclusive, read a[i]\n  for integer i = 1 to n exclusive, print a[i] + a[i - 1] and \" \"\n  print a[n - 1]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long a[100050];\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 1; i < n; i++) cout << a[i] + a[i - 1] << \" \";\n  cout << a[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integers n, i\n  read n\n  create long long integer array arr of size n\n  for i = 0 to n exclusive, read arr[i]\n  for i = 0 to n exclusive\n    if i is n - 1\n      print arr[n-1] print newline\n    else\n      print arr[i] + arr[i+1] print \" \"\n    \n  \n\n",
        "int main() {\n  long long int n, i;\n  cin >> n;\n  long long int arr[n];\n  for (i = 0; i < n; i++) { cin >> arr[i]; }\n  for (i = 0; i < n; i++) {\n    if (i == n - 1) {\n      cout << arr[n - 1] << endl;\n    } else {\n      cout << arr[i] + arr[i + 1] << \" \";\n    }\n  }\n}\n"
    ],
    [
        "a = int array of size 100005\n\n  n = int\n  while reading n\n    for i = i to n inclusive rad a[i]\n    for i = 1 to n print a[i] + a[i + 1]\n    print a[n]\n  \n\n",
        "int a[100005];\nint main() {\n  int n;\n  while (cin >> n) {\n    for (int i = 1; i <= n; i++) { cin >> a[i]; }\n    for (int i = 1; i < n; i++) { cout << a[i] + a[i + 1] << ' '; }\n    cout << a[n] << endl;\n  }\n}\n"
    ],
    [
        "\n  n =integer\n  x, k = integers with k = 0\n  Read n\n  for i = 0 to n exclusive\n    Read x\n    if i is not equal to 1, then print NO and a new line\n    set k to x\n  \n  print x and a new line\n  \n\n",
        "int main() {\n  int n;\n  int k = 0, x;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> x;\n    if (i != 1) cout << x + k << \" \";\n    k = x;\n  }\n  cout << x << endl;\n  return 0;\n}\n"
    ],
    [
        "x, y = long long arrays of size 100005 each\n\n  a, b = long long\n  read a\n  set x to all 0\n  set y to all 0\n  for b = 0 to a read x[b]\n  for b = 0 to a set y[b] to x[b] + x[b + 1]\n  for b = 0 to a - 1 print y[b] and ' '\n  print y[a - 1]\n  \n\n",
        "long long x[100005], y[100005];\nint main() {\n  long long a, b;\n  cin >> a;\n  memset(x, 0, sizeof(x));\n  memset(y, 0, sizeof(y));\n  for (b = 0; b < a; b++) cin >> x[b];\n  for (b = 0; b < a; b++) y[b] = x[b] + x[b + 1];\n  for (b = 0; b < a - 1; b++) cout << y[b] << ' ';\n  cout << y[a - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  read n\n  arr = integer array of size n\n  for i = 0 to n exclusive read arr[i]\n  for i = 0 to n-1 exclusive\n    increase arr[i] by arr[i+1]\n    print arr[i] followed by a space\n  \n  print arr[n-1]\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int arr[n];\n  for (int i = 0; i < n; i++) { cin >> arr[i]; }\n  for (int i = 0; i < n - 1; i++) {\n    arr[i] += arr[i + 1];\n    cout << arr[i] << \" \";\n  }\n  cout << arr[n - 1] << \"\\n\";\n}\n"
    ],
    [
        "\n  create integer n, create integer array arr with size 100010\n  read n\n  for i = 0 to n exclusive, read arr[i1]\n  for i = 1 to n exclusive, print arr[i]+arr[i-1] print \" \"\n  print arr[n-1] print newline\n  \n\n",
        "int main() {\n  int n, arr[100010];\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> arr[i]; }\n  for (int i = 1; i < n; i++) { cout << arr[i] + arr[i - 1] << \" \"; }\n  cout << arr[n - 1] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer n create integer array ara with size 100000\n  read n\n  for i = 0 to n exclusive, read ara[i]\n  for i = 0 to n - 1 exclusive, print ara[i]+ara[i+1] print ' '\n  print ara[n-1] print newline\n\n",
        "int main() {\n  int n, ara[100000];\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> ara[i]; }\n  for (int i = 0; i < n - 1; i++) { cout << ara[i] + ara[i + 1] << ' '; }\n  cout << ara[n - 1] << endl;\n}\n"
    ],
    [
        "\n  create integers n, k1, k2, i\n  read n\n  read k1\n  for i = 1 to n exclusive\n    read k2\n    print k2 + k1 print \" \"\n    set k1 to k2\n  \n  print k1 print newline\n  \n\n",
        "int main() {\n  int n, k1, k2, i;\n  cin >> n;\n  cin >> k1;\n  for (i = 1; i < n; i++) {\n    cin >> k2;\n    cout << k2 + k1 << \" \";\n    k1 = k2;\n  }\n  cout << k1 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, r, s i, j and arrays a and b of length 100001\n  read n\n  for i=1 to n inclusive, read a[i]\n  increment j\n  b[j] = a[n]\n  for i=n to 1 exclusive\n    set r = a[i] + a[i - 1]\n    add 1 to j\n    assign r to b[j]\n  \n  for i=j to 0 exclusive\n    print b[i]\n    if i different fro 1, print \" \"\n  \n  print a newline\n  \n\n",
        "int main() {\n  int n, a[100001], r, s, b[100001], i, j = 0;\n  cin >> n;\n  for (i = 1; i <= n; i++) cin >> a[i];\n  j++;\n  b[j] = a[n];\n  for (i = n; i > 1; i--) {\n    r = a[i] + a[i - 1];\n    j++;\n    b[j] = r;\n  }\n  for (i = j; i > 0; i--) {\n    cout << b[i];\n    if (i != 1) cout << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  x, k = integers with k = 0\n  Read n\n  for i = 1 to n exclusive\n    Read x\n    if i is not 1, then print x + k and a new line\n    set k to x\n  \n  print x and a new line\n  \n\n",
        "int main() {\n  int n;\n  int k = 0, x;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> x;\n    if (i != 1) cout << x + k << \" \";\n    k = x;\n  }\n  cout << x << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int number, i, temp, flag, index and result, set index, result to 0\n  create string str\n  read number\n  read str\n  set arr[number] to 0\n  for i=0 to number exclusive\n    assign 0 to flag\n    set temp to 0\n    while str[i] = B\n      increment i\n      assign 1 to flag\n      increment temp\n    \n    if flag = 1\n      decrement i\n      add 1 to result\n      assign temp to arr[index]\n      increment index\n    \n  \n  print result\n  for i=0 to result exclusive\n    if i = result - 1\n      print arr[i]\n      break\n    \n    print arr[i], \" \"\n  \n  \n\n",
        "int main() {\n  int number, i, temp, flag, index = 0, result = 0;\n  string str;\n  cin >> number;\n  cin >> str;\n  int arr[number] = {0};\n  for (i = 0; i < number; i++) {\n    flag = 0;\n    temp = 0;\n    while (str[i] == 'B') {\n      i++;\n      flag = 1;\n      temp++;\n    }\n    if (flag == 1) {\n      i--;\n      result++;\n      arr[index] = temp;\n      index++;\n    }\n  }\n  cout << result << endl;\n  for (i = 0; i < result; i++) {\n    if (i == result - 1) {\n      cout << arr[i] << endl;\n      break;\n    }\n    cout << arr[i] << \" \";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create int n\n  create string s\n  read n and s\n  declare integer variable cnt = -1 and an array of integers ans with 100 elements filled with 0\n  create character p = 'W'\n  loop i from 0 to n exclusive\n    declare character variable c = s[i]\n    if c = 'B'\n      if p = 'W'\n      increase ans[cnt]\n    \n    set p to c\n  \n  print cnt + 1\n  if cnt + 1 is greater than 0\n    declare boolean first = true\n    loop i from 0 to cnt inclusive\n      if first is true\n        set first to false\n      else\n        print \" \"\n      print ans[i]\n    \n    print new line\n  \n  \n\n",
        "int main() {\n  int n;\n  string s;\n  cin >> n >> s;\n  int cnt = -1, ans[100] = {0};\n  char p = 'W';\n  for (int i = 0; i < n; ++i) {\n    char c = s[i];\n    if (c == 'B') {\n      if (p == 'W') { ++cnt; }\n      ++ans[cnt];\n    }\n    p = c;\n  }\n  cout << cnt + 1 << endl;\n  if (cnt + 1 > 0) {\n    bool first = true;\n    for (int i = 0; i <= cnt; ++i) {\n      if (first)\n        first = false;\n      else\n        cout << \" \";\n      cout << ans[i];\n    }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n = int\n  a = char array of size 100005\n  b = int array of size 100005\n  loop while reading n\n    set all values of a to 0\n    set all values of b to 0\n    read a\n    j, count = int with j = 1 and count = 0\n    for i = 0 to n\n      if a[i] is 'B'\n        increment b[j]\n      else if a[i] is 'W' and a[i + 1] is 'B'\n        increment j\n    \n    for i = 1 to j inclusive\n      if b[i] is not 0 then increment count\n    print count\n    if count is not 0\n      for i = 1 to j\n        if b[i] is not 0 print b[i] and \" \"\n      print b[j]\n    \n  \n  \n\n",
        "int main() {\n  int n;\n  char a[100005];\n  int b[100005];\n  while (cin >> n) {\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    cin >> a;\n    int j = 1, count = 0;\n    for (int i = 0; i < n; i++) {\n      if (a[i] == 'B')\n        b[j]++;\n      else if (a[i] == 'W' && a[i + 1] == 'B')\n        j++;\n    }\n    for (int i = 1; i <= j; i++)\n      if (b[i] != 0) count++;\n    cout << count << endl;\n    if (count != 0) {\n      for (int i = 1; i < j; i++)\n        if (b[i] != 0) cout << b[i] << \" \";\n      cout << b[j] << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "let a, b be long integers\nans = array of long integers of length 100\nlet flag be a integer with flag = 0\nlet k be a integer\nlet void dfs(long long a, int i) be a dfs function\n  if flag or a greater than b , return the value\n  the value of ans[i] = a\n  if a is equal to b\n    flag is equal to 1\n    k value is assigned to i\n    return\n  \n  depth first search of a * 2, i + 1\n  depth first search of a * 10 + 1, i + 1\n\n\n  read a, b\n  depth first search of a, 0\n  if flag is equal to 0\n    print NO and newline\n  else do the following\n    print YES and newline\n    print k + 1 and newline\n    print ans[0]\n    for i = 1 to k inclusive , print space and ans[i]\n    print newline\n  \n  \n\n",
        "long long a, b;\nlong long ans[100];\nint flag = 0;\nint k;\nvoid dfs(long long a, int i) {\n  if (flag || a > b) { return; }\n  ans[i] = a;\n  if (a == b) {\n    flag = 1;\n    k = i;\n    return;\n  }\n  dfs(a * 2, i + 1);\n  dfs(a * 10 + 1, i + 1);\n}\nint main() {\n  cin >> a >> b;\n  dfs(a, 0);\n  if (flag == 0) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n    cout << k + 1 << endl;\n    cout << ans[0];\n    for (int i = 1; i <= k; i++) { cout << ' ' << ans[i]; }\n    cout << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "let a, b integers\n\n  read a and b\n  let v be a vector of ints\n  let ok be an int with value 1\n  while b > a\n    append b to v\n    if b & 1 is 0\n      set b to b / 2\n    else if b mod 10 is 1\n      set b to b / 10\n    else\n      set ok to 0\n      break\n    \n  \n  if b is different from a\n    set ok to 0\n  else\n    append a to v\n  if not ok\n    print NO\n  else\n    print YES\n    print the size of v\n    for i = size of v -1 to 0 exclusive, print v[i]\n    print v[0]\n  \n  \n\n",
        "int a, b;\nint main() {\n  cin >> a >> b;\n  vector<int> v;\n  int ok = 1;\n  while (b > a) {\n    v.push_back(b);\n    if ((b & 1) == 0) {\n      b = b / 2;\n    } else if (b % 10 == 1) {\n      b = b / 10;\n    } else {\n      ok = 0;\n      break;\n    }\n  }\n  if (b != a)\n    ok = 0;\n  else\n    v.push_back(a);\n  if (!ok)\n    cout << \"NO\" << endl;\n  else {\n    cout << \"YES\" << endl;\n    cout << v.size() << endl;\n    for (int i = v.size() - 1; i > 0; i--) cout << v[i] << \" \";\n    cout << v[0] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare long long variables a, b and n\ndeclare long long array ans with size 1010\ndeclare boolean flag\nfunction dfs with long long arguments x, y and step\n  change ans[step] to x\n  if flag is true or x > y, return\n  if x = y\n    assign step to n\n    set flag to true\n    return\n  \n  call dfs(x * 2, y, step + 1)\n  if flag is false, call dfs(x * 10 + 1, y, step + 1)\n\n\n  loop, reading a and b from the input\n    change flag to false\n    call dfs(a, b, 1)\n    if flag is true\n      print \"YES\"\n      print n\n      loop i from 1 to n inclusive, print ans[i] and '\\n' if i = n, or ' '\n    else\n      print \"NO\"\n    \n  \n  \n\n",
        "long long a, b, n;\nlong long ans[1010];\nbool flag;\nvoid dfs(long long x, long long y, long long step) {\n  ans[step] = x;\n  if (flag || x > y) return;\n  if (x == y) {\n    n = step;\n    flag = true;\n    return;\n  }\n  dfs(x * 2, y, step + 1);\n  if (!flag) dfs(x * 10 + 1, y, step + 1);\n}\nint main() {\n  while (cin >> a >> b) {\n    flag = false;\n    dfs(a, b, 1);\n    if (flag) {\n      cout << \"YES\" << endl;\n      cout << n << endl;\n      for (int i = 1; i <= n; i++) cout << ans[i] << (i == n ? '\\n' : ' ');\n    } else {\n      cout << \"NO\" << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "create integer stack S\ndeclare funcion with long longs a, b as arguments, returning integer\n  create integer\n  if a is b, return 1 from function\n  if a is less than b\n    set r to result of run funcion with 2 * a, b as arguments\n    if r is 1\n      add element 1 to end of S\n      return 1 from function\n    \n    set r to result of run funcion with (10 * a) + 1, b as arguments\n    if r is 1\n      add element 2 to end of S\n      return 1 from function\n    \n  else\n    \n\n\n  create long longs a, b\n  create integers op, ans\n  read a read b\n  set ans to result of run funcion with a, b as arguments\n  if ans is 0\n    print \"NO\" print '\\n'\n  else\n    print \"YES\" print '\\n'\n    print size of S + 1 print '\\n'\n    print a\n    while S is not empty\n      set op to top of S\n      remove element from top of S\n      if op is 1\n        set a to a * 2\n      else\n        set a to a * 10\n        increment a\n      \n      print \" \" print a\n    \n    print '\\n'\n  \n\n",
        "stack<int> S;\nint funcion(long long a, long long b) {\n  int r;\n  if (a == b) return 1;\n  if (a < b) {\n    r = funcion(2 * a, b);\n    if (r == 1) {\n      S.push(1);\n      return 1;\n    }\n    r = funcion((10 * a) + 1, b);\n    if (r == 1) {\n      S.push(2);\n      return 1;\n    }\n  } else\n    return 0;\n}\nint main() {\n  long long a, b;\n  int op, ans;\n  cin >> a >> b;\n  ans = funcion(a, b);\n  if (ans == 0)\n    cout << \"NO\" << '\\n';\n  else {\n    cout << \"YES\" << '\\n';\n    cout << S.size() + 1 << '\\n';\n    cout << a;\n    while (!S.empty()) {\n      op = S.top();\n      S.pop();\n      if (op == 1) {\n        a *= 2;\n      } else {\n        a *= 10;\n        a++;\n      }\n      cout << \" \" << a;\n    }\n    cout << '\\n';\n  }\n}\n"
    ],
    [
        "ASS = array of integers of length 50\nlet sum be a integer\nlet flag be a boolean value\nlet int digui(int a, int b) accepts integer values\n  if a is less than b\n    set the value of flag to 1\n    \n  \n  if a is equal to b , return 0\n  if a modulo 2 is equal to 0\n    increase sum by 1\n    let ASS[sum - 1] is equal to a / 2\n    return digui of a / 2, b\n  else if a modulo 10 is equal to 1\n    increase sum by 1\n    let ASS[sum - 1] is equal to (a - 1) / 10\n    return digui of (a - 1) / 10, b\n  else do the following\n    set the value of flag to 1\n\n\n  let m , n be integers\n  read m and n\n  digui of n , m\n  if flag is equal to 0\n    print YES and newline and sum + 1 and newline\n    for integer i = sum - 1 , i >= 0, decrease i by 1 , print ASS[i] and space\n    print n and new line\n  else do the following\n    print NO and newline\n  \n\n",
        "int ASS[50];\nint sum;\nbool flag;\nint digui(int a, int b) {\n  if (a < b) {\n    flag = 1;\n    return 0;\n  }\n  if (a == b) return 0;\n  if (a % 2 == 0) {\n    sum++;\n    ASS[sum - 1] = a / 2;\n    return digui(a / 2, b);\n  } else if (a % 10 == 1) {\n    sum++;\n    ASS[sum - 1] = (a - 1) / 10;\n    return digui((a - 1) / 10, b);\n  } else\n    flag = 1;\n}\nint main() {\n  int m, n;\n  cin >> m >> n;\n  digui(n, m);\n  if (flag == 0) {\n    cout << \"YES\" << endl << sum + 1 << endl;\n    for (int i = sum - 1; i >= 0; i--) cout << ASS[i] << \" \";\n    cout << n << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "let k and flag be long ints with flag = 0\ndeclare vector of long long integers ans\nfunction dfs with long long int arguments n and level\n  if n is equal to k, assign 1 to flag\n  if 2 * n <= k and flag = 0, call dfs(2 * n, level + 1)\n  if 10 * n + 1 <= k and flag = 0, call dfs(10 * n + 1, level + 1)\n  if flag = 1, push n to ans\n  return\n\n\n  create long long int n\n  read n and k\n  call dfs(n, 1)\n  if flag is 1\n    print \"YES\"\n    declare int sz = length of ans\n    print sz\n    for i = sz - 1 to 1 inclusive decrementing i, print ans[i] and \" \"\n    if sz >= 1, print ans[0]\n    \n  else\n    print \"NO\"\n  \n  \n\n",
        "long int k, flag = 0;\nvector<long long int> ans;\nvoid dfs(long long int n, long long int level) {\n  if (n == k) { flag = 1; }\n  if (2 * n <= k && flag == 0) { dfs(2 * n, level + 1); }\n  if (10 * n + 1 <= k && flag == 0) { dfs(10 * n + 1, level + 1); }\n  if (flag == 1) { ans.push_back(n); }\n  return;\n}\nint main() {\n  long long int n;\n  cin >> n >> k;\n  dfs(n, 1);\n  if (flag == 1) {\n    cout << \"YES\" << endl;\n    int sz = ans.size();\n    cout << sz << endl;\n    for (long long int i = sz - 1; i >= 1; i--) { cout << ans[i] << \" \"; }\n    if (sz >= 1) cout << ans[0] << endl;\n    return 0;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "N = const integer with N = 1e5 + 50\na, b, cnt = long long\nans = long long array of size N\ni, j, k, t, m, n = integers\nin the function dfs that takes long long st, step\n  if st > b, return\n  ans[step] = st\n  if st is b\n    cnt = step\n    print YES\n    print cnt + 1\n    print ans[0]\n    for i = 1 to cnt exclusive, print \" \",ans[i]\n    print new line\n    return\n  \n  if st * 2 <= b, dfs on st * 2 and step + 1\n  if st * 10 + 1 <= b, dfs on st * 10 + 1 and step + 1\n\n\n  read a and b\n  cnt = 0\n  dfs on a and 0\n  if not cnt, print NO\n  \n\n",
        "const int N = 1e5 + 50;\nlong long a, b, cnt;\nlong long ans[N];\nint i, j, k, t, m, n;\nvoid dfs(long long st, long long step) {\n  if (st > b) return;\n  ans[step] = st;\n  if (st == b) {\n    cnt = step;\n    cout << \"YES\" << '\\n';\n    cout << cnt + 1 << '\\n';\n    cout << ans[0];\n    for (i = 1; i < cnt + 1; i++) cout << \" \" << ans[i];\n    cout << '\\n';\n    return;\n  }\n  if (st * 2 <= b) dfs(st * 2, step + 1);\n  if (st * 10 + 1 <= b) dfs(st * 10 + 1, step + 1);\n}\nint main() {\n  cin >> a >> b;\n  cnt = 0;\n  dfs(a, 0);\n  if (!cnt) cout << \"NO\" << '\\n';\n  return 0;\n}\n"
    ],
    [
        "a, b, jum = long long\nv = long long vector\n\n  read a then b\n  loop while b is greater than 0\n    increment jum\n    append b to v\n    if a is b then break loop\n    if a b is less than a\n      print \"NO\"\n      \n    else if b is even\n      set b to b / 2\n    else if b is uneven\n      decrement b\n      if b is a multiple of 10\n        set b to b / 10\n      else\n        print \"NO\"\n        \n      \n    \n  \n  sort v\n  print \"YES\" and jum\n  for i = 0 to jum\n    print v[i]\n    if i is less than jum - 1\n      print \" \"\n    else\n      print newline\n  \n\n",
        "long long a, b, jum;\nvector<long long> v;\nint main() {\n  cin >> a >> b;\n  while (b >= 1) {\n    jum++;\n    v.push_back(b);\n    if (a == b) { break; }\n    if (b < a) {\n      cout << \"NO\" << endl;\n      return 0;\n    } else if (b % 2 == 0) {\n      b = b / 2;\n    } else if (b % 2 == 1) {\n      b--;\n      if (b % 10 == 0)\n        b = b / 10;\n      else {\n        cout << \"NO\" << endl;\n        return 0;\n      }\n    }\n  }\n  sort(v.begin(), v.end());\n  cout << \"YES\" << endl << jum << endl;\n  for (int i = 0; i < jum; i++) {\n    cout << v[i];\n    if (i < jum - 1)\n      cout << \" \";\n    else\n      cout << endl;\n  }\n}\n"
    ],
    [
        "declare long integer array perm with size 2 * 100000 + 5\n\n  declare long integer variables n, x, cycle, v, k and xo where cycle = 0 and xo = 1\n  read n\n  for integer i = 1 to n inclusive, read perm[i]\n  for i = 0 to n exclusive\n    read x\n    xo ^= x\n  \n  for integer i = 1 to n inclusive\n    continue loop from the start if if perm[i] is false\n    increase cycle\n    assign value of i to v\n    while perm[v] is true\n      assign value of perm[v] to k\n      set perm[v] to 0\n      set v to k\n    \n  \n  if cycle = 1, change cycle to 0\n  print cycle + xo\n  \n\n",
        "long int perm[2 * 100000 + 5];\nint main() {\n  long int n, x, cycle = 0, v, k, xo = 1;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> perm[i];\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    xo ^= x;\n  }\n  for (int i = 1; i <= n; i++) {\n    if (!perm[i]) continue;\n    cycle++;\n    v = i;\n    while (perm[v]) {\n      k = perm[v];\n      perm[v] = 0;\n      v = k;\n    }\n  }\n  if (cycle == 1) cycle = 0;\n  cout << cycle + xo << endl;\n  return 0;\n}\n"
    ],
    [
        "let n be a integer\np = array of integers of length 200100\nb = array of integers of length 200100\nvis = array of integers of length 200200\nlet dfs be a function which accepts integer x value\n  the xth element of array vis is equal to 1\n  if (not vis[ xth element of array p], dfs( xth element of array p)\n\n\n  read n\n  for (i = 1 to n inclusive), read ith element of array p\n  let cnt be a integer with cnt value as 0\n  for (i = 1 to n inclusive)\n    read ith element of array b\n    if (ith element of array b is equal to 1), increase cnt by 1\n  \n  let ans be a integer with ans value is equal to 0\n  if (cnt modulus 2 is equal to 0), increase ans by 1\n  let the value of cnt is equal to 0\n  for (i = 1 to n inclusive)\n    if (not ith element of array vis )\n      increase cnt value by 1\n      dfs of i\n    \n  \n  if (cnt is equal to 1), cnt is equal to 0\n  print ans + cnt and newline\n  \n\n",
        "int n;\nint p[200100];\nint b[200100];\nint vis[200200];\nvoid dfs(int x) {\n  vis[x] = 1;\n  if (!vis[p[x]]) dfs(p[x]);\n}\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> p[i];\n  int cnt = 0;\n  for (int i = 1; i <= n; i++) {\n    cin >> b[i];\n    if (b[i] == 1) cnt++;\n  }\n  int ans = 0;\n  if (cnt % 2 == 0) ans++;\n  cnt = 0;\n  for (int i = 1; i <= n; i++) {\n    if (!vis[i]) {\n      cnt++;\n      dfs(i);\n    }\n  }\n  if (cnt == 1) cnt = 0;\n  cout << ans + cnt << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 6e5 + 10\ncreate integer arrays v, A, B with v size N, A size N, B size N\ncreate integer n\ndeclare dfs with integer x as argument\n  if v[x] is true, return from function\n  set v[x] to 1\n  run dfs with A[x] as argument\n\n\n  read n\n  create integer ans with ans = 0\n  for i = 1 to n inclusive, read A[i]\n  for i = 1 to n inclusive, read B[i]\n  for i = 1 to n inclusive\n    if v[i] is 0, run dfs with i as argument, increment ans\n  \n  create integer t with t = 1\n  for i = 1 to n inclusive\n    if B[i] is true, set t to t ^ 1\n  \n  if ans is 1, decrement ans\n  print ans + t print newline\n\n",
        "const int N = 6e5 + 10;\nint v[N], A[N], B[N];\nint n;\nvoid dfs(int x) {\n  if (v[x]) return;\n  v[x] = 1;\n  dfs(A[x]);\n}\nint main() {\n  cin >> n;\n  int ans = 0;\n  for (int i = 1; i <= n; ++i) cin >> A[i];\n  for (int i = 1; i <= n; ++i) cin >> B[i];\n  for (int i = 1; i <= n; ++i) {\n    if (v[i] == 0) dfs(i), ++ans;\n  }\n  int t = 1;\n  for (int i = 1; i <= n; ++i) {\n    if (B[i]) t ^= 1;\n  }\n  if (ans == 1) --ans;\n  cout << ans + t << endl;\n}\n"
    ],
    [
        "declare constant integer N = 2e5 + 5\ncreate integer arrays Prv and vis with N elements\ndfs is a void function with integer argument u\n  if vis[u] is not 0, return\n  set value of vis[u] to true\n  call function dfs with arguments Prv[u]\n\n\n  declare integer variable n\n  read n\n  for integer i = 1 to n inclusive read Prv[i]\n  create integer now = 1\n  for integer i = 1 to n inclusive\n    create integer x\n    read x\n    increase now by x\n  \n  declare integer Res = 0\n  for integer i = 1 to n inclusive\n    if vis[i] is 0\n      call function dfs with argument i\n      increment Res\n    \n  \n  decrement Res if Res = 1\n  print Res + (now % 2) and \"\\n\"\n  \n\n",
        "const int N = 2e5 + 5;\nint Prv[N], vis[N];\nvoid dfs(int u) {\n  if (vis[u]) return;\n  vis[u] = true;\n  dfs(Prv[u]);\n}\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> Prv[i];\n  int now = 1;\n  for (int i = 1; i <= n; i++) {\n    int x;\n    cin >> x;\n    now += x;\n  }\n  int Res = 0;\n  for (int i = 1; i <= n; i++) {\n    if (!vis[i]) {\n      dfs(i);\n      Res++;\n    }\n  }\n  if (Res == 1) Res--;\n  cout << (Res + (now % 2)) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create int i, j and n\n  set int arrays p, b and status of length 200000 to all 0\n  set count and result to 0\n  read n\n  for i=0 to n exclusive\n    read p[i]\n    decrement p[i]\n  \n  for i=0 to n exclusive\n    read b[i]\n    if b[i] = 1, increment count\n  \n  if count is even, increment result\n  count = 0\n  if i=0 to n exclusive\n    if status[i] equal to 0\n      assign 1 to status[i]\n      set t to p[i]\n      while t different from 1\n        status[t] = 1\n        t = p[t]\n      \n      add 1 to count\n    \n  \n  if count greater than 1, set result to result + count\n  print result\n  \n\n",
        "int main() {\n  int i, j, n;\n  int p[200000], b[200000], status[200000] = {0};\n  int count = 0, result = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> p[i];\n    p[i]--;\n  }\n  for (i = 0; i < n; i++) {\n    cin >> b[i];\n    if (b[i] == 1) count++;\n  }\n  if (count % 2 == 0) result++;\n  count = 0;\n  for (i = 0; i < n; i++) {\n    if (status[i] == 0) {\n      status[i] = 1;\n      int t = p[i];\n      while (t != i) {\n        status[t] = 1;\n        t = p[t];\n      }\n      count++;\n    }\n  }\n  if (count > 1) result += count;\n  cout << result << endl;\n  return 0;\n}\n"
    ],
    [
        "n,m,k=static long long\n\n  n=int\n  read n\n  p=vector of n int\n  for i=0 to n exclusive read p[i]\n  res=0\n  for i=0 to n exclusive\n    x=int\n    read x\n    add x to res\n  \n  res = (res+1) modulo 2\n  visited = vector of n bool\n  count=-1\n  for i=0 to n exclusive\n    if visited[i] continue\n    increment count\n    j=i\n    while not visited[j]\n      visited[j] = true\n      j=p[j]-1\n    \n  \n  if count > 0 increment res\n  add count to res\n  print res\n\n",
        "static long long n, m, k;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> p(n);\n  for (int i = 0; i < n; i++) cin >> p[i];\n  int res = 0;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    res += x;\n  }\n  res = (res + 1) % 2;\n  vector<bool> visited(n);\n  int count = -1;\n  for (int i = 0; i < n; i++) {\n    if (visited[i]) continue;\n    count++;\n    int j = i;\n    while (!visited[j]) {\n      visited[j] = true;\n      j = p[j] - 1;\n    }\n  }\n  if (count > 0) res++;\n  res += count;\n  cout << res << endl;\n}\n"
    ],
    [
        "create integer n\ncreate constant integer MAXN with MAXN = 200005\ncreate integer array p with size MAXN\ncreate boolean array vis with size MAXN\ndeclare dfs with integer idx as argument, returning void\n  set vis[idx] to true\n  if not vis[p[idx]], run dfs with p[idx] as argument\n\n\n  read n\n  for i = 1 to n inclusive, read p[i]\n  create integer counter with counter = 0\n  for i = 1 to n inclusive\n    create integer b\n    read b\n    if b is 1, increment counter\n  \n  create integer cycle with cycle = 0\n  for i = 1 to n inclusive\n    if not vis[i]\n      run dfs with i as argument\n      increment cycle\n    \n  if cycle is 1\n    print 1 - counter % 2 print \"\\n\"\n  else\n    print cycle + 1 - counter % 2 print \"\\n\"\n  \n\n",
        "int n;\nconst int MAXN = 200005;\nint p[MAXN];\nbool vis[MAXN];\nvoid dfs(int idx) {\n  vis[idx] = true;\n  if (!vis[p[idx]]) dfs(p[idx]);\n}\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> p[i];\n  int counter = 0;\n  for (int i = 1; i <= n; i++) {\n    int b;\n    cin >> b;\n    if (b == 1) counter++;\n  }\n  int cycle = 0;\n  for (int i = 1; i <= n; i++)\n    if (!vis[i]) {\n      dfs(i);\n      cycle++;\n    }\n  if (cycle == 1)\n    cout << 1 - counter % 2 << \"\\n\";\n  else\n    cout << cycle + 1 - counter % 2 << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create strings s1 and s2\n  read s1 and s2\n  if s1 is equal to s2\n    print \"-1\\n\"\n  else\n    print the max of s1.size() and s2.size()\n  \n  \n\n",
        "int main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  if (s1 == s2) {\n    cout << \"-1\\n\";\n  } else {\n    cout << max(s1.size(), s2.size()) << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "dx = int array with the values 0, 1, 0, -1, 1, 1, -1, -1\ndy = int array with the values 1, 0, -1, 0, 1, -1, 1, -1\ndefine empty function fast\n\n  call fast\n  s, t = string\n  read s then t\n  print -1 if s is t else print max of size of s and size of t\n\n",
        "int dx[] = {0, 1, 0, -1, 1, 1, -1, -1};\nint dy[] = {1, 0, -1, 0, 1, -1, 1, -1};\nvoid fast() {}\nint main() {\n  fast();\n  string s, t;\n  cin >> s >> t;\n  cout << (s == t ? -1 : (int)max(s.size(), t.size())) << \"\\n\";\n}\n"
    ],
    [
        "\n  create strings a and b\n  read standard input to a and b\n  if a = b, print -1 to the standard output and exit the program\n  print max of length of a and length of b\n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a == b) cout << -1 << endl, exit(0);\n  cout << max(a.size(), b.size()) << endl;\n}\n"
    ],
    [
        "declare constant long long N = 1e8 + 3\ndeclare constant long long MN = 1e9 + 7\ndeclare constant long long MX = -1e9-7\ndeclare long longs n, m, cnt, mx = MX\ndeclare a, b as strings\ndeclare pair of long long, long long pr\ndeclare string vector v\ndeclare map from string to long long mp\ndeclare long long set st\ndeclare long long set iterator it\n\n  read a, b\n  if maximum of ( size of a and size of b ) is greater than minimum of ( size of a and size of b )\n    print maximum of ( size of a and size of b )\n  else\n    while true\n      if a is not b\n        print size of a\n        end loop\n      \n      let a be substring of a from 0 to size of a - 1\n      let b be substring of b from 0 to size of b - 1\n      if size of a is 0\n        print -1\n        end loop\n      \n    \n  \n  print \"\\n\"\n  \n\n",
        "const long long N = 1e8 + 3;\nconst long long MN = 1e9 + 7;\nconst long long MX = -1e9 - 7;\nlong long n, m, cnt, mx = MX;\nstring a, b;\npair<long long, long long> pr;\nvector<string> v;\nmap<string, long long> mp;\nset<long long> st;\nset<long long>::iterator it;\nint main() {\n  cin >> a >> b;\n  if (max(a.size(), b.size()) > min(a.size(), b.size())) {\n    cout << max(a.size(), b.size());\n  } else {\n    while (true) {\n      if (a != b) {\n        cout << a.size();\n        break;\n      }\n      a = a.substr(0, a.size() - 1);\n      b = b.substr(0, b.size() - 1);\n      if (a.size() == 0) {\n        cout << -1;\n        break;\n      }\n    }\n  }\n  cout << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  declare character array s1 with size 100006 s2 with size 100003\n  while read s1, s2\n    declare p as integer = string comparison between s1 and s2\n    declare len1 as integer = string length of s1\n    declare len2 as integer = string length of s2\n    if p is 0\n      print \"-1\" print newline\n      \n    \n    if len1 is greater than len2\n      print len1, newline\n    else\n      print len2, newline\n  \n\n",
        "int main() {\n  char s1[100006], s2[100003];\n  while (cin >> s1 >> s2) {\n    int p = strcmp(s1, s2);\n    int len1 = strlen(s1);\n    int len2 = strlen(s2);\n    if (p == 0) {\n      cout << \"-1\" << endl;\n      return 0;\n    }\n    if (len1 > len2)\n      cout << len1 << endl;\n    else\n      cout << len2 << endl;\n  }\n}\n"
    ],
    [
        "\n  s, ss = string\n  read s then ss\n  if s is ss\n    print -1\n  else\n    print max of length of ss and length of s\n  \n\n",
        "int main() {\n  string s, ss;\n  cin >> s >> ss;\n  if (s == ss)\n    cout << -1 << \"\\n\";\n  else\n    cout << max(ss.length(), s.length()) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  i,res=0\n  s1,s2=string\n  read s1,s2\n  if s1 == s2\n    res=-1\n  else\n    res=max(size of s1, size of s2)\n  print res\n  \n\n",
        "int main() {\n  long long i = 0, res = 0;\n  string s1, s2;\n  cin >> s1 >> s2;\n  if (s1 == s2)\n    res = -1;\n  else\n    res = max(s1.size(), s2.size());\n  cout << res << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare strings a and b\n  read standard input to a and b\n  declare integer variables l = length of a, and ll =length of b\n  if l != ll\n    print max of l and ll to the standard output\n  else if a = b\n    print -1 to the standard output\n  else\n    print length of a to the standard output\n  \n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  int l = a.size(), ll = b.size();\n  if (l != ll) {\n    cout << max(l, ll) << endl;\n  } else if (a == b) {\n    cout << -1 << endl;\n  } else {\n    cout << a.size() << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "a, b = string\n\n  read a then b\n  if a is not b\n    print max of size of a, size of b\n    \n  else\n    print \"-1\"\n    \n  \n\n",
        "string a, b;\nint main() {\n  cin >> a >> b;\n  if (a != b) {\n    cout << max(a.size(), b.size()) << endl;\n    return 0;\n  } else {\n    cout << \"-1\" << endl;\n    return 0;\n  }\n}\n"
    ],
    [
        "\n  create string A\n  read A\n  let string B\n  read B\n  if A is equal to B\n    print -1\n    \n  \n  print max of A.size() and B.size()\n  \n\n",
        "int main() {\n  string A;\n  cin >> A;\n  string B;\n  cin >> B;\n  if (A == B) {\n    cout << -1 << \"\\n\";\n    return 0;\n  }\n  cout << max(A.size(), B.size()) << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create new constant long long integer INF with value 8e18\ncreate new constant long long integer called MOD = 998244353\n\n  declare string variables a and b\n  read input to a and b\n  if length of a != length of b\n    print max of length of a and length of b and '\\n'\n  else if a != b\n    print length of a and '\\n'\n  else\n    print -1 and '\\n'\n  \n\n",
        "const long long int INF = (long long int)(8e18);\nconst long long int MOD = 998244353;\nint main() {\n  string a, b;\n  cin >> a >> b;\n  if (a.length() != b.length())\n    cout << max(a.length(), b.length()) << '\\n';\n  else if (a != b)\n    cout << a.length() << '\\n';\n  else\n    cout << -1 << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  let a, b be strings\n  let c be a integer with c = 0\n  read a, b\n  let len1 be a integer with len1 is equal to length of a\n  let len2 be a integer with len2 is equal to length of b\n  if a is equal to b\n    print -1 and newline\n  else do the following\n    print maximum of len1, len2 and newline\n  \n  \n\n",
        "int main() {\n  string a, b;\n  int c = 0;\n  cin >> a >> b;\n  int len1 = a.size();\n  int len2 = b.size();\n  if (a == b)\n    cout << -1 << endl;\n  else {\n    cout << max(len1, len2) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "INF is a new constant integer = 0x3f3f3f3f\ncreate new constant integer mod with value 998244353\ndeclare character arrays a and b with 100005 elements\n\n  read input to a and b\n  if content of a and b matches\n    return puts(\"-1\")\n  else\n    print max of length of a and length of b to the standard output\n  \n\n",
        "const int INF = 0x3f3f3f3f;\nconst int mod = 998244353;\nchar a[100005], b[100005];\nint main() {\n  cin >> a >> b;\n  if (strcmp(a, b) == 0)\n    return puts(\"-1\"), 0;\n  else\n    cout << max(strlen(a), strlen(b)) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s, s1 = string\n  read s then s1\n  if s is s1\n    print -1\n  else\n    print max of size of s, size of s1\n\n",
        "int main() {\n  string s, s1;\n  cin >> s >> s1;\n  if (s == s1)\n    cout << -1 << endl;\n  else\n    cout << max(s.size(), s1.size()) << endl;\n}\n"
    ],
    [
        "declare strings n, n2\ndeclare compare with strings s1, s2, integer length as arguments, returning boolean\n  for i = 0 to length exclusive\n    if s1[i] is not s2[i], return false from function\n  \n  return true from function\n\n\n  read n, n2\n  declare l1, l2, greater as integers\n  let l1 be greater = length of n\n  let l2 be length of n2\n  if l2 is greater than l1, let greater be l2\n  if l1 is l2\n    declare x as boolean = result of run compare with n, n2, l1 as arguments\n    if x is true\n      print -1 and newline\n      \n    else\n      print l1 print newline\n      \n    \n  \n  print greater print newline\n  \n\n",
        "string n, n2;\nbool compare(string s1, string s2, int length) {\n  for (int i = 0; i < length; i++) {\n    if (s1[i] != s2[i]) { return false; }\n  }\n  return true;\n}\nint main() {\n  cin >> n >> n2;\n  int l1, l2, greater;\n  l1 = greater = n.length();\n  l2 = n2.length();\n  if (l2 > l1) { greater = l2; }\n  if (l1 == l2) {\n    bool x = compare(n, n2, l1);\n    if (x) {\n      cout << -1 << endl;\n      return 0;\n    } else {\n      cout << l1 << endl;\n      return 0;\n    }\n  }\n  cout << greater << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b = string\n  read a then b\n  sz1, sz2 = int with sz1 = size of a and sz2 = size of b\n  if a is b\n    print -1\n  else\n    print max of sz1, sz2\n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  int sz1 = a.size(), sz2 = b.size();\n  if (a == b) {\n    cout << -1 << endl;\n  } else\n    cout << max(sz1, sz2) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare string variables s1 and s2\n  read from the input to s1 and s2\n  if s1 is equal to s2\n    print -1 and a new line\n  else\n    print max of length of s1 and length of s2 to the standard output\n\n",
        "int main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  if (s1 == s2)\n    cout << -1 << endl;\n  else\n    cout << max(s1.length(), s2.length()) << endl;\n}\n"
    ],
    [
        "\n  let a, b strings\n  read in a and b\n  if a same as b\n    print -1 to stdout\n  otherwise\n    print max(length of a, length of b)\n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a == b)\n    puts(\"-1\");\n  else\n    cout << max(a.length(), b.length()) << endl;\n  return 0;\n}\n"
    ],
    [
        "N, INF = const int with N = 1e5 + 10 and INF = 1e9 + 7\na, b = string\n\n  read a then b\n  if a is b\n    print -1\n  else\n    print max of size of a and size of b\n  \n\n",
        "const int N = 1e5 + 10, INF = 1e9 + 7;\nstring a, b;\nint main() {\n  cin >> a >> b;\n  if (a == b)\n    cout << -1 << '\\n';\n  else\n    cout << max((int)a.size(), (int)b.size()) << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  a, b = string\n  read a then b\n  if a is not b\n    print max of length of a and length of b\n  else\n    print \"-1\"\n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a != b) {\n    cout << max(a.length(), b.length()) << endl;\n  } else\n    cout << \"-1\\n\";\n}\n"
    ],
    [
        "E=exp(1)\nmaxn=1000010\nch=array of maxn char\nch1=array of maxn char\n\n  read ch\n  read ch1\n  l1=length of ch\n  l2=length of ch1\n  if ch and ch1 are equal\n    print -1\n  else\n    print max(l1,l2)\n  \n\n",
        "const double E = exp(1);\nconst int maxn = 1e6 + 10;\nchar ch[maxn];\nchar ch1[maxn];\nint main() {\n  cin >> ch;\n  cin >> ch1;\n  int l1 = strlen(ch);\n  int l2 = strlen(ch1);\n  if (strcmp(ch, ch1) == 0)\n    cout << -1 << endl;\n  else\n    cout << max(l1, l2) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create strings s and second\n  read user input to s and second\n  declare long long variables p and q = 0\n  create new long long called xx with value 0\n  create new long long variable cnt = 0\n  if s = second\n    print \"-1\" to the standard output\n    \n  \n  if length of s is greater than length of second\n    print length of s to the standard output\n  else\n    print length of second\n  \n\n",
        "int main() {\n  string s, second;\n  cin >> s >> second;\n  long long p = 0, q = 0;\n  long long xx = 0;\n  long long cnt = 0;\n  if (s == second) {\n    cout << \"-1\" << endl;\n    return 0;\n  }\n  if (s.size() > second.size())\n    cout << s.size() << endl;\n  else\n    cout << second.size() << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  s1, s2 = string\n  Read s1 and s2\n  if s1 = s2\n    print -1\n  else\n    print max of s1 and s2\n  \n  \n\n",
        "int main() {\n  string s1, s2;\n  cin >> s1 >> s2;\n  if (s1 == s2) {\n    cout << -1 << endl;\n  } else {\n    cout << max(s1.size(), s2.size()) << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create strings a and b\n  read a and b\n  let ints l = a.size() and ll = b.size()\n  if l is not equal to ll\n    print max(l, ll)\n  else if a is equal to b\n    print -1\n  else\n    print a.size()\n  \n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  int l = a.size(), ll = b.size();\n  if (l != ll) {\n    cout << max(l, ll) << endl;\n  } else if (a == b) {\n    cout << -1 << endl;\n  } else {\n    cout << a.size() << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  a, b = string\n  read a then b\n  if size of a is not size of b\n    print max of size of a and size of b\n  else if compare of b on a is 0\n    print \"-1\"\n  else\n    s = int with s = size of a\n    mp = string and int map\n    x = int with x = s\n    loop while x is greater than 0\n      for i = 0 to s and i + x is less or equal to s\n        st = string with st = substring of a starting at i and a length of x\n        set mp[st] to 1\n      \n      for i = 0 to s and i + x is less or equal to s\n        st = string with st = substring of b starting at i and a length of x\n        if mp[st] is 0\n          print size of st\n          \n        \n      \n      decrement x\n    \n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a.size() != b.size()) {\n    cout << max(a.size(), b.size()) << endl;\n  } else if (a.compare(b) == 0) {\n    cout << \"-1\" << endl;\n  } else {\n    int s = a.size();\n    map<string, int> mp;\n    int x = s;\n    while (x > 0) {\n      for (int i = 0; i < s && i + x <= s; i++) {\n        string st(a, i, x);\n        mp[st] = 1;\n      }\n      for (int i = 0; i < s && i + x <= s; i++) {\n        string st(b, i, x);\n        if (mp[st] == 0) {\n          cout << st.size() << endl;\n          return 0;\n        }\n      }\n      x--;\n    }\n  }\n}\n"
    ],
    [
        "\n  create strings a and b\n  read a and b\n  if the length of a is not equal to the length of b\n    print the max of length of a and length of b\n  else\n    if a is equal to b\n      print -1\n    else\n      print the length of a\n    \n  \n  \n\n",
        "int main() {\n  string a, b;\n  cin >> a >> b;\n  if (a.length() != b.length()) {\n    cout << max(a.length(), b.length()) << endl;\n  } else {\n    if (a == b) {\n      cout << -1 << endl;\n    } else {\n      cout << a.length() << endl;\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "dx = int array with the values 0, 1, 0, -1, 1, 1, -1, -1\ndy = int array with the values 1, 0, -1, 0, 1, -1, 1, -1\ndefine empty function fast\n\n  call fast\n  s, t = string\n  read s then t\n  print -1 if s is t else print max of size of s, size of t\n\n",
        "int dx[] = {0, 1, 0, -1, 1, 1, -1, -1};\nint dy[] = {1, 0, -1, 0, 1, -1, 1, -1};\nvoid fast() {}\nint main() {\n  fast();\n  string s, t;\n  cin >> s >> t;\n  cout << (s == t ? -1 : (int)max(s.size(), t.size())) << \"\\n\";\n}\n"
    ],
    [
        "let n, c1, c2 be long integers\nlet solve accepts long integer g\n  t1, t2, left, res be long integers with t1 = ceiling of(double)n / g , t2 = n / g, left = n, res = 0\n  for t2 * g is not equal to left and left is greater than 0, decrement left by t1, decrement g by 1, res = res + (c1 + c2 * (t1 - 1) * (t1 - 1))\n  for g is greater than 0, decrement left by t2, decrement g by 1, the value of res = res + (c1 + c2 * (t2 - 1) * (t2 - 1))\n  return the value of res\n\n\n  let t be a character\n  read n, c1, c2\n  let p , r , i be long integers with p = 0, r = 0\n  for i = 0 to n exclusive\n    read t\n    if t is equal to 1 increment p by 1 else increment r by 1\n  \n  let lo, hi be long integers with lo = 1, hi = p\n  while lo is less than hi\n    let diff be a long integer with diff = hi - lo\n    let p1, p2 be long integers with p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3\n    let s1, s2 be a long integers with s1 = solve(p1), s2 = solve(p2)\n    if s1 is equal to s2\n      lo is equal to p1 + 1, hi is equal to p2 - 1\n    else if s1 is greater than s2\n      the value of lo = p1 + 1\n    else do the following\n      the value of hi = p2 - 1\n  \n  print solve(lo) and newline\n\n",
        "long long n, c1, c2;\nlong long solve(long long g) {\n  long long t1 = ceil((double)n / g), t2 = n / g, left = n, res = 0;\n  for (; t2 * g != left && left > 0; left -= t1, g--) res += (c1 + c2 * (t1 - 1) * (t1 - 1));\n  for (; g > 0; left -= t2, g--) res += (c1 + c2 * (t2 - 1) * (t2 - 1));\n  return res;\n}\nint main() {\n  char t;\n  cin >> n >> c1 >> c2;\n  long long p = 0, r = 0, i;\n  for (i = 0; i < n; i++) {\n    cin >> t;\n    (t == '1') ? p++ : r++;\n  }\n  long long lo = 1, hi = p;\n  while (lo < hi) {\n    long long diff = hi - lo;\n    long long p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3;\n    long long s1 = solve(p1), s2 = solve(p2);\n    if (s1 == s2)\n      lo = p1 + 1, hi = p2 - 1;\n    else if (s1 > s2)\n      lo = p1 + 1;\n    else\n      hi = p2 - 1;\n  }\n  cout << solve(lo) << endl;\n}\n"
    ],
    [
        "declare long longs n, c1, c2\ndeclare solve with long long g as argument, returning long long\n  declare long longs t1 = round up( double casted(n) / g), t2 = n / g, left = n, res = 0\n  for t2 * g is not left and left is greater than 0, decrementing left by t1, decrementing g, increment res by (c1 + c2 * (t1 - 1) * (t1 - 1))\n  for g is greater than 0, decrementing left by t2, decrementing g, increment res by (c1 + c2 * (t2 - 1) * (t2 - 1))\n  return res from function\n\n\n  declare t as character\n  read n, c1, c2\n  declare long longs p = 0, r = 0, i\n  for i = 0 to n exclusive\n    read t\n    increment p if t is '1', else increment r\n  \n  declare long long lo = 1, hi = p\n  while lo is less than hi\n    declare long long diff = hi - lo\n    declare long longs p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3\n    declare long longs s1 = result of run solve with p1 as argument, s2 = result of run solve(p2)\n    if s1 is s2\n      let lo be p1 + 1, hi be p2 - 1\n    else if s1 is greater than s2\n      let lo be p1 + 1\n    else\n      let hi be p2 - 1\n  \n  print result of run solve with lo as argument, newline\n\n",
        "long long n, c1, c2;\nlong long solve(long long g) {\n  long long t1 = ceil((double)n / g), t2 = n / g, left = n, res = 0;\n  for (; t2 * g != left && left > 0; left -= t1, g--) res += (c1 + c2 * (t1 - 1) * (t1 - 1));\n  for (; g > 0; left -= t2, g--) res += (c1 + c2 * (t2 - 1) * (t2 - 1));\n  return res;\n}\nint main() {\n  char t;\n  cin >> n >> c1 >> c2;\n  long long p = 0, r = 0, i;\n  for (i = 0; i < n; i++) {\n    cin >> t;\n    (t == '1') ? p++ : r++;\n  }\n  long long lo = 1, hi = p;\n  while (lo < hi) {\n    long long diff = hi - lo;\n    long long p1 = lo + diff / 3, p2 = lo + (2 * diff + 2) / 3;\n    long long s1 = solve(p1), s2 = solve(p2);\n    if (s1 == s2)\n      lo = p1 + 1, hi = p2 - 1;\n    else if (s1 > s2)\n      lo = p1 + 1;\n    else\n      hi = p2 - 1;\n  }\n  cout << solve(lo) << endl;\n}\n"
    ],
    [
        "\n  create integer n\n  create long longs c1, c2\n  read n read c1 read c2\n  create integer cnt with cnt = 0\n  for i = 1 to n inclusive\n    create character c\n    read c\n    if c is '1' increment cnt\n  \n  create long long ans with ans = 1e18\n  for i = 1 to cnt inclusive\n    create long longs p, mod with p = n / i, mod = n % i\n    create long long now with now = (p - 1) * (p - 1) * c2 * (i - mod) + c1 * i + p * p * mod * c2\n    set ans to minimum of ans and now\n  \n  print ans print newline\n  \n\n",
        "int main() {\n  int n;\n  long long c1, c2;\n  cin >> n >> c1 >> c2;\n  int cnt = 0;\n  for (int i = 1; i <= n; i++) {\n    char c;\n    cin >> c;\n    if (c == '1') cnt++;\n  }\n  long long ans = 1e18;\n  for (int i = 1; i <= cnt; i++) {\n    long long p = n / i, mod = n % i;\n    long long now = (p - 1) * (p - 1) * c2 * (i - mod) + c1 * i + p * p * mod * c2;\n    ans = min(ans, now);\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, m, i, j, p, q, cnt, c1, c2, x, y, mn\n  create string s\n  while read n read c1 read c2 is true\n    read charaacter\n    read s\n    set cnt to 0\n    set mn to LONG_LONG_MAX\n    for i = 0 to size of s exclusive\n      if s[i] is '1', increment cnt\n    \n    for i = 1 to cnt inclusive\n      set x to n / i\n      set y to n % i\n      set p to (c1 + c2 * (x - 1) * (x - 1)) * (i - y)\n      set q to (c1 + (c2 * x * x)) * y\n      set m to p + q\n      set mn to minimum of mn and m\n    \n    print mn print newline\n  \n\n",
        "int main() {\n  long long n, m, i, j, p, q, cnt, c1, c2, x, y, mn;\n  string s;\n  while (cin >> n >> c1 >> c2) {\n    getchar();\n    cin >> s;\n    cnt = 0;\n    mn = LONG_LONG_MAX;\n    for (i = 0; i < s.size(); i++) {\n      if (s[i] == '1') cnt++;\n    }\n    for (i = 1; i <= cnt; i++) {\n      x = n / i;\n      y = n % i;\n      p = (c1 + c2 * (x - 1) * (x - 1)) * (i - y);\n      q = (c1 + (c2 * x * x)) * y;\n      m = p + q;\n      mn = min(mn, m);\n    }\n    cout << mn << endl;\n  }\n}\n"
    ],
    [
        "declare constant int MAX_N = 2e5 + 10\ndeclare constant int MAX_LOG = 62\ndeclare constant long long INF = 1e18 + 1\ndeclare constant long long MOD = 1e9 + 7\ndeclare long long variables n, c1, c2 and ans with ans = INF\ncreate string s\ndeclare integer variable m\n\n  read input to n, c1 and c2\n  read s\n  for i from 0 to n exclusive\n    if s[i] = '1', increment m\n  for i from 1 to m inclusive\n    create long long k = n / i\n    create long long r = n % i\n    declare long long variable tmp = r * (c1 + c2 * k * k)\n    add (i - r) * (c1 + c2 * (k - 1) * (k - 1)) to tmp\n    set ans to min of ans and tmp\n  \n  print ans\n\n",
        "const int MAX_N = 2e5 + 10;\nconst int MAX_LOG = 62;\nconst long long INF = 1e18 + 1;\nconst long long MOD = 1e9 + 7;\nlong long n, c1, c2, ans = INF;\nstring s;\nint m;\nint main() {\n  cin >> n >> c1 >> c2;\n  cin >> s;\n  for (int i = 0; i < n; i++)\n    if (s[i] == '1') m++;\n  for (int i = 1; i <= m; i++) {\n    long long k = n / i;\n    long long r = n % i;\n    long long tmp = r * (c1 + c2 * (k)*k);\n    tmp += (i - r) * (c1 + c2 * (k - 1) * (k - 1));\n    ans = min(ans, tmp);\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "n = long long\n\n  read n\n  if n is 1 print 4\n  if n is 2 print 22\n  if n is 3 print 27\n  if n is 4 print 58\n  if n is 5 print 85\n  if n is 6 print 94\n  if n is 7 print 121\n  if n is 8 print 166\n  if n is 9 print 202\n  if n is 10 print 265\n  if n is 11 print 274\n  if n is 12 print 319\n  if n is 13 print 346\n  if n is 14 print 355\n  if n is 15 print 378\n  if n is 16 print 382\n  if n is 17 print 391\n  if n is 18 print 438\n  if n is 19 print 454\n  if n is 20 print 483\n  if n is 21 print 517\n  if n is 22 print 526\n  if n is 23 print 535\n  if n is 24 print 562\n  if n is 25 print 576\n  if n is 26 print 588\n  if n is 27 print 627\n  if n is 28 print 634\n  if n is 29 print 636\n  if n is 30 print 645\n  print a new line\n  \n\n",
        "long long n;\nint main() {\n  cin >> n;\n  if (n == 1) cout << 4;\n  if (n == 2) cout << 22;\n  if (n == 3) cout << 27;\n  if (n == 4) cout << 58;\n  if (n == 5) cout << 85;\n  if (n == 6) cout << 94;\n  if (n == 7) cout << 121;\n  if (n == 8) cout << 166;\n  if (n == 9) cout << 202;\n  if (n == 10) cout << 265;\n  if (n == 11) cout << 274;\n  if (n == 12) cout << 319;\n  if (n == 13) cout << 346;\n  if (n == 14) cout << 355;\n  if (n == 15) cout << 378;\n  if (n == 16) cout << 382;\n  if (n == 17) cout << 391;\n  if (n == 18) cout << 438;\n  if (n == 19) cout << 454;\n  if (n == 20) cout << 483;\n  if (n == 21) cout << 517;\n  if (n == 22) cout << 526;\n  if (n == 23) cout << 535;\n  if (n == 24) cout << 562;\n  if (n == 25) cout << 576;\n  if (n == 26) cout << 588;\n  if (n == 27) cout << 627;\n  if (n == 28) cout << 634;\n  if (n == 29) cout << 636;\n  if (n == 30) cout << 645;\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "in the function es_primo that takes integer n and returns bool\n  if n < 4, return true\n  for i = 2 to i * i <= n\n    if n modulo i is 0, return false\n  \n  return true\n\nin the function sum_digitos that takes integer n and returns int\n  sum = integer with sum = 0\n  while n > 0\n    sum = sum + n modulo 10\n    n = n / 10\n  \n  return sum\n\nin the function sum_factores that takes integer n and returns integer\n  sum = integer with sum = 0\n  for i = 2 to i * i <= n\n    while n modulo i is 0\n      sum = sum + sum_digitos(i)\n      n = n / i\n    \n  \n  if n > 1, sum = sum + sum_digitos(n)\n  return sum\n\nin the function busca_sig that takes integer n and returns integer\n  do increment n, while es_primo(n) or sum_digitos(n) is not sum_factores(n)\n  return n\n\n\n  n = integer\n  read n\n  act = integer with act = 0\n  for i = 1 to n, act = busca_sig(act)\n  print act\n  \n\n",
        "bool es_primo(int n) {\n  if (n < 4) return true;\n  for (int i = 2; i * i <= n; i++) {\n    if (n % i == 0) return false;\n  }\n  return true;\n}\nint sum_digitos(int n) {\n  int sum = 0;\n  while (n > 0) {\n    sum += n % 10;\n    n /= 10;\n  }\n  return sum;\n}\nint sum_factores(int n) {\n  int sum = 0;\n  for (int i = 2; i * i <= n; i++) {\n    while (n % i == 0) {\n      sum += sum_digitos(i);\n      n /= i;\n    }\n  }\n  if (n > 1) { sum += sum_digitos(n); }\n  return sum;\n}\nint busca_sig(int n) {\n  do { n++; } while (es_primo(n) || sum_digitos(n) != sum_factores(n));\n  return n;\n}\nint main() {\n  int n;\n  cin >> n;\n  int act = 0;\n  for (int i = 1; i <= n; i++) { act = busca_sig(act); }\n  cout << act << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "declare integer variable n\ndeclare string t\ndeclare int k\ncreate int ans_len\ncreate char array str with 20 * 100010 elements\ncreate int array chars s with size 80 * 100010\nfunction push_up with int argument rt\n  chars[rt] = chars[rt << 1] + chars[rt << 1 | 1]\n\nvoid function update with int arguments L, R, left, right and rt\n  if chars[rt] >= right - left + 1, return\n  if left is equal to right\n    create char array s with rt elements\n    set str[left] to t[left - L]\n    return\n  \n  if L > right or R < left, return\n  int mid = (left + right) >> 1\n  if mid >= R\n    call update with arguments L, R, left, mid and rt << 1\n  else if mid is less than L\n    call update with arguments L, R, mid + 1, right and rt << 1 | 1\n  else\n    call update with arguments L, R, left, mid and rt << 1\n    call update with arguments L, R, mid + 1, right and rt << 1 | 1\n  \n  call push_up(rt)\n\n\n  create int pos\n  declare integer endpos\n  read n and loop further\n    change ans_len to 0\n    for i from 1 to 2000010 exclusive, assign 'a' to str[i]\n    set sizeof(chars) bytes at the pointer chars to 0\n    for i from 1 to n inclusive\n      read input to t and k\n      loop j from 1 to k inclusive\n        read pos\n        set endpos to pos + length of t - 1\n        call update with arguments pos, endpos, 1, 2000010 and 1\n        if j = k\n          change ans_len to endpos if endpos is greater than ans_len\n        \n      \n    \n    for i from 1 to ans_len inclusive, print str[i]\n    print new line\n  \n\n",
        "int n;\nstring t;\nint k;\nint ans_len;\nchar str[20 * 100010];\nint chars[80 * 100010];\nvoid push_up(int rt) {\n  chars[rt] = chars[rt << 1] + chars[rt << 1 | 1];\n}\nvoid update(int L, int R, int left, int right, int rt) {\n  if (chars[rt] >= right - left + 1) return;\n  if (left == right) {\n    chars[rt] = 1;\n    str[left] = t[left - L];\n    return;\n  }\n  if (L > right || R < left) return;\n  int mid = (left + right) >> 1;\n  if (mid >= R)\n    update(L, R, left, mid, rt << 1);\n  else if (mid < L)\n    update(L, R, mid + 1, right, rt << 1 | 1);\n  else {\n    update(L, R, left, mid, rt << 1);\n    update(L, R, mid + 1, right, rt << 1 | 1);\n  }\n  push_up(rt);\n}\nint main() {\n  int pos;\n  int endpos;\n  while (cin >> n) {\n    ans_len = 0;\n    for (int i = 1; i < 2000010; i++) str[i] = 'a';\n    memset(chars, 0, sizeof(chars));\n    for (int i = 1; i <= n; i++) {\n      cin >> t >> k;\n      for (int j = 1; j <= k; j++) {\n        cin >> pos;\n        endpos = pos + t.length() - 1;\n        update(pos, endpos, 1, 2000010, 1);\n        if (j == k) {\n          if (endpos > ans_len) ans_len = endpos;\n        }\n      }\n    }\n    for (int i = 1; i <= ans_len; i++) cout << str[i];\n    cout << endl;\n  }\n}\n"
    ],
    [
        "\n  create long long n, k, p\n  read n read k read p\n  create long long arrays pe, ke, with pe size 1001, ke size 2002\n  for a = 0 to n exclusive, read pe[a]\n  for a = 0 to k exclusive, read ke[a]\n  sort elements from pe to pe+n\n  sort elements from ke to pe+k\n  create long long mins with mins = 99999999999999\n  for a = 0 to k - n + 1 exclusive\n    create long long tmp with tmp = 0\n    for b = 0 to n exclusive, set tmp to maximum of tmp and absolute value of ( pe[b] - ke[a + b] ) + absolute value of ( ke[a + b] - p )\n    set mins to minimum of tmp and mins\n  \n  print mins print newline\n  \n\n",
        "int main() {\n  long long n, k, p;\n  cin >> n >> k >> p;\n  long long pe[1001], ke[2002];\n  for (int a = 0; a < n; a++) cin >> pe[a];\n  for (int a = 0; a < k; a++) cin >> ke[a];\n  sort(pe, pe + n);\n  sort(ke, ke + k);\n  long long mins = 99999999999999;\n  for (int a = 0; a < k - n + 1; a++) {\n    long long tmp = 0;\n    for (int b = 0; b < n; b++) tmp = max(tmp, abs(pe[b] - ke[a + b]) + abs(ke[a + b] - p));\n    mins = min(tmp, mins);\n  }\n  cout << mins << endl;\n  return 0;\n}\n"
    ],
    [
        "mod = const int with mod = 1000000007\ninf = const long long with inf = 1000000000000\n\n  n, k, p = int\n  read n then k then p\n  A, B = vector of long longs\n  for i = 0 to n\n    x = long long\n    read x\n    append x to A\n  \n  for i = 0 to k\n    x = long long\n    read x\n    append x to B\n  \n  sort vector A\n  sort vector B\n  ans = long long with ans = inf\n  for i = 0 to k - n inclusive\n    temp = long long with temp = 0\n    index = int with index = i\n    for j = 0 to n\n      temp2 = long long with temp2 = 0\n      set temp2 to the sum the absolute value of A[j] - B[index] and the absolute value of B[index] - p\n      set temp to max between temp and temp2\n      increment index\n    \n    set ans to min between ans and temp\n  \n  print ans\n  \n\n",
        "const int mod = 1000000007;\nconst long long inf = 1000000000000;\nint main() {\n  int n, k, p;\n  cin >> n >> k >> p;\n  vector<long long> A, B;\n  for (int i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    A.push_back(x);\n  }\n  for (int i = 0; i < k; i++) {\n    long long x;\n    cin >> x;\n    B.push_back(x);\n  }\n  sort(A.begin(), A.end());\n  sort(B.begin(), B.end());\n  long long ans = inf;\n  for (int i = 0; i <= k - n; i++) {\n    long long temp = 0;\n    int index = i;\n    for (int j = 0; j < n; j++) {\n      long long temp2 = 0;\n      temp2 = abs(A[j] - B[index]) + abs(B[index] - p);\n      temp = max(temp, temp2);\n      index++;\n    }\n    ans = min(ans, temp);\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "N = constant integer with value of 2e5 + 50\nM = constant integer with value of 1e6\noo = constant long long with value of 1e18\nmod = constant integer with value of 1e9 + 7\na, b = long long arrays with a length of 1010 and b length of 2010\nn, k, p = long long\nin function can that takes long long variable md and returns a boolean\n  id = long long with value of 0\n  for i = 0 to k exclusive\n    if the absolute value of (a[id] - b[i]) plus the absolute value of (b[i] - p) is greater than md then continue\n    add 1 to id\n    if id equals n return 1\n  \n  \n\n\n  read n, k, and p\n  for i = 0 to n exclusive read a[i]\n  for i = 0 to k exclusive read b[i]\n  sort the first n elements of a\n  sort the first k elements of b\n  md, lo, hi, and ans = long long with lo value of 0 and hi value of 2e9 and ans value of 0\n  while lo is less than or equal to hi\n    set md to half of lo plus hi\n    if call can with argument of md is true\n      set hi to md minus 1\n      set ans to md\n    else\n      set lo to md plus 1\n  \n  print ans\n\n",
        "const int N = 2e5 + 50;\nconst int M = 1e6;\nconst long long oo = 1e18;\nconst int mod = 1e9 + 7;\nlong long a[1010], b[2010];\nlong long n, k, p;\nbool can(long long md) {\n  long long id = 0;\n  for (int i = 0; i < k; i++) {\n    if (abs(a[id] - b[i]) + abs(b[i] - p) > md) continue;\n    id++;\n    if (id == n) return 1;\n  }\n  return 0;\n}\nint main() {\n  cin >> n >> k >> p;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < k; i++) cin >> b[i];\n  sort(a, a + n);\n  sort(b, b + k);\n  long long md, lo = 0, hi = 2e9, ans = 0;\n  while (lo <= hi) {\n    md = (lo + hi) / 2;\n    if (can(md)) {\n      hi = md - 1;\n      ans = md;\n    } else\n      lo = md + 1;\n  }\n  cout << ans << endl;\n}\n"
    ],
    [
        "N = const long long with N = 1000 + 5\nN = const long long with K = 2000 + 5\nn, m, fi = long long\np = array of N long long\nk = array of K long long\nin the function di that takes long long a and b and returns long long\n  return abs of a - b\n\nin the function ok that takes long long t and returns bool\n  set poz to 1\n  for i = 1 to n inclusive\n    if poz > m return 0\n    while 1\n      tot = long long with tot = di of p[i] and k[poz] + di of k[poz] and fi\n      if tot <= t break loop\n      increment poz\n      if poz > m return 0\n    \n    increment poz\n  \n  return 1\n\n\n  read n, m, fi\n  for i = 1 to n inclusive read p[i]\n  for i = 1 to m inclusive read k[i]\n  sort p + 1 and p + n + 1\n  sort k + 1 and k + m + 1\n  r, pas = long long with r = -1, pas = 1LL << 60\n  while pas\n    if ok(r + pas) is 0 r = r + pas\n    pas = pas >> 1\n  \n  increment r\n  print r\n  \n\n",
        "const long long N = 1000 + 5;\nconst long long K = 2000 + 5;\nlong long n, m, fi;\nlong long p[N];\nlong long k[K];\nlong long di(long long a, long long b) {\n  return abs(a - b);\n}\nbool ok(long long t) {\n  long long poz = 1;\n  for (long long i = 1; i <= n; i++) {\n    if (poz > m) return 0;\n    while (1) {\n      long long tot = di(p[i], k[poz]) + di(k[poz], fi);\n      if (tot <= t) break;\n      poz++;\n      if (poz > m) return 0;\n    }\n    poz++;\n  }\n  return 1;\n}\nint main() {\n  cin >> n >> m >> fi;\n  for (long long i = 1; i <= n; i++) { cin >> p[i]; }\n  for (long long i = 1; i <= m; i++) { cin >> k[i]; }\n  sort(p + 1, p + n + 1);\n  sort(k + 1, k + m + 1);\n  long long r = -1, pas = (1LL << 60);\n  while (pas) {\n    if (ok(r + pas) == 0) { r += pas; }\n    pas >>= 1;\n  }\n  r++;\n  cout << r << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "create long longs n, k, p\ncreate long long arrays a, b, with a size 1005, b size 2005\ndeclare moze with long long x as argument, returning boolean\n  create long long h with h = 0\n  for i = 0 to n exclusive\n    if h is k, return false from function\n    create boolean sat with sat = false\n    while h is less than k\n      create long long d with d = absolute value of ( a[i] - b[h] ) + absolute value of (b[h]-p)\n      increment h\n      if d is less than or equal to x\n        set sat to true\n        break loop\n      \n    \n    if not sat, return false from function\n  \n  return true from function\n\n\n  read n read k read p\n  for i = 0 to n exclusive, read a[i]\n  for i = 0 to k exclusive, read b[i]\n  sort elements from a to a + n\n  sort elements from b to b + n\n  create long longs l, r, o, with l = 0, r = 4e9, o = -1\n  while l is less than or equal to r\n    create long long m with m = ( l + r ) bitshift right 1\n    if result of run moze with m as argument is true\n      set o to m\n      set r to m - 1\n    else\n      set l to m + 1\n    \n  \n  print o print '\\n'\n\n",
        "long long n, k, p;\nlong long a[1005], b[2005];\nbool moze(long long x) {\n  long long h = 0;\n  for (long long i = 0; i < n; i++) {\n    if (h == k) return false;\n    bool sat = false;\n    while (h < k) {\n      long long d = abs(a[i] - b[h]) + abs(b[h] - p);\n      h++;\n      if (d <= x) {\n        sat = true;\n        break;\n      }\n    }\n    if (!sat) return false;\n  }\n  return true;\n}\nint main() {\n  cin >> n >> k >> p;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = 0; i < k; i++) cin >> b[i];\n  sort(a, a + n);\n  sort(b, b + k);\n  long long l = 0, r = 4e9, o = -1;\n  while (l <= r) {\n    long long m = (l + r) >> 1;\n    if (moze(m)) {\n      o = m;\n      r = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n  cout << o << '\\n';\n}\n"
    ],
    [
        "MOD = const int with MOD = 1e9 + 7\nINF = const long long int with INF = 1e18\nkeya, per = vectors of long long int\nans = long long int with ans = INF\n\n  i, j, k, n, p, x = integers\n  read n, k, p\n  for i = 0 to n exclusive\n    read x\n    append x in per\n  \n  for i = 0 to k exclusive\n    read x\n    append x in key\n  \n  sort begin of per and end of per\n  sort begin of key and end of key\n  for j = 0 to j + n - 1 < k\n    now = long long int with now = 0\n    for i = 0 to n exclusive now = max of now and abs(per[i] - key[j + i]) + abs(key[j + i] - p)\n    ans = min of ans and now\n  \n  print ans\n  \n\n",
        "const int MOD = 1e9 + 7;\nconst long long int INF = 1e18;\nvector<long long int> key, per;\nlong long int ans = INF;\nint main() {\n  int i, j, k, n, p, x;\n  cin >> n >> k >> p;\n  for (i = 0; i < n; i++) {\n    cin >> x;\n    per.push_back(x);\n  }\n  for (i = 0; i < k; i++) {\n    cin >> x;\n    key.push_back(x);\n  }\n  sort(per.begin(), per.end());\n  sort(key.begin(), key.end());\n  for (j = 0; j + n - 1 < k; j++) {\n    long long int now = 0;\n    for (i = 0; i < n; i++) { now = max(now, abs(per[i] - key[j + i]) + abs(key[j + i] - p)); }\n    ans = min(ans, now);\n  }\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, k, p\n  read n read k read p\n  create long long arrays pe, ke, with pe size 1001, ke size 2002\n  for a = 0 to n exclusive, read pe[a]\n  for a = 0 to k exclusive, read ke[a]\n  sort elements from pe to pe + n\n  sort elements from ke to ke + n\n  create long long mins with mins = 99999999999999\n  for a = 0 to k - n + 1 exclusive\n    create long long tmp with tmp = 0\n    for b = 0 to n exclusive, set tmp to maximum of ( tmp and absolute value of ( pe[b] - ke[a + b] ) + absolute value of ( ke[a + b] - p ) )\n    set mins to minimum of tmp and mins\n  \n  print mins print newline\n  \n\n",
        "int main() {\n  long long n, k, p;\n  cin >> n >> k >> p;\n  long long pe[1001], ke[2002];\n  for (int a = 0; a < n; a++) cin >> pe[a];\n  for (int a = 0; a < k; a++) cin >> ke[a];\n  sort(pe, pe + n);\n  sort(ke, ke + k);\n  long long mins = 99999999999999;\n  for (int a = 0; a < k - n + 1; a++) {\n    long long tmp = 0;\n    for (int b = 0; b < n; b++) tmp = max(tmp, abs(pe[b] - ke[a + b]) + abs(ke[a + b] - p));\n    mins = min(tmp, mins);\n  }\n  cout << mins << endl;\n  return 0;\n}\n"
    ],
    [
        "n, k, p = integer\nperson = long long array of size 1005, key = long long array of size 2005\nans, tmp = long long\n\n  while read n, k, p\n    ans = 99999999999999LL\n    for i = 0 to n exclusive, read person[i]\n    for i = 0 to k exclusive, read key[i]\n    sort person and person + n\n    sort key and key + k\n    for i = 0 to i + n <= k\n      tmp = 0\n      for j = 0 to n exclusive, tmp = max of tmp and abs of key[i + j] - person[j] + abs of p - key[i + j]\n      ans = min of tmp and ans\n    \n    print ans\n  \n  \n\n",
        "int n, k, p;\nlong long person[1005], key[2005];\nlong long ans, tmp;\nint main() {\n  while (cin >> n >> k >> p) {\n    ans = 99999999999999LL;\n    for (int i = 0; i < n; i++) { cin >> person[i]; }\n    for (int i = 0; i < k; i++) { cin >> key[i]; }\n    sort(person, person + n);\n    sort(key, key + k);\n    for (int i = 0; i + n <= k; i++) {\n      tmp = 0;\n      for (int j = 0; j < n; j++) { tmp = max(tmp, abs(key[i + j] - person[j]) + abs(p - key[i + j])); }\n      ans = min(tmp, ans);\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create 64 bit integer infint64_t with infint64_t = 9223372036854775807LL\ndeclare solve with no arguments, returning void\n  create 64 bit integers n, k, p\n  read n read k read p\n  create 64 bit integer vector a initialized with n\n  for i = 0 to n exclusive, read a[i]\n  sort elements from beginning of a to end of a\n  create 64 bit integer vector b initialized with k\n  for i = 0 to k exclusive, read b[i]\n  sort elements from beginning of b to end of b\n  create 64 bit integer best with best = infint64_t\n  for i = 0 to k - n inclusive\n    create 64 bit integer curWorst with curWorst = 0\n    for j = 0 to n exclusive\n      create 64 bit integer cur with cur = absolute value of ( b[i+j] - p ) + absolute value of (b[i+j]-a[j] )\n      set curWorst to maximum of curWorst and cur\n    \n    set best to minimum of best and curWorst\n  \n  print best print newline\n\n\n  run solve\n  \n\n",
        "const int64_t infint64_t = 9223372036854775807LL;\nvoid solve() {\n  int64_t n, k, p;\n  cin >> n >> k >> p;\n  vector<int64_t> a(n);\n  for (int64_t i = 0; i < n; i++) { cin >> a[i]; }\n  sort(a.begin(), a.end());\n  vector<int64_t> b(k);\n  for (int64_t i = 0; i < k; i++) { cin >> b[i]; }\n  sort(b.begin(), b.end());\n  int64_t best = infint64_t;\n  for (int64_t i = 0; i <= k - n; i++) {\n    int64_t curWorst = 0;\n    for (int64_t j = 0; j < n; j++) {\n      int64_t cur = abs(b[i + j] - p) + abs(b[i + j] - a[j]);\n      curWorst = max(curWorst, cur);\n    }\n    best = min(best, curWorst);\n  }\n  cout << best << endl;\n}\nint main() {\n  solve();\n  return 0;\n}\n"
    ],
    [
        "\n  create long long t\n  read t\n  decrement t and loop further, while t > 0\n    declare long longs a and b\n    read a and b\n    long long c = pow(a * b, 1.0 / 3.0)\n    increment c while c * c * c < a * b\n    decrement c while c * c * c > a * b\n    if c * c * c = a * b && a % c = 0 && b % c = 0\n      print \"Yes\\n\"\n    else\n      print \"No\\n\"\n    \n  \n  \n\n",
        "int main() {\n  long long t;\n  cin >> t;\n  while (t--) {\n    long long a, b;\n    cin >> a >> b;\n    long long c = pow(a * b, 1.0 / 3.0);\n    while (c * c * c < a * b) c++;\n    while (c * c * c > a * b) c--;\n    if (c * c * c == a * b && a % c == 0 && b % c == 0) {\n      cout << \"Yes\\n\";\n    } else {\n      cout << \"No\\n\";\n    }\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let q be a long integer\n  read q\n  while q value is decreased by 1\n    let a, b be long integers\n    read a and b\n    let prod be long integer with prod = a * b\n    let round1 be long integer with round1 = round(cbrt(prod))\n    if a modulus round1 is equal to 0 and b modulus round1 is equal to 0\n      if round1 is equal to 1\n        if a is equal to 1 and b is equal to 1\n          print Yes\n            print newline\n        else do the following\n          print No\n            print newline\n      else do the following\n        print Yes\n          print newline\n    else do the following\n      print No\n        print newline\n  \n  \n\n",
        "int main() {\n  long long q;\n  cin >> q;\n  while (q--) {\n    long long a, b;\n    cin >> a >> b;\n    long long prod = a * b;\n    long long round1 = round(cbrt(prod));\n    if (a % round1 == 0 && b % round1 == 0) {\n      if (round1 == 1) {\n        if (a == 1 && b == 1)\n          cout << \"Yes\"\n            << \"\\n\";\n        else\n          cout << \"No\"\n            << \"\\n\";\n      } else\n        cout << \"Yes\"\n          << \"\\n\";\n    } else\n      cout << \"No\"\n        << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  q = long long\n  read q\n  while q is not 0 subtract 1 from q do\n    a, b = long long\n    read a and b\n    prod = long long with value of a*b\n    round1 = long long with value of the cubic root of prod rounded to the nearest whole number\n    if a mod round1 equals 0 and b mod round1 equals 0\n      if round1 equals 1\n        if a and b equal 1\n          print Yes\n            print a new line\n        else\n          print No\n            print a new line\n      else\n        print Yes\n          print a new line\n    else\n      print No\n        print a new line\n  \n  \n\n",
        "int main() {\n  long long q;\n  cin >> q;\n  while (q--) {\n    long long a, b;\n    cin >> a >> b;\n    long long prod = a * b;\n    long long round1 = round(cbrt(prod));\n    if (a % round1 == 0 && b % round1 == 0) {\n      if (round1 == 1) {\n        if (a == 1 && b == 1)\n          cout << \"Yes\"\n            << \"\\n\";\n        else\n          cout << \"No\"\n            << \"\\n\";\n      } else\n        cout << \"Yes\"\n          << \"\\n\";\n    } else\n      cout << \"No\"\n        << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "in function maxx taking two references to long long ints a and b and returning a long long int\n  return a if it is greater than b else return b\n\nin function minn taking two references to long long ints a and b and returning a long long int\n  return b if a is greater than b else return a\n\ndefine empty function boostISO\nin function gcd taking two long long ints a and b and returning a long long int\n  return a if b is 0 else return gcd of b and a mod b\n\nin function int_gcd taking two ints a and b and returning an int\n  returna if b is 0 else return int_gcd of b and a mod b\n\nin function lcm taking two long long ints a and b and returning a long long int\n  return a / gcd of a and b * b\n\nin function poww taking three long long ints base, exp and mod and returning a long long int\n  set base to base modulo mod\n  result = long long int with result = 1\n  loop while exp is greater than 0\n    if exp bitwise-and 1 is 1 then set result to (result * base) modulo mod\n    set base to (base * base) modulo mod\n    set exp to exp bitshift right by 1\n  \n  return result\n\nin function cube_root taking a long long int x and returning an int\n  l, r = long long int with l = 1 and r = 1e6 + 10\n  loop while l is less than r\n    mid = long long int with mid = (l + r) bitshift right by 1\n    if mid * mid * mid is greater or equal to x\n      set r to mid\n    else\n      set l ti mid + 1\n    \n  \n  if l * l * l is x then return l\n  return -1\n\n\n  call boostISO\n  t = int\n  read t\n  loop t times\n    a, b = long long int\n    read a then b\n    value = int with value = cube_root of a * b\n    if value is not - 1\n      g = long long int with g = gcd of a and b\n      if g is a multiple of value\n        print \"YES\"\n        continue loop\n      \n    \n    print \"NO\"\n  \n\n",
        "long long int maxx(long long int &a, long long int &b) {\n  return a > b ? a : b;\n}\nlong long int minn(long long int &a, long long int &b) {\n  return a > b ? b : a;\n}\nvoid boostIO() {}\nlong long int gcd(long long int a, long long int b) {\n  return b == 0 ? a : gcd(b, a % b);\n}\nint int_gcd(int a, int b) {\n  return b == 0 ? a : int_gcd(b, a % b);\n}\nlong long int lcm(long long int a, long long int b) {\n  return a / gcd(a, b) * b;\n}\nlong long int poww(long long int base, long long int exp, long long int mod) {\n  base %= mod;\n  long long int result = 1;\n  while (exp > 0) {\n    if (exp & 1) result = (result * base) % mod;\n    base = (base * base) % mod;\n    exp >>= 1;\n  }\n  return result;\n}\nint cube_root(long long int x) {\n  long long int l = 1, r = 1e6 + 10;\n  while (l < r) {\n    long long int mid = (l + r) >> 1;\n    if (mid * mid * mid >= x) {\n      r = mid;\n    } else {\n      l = mid + 1;\n    }\n  }\n  if (l * l * l == x) { return l; }\n  return -1;\n}\nint main() {\n  boostIO();\n  int t;\n  cin >> t;\n  while (t--) {\n    long long int a, b;\n    cin >> a >> b;\n    int value = cube_root(a * b);\n    if (value != -1) {\n      long long int g = gcd(a, b);\n      if (g % value == 0) {\n        puts(\"Yes\");\n        continue;\n      }\n    }\n    puts(\"No\");\n  }\n}\n"
    ],
    [
        "create const integer MAX = 2e5 + 7\ncreate const integer INF = 0x3f3f3f3f\ndeclare integer variables N, M and K\ndeclare an arrays of integers prea and preb with size MAX\ninteger function cal with integer arguments a and b and char argument c\n  if c = '&', return a & b\n  if c = '|', return a | b\n  return a ^ b\n\n\n  read N and loop further\n    create integers x = 0 and y = 1023\n    for i from 0 to N exclusive\n      declare character c\n      declare integer a\n      read c and a\n      set x to cal(x, c, a)\n      set y to cal(y, c, a)\n    \n    declare integers a and b = 0 and c = 1023\n    for integer i = 0 to 10 exclusive\n      integer p = 1 << i\n      if x & p != 0\n        if y & p != 0\n          a |= p\n        else\n          b |= p\n      else\n        if y & p = 0, set c to c ^ p\n      \n    \n    print 3\n    print \"| \" and a\n    print \"^ \" and b\n    print \"& \" and c\n  \n  \n\n",
        "const int MAX = 2e5 + 7;\nconst int INF = 0x3f3f3f3f;\nint N, M, K;\nint prea[MAX], preb[MAX];\nint cal(int a, char c, int b) {\n  if (c == '&') return a & b;\n  if (c == '|') return a | b;\n  return a ^ b;\n}\nint main() {\n  while (cin >> N) {\n    int x = 0, y = 1023;\n    for (int i = 0; i < N; i++) {\n      char c;\n      int a;\n      cin >> c >> a;\n      x = cal(x, c, a);\n      y = cal(y, c, a);\n    }\n    int a = 0, b = 0, c = 1023;\n    for (int i = 0; i < 10; i++) {\n      int p = 1 << i;\n      if (x & p) {\n        if (y & p)\n          a |= p;\n        else\n          b |= p;\n      } else {\n        if (!(y & p)) c ^= p;\n      }\n    }\n    cout << 3 << endl;\n    cout << \"| \" << a << endl;\n    cout << \"^ \" << b << endl;\n    cout << \"& \" << c << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n,xx=long long\n  read n\n  m1=0, m2=1023\n  rr and ss=array of 1024 long long\n  for i=0 to 1024 exclusive\n    rr[i]=i\n    ss[i]=i\n  \n  while decremented value of n is not 0\n    r=char\n    read r,xx\n    if r is '|'\n      m1=m1 or xx\n      m2=m2 or xx\n      for i=0 to 1024 exclusive rr[i]=rr[i] or xx\n    else if r is '^'\n      m1=m1 xor xx\n      m2=m2 xor xx\n      for i=0 to 1024 exclusive rr[i]=rr[i] xor xx\n    else\n      m1=m1 and xx\n      m2=m2 and xx\n      for i=0 to 1024 exclusive rr[i]=rr[i] and xx\n    \n  \n  x,a,o=0\n  for i=0 to 10 exclusive\n    u=m1 and (2^(i+1))\n    v=m2 and (2^(i+1))\n    if m1 and (2^(i+1)) and v is 0\n      x=x or (2^(i+1))\n      a=a or (2^(i+1))\n    else if u is 0 and m2 and (2^(i+1))\n      a=a or (2^(i+1))\n    else if m1 and (2^(i+1)) and m2 and (2^(i+1))\n      a=a or (2^(i+1))\n      o=o or (2^(i+1))\n    \n  \n  print \"3\"\n  print \"| \" and o\n  print \"^ \" and x\n  print \"& \" and a\n\n",
        "int main() {\n  long long n, xx;\n  cin >> n;\n  long long m1 = 0, m2 = 1023;\n  long long rr[1024], ss[1024];\n  for (long long i = 0; i < 1024; i++) {\n    rr[i] = i;\n    ss[i] = i;\n  }\n  while (n--) {\n    char r;\n    cin >> r >> xx;\n    if (r == '|') {\n      m1 = m1 | xx;\n      m2 = m2 | xx;\n      for (long long i = 0; i < 1024; i++) { rr[i] = rr[i] | xx; }\n    } else if (r == '^') {\n      m1 = m1 ^ xx;\n      m2 = m2 ^ xx;\n      for (long long i = 0; i < 1024; i++) { rr[i] = rr[i] ^ xx; }\n    } else {\n      m1 = m1 & xx;\n      m2 = m2 & xx;\n      for (long long i = 0; i < 1024; i++) { rr[i] = rr[i] & xx; }\n    }\n  }\n  long long x = 0, a = 0, o = 0;\n  for (long long i = 0; i < 10; i++) {\n    long long u = m1 & (1 << i);\n    long long v = m2 & (1 << i);\n    if (m1 & (1 << i) && v == 0) {\n      x = x | (1 << i);\n      a = a | (1 << i);\n    } else if (u == 0 && m2 & (1 << i)) {\n      a = a | (1 << i);\n    } else if (m1 & (1 << i) && m2 & (1 << i)) {\n      a = a | (1 << i);\n      o = o | (1 << i);\n    }\n  }\n  cout << \"3\" << '\\n';\n  cout << \"| \" << o << '\\n';\n  cout << \"^ \" << x << '\\n';\n  cout << \"& \" << a << '\\n';\n}\n"
    ],
    [
        "\n  create long longs n, M, M2, s, with s = 0\n  create long long array t with size 100005\n  create long long array t2 with size 100005\n  read n\n  for i = 0 to n exclusive\n    read t[i]\n    increment s by t[i]\n  \n  for i = 0 to n exclusive, read t2[i]\n  sort elements from t2 to t2 + n\n  if s is less than or equal to t2[n-1] + t2[n-2]\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n  \n\n",
        "int main() {\n  long long n, M, M2, s = 0;\n  long long t[100005];\n  long long t2[100005];\n  cin >> n;\n  for (long long i = 0; i < n; i++) {\n    cin >> t[i];\n    s += t[i];\n  }\n  for (long long i = 0; i < n; i++) { cin >> t2[i]; }\n  sort(t2, t2 + n);\n  if (s <= t2[n - 1] + t2[n - 2]) {\n    cout << \"YES\" << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long longs n, sum with sum = 0\n  read n\n  create long long array a with size n\n  create long long array b with size n\n  for i = 0 to n exclusive\n    read a[i]\n    increment sum by a[i]\n  \n  for i = 0 to n exclusive, read b[i]\n  sort elements from b to b + n\n  print \"YES\" if b[n - 2] + b[n - 1] is greater than or equal to sum, else \"NO\", print '\\n'\n  \n\n",
        "int main() {\n  long long n, sum = 0;\n  cin >> n;\n  long long a[n];\n  long long b[n];\n  for (long long i = 0; i < n; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  for (long long i = 0; i < n; i++) { cin >> b[i]; }\n  sort(b, b + n);\n  cout << (b[n - 2] + b[n - 1] >= sum ? \"YES\" : \"NO\") << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create long long array num with 100010 elements\nfunction cmp with integer arguments a and b that returns boolean\n  return a > b\n\n\n  declare long long variable sum = 0\n  declare integer n\n  read n\n  for integer i = 0 to n exclusive\n    declare integer a\n    read a\n    increase sum by a\n  \n  read n elements into num\n  sort num using cmp as comparator function\n  if num[0] + num[1] >= sum\n    print \"YES\"\n  else\n    print \"NO\"\n\n",
        "long long num[100010];\nbool cmp(int a, int b) {\n  return a > b;\n}\nint main() {\n  long long sum = 0;\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    int a;\n    cin >> a;\n    sum += a;\n  }\n  for (int i = 0; i < n; i++) { cin >> num[i]; }\n  sort(num, num + n, cmp);\n  if (num[0] + num[1] >= sum)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "\n  declare long long variables cans, sum and aux, with sum = 0\n  read cans\n  val is an array of long longs with size cans + 2\n  for i = 0 to cans exclusive\n    read aux\n    increase sum by aux\n  \n  read val cans times\n  sort val\n  if sum <= val[cans - 1] + val[cans - 2]\n    print \"YES\\n\"\n  else\n    print \"NO\\n\"\n  \n\n",
        "int main() {\n  long long cans, sum = 0, aux;\n  cin >> cans;\n  long long val[cans + 2];\n  for (int i = 0; i < cans; i++) {\n    cin >> aux;\n    sum += aux;\n  }\n  for (int i = 0; i < cans; i++) cin >> val[i];\n  sort(val, val + cans);\n  if (sum <= val[cans - 1] + val[cans - 2])\n    cout << \"YES\\n\";\n  else\n    cout << \"NO\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  let n, sum be long integers with sum is equal to 0\n  read n\n  b= array of long inters of length n\n  for long integer i = 0 to n exclusive\n    let x be a long integer\n    read x\n    sum is equal to sum+x\n  \n  for long integer i = 0 to n exclusive, read ith element of b array\n  sorting the data of b, b+n\n  print YES if (b[n - 2] + b[n - 1] >= sum ) else print NO\n  \n\n",
        "int main() {\n  long long n, sum = 0;\n  cin >> n;\n  long long b[n];\n  for (long long i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    sum += x;\n  }\n  for (long long i = 0; i < n; i++) { cin >> b[i]; }\n  sort(b, b + n);\n  cout << (b[n - 2] + b[n - 1] >= sum ? \"YES\" : \"NO\") << '\\n';\n  return 0;\n}\n"
    ],
    [
        "create constant integer N with N = 1e5 + 10\n\n  create integer n\n  read n\n  create integer arrays a, b, with a size N, b size N\n  create long long sum with sum = 0\n  for i = 0 to n exclusive\n    read a[i]\n    increment sum by a[i]\n  \n  for i = 0 to n exclusive, read b[i]\n  sort elements from b to b + n using integer greater to compare\n  if sum is less than or equal to (b[0] + b[1])\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n  \n\n",
        "const int N = 1e5 + 10;\nint main() {\n  int n;\n  cin >> n;\n  int a[N], b[N];\n  long long sum = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  for (int i = 0; i < n; i++) cin >> b[i];\n  sort(b, b + n, greater<int>());\n  if (sum <= (b[0] + b[1]))\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "declare constant integer N = 1e5 + 10\n\n  declare integer variable n\n  read n\n  create long long arrays a and b with N elements\n  declare long long sum = 0\n  for integer i = 0 to n exclusive\n    read a[i]\n    increase sum by a[i]\n  \n  for i = 0 to n exclusive read b[i]\n  sort b using greater function as comparer\n  if sum <= (b[0] + b[1])\n    print \"YES\"\n  else\n    print \"NO\"\n  \n\n",
        "const int N = 1e5 + 10;\nint main() {\n  int n;\n  cin >> n;\n  long long a[N], b[N];\n  long long sum = 0;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    sum += a[i];\n  }\n  for (int i = 0; i < n; i++) cin >> b[i];\n  sort(b, b + n, greater<int>());\n  if (sum <= (b[0] + b[1]))\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "let a,b, i, n be integers where a and b are arrays of length 100001\nlet s be a long integer\n\n  read n\n  for i= 1 to n inclusive\n    read ith element of array a\n    s is equal to s + ith element of array a\n  \n  for i = 1 to n inclusive, read ith element of array b\n  sort the values b+1, b+n+1\n  if (nth term of array b + [n - 1]th term of array b is greater than or equal to s)\n    print YES and newline\n  else do the following\n    print NO and newline\n  \n\n",
        "int a[100001], b[100001], i, n;\nlong long s;\nint main() {\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> a[i];\n    s += a[i];\n  }\n  for (i = 1; i <= n; i++) cin >> b[i];\n  sort(b + 1, b + n + 1);\n  if (b[n] + b[n - 1] >= s)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "function gcd with long long arguments a and b that returns long long\n  if b = 0, return a\n  return gcd(b, a % b)\n\nfunction lcm with long long arguments a and b that returns long long\n  return a * b / gcd(a, b)\n\n\n  create long longs i and j\n  declare long long n\n  read n\n  create vectors of long long a and b with n elements each\n  read n elements into a\n  read n elements into b\n  declare long long variable sum = 0\n  add all elements of a to the sum one by one\n  sort array b\n  if sum is greater than b[n - 1] + b[n - 2]\n    print \"NO\" and a new line\n  else\n    print \"YES\" and a new line\n  \n\n",
        "long long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nlong long lcm(long long a, long long b) {\n  return a * b / gcd(a, b);\n}\nint main() {\n  long long i, j;\n  long long n;\n  cin >> n;\n  vector<long long> a(n), b(n);\n  for (long long i = 0; i < (n); i++) cin >> a[i];\n  for (long long i = 0; i < (n); i++) cin >> b[i];\n  long long sum = 0;\n  for (long long i = 0; i < (n); i++) sum += a[i];\n  sort(b.begin(), b.end());\n  if (sum > b[n - 1] + b[n - 2]) {\n    cout << \"NO\" << endl;\n  } else {\n    cout << \"YES\" << endl;\n  }\n}\n"
    ],
    [
        "\n  create long long integers n and k, array c with 2 elements filled with 0, and arrays a and b with size 100000\n  declare long long integer variables i, j and sum where sum = 0\n  read n\n  for i = 0 to n exclusive\n    read a[i]\n    set sum to sum + a[i]\n  \n  for i = 0 to n exclusive\n    read b[i]\n    if b[i] is greater than c[0]\n      c[0] = b[i]\n      k = i\n    \n  \n  for i = 0 to n exclusive\n    if c[1] < b[i] and b[i] <= c[0] and i != k, set c[1] to b[i]\n  \n  if c[1] + c[0] >= sum\n    print \"YES\"\n  else\n    print \"NO\"\n  \n  \n\n",
        "int main() {\n  long long int n, a[100000], b[100000], c[2] = {0}, k;\n  long long int i, j, sum = 0;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n    sum = sum + a[i];\n  }\n  for (i = 0; i < n; i++) {\n    cin >> b[i];\n    if (b[i] > c[0]) {\n      c[0] = b[i];\n      k = i;\n    }\n  }\n  for (i = 0; i < n; i++) {\n    if (c[1] < b[i] && b[i] <= c[0] && i != k) c[1] = b[i];\n  }\n  if (c[1] + c[0] >= sum) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "create long long arrays a, b, with a size 100010, b size 100010\ndeclare cmp with integers a, b as arguments, returning boolean\n  return a is greater than b\n\n\n  create integers n, i, j\n  while read n is true\n    set bytes from a to size of a to value 0\n    set bytes from b to size of b to value 0\n    create double sum with sum = 0\n    for i = 0 to n exclusive\n      read a[i]\n      increment sum by a[i]\n    \n    for i = 0 to n exclusive, read b[i]\n    sort elements from b to b + i using cmp to compare\n    if b[0] + b[1] is greater than or equal to sum\n      print \"YES\" print newline\n    else\n      print \"NO\" print newline\n  \n  \n\n",
        "long long a[100010], b[100010];\nbool cmp(int a, int b) {\n  return a > b;\n}\nint main() {\n  int n, i, j;\n  while (cin >> n) {\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    double sum = 0;\n    for (i = 0; i < n; i++) {\n      cin >> a[i];\n      sum += a[i];\n    }\n    for (i = 0; i < n; i++) { cin >> b[i]; }\n    sort(b, b + i, cmp);\n    if (b[0] + b[1] >= sum)\n      cout << \"YES\" << endl;\n    else\n      cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, M, M2, s = long long and set s to 0\n  t = long long array of size 100005\n  t2 = long long array of size 100005\n  read n\n  for long long i = 0 to n exclusive\n    read t[i]\n    increase s by t[i]\n  \n  for long long i = 0 to n exclusive read t2[i]\n  sort the first n elements of t2\n  if s <= t2[n-1] + t2[n-2]\n    print YES\n  else\n    print NO\n  \n\n",
        "int main() {\n  long long n, M, M2, s = 0;\n  long long t[100005];\n  long long t2[100005];\n  cin >> n;\n  for (long long i = 0; i < n; i++) {\n    cin >> t[i];\n    s += t[i];\n  }\n  for (long long i = 0; i < n; i++) { cin >> t2[i]; }\n  sort(t2, t2 + n);\n  if (s <= t2[n - 1] + t2[n - 2]) {\n    cout << \"YES\" << endl;\n  } else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant long long Mod with value 1e9 + 7\ncreate constant double pi with value 2 * acos(0.0)\ncreate constant double N with value 2e5 + 5\narr is an integer array with size N\n\n  create long longs n, x and s, with s = 0\n  read n\n  for integer i = 0 to n exclusive\n    read x\n    increase s by x\n  \n  for integer i = 0 to n exclusive read arr[i]\n  sort arr\n  if arr[n - 1] + arr[n - 2] >= s\n    print \"YES\" and a new line\n  else\n    print \"NO\" and a new line\n  \n\n",
        "const long long Mod = 1e9 + 7;\nconst double pi = 2 * acos(0.0);\nconst int N = 2e5 + 5;\nint arr[N];\nint main() {\n  long long n, x, s = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> x;\n    s += x;\n  }\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  sort(arr, arr + n);\n  if (arr[n - 1] + arr[n - 2] >= s)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read n\n  let sum and cur be long longs where sum = 0\n  for size_t = 0 to n exclusive\n    read cur\n    increase sum by cur\n  \n  create long longs Max1 and Max2 = -1\n  for size_t = 0 to n exclusive\n    read cur\n    if cur is greater than Max1\n      set Max2 to Max1\n      set value of Max1 to cur\n    else if cur is greater than Max2\n      Max2 = cur\n    \n  \n  print \"YES\\n\" if Max2 + Max1 >= sum, else pring \"NO\\n\"\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  long long sum = 0, cur;\n  for (size_t i = 0; i < n; i++) {\n    cin >> cur;\n    sum += cur;\n  }\n  long long Max1 = -1, Max2 = -1;\n  for (size_t i = 0; i < n; i++) {\n    cin >> cur;\n    if (cur > Max1) {\n      Max2 = Max1;\n      Max1 = cur;\n    } else if (cur > Max2) {\n      Max2 = cur;\n    }\n  }\n  cout << ((Max2 + Max1 >= sum) ? \"YES\\n\" : \"NO\\n\");\n  return 0;\n}\n"
    ],
    [
        "\n  create integer x\n  create long long integer k with k = 0\n  read x\n  create long long integer vector v\n  create integer arrays a, b, with a size x, b size x\n  for i = 0 to x exclusive\n    create integer s\n    read s\n    increment k by s\n  \n  for i = 0 to x exclusive\n    create long long integer d\n    read d\n    add element d to end of v\n  \n  sort elements from beginning of v to end of v\n  create long long integer s with s = v[x-1]+v[x-2]\n  if s is greater than or equal to k\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n  \n  \n\n",
        "int main() {\n  int x;\n  long long int k = 0;\n  cin >> x;\n  vector<long long int> v;\n  int a[x], b[x];\n  for (int i = 0; i < x; i++) {\n    int s;\n    cin >> s;\n    k += s;\n  }\n  for (int i = 0; i < x; i++) {\n    long long int d;\n    cin >> d;\n    v.push_back(d);\n  }\n  sort(v.begin(), v.end());\n  long int s = v[x - 1] + v[x - 2];\n  if (s >= k) {\n    cout << \"YES\" << endl;\n  } else {\n    cout << \"NO\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare gcd with long longs a, b as arguments, returning long long\n  while b is true, swap values of ( set a to a % b, and b )\n  return a\n\n\n  create long long n\n  read n\n  create long long vector nums initialized with n\n  create long long sum with sum = 0\n  for i = 0 to n exclusive\n    create long long a\n    read a\n    increment sum by a\n  \n  create long longs mx1, mx2 with mx1= 0, mx2 = 0\n  for i = 0 to n exclusive\n    read nums[i]\n    if nums[i] is greater than mx1\n      set mx2 to mx1, set mx1 to nums[i]\n    else if nums[i] is less than or equal to mx1 and nums[i] is greater than mx2\n      set mx2 to nums[i]\n  \n  if sum is less than or equal to mx1 + mx2\n    print \"YES\" print newline\n  else\n    print \"NO\" print newline\n\n",
        "long long gcd(long long a, long long b) {\n  while (b) swap(a %= b, b);\n  return a;\n}\nint main() {\n  long long n;\n  cin >> n;\n  vector<long long> nums(n);\n  long long sum = 0;\n  for (long long i = 0; i < n; ++i) {\n    long long a;\n    cin >> a;\n    sum += a;\n  }\n  long long mx1 = 0, mx2 = 0;\n  for (long long i = 0; i < n; ++i) {\n    cin >> nums[i];\n    if (nums[i] > mx1)\n      mx2 = mx1, mx1 = nums[i];\n    else if (nums[i] <= mx1 && nums[i] > mx2)\n      mx2 = nums[i];\n  }\n  if (sum <= mx1 + mx2)\n    cout << \"YES\" << endl;\n  else\n    cout << \"NO\" << endl;\n}\n"
    ],
    [
        "n, j, minnum and ans are integers with minnum = 1000000002 and ans = 100002\ncreate an arrays of ints a and flag with size 100005\n\n  read n\n  for i from 1 to n inclusive\n    read a[i]\n    if minnum is greater than a[i], change minnum to a[i]\n  \n  for i from 1 to n inclusive\n    if a[i] = minnum\n      increment j\n      change flag[j] to i\n    \n  \n  for integer i = 1 to j exclusive\n    if flag[i + 1] - flag[i] is less than ans, set ans to flag[i + 1] - flag[i]\n  print ans\n  \n\n",
        "int n, j, minnum = 1000000002, ans = 100002;\nint a[100005], flag[100005];\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (minnum > a[i]) minnum = a[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == minnum) {\n      j++;\n      flag[j] = i;\n    }\n  }\n  for (int i = 1; i < j; i++)\n    if (flag[i + 1] - flag[i] < ans) ans = flag[i + 1] - flag[i];\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "n, a, mink, pr, mind = integers with a = integer array of size 100001, mink = 2e9, pr = -1, mind = 2e9\n\n  read n\n  for i = 0 to n exclusive\n    read a[i]\n    mink = min of mink and a[i]\n  \n  for i = 0 to n exclusive\n    if pr is not -1 and a[i] is mink, mind = min(mind, i - pr)\n    if a[i] is mink, pr = i\n  \n  print mind\n\n",
        "int n, a[100001], mink = 2e9, pr = -1, mind = 2e9;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    mink = min(mink, a[i]);\n  }\n  for (int i = 0; i < n; i++) {\n    if (pr != -1 && a[i] == mink) { mind = min(mind, i - pr); }\n    if (a[i] == mink) { pr = i; }\n  }\n  cout << mind << endl;\n}\n"
    ],
    [
        "create constant int maxn = 1e7 + 10\nlet int array a of size maxn\nlet int n\nlet integer mini = 1e9 + 10\n\n  read n\n  for i = 0 to n exclusive\n    read a[i]\n    if a[i] is less than mini, set mini to a[i]\n  \n  create int vector vec\n  for i = 0 to n exclusive\n    if mini is equal to a[i], append i to vec\n  \n  set mini to n\n  for i = 0 to the size of vec exclusive, set mini to the min of mini and vec[i + 1] - vec[i]\n  print mini\n  \n\n",
        "const int maxn = 1e7 + 10;\nint a[maxn];\nint n;\nint mini = 1e9 + 10;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] < mini) mini = a[i];\n  }\n  vector<int> vec;\n  for (int i = 0; i < n; i++) {\n    if (mini == a[i]) { vec.push_back(i); }\n  }\n  mini = n;\n  for (int i = 0; i < vec.size() - 1; i++) { mini = min(mini, vec[i + 1] - vec[i]); }\n  cout << mini << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  v = long long vector\n  v1 = long long vector\n  i, j, n, ans, min, t, flag = long long with min = 1000000002\n  read n\n  for i = 0 to n\n    x = long long\n    read x\n    append x to v\n    if x is less than min set min to x\n  \n  for i = 0 to n\n    if min is v[i] append i to v1\n  \n  set min to 1000000002\n  for i = 1 to size of v1\n    if (v1[i] - v1[i - 1]) < min set min to v1[i] - v1[i - 1]\n  \n  print min\n\n",
        "int main() {\n  vector<long long> v;\n  vector<long long> v1;\n  long long i, j, n, ans, min = 1000000002, t, flag;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    v.push_back(x);\n    if (x < min) { min = x; }\n  }\n  for (i = 0; i < n; i++) {\n    if (min == v[i]) { v1.push_back(i); }\n  }\n  min = 1000000002;\n  for (i = 1; i < v1.size(); i++) {\n    if ((v1[i] - v1[i - 1]) < min) { min = (v1[i] - v1[i - 1]); }\n  }\n  cout << min << endl;\n}\n"
    ],
    [
        "a = array of integers of length 100010\n\n  let n, m, j, k, l, i, o, p be integers with j = INT_MAX, l = INT_MAX\n  read n\n  for i = 1 to n inclusive\n    read a[i]\n    l is equal to minimum of l, a[i]\n  \n  k is equal to distance(a, find(a + 1, a + n + 1, l))\n  for i = k + 1 to n inclusive\n    if a[i] is equal to l\n      j is equal to minimum of j, i - k\n      k is equal to i\n    \n  \n  print j and newline\n  \n\n",
        "int a[100010];\nint main() {\n  int n, m, j = INT_MAX, k, l = INT_MAX, i, o, p;\n  cin >> n;\n  for (i = 1; i <= n; i++) {\n    cin >> a[i];\n    l = min(l, a[i]);\n  }\n  k = distance(a, find(a + 1, a + n + 1, l));\n  for (i = k + 1; i <= n; i++) {\n    if (a[i] == l) {\n      j = min(j, i - k);\n      k = i;\n    }\n  }\n  cout << j << endl;\n  return 0;\n}\n"
    ],
    [
        "n, a, Min, pre, ans = integers with a = array of size 100005, ans = 100005\n\n  read n\n  for i = 1 to n, read a[i]\n  Min = a[1]\n  for i = 2 to n, Min = min of Min and a[i]\n  for i = 1 to n\n    if a[i] is Min\n      if not pre\n        pre = i\n      else\n        ans = min(ans, i - pre), pre = i\n    \n  print ans\n  \n\n",
        "int n, a[100005], Min, pre, ans = 100005;\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  Min = a[1];\n  for (int i = 2; i <= n; i++) Min = min(Min, a[i]);\n  for (int i = 1; i <= n; i++)\n    if (a[i] == Min) {\n      if (!pre)\n        pre = i;\n      else\n        ans = min(ans, i - pre), pre = i;\n    }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let int s = 9999999999\n  let int n\n  read n\n  create pair array a of int and int of size n\n  for i = 0 to n exclusive\n    read a[i].first\n    set a[i].second to i + 1\n  \n  sort array a\n  for i = 0 to n - 1 exclusive\n    if a[i].first equals a[i + 1].first and a[0].first equals a[i].first, set s to min of s and a[i +1].second - a[i].second\n  \n  print s\n  \n\n",
        "int main() {\n  int s = 9999999999;\n  int n;\n  cin >> n;\n  pair<int, int> a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i].first;\n    a[i].second = i + 1;\n  }\n  sort(a, a + n);\n  for (int i = 0; i < n - 1; i++) {\n    if (a[i].first == a[i + 1].first && a[0].first == a[i].first) { s = min(s, a[i + 1].second - a[i].second); }\n  }\n  cout << s << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  size = int and in = int array of size 100005\n  d1 = int vector\n  read size\n  read size values into in\n  mn = int with mn = 1e9\n  for i = 0 to size\n    if in[i] < mn set mn to in[i]\n  \n  for i = 0 to size\n    if mn is in[i] append i to d1\n  \n  mns = int with mns = 1e9\n  for i = 0 to size of d1 - 1\n    if absolute of d1[i] - d1[i + 1] < mns set mns to ansolute of d1[i] - d1[i + 1]\n  \n  print mns\n  \n\n",
        "int main() {\n  int size, in[100005];\n  vector<int> d1;\n  cin >> size;\n  for (int i = 0; i < size; i++) { cin >> in[i]; }\n  int mn = 1e9;\n  for (int i = 0; i < size; i++) {\n    if (in[i] < mn) { mn = in[i]; }\n  }\n  for (int i = 0; i < size; i++) {\n    if (mn == in[i]) { d1.push_back(i); }\n  }\n  int mns = 1e9;\n  for (int i = 0; i < d1.size() - 1; i++) {\n    if (abs(d1[i] - d1[i + 1]) < mns) { mns = abs(d1[i] - d1[i + 1]); }\n  }\n  cout << mns << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = integer\n  while read n\n    v = vector of integer with v = n\n    s = vector of integer with s = n\n    for i = 0 to n exclusive\n      read v[i]\n      s[i] = v[i]\n    \n    sort s.begin() and s.end()\n    a, b = integers\n    a = s[0]\n    b = s[1]\n    x, y, d = integers\n    d = x = y = 1000000100\n    sw = bool with sw = true\n    for i = 0 to n exclusive\n      if a is v[i]\n        x = i\n        break loop\n      \n    \n    for i = x + 1 to n exclusive\n      if b is v[i]\n        y = i\n        d = min of d and abs(x - y)\n        x = i\n      \n    \n    print d\n  \n  \n\n",
        "int main() {\n  int n;\n  while (cin >> n) {\n    vector<int> v(n);\n    vector<int> s(n);\n    for (int i = 0; i < n; i++) {\n      cin >> v[i];\n      s[i] = v[i];\n    }\n    sort(s.begin(), s.end());\n    int a, b;\n    a = s[0];\n    b = s[1];\n    int x, y, d;\n    d = x = y = 1000000100;\n    bool sw = true;\n    for (int i = 0; i < n; i++) {\n      if (a == v[i]) {\n        x = i;\n        break;\n      }\n    }\n    for (int i = x + 1; i < n; i++) {\n      if (b == v[i]) {\n        y = i;\n        d = min(d, abs(x - y));\n        x = i;\n      }\n    }\n    cout << d << \"\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  n, menor, pos, ans, i = int\n  read n\n  V = int vector of size n\n  read n values into V\n  set menor to 2000000000\n  for i = 0 to n set menor to min of menor and V[i]\n  for i = 0 to n\n    if V[i] = menor\n      set pos to i\n      break\n    \n  \n  set ans to 1000000\n  for i = pos + 1 to n\n    if V[i] = menor\n      if i - pos < ans set ans to i - pos\n      set pos to i\n    \n  \n  print ans\n\n",
        "int main() {\n  int n, menor, pos, ans, i;\n  cin >> n;\n  vector<int> V(n);\n  for (i = 0; i < n; i++) { cin >> V[i]; }\n  menor = 2000000000;\n  for (i = 0; i < n; i++) { menor = min(menor, V[i]); }\n  for (i = 0; i < n; i++) {\n    if (V[i] == menor) {\n      pos = i;\n      break;\n    }\n  }\n  ans = 1000000;\n  for (i = pos + 1; i < n; i++) {\n    if (V[i] == menor) {\n      if (i - pos < ans) ans = i - pos;\n      pos = i;\n    }\n  }\n  cout << ans << '\\n';\n}\n"
    ],
    [
        "create long long array a of length 100005\n\n  create long long a and mi, set mi to 1000000007\n  read n\n  for i=1 to n+1 exclusive\n    read a[i]\n    set mi to min of mi and a[i]\n  \n  set j to -1000000007 and ans to 1000000007\n  for i=1 to n+1 exclusive\n    if a[i] = mi\n      set ans to min of ans and i - j\n      assign i to j\n    \n  \n  print ans\n  \n\n",
        "long long a[100005];\nint main() {\n  long long n, mi = 1000000007;\n  cin >> n;\n  for (long long i = 1; i < n + 1; i++) {\n    cin >> a[i];\n    mi = min(mi, a[i]);\n  }\n  long long j = -1000000007, ans = 1000000007;\n  for (long long i = 1; i < n + 1; i++) {\n    if (a[i] == mi) {\n      ans = min(ans, i - j);\n      j = i;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer n\n  read n\n  declare integer pointer a = new integer array size n\n  declare long long integer min = 99999999999999999\n  for i = 0 to n exclusive\n    read a[i]\n    if a[i] is less than min, let min = a[i]\n  \n  declare integer array p size 100000\n  declare integer c = 0\n  for i = 0 to n exclusive\n    if a[i] is min\n      let p[c] be i\n      increment c\n    \n  \n  let min be 99999999999999999\n  for i = 1 to c exclusive\n    declare integer r = p[i] - p[i - 1]\n    if r is less than min, let min be r\n  \n  print min, newline\n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int *a = new int[n];\n  long long int min = 99999999999999999;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] < min) { min = a[i]; }\n  }\n  int p[100000];\n  int c = 0;\n  for (int i = 0; i < n; i++) {\n    if (a[i] == min) {\n      p[c] = i;\n      c++;\n    }\n  }\n  min = 99999999999999999;\n  for (int i = 1; i < c; i++) {\n    int r = p[i] - p[i - 1];\n    if (r < min) { min = r; }\n  }\n  cout << min << endl;\n}\n"
    ],
    [
        "let maxn be a constant integer with maxn = 1e6 + 7\nlet mod be a constant integer with mod = 998244353\nread the integer data\n  let c, Nig, x be integers with Nig = 1, x = 0\n  while not isdigit of c , c = getchar()\n  if c is equal to - , Nig = -1, c = getchar()\n  while isdigit of c, x is equal to ((x << 1) + (x << 3)) + (c ^ '0'), c is equal to getchar()\n  return the value of Nig * x\n\na = array of integers of length maxn\n\n  read from n\n  for i = 1 to n inclusive, read a[i]\n  let minl be a integer with minl = *min_element(a + 1, a + 1 + n)\n  let pos, ans be integers with pos = -1, ans = 0x3f3f3f3f\n  for i = 1 to n inclusive\n    if a[i] is equal to minl\n      if ~pos\n        ans is equal to minimum of ans and i - pos , pos is equal to i\n      else do the following\n        pos is equal to i\n    \n  \n  print ans and new line\n  \n\n",
        "const int maxn = 1e6 + 7;\nconst int mod = 998244353;\nint read() {\n  int c = getchar(), Nig = 1, x = 0;\n  while (!isdigit(c)) c = getchar();\n  if (c == '-') Nig = -1, c = getchar();\n  while (isdigit(c)) x = ((x << 1) + (x << 3)) + (c ^ '0'), c = getchar();\n  return Nig * x;\n}\nint a[maxn];\nint main() {\n  int n = read();\n  for (int i = 1; i <= n; i++) { a[i] = read(); }\n  int minl = *min_element(a + 1, a + 1 + n);\n  int pos = -1, ans = 0x3f3f3f3f;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == minl) {\n      if (~pos)\n        ans = min(ans, i - pos), pos = i;\n      else\n        pos = i;\n    }\n  }\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create new array of long longs a with 200050 elements\ncreate new array of long longs b with size 200050\ndeclare integer variable len with value 0\n\n  declare new integer called n\n  read n\n  for i from 0 to n exclusive, read standard input to a[i]\n  create long long minn with value 1000000009\n  for integer i = 0 to n exclusive, set minn to min of minn and a[i]\n  for integer i = 0 to n exclusive incrementing i\n    if a[i] = minn\n      assign i to b[len]\n      increment len by one\n    \n  \n  declare new long long called minnn = 200000050\n  in a for loop, change i from 1 to len exclusive, assigning min of minnn and b[i] - b[i - 1] to minnn on each loop\n  print minnn to the standard output\n  \n\n",
        "long long a[200050];\nlong long b[200050];\nint len = 0;\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  long long minn = 1000000009;\n  for (int i = 0; i < n; i++) { minn = min(minn, a[i]); }\n  for (int i = 0; i < n; i++) {\n    if (a[i] == minn) {\n      b[len] = i;\n      len++;\n    }\n  }\n  long long minnn = 200000050;\n  for (int i = 1; i < len; i++) { minnn = min(minnn, b[i] - b[i - 1]); }\n  cout << minnn << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  a, b, n, mini, ans = long long int with ans = 0\n  read n\n  for i = 0 to n\n    read a\n    increment ans\n    if i is 0 or a is less than mini\n      set mini to a\n      set ans to 0\n      set b to 0\n    else if a is mini\n      if ans is less than b or b is 0 set b to ans\n      set ans to 0\n    \n  \n  print b\n  \n\n",
        "int main() {\n  long long int a, b, n, mini, ans = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    ans++;\n    if (i == 0 || a < mini) {\n      mini = a;\n      ans = 0;\n      b = 0;\n    } else if (a == mini) {\n      if ((ans < b) || (b == 0)) { b = ans; }\n      ans = 0;\n    }\n  }\n  cout << b << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let ints n, min = INT_MAX, cnt = 0, first, last, and selisih and int array num of size 100005\n  create int has = INT_MAX and int array arrpos of size 100005\n  read n\n  for x = 1 to n\n    read num[x]\n    if num[x] is less than min, set min to num[x]\n  \n  for x = 1 to n\n    if num[x] equals min\n      if cnt is equal to 0\n        set arrpos[x] to x\n        set first to x\n      \n      if cnt equals 1\n        set arrpos[x] to x\n        set last to x\n      \n      if cnt is greater than or equal to 2\n        set first to last\n        set last to x\n        set arrpos[x] to x\n      \n      increment cnt\n    \n    if cnt is greater than or equal to 2\n      set selisih to the result of arrpos[last] - arrpos[first]\n      if selisih is less than has, set has to selisih\n    \n  \n  print has\n  \n\n",
        "int main() {\n  int n, num[100005], min = INT_MAX, cnt = 0, first, last, selisih;\n  int arrpos[100005], has = INT_MAX;\n  cin >> n;\n  for (int x = 1; x <= n; x++) {\n    cin >> num[x];\n    if (num[x] < min) { min = num[x]; }\n  }\n  for (int x = 1; x <= n; x++) {\n    if (num[x] == min) {\n      if (cnt == 0) {\n        arrpos[x] = x;\n        first = x;\n      }\n      if (cnt == 1) {\n        arrpos[x] = x;\n        last = x;\n      }\n      if (cnt >= 2) {\n        first = last;\n        last = x;\n        arrpos[x] = x;\n      }\n      cnt++;\n    }\n    if (cnt >= 2) {\n      selisih = arrpos[last] - arrpos[first];\n      if (selisih < has) { has = selisih; }\n    }\n  }\n  cout << has << endl;\n  return 0;\n}\n"
    ],
    [
        "a is a new array of integers with size 1e5 + 5\nfunction min with long long arguments a and b that returns long long\n  if a is greater than b\n    return b\n  else\n    return a\n  \n\n\n  declare integer variable n\n  read n from the user input\n  declare long long m with value 1e9 + 1\n  for integer i = 1 to n inclusive incrementing i\n    read input to a[i]\n    change m to min of m and a[i]\n  \n  declare vector of integers called ans\n  for i = 1 to n inclusive\n    if a[i] is equal to m, push i into ans\n  \n  create new integer called mins = 1e9\n  declare integer size with value length of ans - 1\n  for i from 1 to size inclusive, assign min of mins and ans[i] - ans[i - 1] to mins\n  print mins to the standard output\n  \n\n",
        "int a[(int)1e5 + 5];\nlong long min(long long a, long long b) {\n  if (a > b) {\n    return b;\n  } else {\n    return a;\n  }\n}\nint main() {\n  int n;\n  cin >> n;\n  long long m = 1e9 + 1;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    m = min(m, a[i]);\n  }\n  vector<int> ans;\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == m) { ans.push_back(i); }\n  }\n  int mins = 1e9;\n  int size = ans.size() - 1;\n  for (int i = 1; i <= size; i++) { mins = min(mins, ans[i] - ans[i - 1]); }\n  cout << mins << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  t, n, i, x, pp, count, flag, dis, min, sum = integers with flag = 0, dis = 0, min = 0\n  v = vector of integer\n  it = iterator vector of integer\n  read n\n  while decrement n\n    read x\n    append x in v\n  \n  t = pointer min_element on v.begin() and v.end()\n  for i = 0 to v.size() exclusive\n    if v[i] is t\n      if flag is not 0\n        dis = i - pp\n        if min is 0 and dis is not 0\n          min = dis\n        else if min is not 0 and min > dis\n          min = dis\n      \n      increment flag\n      pp = i\n    \n  \n  print min\n  \n\n",
        "int main() {\n  int t, n, i, x, pp, count, flag = 0, dis = 0, min = 0, sum;\n  vector<int> v;\n  vector<int>::iterator it;\n  cin >> n;\n  while (n--) {\n    cin >> x;\n    v.push_back(x);\n  }\n  t = *min_element(v.begin(), v.end());\n  for (i = 0; i < v.size(); i++) {\n    if (v[i] == t) {\n      if (flag != 0) {\n        dis = i - pp;\n        if (min == 0 && dis != 0)\n          min = dis;\n        else if (min != 0 && min > dis)\n          min = dis;\n      }\n      flag++;\n      pp = i;\n    }\n  }\n  cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer x\n  read x from the input\n  create new array of integers ara with x elements\n  create new integer maxn\n  create new set of integers s\n  set maxn to 1000000009\n  declare new integer variable d with value 1000000009\n  create boolean variable with name b with value 0\n  in the for loop, change integer w from 0 to x exclusive\n    read variable ara[w] from the input\n    if ara[w] is less than maxn, change maxn to ara[w]\n  \n  for w from 0 to x exclusive\n    if ara[w] = maxn, insert w into set s\n  \n  i is a new iterator for the set of integers\n  j is a new iterator for the set of integers pointed to the end of s\n  decrement j\n  declare ints l and m\n  move i through s in a for loop\n    if i is equal to j, skip the rest of the loop\n    change m to the value pointed by i\n    increment i\n    change l to the value pointed by i\n    decrement i\n    if l - m is less than d, set d to (l - m)\n  \n  print d to the standard output\n  \n\n",
        "int main() {\n  int x;\n  cin >> x;\n  int ara[x];\n  int maxn;\n  set<int> s;\n  maxn = 1000000009;\n  int d = 1000000009;\n  bool b = 0;\n  for (int w = 0; w < x; w++) {\n    cin >> ara[w];\n    if (ara[w] < maxn) { maxn = ara[w]; }\n  }\n  for (int w = 0; w < x; w++) {\n    if (ara[w] == maxn) { s.insert(w); }\n  }\n  set<int>::iterator i;\n  set<int>::iterator j = s.end();\n  j--;\n  int l, m;\n  for (i = s.begin(); i != s.end(); i++) {\n    if (i == j) continue;\n    m = *i;\n    i++;\n    l = *i;\n    i--;\n    if (l - m < d) d = (l - m);\n  }\n  cout << d << endl;\n  return 0;\n}\n"
    ],
    [
        "a is a new array of integers with 300000 elements\n\n  create ints n, m1, m2, minn and minn2 with m1 and m2 = 0, minn2 = 9999999 and minn = 9999999999\n  read standard input to n\n  for i from 1 to n inclusive incrementing i\n    read input to a[i]\n    if minn is greater than a[i], assign a[i] to minn\n  \n  start for loop from i = 1 to n inclusive on each loop\n    if a[i] is equal to minn\n      if m1 is equal to 0\n        change m1 to i\n      else if m2 = 0\n        assign i to m2\n        if minn2 is greater than m2 - m1, change minn2 to m2 - m1\n      else\n        change m1 to m2\n        assign i to m2\n        if minn2 is greater than m2 - m1, change minn2 to m2 - m1\n      \n    \n  \n  print minn2 to the standard output\n  \n\n",
        "int a[300000];\nint main() {\n  int n, m1 = 0, m2 = 0, minn = 9999999999, minn2 = 9999999;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> a[i];\n    if (minn > a[i]) minn = a[i];\n  }\n  for (int i = 1; i <= n; i++) {\n    if (a[i] == minn) {\n      if (m1 == 0)\n        m1 = i;\n      else if (m2 == 0) {\n        m2 = i;\n        if (minn2 > m2 - m1) minn2 = m2 - m1;\n      } else {\n        m1 = m2;\n        m2 = i;\n        if (minn2 > m2 - m1) minn2 = m2 - m1;\n      }\n    }\n  }\n  cout << minn2 << endl;\n  return 0;\n}\n"
    ],
    [
        "nums is a new vector of integers\n\n  declare int variables n, a, last and dist\n  create integer variable min with value INT_MAX\n  mindist is a new integer with value INT_MAX\n  read n from the user input\n  for i from 0 to n exclusive\n    read input to a\n    push a to the end of nums\n    if a is less than min, set min to a\n  \n  in a for loop, change i from 0 to n exclusive\n    if nums[i] = min\n      change last to i\n      break\n    \n  \n  for i from last + 1 to n exclusive incrementing i\n    if nums[i] = min\n      change dist to i - last\n      if dist is less than mindist, change mindist to dist\n      assign i to last\n    \n  \n  print mindist to the standard output\n\n",
        "vector<int> nums;\nint main() {\n  int n, a, last, dist;\n  int min = INT_MAX;\n  int mindist = INT_MAX;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a;\n    nums.push_back(a);\n    if (a < min) min = a;\n  }\n  for (int i = 0; i < n; i++) {\n    if (nums[i] == min) {\n      last = i;\n      break;\n    }\n  }\n  for (int i = last + 1; i < n; i++) {\n    if (nums[i] == min) {\n      dist = i - last;\n      if (dist < mindist) mindist = dist;\n      last = i;\n    }\n  }\n  cout << mindist << endl;\n}\n"
    ],
    [
        "\n  declare integer variable n and an array of integers ar with size 100010\n  read n\n  read input into ar n times\n  declare integer variable mn = ar[0]\n  for i from 0 to n exclusive\n    if mn is greater than ar[i], assign ar[i] to mn\n  \n  declare integers p1, p2 and d with p1 and p2 = -1\n  create int mnd = n\n  for integer i = 0 to n exclusive\n    if ar[i] = mn\n      assign i to p1\n      if p2 != -1\n        if mnd is greater than (p1 - p2), change mnd to p1 - p2\n      \n      assign p1 to p2\n    \n  \n  print mnd\n  \n\n",
        "int main() {\n  int n, ar[100010];\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> ar[i]; }\n  int mn = ar[0];\n  for (int i = 0; i < n; i++) {\n    if (mn > ar[i]) mn = ar[i];\n  }\n  int p1 = -1, p2 = -1, d;\n  int mnd = n;\n  for (int i = 0; i < n; i++) {\n    if (ar[i] == mn) {\n      p1 = i;\n      if (p2 != -1) {\n        if (mnd > (p1 - p2)) { mnd = p1 - p2; }\n      }\n      p2 = p1;\n    }\n  }\n  cout << mnd << endl;\n  return 0;\n}\n"
    ],
    [
        "n, mn, skr, mnd = integers with mn = 1e9 + 7, skr = 1e9 + 7, mnd = 1e6\nin the function masuk that takes integer idx\n  if idx < n\n    ai = integer\n    read ai\n    mn = min of mn and ai\n    masuk of idx + 1\n    if ai is mn\n      mnd = min of mnd and skr - idx\n      skr = idx\n    \n  \n\n\n  read n\n  masuk of 0\n  print mnd\n  \n\n",
        "int n, mn = 1e9 + 7, skr = 1e9 + 7, mnd = 1e6;\nvoid masuk(int idx) {\n  if (idx < n) {\n    int ai;\n    cin >> ai;\n    mn = min(mn, ai);\n    masuk(idx + 1);\n    if (ai == mn) {\n      mnd = min(mnd, skr - idx);\n      skr = idx;\n    }\n  }\n}\nint main() {\n  cin >> n;\n  masuk(0);\n  cout << mnd << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  t,n,i,x,pp,count,sum=int, flag,dis,min=0\n  v=vector of int\n  it=iterator on vector of int\n  read n\n  while decremented value of n is not zero\n    read x\n    put x at end of v\n  \n  t=item of v with min value\n  for i=0 to size of v exclusive\n    if v[i] is t\n      if flag != 0\n        dis=i-pp\n        if min is 0 and dis is not 0\n          min=dis\n        else if min is not 0 and min>dis\n          min=dis\n      \n      increment flag\n      pp=i\n    \n  \n  print min\n  \n\n",
        "int main() {\n  int t, n, i, x, pp, count, flag = 0, dis = 0, min = 0, sum;\n  vector<int> v;\n  vector<int>::iterator it;\n  cin >> n;\n  while (n--) {\n    cin >> x;\n    v.push_back(x);\n  }\n  t = *min_element(v.begin(), v.end());\n  for (i = 0; i < v.size(); i++) {\n    if (v[i] == t) {\n      if (flag != 0) {\n        dis = i - pp;\n        if (min == 0 && dis != 0)\n          min = dis;\n        else if (min != 0 && min > dis)\n          min = dis;\n      }\n      flag++;\n      pp = i;\n    }\n  }\n  cout << min << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, minix, p, q\n  read n\n  create vector int v(n)\n  minix = INT_MAX\n  for i=0 to n exclusive\n    read v[i]\n    set minix to min of minix and v[i]\n  \n  assign -999999 to p\n  set q to INT_MAX\n  for i=0 to n exclusive\n    if v[i] = minix\n      set q = min of q and i - p\n      p=i\n    \n  \n  print q\n  \n\n",
        "int main() {\n  int n, minix, p, q;\n  cin >> n;\n  vector<int> v(n);\n  minix = INT_MAX;\n  for (int i = 0; i < n; i++) {\n    cin >> v[i];\n    minix = min(minix, v[i]);\n  }\n  p = -999999;\n  q = INT_MAX;\n  for (int i = 0; i < n; i++) {\n    if (v[i] == minix) {\n      q = min(q, i - p);\n      p = i;\n    }\n  }\n  cout << q << endl;\n  return 0;\n}\n"
    ],
    [
        "create const int oo = 1e9\n\n  declare int variable n\n  read n\n  declare vector of integers called a with n elements\n  read n elements from the input into a\n  create int mn = pointer to the min element of a\n  create integer ans = oo\n  for i = 0 and prev = -oo while i < n, incrementing i\n    if a[i] is equal to mn\n      set ans to min of ans and i - prev\n      set prev to i\n    \n  print ans and '\\n'\n  \n\n",
        "const int oo = 1e9;\nint main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) cin >> a[i];\n  int mn = *min_element(a.begin(), a.end());\n  int ans = oo;\n  for (int i = 0, prev = -oo; i < n; i++)\n    if (a[i] == mn) {\n      ans = min(ans, i - prev);\n      prev = i;\n    }\n  cout << ans << '\\n';\n  return 0;\n}\n"
    ],
    [
        "\n  declare vector of long longs v\n  create new vector of long longs v1\n  declare long longs i, j, n, ans, min, t and flag with min = 1000000002\n  read input to n\n  for i = 0 to n exclusive\n    declare long long variable x\n    read from the input to x\n    push x to the back of v\n    if x is less than min, set min to x\n  \n  for i from 0 to n exclusive\n    if min = v[i], push i into v1\n  \n  assign 1000000002 to min\n  start for loop from i = 1 to length of v1 exclusive\n    if (v1[i] - v1[i - 1]) is less than min, assign v1[i] - v1[i - 1] to min\n  \n  print min to the standard output\n\n",
        "int main() {\n  vector<long long> v;\n  vector<long long> v1;\n  long long i, j, n, ans, min = 1000000002, t, flag;\n  cin >> n;\n  for (i = 0; i < n; i++) {\n    long long x;\n    cin >> x;\n    v.push_back(x);\n    if (x < min) { min = x; }\n  }\n  for (i = 0; i < n; i++) {\n    if (min == v[i]) { v1.push_back(i); }\n  }\n  min = 1000000002;\n  for (i = 1; i < v1.size(); i++) {\n    if ((v1[i] - v1[i - 1]) < min) { min = (v1[i] - v1[i - 1]); }\n  }\n  cout << min << endl;\n}\n"
    ],
    [
        "arr = array of integers of length 1000000\n\n  let n be a integer\n  read n\n  let minimum, answer be integers wih answer = (int)1e9\n  create a vector of integers with name occurrences\n  for i = 0 to n exclusive\n    read arr[i]\n    if not i , minimum is equal to arr[0]\n    minimum is equal to minimum of minimum, arr[i]\n  \n  for i = 0 to n exclusive\n    if arr[i] is equal to minimum , push i into occurrences from back\n  for i = 1 to length of occurrences exclusive , answer = minimum of answer, occurrences[i] - occurrences[i - 1]\n  print answer and newline\n  \n\n",
        "int arr[1000000];\nint main() {\n  int n;\n  cin >> n;\n  int minimum, answer = (int)1e9;\n  vector<int> occurrences;\n  for (int i = 0; i < n; i++) {\n    cin >> arr[i];\n    if (!i) minimum = arr[0];\n    minimum = min(minimum, arr[i]);\n  }\n  for (int i = 0; i < n; i++)\n    if (arr[i] == minimum) occurrences.push_back(i);\n  for (int i = 1; i < occurrences.size(); i++) answer = min(answer, occurrences[i] - occurrences[i - 1]);\n  cout << answer << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n, i = int\n  a = int array of size 100005\n  loop while reading n\n    Min = int with Min = 0x7fffffff\n    for i = 1 to n inclusive\n      read a[i]\n      set Min to min of a[i] and Min\n    \n    ans = int with ans = 0x7fffffff\n    t = int with t = -1\n    for i = 1 to n inclusive\n      if a[i] is Min\n        set t to i\n        break\n      \n    \n    for i = t + 1 to n inclusive\n      if a[i] is Min\n        set ans to min of i - t and ans\n        set t to i\n      \n    \n    print ans\n  \n  \n\n",
        "int main() {\n  int n, i;\n  int a[100005];\n  while (cin >> n) {\n    int Min = 0x7fffffff;\n    for (i = 1; i <= n; i++) {\n      cin >> a[i];\n      Min = min(a[i], Min);\n    }\n    int ans = 0x7fffffff;\n    int t = -1;\n    for (i = 1; i <= n; i++) {\n      if (a[i] == Min) {\n        t = i;\n        break;\n      }\n    }\n    for (i = t + 1; i <= n; i++) {\n      if (a[i] == Min) {\n        ans = min(i - t, ans);\n        t = i;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "declare new constant integer called maxn = 1e7 + 10\na is a new array of integers with maxn elements\nn is a new integer variable\ncreate new integer variable mini = 1e9 + 10\n\n  read from the input to n\n  start for loop from i = 0 to n exclusive\n    read from the input to a[i]\n    if a[i] is less than mini, assign a[i] to mini\n  \n  create new vector of integers vec\n  start for loop from i = 0 to n exclusive\n    if mini = a[i], add i to the end of vec\n  \n  assign n to mini\n  for i from 0 to length of vec - 1 exclusive, assign min of mini and vec[i + 1] - vec[i] to mini\n  print mini\n  \n\n",
        "const int maxn = 1e7 + 10;\nint a[maxn];\nint n;\nint mini = 1e9 + 10;\nint main() {\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n    if (a[i] < mini) mini = a[i];\n  }\n  vector<int> vec;\n  for (int i = 0; i < n; i++) {\n    if (mini == a[i]) { vec.push_back(i); }\n  }\n  mini = n;\n  for (int i = 0; i < vec.size() - 1; i++) { mini = min(mini, vec[i + 1] - vec[i]); }\n  cout << mini << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  r, c = integers\n  flag = integer with flag = -1\n  read r, c\n  v = 2d character array of size [r][c]\n  empt, wolf, sheep = integers with empt = 0, wolf = 0, sheep = 0\n  p = character\n  for i = 0 to r exclusive\n    for j = 0 to c exclusive\n      read p\n      if p is .\n        v[i][j] = D\n      else\n        v[i][j] = p\n    \n  \n  for i = 0 to r exclusive\n    for j = 0 to c exclusive\n      if v[i][j] is S\n        if v[i - 1][j] is W and i - 1 >= 0, flag = 0\n        if v[i + 1][j] is W and i + 1 < r, flag = 0\n        if v[i][j + 1] is W and j + 1 < c, flag = 0\n        if v[i][j - 1] is W and j - 1 >= 0, flag = 0\n      \n    \n  \n  if flag is 0\n    print NO\n  else\n    print YES\n    for i = 0 to r exclusive\n      for j = 0 to c exclusive, print v[i][j]\n      print new line\n    \n  \n\n",
        "int main() {\n  int r, c;\n  int flag = -1;\n  cin >> r >> c;\n  char v[r][c];\n  int empt = 0, wolf = 0, sheep = 0;\n  char p;\n  for (int i = 0; i < r; i++) {\n    for (int j = 0; j < c; j++) {\n      cin >> p;\n      if (p == '.')\n        v[i][j] = 'D';\n      else\n        v[i][j] = p;\n    }\n  }\n  for (int i = 0; i < r; i++) {\n    for (int j = 0; j < c; j++) {\n      if (v[i][j] == 'S') {\n        if (v[i - 1][j] == 'W' && i - 1 >= 0) flag = 0;\n        if (v[i + 1][j] == 'W' && i + 1 < r) flag = 0;\n        if (v[i][j + 1] == 'W' && j + 1 < c) flag = 0;\n        if (v[i][j - 1] == 'W' && j - 1 >= 0) flag = 0;\n      }\n    }\n  }\n  if (flag == 0)\n    cout << \"NO\" << endl;\n  else {\n    cout << \"YES\" << endl;\n    for (int i = 0; i < r; i++) {\n      for (int j = 0; j < c; j++) { cout << v[i][j]; }\n      cout << endl;\n    }\n  }\n}\n"
    ],
    [
        "create long long a and b\ncreate char s[1000][1000]\n\n  read a and b\n  for i=0 to a exclusive\n    for j=0 to b exclusive, read cin >> s[i][j]\n  \n  for i=0 to a exclusive\n    for j=0 to b exclusive\n      if s[i][j] = S\n        if s[i][j + 1] = W\n          print NO\n          \n        \n        if s[i][j - 1] equal to W\n          print NO\n          \n        \n        s[i + 1][j] = W\n          print NO\n          \n        \n        if s[i - 1][j] = W\n          print NO and a newline\n          \n        \n      \n    \n  \n  print YES\n  for i=0 to a exclusive\n    for j=0 to b exclusive\n      if s[i][j] = ., set s[i][j] to D\n      print s[i][j]\n    \n    print a newline\n  \n\n",
        "long long a, b;\nchar s[1000][1000];\nint main() {\n  cin >> a >> b;\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) { cin >> s[i][j]; }\n  }\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) {\n      if (s[i][j] == 'S') {\n        if (s[i][j + 1] == 'W') {\n          cout << \"NO\" << endl;\n          return 0;\n        }\n        if (s[i][j - 1] == 'W') {\n          cout << \"NO\" << endl;\n          return 0;\n        }\n        if (s[i + 1][j] == 'W') {\n          cout << \"NO\" << endl;\n          return 0;\n        }\n        if (s[i - 1][j] == 'W') {\n          cout << \"NO\" << endl;\n          return 0;\n        }\n      }\n    }\n  }\n  cout << \"YES\" << endl;\n  for (int i = 0; i < a; i++) {\n    for (int j = 0; j < b; j++) {\n      if (s[i][j] == '.') { s[i][j] = 'D'; }\n      cout << s[i][j];\n    }\n    cout << endl;\n  }\n}\n"
    ],
    [
        "declare int array freq with size 1005\n\n  declare int variables hh and mm\n  declare double variables h, d, c and n\n  declare doubles cost1 and cost2\n  read hh and mm\n  read input to h, d, c and n\n  declare int time = (hh * 60) + mm\n  declare int buns = 0\n  declare int hunger = h\n  while hunger > 0\n    subtract n from hunger\n    increment buns\n  \n  assign buns * c to cost1\n  if time is less than 1200\n    set hunger to h + ((1200 - time) * d)\n  else\n    change hunger to h\n  change buns to 0\n  while hunger > 0\n    decrease hunger by n\n    increment buns\n  \n  decrease c by c * (20.0 / 100)\n  change cost2 to c * buns\n  change decimal precision of the output to 5, set showpoint and fixed flags and print the min of cost2 and cost1\n\n",
        "int freq[1005];\nint main() {\n  int hh, mm;\n  double h, d, c, n;\n  double cost1, cost2;\n  cin >> hh >> mm;\n  cin >> h >> d >> c >> n;\n  int time = (hh * 60) + mm;\n  int buns = 0;\n  int hunger = h;\n  while (hunger > 0) {\n    hunger -= n;\n    buns++;\n  }\n  cost1 = buns * c;\n  if (time < 1200)\n    hunger = h + ((1200 - time) * d);\n  else\n    hunger = h;\n  buns = 0;\n  while (hunger > 0) {\n    hunger -= n;\n    buns++;\n  }\n  c -= c * (20.0 / 100);\n  cost2 = c * buns;\n  cout << setprecision(5) << showpoint << fixed << min(cost2, cost1) << endl;\n}\n"
    ],
    [
        "create vector integer v\ncreate integer arrays num, value, with num size 51, value size 51\n\n  create integers n, index with index = 1\n  read n\n  for i = 0 to n exclusive, read num[i]\n  add element num[n-1] to end of v\n  for i = n - 2 to 0 inclusive, decrementing i\n    create integers j, flag with j = 0, flag = 0\n    while j is less than size of v\n      if num[i] is v[j]\n        set flag to 1\n        break loop\n      \n      increment j\n    \n    if not flag, add element num[i] to end of v\n  \n  print size of v print newline\n  print v[size of v - 1]\n  for i = size of v - 2 to 0 inclusive, decrementing i, print \" \" print v[i]\n  print newline\n\n",
        "vector<int> v;\nint num[51], value[51];\nint main() {\n  int n, index = 1;\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> num[i]; }\n  v.push_back(num[n - 1]);\n  for (int i = n - 2; i >= 0; i--) {\n    int j = 0, flag = 0;\n    while (j < v.size()) {\n      if (num[i] == v[j]) {\n        flag = 1;\n        break;\n      }\n      j++;\n    }\n    if (!flag) v.push_back(num[i]);\n  }\n  cout << v.size() << endl;\n  cout << v[v.size() - 1];\n  for (int i = v.size() - 2; i >= 0; i--) cout << \" \" << v[i];\n  cout << endl;\n}\n"
    ],
    [
        "create integer array a with size 555\ncreate boolean array vis with size 1005\ncreate integer vector s\n\n  create integer n, tot with tot = 0\n  read n\n  for i = 0 to n exclusive, read a[i]\n  for i = n - 1 to 0 inclusive, decrementing i\n    if vis[a[i]] is false\n      add element a[i] to end of s\n      set vis[a[i]] to true\n    \n  \n  create integer len with len = size of s\n  print len print newline\n  for i = len - 1 to 0 exclusive, decrementing i, print s[i] print \" \"\n  print s[0] print newline\n  \n\n",
        "int a[55];\nbool vis[1005];\nvector<int> s;\nint main() {\n  int n, tot = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = n - 1; i >= 0; i--) {\n    if (!vis[a[i]]) {\n      s.push_back(a[i]);\n      vis[a[i]] = true;\n    }\n  }\n  int len = s.size();\n  cout << len << endl;\n  for (int i = len - 1; i > 0; i--) cout << s[i] << \" \";\n  cout << s[0] << endl;\n  return 0;\n}\n"
    ],
    [
        "create integer array num of size 100\ncreate integer array nn of size 100\ncreate integer cnt with cnt = 0\ncreate integer cc1 with cc1 = 0\ndeclare num_find with integer in as argument, returning boolean\n  for i = 0 to cnt exclusive\n    if num[i] is in, return true from function\n  \n  return false from function\n\n\n  create integer N\n  read N\n  for i = 0 to N exclusive\n    read nn[cc1]\n    increment cc1\n  \n  for i = N - 1 to 0 inclusive, decrement i\n    create integer tmp\n    set tmp to nn[i]\n    if result of num_find with tmp as argument is false\n      set num[cnt] is tmp\n      increment cnt\n    \n  \n  print cnt print newlien\n  for i = cnt - 1 to 0 exclusive, decrementing i, print num[i] print \" \"\n  print num[0] print newline\n\n",
        "int num[100];\nint nn[100];\nint cnt = 0;\nint cc1 = 0;\nbool num_find(int in) {\n  for (int i = 0; i < cnt; i++) {\n    if (num[i] == in) return true;\n  }\n  return false;\n}\nint main() {\n  int N;\n  cin >> N;\n  for (int i = 0; i < N; i++) {\n    cin >> nn[cc1];\n    cc1++;\n  }\n  for (int i = N - 1; i >= 0; i--) {\n    int tmp;\n    tmp = nn[i];\n    if (!num_find(tmp)) {\n      num[cnt] = tmp;\n      cnt++;\n    }\n  }\n  cout << cnt << endl;\n  for (int i = cnt - 1; i > 0; i--) cout << num[i] << \" \";\n  cout << num[0] << endl;\n}\n"
    ],
    [
        "declare integers n and t, integer arrays a and b with 100 elements and an array of integers visit with 1010 elements\n\n  while reading n\n    call memset with arguments a, 0 and sizeof(a)\n    call memset with arguments b, 0 and sizeof(b)\n    call memset with arguments visit, 0 and sizeof(visit)\n    t = 0\n    for i = 0 to n exclusive read a[i]\n    declare integer variable p = n\n    for i = n - 1 to 0 inclusive counting down\n      if visit[a[i]] is greater than 0\n        decrement p\n        continue the loop\n      \n      set b[t] to a[i] and increment t\n      increase visit[a[i]]\n    \n    print p\n    for i = t - 1 to 0 inclusive counting down\n      print b[i]\n      if i != 0, print \" \"\n    \n    print new line\n  \n\n",
        "int n, a[100], b[100], visit[1010], t;\nint main() {\n  while (cin >> n) {\n    memset(a, 0, sizeof(a));\n    memset(b, 0, sizeof(b));\n    memset(visit, 0, sizeof(visit));\n    t = 0;\n    for (int i = 0; i < n; i++) cin >> a[i];\n    int p = n;\n    for (int i = n - 1; i >= 0; i--) {\n      if (visit[a[i]] > 0) {\n        p--;\n        continue;\n      }\n      b[t++] = a[i];\n      visit[a[i]]++;\n    }\n    cout << p << endl;\n    for (int i = t - 1; i >= 0; i--) {\n      cout << b[i];\n      if (i != 0) cout << \" \";\n    }\n    cout << endl;\n  }\n}\n"
    ],
    [
        "\n  create integer arrays a, b with a size 5000, b size 5000\n  create integer array flag of size 5000\n  set bytes from flag to size of flag to value true\n  create integer n\n  read n\n  for i = 0 to n exclusive, read a[i]\n  create integer len with len = 0\n  for i = n - 1 to 0 inclusive, decrementing i\n    if flag[a[i]] is true\n      increment len\n      set b[len] to a[i]\n      set flag[a[i]] to false\n    \n  \n  print len print newline\n  for i = len to 1 inclusive, decrementing i\n    if i is not 1\n      print b[i] print ' '\n    else\n      print b[i] print newline\n  \n\n",
        "int main() {\n  int a[5000], b[5000];\n  int flag[5000];\n  memset(flag, true, sizeof(flag));\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  int len = 0;\n  for (int i = n - 1; i >= 0; i--) {\n    if (flag[a[i]]) {\n      len++;\n      b[len] = a[i];\n      flag[a[i]] = false;\n    }\n  }\n  cout << len << endl;\n  for (int i = len; i >= 1; i--)\n    if (i != 1)\n      cout << b[i] << ' ';\n    else\n      cout << b[i] << endl;\n  return 0;\n}\n"
    ],
    [
        "let n be integer\nA = array of integers of size 60\nlet sum be integer\nlet B be an array of integers of size 60\n\n  read n\n  sum = n\n  create integer t with value 0\n  read n elements from the input to A\n  for integer i = 0 to n exclusive\n    for integer x = i + 1 to n exclusive\n      if A[i] = A[x]\n        assign value of 0 to the A[i]\n        assign value of i to the B[t]\n        increase t\n        stop the loop\n      \n    \n  \n  for i = t - 1 to 0\n    decrease sum by one\n    for integer x = B[i] to n exclusive\n      A[x] = A[x + 1]\n      A[x + 1] = 0\n    \n  \n  print sum and a new line\n  for i = 0 to sum exclusive\n    print A[i]\n    if i != sum - 1, print \" \"\n  \n  print new line\n\n",
        "int n;\nint A[60];\nint sum;\nint B[60];\nint main() {\n  cin >> n;\n  sum = n;\n  int t = 0;\n  for (int i = 0; i < n; i++) { cin >> A[i]; }\n  for (int i = 0; i < n; i++) {\n    for (int x = i + 1; x < n; x++) {\n      if (A[i] == A[x]) {\n        A[i] = 0;\n        B[t] = i;\n        t++;\n        break;\n      }\n    }\n  }\n  for (int i = t - 1; i >= 0; i--) {\n    sum--;\n    for (int x = B[i]; x < n; x++) {\n      A[x] = A[x + 1];\n      A[x + 1] = 0;\n    }\n  }\n  cout << sum << endl;\n  for (int i = 0; i < sum; i++) {\n    cout << A[i];\n    if (i != sum - 1) { cout << \" \"; }\n  }\n  cout << endl;\n}\n"
    ],
    [
        "\n  let n and sum be integers, with sum = 0; a and b are arrays of integers with size 50 and v is an array of integers with size 1001 filled with 0\n  read n\n  read n elements into a\n  for integer i = n - 1 to 0 inclusive counting down\n    if v[a[i]] is 0\n      set value of v[a[i]] to 1\n      set value of b[sum] to a[i]\n      increment sum\n    \n  print sum and a new line\n  for i = sum - 1 to 0 exclusive counting down, print b[i] and ' '\n  print b[0] and a new line\n  \n\n",
        "int main() {\n  int a[50], b[50], v[1001] = {0}, n, sum = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  for (int i = n - 1; i >= 0; i--)\n    if (!v[a[i]]) {\n      v[a[i]] = 1;\n      b[sum] = a[i];\n      sum++;\n    }\n  cout << sum << endl;\n  for (int i = sum - 1; i > 0; i--) cout << b[i] << ' ';\n  cout << b[0] << endl;\n  return 0;\n}\n"
    ],
    [
        "create constant integer Max with Max = 1e3 + 10\ncreate integer arrays a, ans, flag, with a size Max, ans size Max, flag size Max\n\n  create integers n, tot with tot = 0\n  read n\n  for i = 1 to n inclusive, read a[i]\n  for i = n to 1 inclusive, decrementing i\n    if not flag[a[i]]\n      set flag[a[i]] to 1\n      set ans[increment tot] to a[i]\n    \n  \n  print tot print newline\n  for i = tot - 1 to 0 inclusive, decrementing i\n    print ans[i]\n    if i is not 0 print \" \"\n  \n  print newline\n  \n\n",
        "const int Max = 1e3 + 10;\nint a[Max], ans[Max], flag[Max];\nint main() {\n  int n, tot = 0;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  for (int i = n; i >= 1; i--) {\n    if (!flag[a[i]]) {\n      flag[a[i]] = 1;\n      ans[tot++] = a[i];\n    }\n  }\n  cout << tot << endl;\n  for (int i = tot - 1; i >= 0; i--) {\n    cout << ans[i];\n    if (i != 0) cout << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long integer n\n  while read n\n    if n is 0\n      print 0 print newline\n    else if ( n + 1 ) % 2 is 0\n      print ( n + 1 ) / 2 print newline\n    else\n      print n + 1 print newline\n  \n  \n\n",
        "int main() {\n  long long int n;\n  while (cin >> n) {\n    if (n == 0)\n      cout << 0 << endl;\n    else if ((n + 1) % 2 == 0)\n      cout << (n + 1) / 2 << endl;\n    else\n      cout << n + 1 << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  create long long int n\n  read n\n  if n = 0\n    print n and a newline\n  else\n    if n is even\n      print n + 1 and a newline\n    otherwise\n      print (n + 1) / 2 and a newline\n    \n  \n\n",
        "int main() {\n  long long int n;\n  cin >> n;\n  if (n == 0) {\n    cout << n << \"\\n\";\n  } else {\n    if (n % 2 == 0) {\n      cout << n + 1 << \"\\n\";\n    } else {\n      cout << (n + 1) / 2 << \"\\n\";\n    }\n  }\n}\n"
    ],
    [
        "\n  declare int64_t N\n  read N\n  declare int64_t ans = 0 if N = 0, (N + 1) / 2 if N is even, or N + 1 if N is odd\n  print ans\n  \n\n",
        "int main() {\n  int64_t N;\n  cin >> N;\n  int64_t ans = N == 0 ? 0 : (N % 2 ? (N + 1) / 2 : N + 1);\n  cout << ans << endl;\n  return 0;\n}\n"
    ],
    [
        "create long long n\n\n  read n\n  if n = 0\n    print 0\n  else if n is even\n    print n+1\n  otherwise\n    print (n+1)/2 and a newline\n  \n\n",
        "long long n;\nint main() {\n  cin >> n;\n  if (n == 0)\n    cout << 0 << endl;\n  else if (n % 2 == 0)\n    cout << n + 1 << endl;\n  else\n    cout << (n + 1) / 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n =integer\n  Read n\n  if (n + 1) modulo 2 is equal to 0\n    print (n + 1) / 2 and a new line\n  else do the following\n    if n is equal to 0\n      print 0 and a new line\n    else do the following\n      print n + 1 and a new line\n    \n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  if ((n + 1) % 2 == 0) {\n    cout << (n + 1) / 2 << endl;\n  } else {\n    if (n == 0) {\n      cout << 0 << endl;\n    } else {\n      cout << n + 1 << endl;\n    }\n  }\n}\n"
    ],
    [
        "\n  let n be a unsigned long integer\n  read n\n  increase n value by 1\n  if (n modulus 2 is equal to 0)\n    print n / 2 and newline\n  else if (n is equal to 1)\n    print 0 and newline\n  else do the following\n    print n and newline\n\n",
        "int main() {\n  unsigned long long int n;\n  cin >> n;\n  n++;\n  if (n % 2 == 0)\n    cout << n / 2 << endl;\n  else if (n == 1)\n    cout << 0 << endl;\n  else\n    cout << n << endl;\n}\n"
    ],
    [
        "integer function gcd with integer arguments a and b\n  if b = 0\n    return a\n  else\n    call gcd with arguments b and a % b\n\n\n  declare long long integer variable n\n  read n and keep looping\n    increase n by one\n    if n = 1\n      print \"0\"\n    else if n is even\n      print n / 2\n    else\n      print n\n    print new line\n  \n\n",
        "int gcd(int a, int b) {\n  if (b == 0)\n    return a;\n  else\n    gcd(b, a % b);\n}\nint main() {\n  long long int n;\n  while (cin >> n) {\n    n++;\n    if (n == 1)\n      cout << \"0\";\n    else if (n % 2 == 0)\n      cout << n / 2;\n    else\n      cout << n;\n    cout << endl;\n  }\n}\n"
    ],
    [
        "\n  declare long long n\n  read n\n  if n = 0\n    print 0 and \"\\n\"\n    \n  \n  if n = 1\n    print 1 and \"\\n\"\n    \n  \n  if odd is greater than even\n    print (n + 1) / 2 and \"\\n\"\n  else\n    print n + 1 and \"\\n\"\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  if (n == 0) {\n    cout << 0 << \"\\n\";\n    return 0;\n  }\n  if (n == 1) {\n    cout << 1 << \"\\n\";\n    return 0;\n  }\n  if (n % 2 == 1)\n    cout << (n + 1) / 2 << \"\\n\";\n  else\n    cout << n + 1 << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  create long long n\n  read n\n  if n is equal to 0\n    print 0\n    \n  \n  if n is even\n    print n+1 and a newline\n  else\n    print (n+1)/2\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  if (n == 0) {\n    cout << 0 << endl;\n    return 0;\n  }\n  if (n % 2 == 0)\n    cout << n + 1 << endl;\n  else\n    cout << (n + 1) / 2 << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  n = long long\n  read n\n  print if not n then 0 else if n & 1 then (n + 1) >> 1 else n + 1\n  \n\n",
        "int main() {\n  long long n;\n  cin >> n;\n  cout << (!n ? 0 : n & 1 ? (n + 1) >> 1 : n + 1) << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create long long int s, n, i, j, p, h, set h to 0\n  read n\n  if n equal to 0\n    print 0\n  else if n is even\n    print n +1\n  else\n    print (n+1)/2 and a newline\n\n",
        "int main() {\n  long long int s, n, i, j, p, h = 0;\n  cin >> n;\n  if (n == 0)\n    cout << \"0\" << endl;\n  else if (n % 2 == 0)\n    cout << n + 1 << endl;\n  else\n    cout << (n + 1) / 2 << endl;\n}\n"
    ],
    [
        "create long longs n, p, b and q\nlong long function gcd with long long arguments a and b\n  return a if b = 0\n  return gcd(b, a % b)\n\n\n  read n\n  decrement n and loop further, while n > 0\n    read from the input to p, q and b\n    declare long long variable tmp = gcd(p,q)\n    divide p by tmp\n    divide q by tmp\n    create long long div = gcd of b and q\n    while div = (gcd(b, q) != 1)\n      while q % div is 0, divide q by div\n    if q is 1\n      print \"Finite\"\n    else\n      print \"Infinite\"\n  \n  \n\n",
        "long long n, p, b, q;\nlong long gcd(long long a, long long b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\nint main() {\n  cin >> n;\n  while (n--) {\n    cin >> p >> q >> b;\n    long long tmp = gcd(p, q);\n    p /= tmp;\n    q /= tmp;\n    long long div = gcd(b, q);\n    while ((div = gcd(b, q)) != 1)\n      while (q % div == 0) q /= div;\n    if (q == 1)\n      cout << \"Finite\" << endl;\n    else\n      cout << \"Infinite\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "long long function gcd with long long arguments a and b\n  while b > 0\n    a = a modulo b\n    swap a and b\n  \n  return a\n\ndeclare string sy = \"Finite\\n\"\ndeclare string sn = \"Infinite\\n\"\ncreate map m of long long pairs to chars\nvoid function solve\n  create int n\n  read n\n  loop i from 0 to n exclusive\n    create long longs p, q and b\n    read input to p, q and b\n    p = p modulo q\n    declare long long g = gcd of p and q\n    divide p by g\n    divide q by g\n    if p = 0\n      print sy\n      go to the start of the loop\n    \n    if pair {q, b} is present in m\n      if m[{q, b}] != 0\n        print sy\n      else\n        print sn\n      continue the loop\n    \n    declare long long q1 = q\n    change g to gcd(q,b)\n    while g > 1\n      while q % g = 0\n      set g to gcd(q,b)\n    \n    if q = 1\n      assign true to m[{ q1 , b }]\n      print sy\n    else\n      assign false to m[{ q1 , b }]\n      print sn\n    \n  \n\n\n  initialize random number generator using 555 as a seed\n  invoke function solve\n\n",
        "long long gcd(long long a, long long b) {\n  while (b > 0) {\n    a %= b;\n    swap(a, b);\n  }\n  return a;\n}\nstring sy = \"Finite\\n\";\nstring sn = \"Infinite\\n\";\nmap<pair<long long, long long>, char> m;\nvoid solve() {\n  int n;\n  cin >> n;\n  for (int i = 0; i < n; i++) {\n    long long p, q, b;\n    cin >> p >> q >> b;\n    p %= q;\n    long long g = gcd(p, q);\n    p /= g;\n    q /= g;\n    if (p == 0) {\n      cout << sy;\n      continue;\n    }\n    if (m.find({q, b}) != m.end()) {\n      if (m[{q, b}])\n        cout << sy;\n      else\n        cout << sn;\n      continue;\n    }\n    long long q1 = q;\n    g = gcd(q, b);\n    while (g > 1) {\n      while (q % g == 0) q /= g;\n      g = gcd(q, b);\n    }\n    if (q == 1) {\n      m[{q1, b}] = true;\n      cout << sy;\n    } else {\n      m[{q1, b}] = false;\n      cout << sn;\n    }\n  }\n}\nint main() {\n  srand(555);\n  solve();\n}\n"
    ],
    [
        "n = integer\np, q, b = long long\n\n  read n\n  while decrement n\n    read p, q, b\n    if p modulo q is 0\n      print Finite\n      continue iteration\n    \n    q = q / gcd of p and q\n    g = long long\n    while 1\n      g = gcd of q and b\n      if g is 1, break loop\n      while q modulo g is 0, q = q / g\n    \n    if q is not 1\n      print Infinite\n    else\n      print Finite\n  \n\n",
        "int n;\nlong long p, q, b;\nint main() {\n  cin >> n;\n  while (n--) {\n    cin >> p >> q >> b;\n    if (p % q == 0) {\n      cout << \"Finite\\n\";\n      continue;\n    }\n    q /= __gcd(p, q);\n    long long g;\n    while (1) {\n      g = __gcd(q, b);\n      if (g == 1) break;\n      while (q % g == 0) q /= g;\n    }\n    if (q != 1)\n      cout << \"Infinite\\n\";\n    else\n      cout << \"Finite\\n\";\n  }\n}\n"
    ],
    [
        "N = integer\nP, Q, B = long long\nin the function gcd that takes long long x, y and returns long long\n  if y is 0, return x\n  return gcd of y and x modulo y\n\n\n  read N\n  while decrement N\n    read P, Q, B\n    P = P modulo Q\n    G = long long with G = gcd of P and Q\n    Q = Q / G\n    C = long long with C = gcd of B and Q\n    while C is not 1\n      Q = Q / C\n      C = gcd of C and Q\n    \n    if Q is not 1\n      print Infinite\n    else\n      print Finite\n  \n  \n\n",
        "int N;\nlong long P, Q, B;\nlong long gcd(long long x, long long y) {\n  if (y == 0) return x;\n  return gcd(y, x % y);\n}\nint main() {\n  cin >> N;\n  while (N--) {\n    cin >> P >> Q >> B;\n    P %= Q;\n    long long G = gcd(P, Q);\n    Q /= G;\n    long long C = gcd(B, Q);\n    while (C != 1) {\n      Q /= C;\n      C = gcd(C, Q);\n    }\n    if (Q != 1)\n      cout << \"Infinite\\n\";\n    else\n      cout << \"Finite\\n\";\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  declare long longs n, p, q and b\n  read input to n\n  for integer i = 1 to n inclusive\n    read p, q and b from the input\n    declare long long variable t = __gcd of p and q\n    divide q by t\n    assign b to t\n    while q != 1\n      assign result of __gcd(q,t) to t\n      divide q by t\n      break if t = 1\n    \n    if q = 1\n      print \"Finite\\n\"\n    else\n      print \"Infinite\\n\"\n  \n\n",
        "int main() {\n  long long n, p, q, b;\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> p >> q >> b;\n    long long t = __gcd(p, q);\n    q /= t;\n    t = b;\n    while (q != 1) {\n      t = __gcd(q, t);\n      q /= t;\n      if (t == 1) break;\n    }\n    if (q == 1)\n      cout << \"Finite\\n\";\n    else\n      cout << \"Infinite\\n\";\n  }\n}\n"
    ],
    [
        "in the function freac\nDX = array of const integers with DX = +1, 0, -1, 0, +1, +1, -1, -1\nDX = array of const integers with DY = 0, +1, 0, -1, +1, -1, +1, -1\nINF = const integer with INF = cast 1e9 + 123 from integer\nINFL = const long long with INFL = cast 1e18 + 123 from long long\nEPS = const double with EPS = 1e-9\nin the function lifestyle\n\n  call lifestyle\n  call freac\n  n = integer\n  p, q, b = long long\n  read n\n  while decrement n\n    read p, q, b\n    g = long long with g = gcd of p and q\n    q = q / g\n    while b is not 1\n      while q modulo b is 0, q = q / b\n      b = gcd of q and b\n    \n    if q is 1 print Finite else print Infinite\n  \n  return false\n\n",
        "void freac() {}\nconst int DX[] = {+1, 0, -1, 0, +1, +1, -1, -1};\nconst int DY[] = {0, +1, 0, -1, +1, -1, +1, -1};\nconst int INF = (int)1e9 + 123;\nconst long long INFL = (long long)1e18 + 123;\nconst double EPS = 1e-9;\nvoid lifestyle() {}\nint main() {\n  lifestyle();\n  freac();\n  int n;\n  long long p, q, b;\n  cin >> n;\n  while (n--) {\n    cin >> p >> q >> b;\n    long long g = __gcd(p, q);\n    q /= g;\n    while (b != 1) {\n      while (q % b == 0) q /= b;\n      b = __gcd(q, b);\n    }\n    cout << ((q == 1) ? \"Finite\" : \"Infinite\") << endl;\n  }\n  return false;\n}\n"
    ],
    [
        "declare int n\ndeclare long longs p, q, and b\ndeclare long long NWD with long long x and long long y\n  if y is 0\n    return x\n  else\n    return the NWD of y, and x mod y\n\n\n  input n\n  loop i between 1 and n inclusive\n    input p, q, and b\n    declare long long blep to be NWD of p and q\n    divide q by q over blep\n    set blep to NWD of q and b\n    while blep is more than 1\n      while q mod blep is zero, then set q to q over blep\n      set blep to NWD of q and b\n    \n    if q is greater than 1\n      output \"Infinite\"\n    else\n      output \"Finite\"\n  \n  \n\n",
        "int n;\nlong long p, q, b;\nlong long NWD(long long x, long long y) {\n  if (y == 0)\n    return x;\n  else\n    return NWD(y, x % y);\n}\nint main() {\n  cin >> n;\n  for (int i = 1; i <= n; i++) {\n    cin >> p >> q >> b;\n    long long blep = NWD(p, q);\n    q /= blep;\n    blep = NWD(q, b);\n    while (blep > 1) {\n      while (q % blep == 0) q /= blep;\n      blep = NWD(q, b);\n    }\n    if (q > 1)\n      cout << \"Infinite\" << endl;\n    else\n      cout << \"Finite\" << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "in function gcd taking two long longs a and b and returning a long long\n  return __gcd of a and b\n\nin function solve returning a bool\n  p, q, b = long long\n  read p then q then b\n  if p is 0 then return true\n  gc = long long with gc = gcd of p and q\n  set p to p / gc\n  set q to q / gc\n  x = long long\n  loop while setting x to gcd of q and b and x is greater than 1\n    loop while q mod x is 0 set q to q / x\n    set x to gcd of q and b\n  \n  return true if q is 1 else return false\n\n\n  t = int\n  read t\n  loop t times\n    is = bool with is = solve\n    print \"Finite\" if is is true else print \"Infinte\"\n  \n  \n\n",
        "long long gcd(long long a, long long b) {\n  return __gcd(a, b);\n}\nbool solve() {\n  long long p, q, b;\n  cin >> p >> q >> b;\n  if (p == 0) return true;\n  long long gc = gcd(p, q);\n  p /= gc;\n  q /= gc;\n  long long x;\n  while ((x = gcd(q, b)) > 1) {\n    while (q % x == 0) q /= x;\n    x = gcd(q, b);\n  }\n  return q == 1;\n}\nint main() {\n  int t;\n  cin >> t;\n  while (t--) {\n    bool is = solve();\n    cout << (is ? \"Finite\" : \"Infinite\") << '\\n';\n  }\n  return 0;\n}\n"
    ],
    [
        "create long longs p, q, k\ndeclare gcd with long longs a, b as arguments, returning long long\n  return a if b is 0, else result of run gcd with b, a % b as arguments\n\ndeclare inline rd with no arguments, returning long long\n  create long longs x, f, with x = 0, f = 1\n  create character ch with ch = getchar\n  while ch is greater than '9' or ch is less than '0'\n    if ch is '-', set f to -1\n    set ch to read character\n  \n  while ch is greater than or equal to '0' and ch is less than or equal to '9'\n    set x to ( x bitshift left 1 ) + ( x bitshift left 3 ) + ch - '0'\n    set ch to read character\n  \n  return x * f from function\n\ndeclare inline solve with no arguments, returning void\n  set p to result of run rd, set q to result of run rd, set k to result of run rd\n  create long long t with t = result of run gcd with p, q as arguments\n  set q to q / t\n  while ( set t to result of run gcd with k, q as arguments ) is not 1\n    while ( q % t is 0 ) set q to q / t\n  \n  print \"Finite\" if q is 1, else \"Infinite\"\n\n\n  for T = result of run rd to T, decrementing T, run solve\n  \n\n",
        "long long p, q, k;\nlong long gcd(long long a, long long b) {\n  return b == 0 ? a : gcd(b, a % b);\n}\ninline long long rd() {\n  long long x = 0, f = 1;\n  char ch = getchar();\n  while (ch > '9' || ch < '0') {\n    if (ch == '-') f = -1;\n    ch = getchar();\n  }\n  while (ch >= '0' && ch <= '9') {\n    x = (x << 1) + (x << 3) + ch - '0';\n    ch = getchar();\n  }\n  return x * f;\n}\ninline void solve() {\n  p = rd(), q = rd(), k = rd();\n  long long t = gcd(p, q);\n  q /= t;\n  while ((t = gcd(k, q)) != 1) {\n    while (q % t == 0) q /= t;\n  }\n  puts(q == 1 ? \"Finite\" : \"Infinite\");\n}\nint main() {\n  for (int T = rd(); T; T--) solve();\n  return 0;\n}\n"
    ],
    [
        "in function compare taking two pointers to const void x1 and x2 and returning an int\n  return value of x1 as pointer to in - value of x2 as pointer to int\n\n\n  N = int\n  final = int\n  read N\n  massiv = int array of size N\n  d = int\n  R = int\n  for R = 0 to N\n    read d\n    set massiv[R] to d\n  \n  call qsort on massiv, N, sizeof of int and compare\n  if N is even\n    set final to massiv[R / 2 - 1]\n  else\n    set final to massiv[R / 2]\n  \n  print final\n\n",
        "int compare(const void *x1, const void *x2) {\n  return (*(int *)x1 - *(int *)x2);\n}\nint main() {\n  int N;\n  int final;\n  cin >> N;\n  int massiv[N];\n  int d;\n  int R;\n  for (R = 0; R < N; R++) {\n    cin >> d;\n    massiv[R] = d;\n  }\n  qsort(massiv, N, sizeof(int), compare);\n  if (N % 2 == 0) {\n    final = massiv[R / 2 - 1];\n  } else {\n    final = massiv[R / 2];\n  }\n  cout << final << endl;\n}\n"
    ],
    [
        "\n  declare long long n and an array of long longs arr with 1001 element\n  read n\n  for i from 0 to n exclusive, read arr[i]\n  sort arr\n  if n is even\n    print arr[(n / 2) - 1]\n  else\n    print arr[n / 2]\n  \n\n",
        "int main() {\n  long long n, arr[1001];\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> arr[i];\n  sort(arr, arr + n);\n  if (n % 2 == 0)\n    cout << arr[(n / 2) - 1] << endl;\n  else\n    cout << arr[n / 2] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create integer array a with size 1005\n  create integer n\n  create integer sum with sum = 0\n  read n\n  for i = 0 to n exclusive, read a[i]\n  sort elements from a to a + n\n  if n % 2\n    print a[n / 2] print newline\n  else\n    print a[n/2 - 1] print newline\n\n",
        "int main() {\n  int a[1005];\n  int n;\n  int sum = 0;\n  cin >> n;\n  for (int i = 0; i < n; i++) cin >> a[i];\n  sort(a, a + n);\n  if (n % 2)\n    cout << a[n / 2] << endl;\n  else\n    cout << a[n / 2 - 1] << endl;\n}\n"
    ],
    [
        "create constant integer N with N = 100010\ncreate integer array a with size N\n\n  create integer N\n  read n\n  for i = 1 to n inclusive, read a[i]\n  sort elements from a + 1 to a + n + 1\n  print a[(n + 1) / 2] print \"\\n\"\n  \n\n",
        "const int N = 100010;\nint a[N];\nint main() {\n  int n;\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  sort(a + 1, a + n + 1);\n  cout << a[(n + 1) / 2] << \"\\n\";\n  return 0;\n}\n"
    ],
    [
        "\n  n=int\n  read n\n  v=vector of int\n  for i=0 to n exclusive\n    x=int\n    read x\n    add x at end of v\n  \n  sort first n items of v in numeric ascending order\n  turn=0\n  while size of v is not 1\n    if turn is even\n      erase first item of v\n    else\n      pop last item of v\n    \n    turn=(incremented value of turn) modulo 2\n  \n  print first item of v\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<int> v;\n  for (int i = 0; i < n; i++) {\n    int x;\n    cin >> x;\n    v.push_back(x);\n  }\n  sort(v.begin(), v.begin() + n, greater<int>());\n  int turn = 0;\n  while (v.size() != 1) {\n    if (turn % 2 == 0) {\n      v.erase(v.begin());\n    } else {\n      v.pop_back();\n    }\n    turn = (++turn) % 2;\n  }\n  cout << v.front() << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  create int n, a[1001]\n  read n\n  for i=1 to n inclusive, read a[i]\n  sort elements bewteen a+1 and a+n+1\n  if n is even\n    print a[n / 2]\n  otherwise\n    print a[n / 2 + 1] and a newline\n\n",
        "int main() {\n  int n, a[1001];\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  sort(a + 1, a + n + 1);\n  if (n % 2 == 0)\n    cout << a[n / 2] << endl;\n  else\n    cout << a[n / 2 + 1] << endl;\n}\n"
    ],
    [
        "create long int array arr with size 1001\n\n  create integers n, i and mid\n  read input to n\n  for i from 0 to n exclusive, read arr[i]\n  sort arr\n  mid = n / 2 rounded up\n  print arr[mid - 1]\n\n",
        "long int arr[1001];\nint main() {\n  int n, i, mid;\n  cin >> n;\n  for (i = 0; i < n; i++) { cin >> arr[i]; }\n  sort(arr, arr + n);\n  mid = ceil((double)n / 2);\n  cout << arr[mid - 1] << endl;\n}\n"
    ],
    [
        "maxn = const integer with maxn = 1e3 + 10\n\n  n = integer\n  a = integer array of size maxn\n  read n\n  for i = 1 to n, read a[i]\n  sort a + 1 and a + n + 1\n  print a[(n + 1) / 2]\n  \n\n",
        "const int maxn = 1e3 + 10;\nint main() {\n  int n;\n  int a[maxn];\n  cin >> n;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  sort(a + 1, a + n + 1);\n  cout << a[(n + 1) / 2] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  declare integer variable n\n  read input to n\n  declare vector of integers a with size n\n  for i from 0 to n exclusive, read a[i]\n  sort a\n  create integer idx = (length of a - 1) / 2\n  print a[idx]\n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  sort(a.begin(), a.end());\n  int idx = (a.size() - 1) / 2;\n  cout << a[idx] << endl;\n  return 0;\n}\n"
    ],
    [
        "\n  let int n\n  read n\n  create int array a of size n\n  for i = 0 to n exclusive, read a[i]\n  for i = 0 to n - 1 exclusive\n    for j = 0 to n - i - 1 exclusive\n      if a[j] is greater than a[j + 1], swap values between a[j] and a[j + 1]\n    \n  \n  if n modulo 2 is 0\n    print a[n / 2 - 1]\n  else\n    print a[n / 2]\n  \n  \n\n",
        "int main() {\n  int n;\n  cin >> n;\n  int a[n];\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = 0; j < n - i - 1; j++) {\n      if (a[j] > a[j + 1]) { swap(a[j], a[j + 1]); }\n    }\n  }\n  if (n % 2 == 0) {\n    cout << a[n / 2 - 1] << endl;\n  } else {\n    cout << a[n / 2] << endl;\n  }\n  return 0;\n}\n"
    ],
    [
        "\n  let int n and int array a of size 1110\n  read n\n  for i = 0 to n exclusive, read a[i]\n  sort array a\n  print a[(n - 1) / 2]\n  \n\n",
        "int main() {\n  int n, a[1110];\n  cin >> n;\n  for (int i = 0; i < n; i++) { cin >> a[i]; }\n  sort(a, a + n);\n  cout << a[(n - 1) / 2] << endl;\n  return 0;\n}\n"
    ]
]